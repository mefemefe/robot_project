<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 21:58:52.613" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:58:52.745" endtime="20220704 21:58:52.745"/>
</kw>
<status status="PASS" starttime="20220704 21:58:52.744" endtime="20220704 21:58:52.745"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:52.748" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:52.747" endtime="20220704 21:58:52.748"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:52.748" endtime="20220704 21:58:52.748"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:52.749" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:58:52.748" endtime="20220704 21:58:52.749"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:53.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:52.749" endtime="20220704 21:58:53.059"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:53.059" endtime="20220704 21:58:53.059"/>
</return>
<msg timestamp="20220704 21:58:53.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:52.747" endtime="20220704 21:58:53.060"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:53.060" endtime="20220704 21:58:53.060"/>
</return>
<msg timestamp="20220704 21:58:53.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:52.746" endtime="20220704 21:58:53.060"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:58:53.061" endtime="20220704 21:58:53.066"/>
</kw>
<status status="PASS" starttime="20220704 21:58:53.060" endtime="20220704 21:58:53.066"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:53.068" level="INFO">${url} = boards/62c3629c3081ce1ab949863f</msg>
<status status="PASS" starttime="20220704 21:58:53.068" endtime="20220704 21:58:53.068"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:58:53.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:53.068" endtime="20220704 21:58:53.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:53.448" endtime="20220704 21:58:53.448"/>
</return>
<msg timestamp="20220704 21:58:53.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:53.067" endtime="20220704 21:58:53.449"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:53.449" endtime="20220704 21:58:53.449"/>
</return>
<status status="PASS" starttime="20220704 21:58:53.066" endtime="20220704 21:58:53.449"/>
</kw>
<status status="PASS" starttime="20220704 21:58:53.066" endtime="20220704 21:58:53.449"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:58:52.746" endtime="20220704 21:58:53.449"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:53.452" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:53.452" endtime="20220704 21:58:53.452"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:53.452" endtime="20220704 21:58:53.452"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:53.453" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:58:53.452" endtime="20220704 21:58:53.453"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:53.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:53.453" endtime="20220704 21:58:53.673"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:53.673" endtime="20220704 21:58:53.673"/>
</return>
<msg timestamp="20220704 21:58:53.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:53.451" endtime="20220704 21:58:53.673"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:53.673" endtime="20220704 21:58:53.673"/>
</return>
<msg timestamp="20220704 21:58:53.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:53.450" endtime="20220704 21:58:53.674"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:58:53.674" endtime="20220704 21:58:53.679"/>
</kw>
<status status="PASS" starttime="20220704 21:58:53.674" endtime="20220704 21:58:53.679"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:53.681" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:53.680" endtime="20220704 21:58:53.681"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:53.681" endtime="20220704 21:58:53.681"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:53.681" level="INFO">${url} = boards/62c3629d8a1a4d141100c7bd</msg>
<status status="PASS" starttime="20220704 21:58:53.681" endtime="20220704 21:58:53.681"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:53.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:53.681" endtime="20220704 21:58:53.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:53.803" endtime="20220704 21:58:53.803"/>
</return>
<msg timestamp="20220704 21:58:53.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:53.680" endtime="20220704 21:58:53.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:53.804" endtime="20220704 21:58:53.804"/>
</return>
<status status="PASS" starttime="20220704 21:58:53.679" endtime="20220704 21:58:53.804"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:53.806" level="INFO">${url} = boards/62c3629d8a1a4d141100c7bd</msg>
<status status="PASS" starttime="20220704 21:58:53.806" endtime="20220704 21:58:53.806"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:58:53.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:53.806" endtime="20220704 21:58:53.887"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:53.887" endtime="20220704 21:58:53.887"/>
</return>
<msg timestamp="20220704 21:58:53.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:53.805" endtime="20220704 21:58:53.887"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:53.887" endtime="20220704 21:58:53.887"/>
</return>
<msg timestamp="20220704 21:58:53.888" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:53.804" endtime="20220704 21:58:53.888"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:58:53.888" endtime="20220704 21:58:53.892"/>
</kw>
<status status="PASS" starttime="20220704 21:58:53.888" endtime="20220704 21:58:53.893"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:58:53.893" endtime="20220704 21:58:53.894"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:53.896" level="INFO">${url} = boards/62c3629d8a1a4d141100c7bd</msg>
<status status="PASS" starttime="20220704 21:58:53.895" endtime="20220704 21:58:53.896"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:58:54.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:53.896" endtime="20220704 21:58:54.272"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:54.272" endtime="20220704 21:58:54.272"/>
</return>
<msg timestamp="20220704 21:58:54.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:53.895" endtime="20220704 21:58:54.272"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:54.272" endtime="20220704 21:58:54.272"/>
</return>
<status status="PASS" starttime="20220704 21:58:53.894" endtime="20220704 21:58:54.272"/>
</kw>
<status status="PASS" starttime="20220704 21:58:53.894" endtime="20220704 21:58:54.272"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:58:53.449" endtime="20220704 21:58:54.272"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:54.275" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:54.275" endtime="20220704 21:58:54.275"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:54.275" endtime="20220704 21:58:54.275"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:54.276" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:58:54.275" endtime="20220704 21:58:54.276"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:54.450" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:54.276" endtime="20220704 21:58:54.450"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:54.451" endtime="20220704 21:58:54.451"/>
</return>
<msg timestamp="20220704 21:58:54.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:54.274" endtime="20220704 21:58:54.451"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:54.451" endtime="20220704 21:58:54.451"/>
</return>
<msg timestamp="20220704 21:58:54.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:54.274" endtime="20220704 21:58:54.451"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:54.454" level="INFO">${url} = boards/62c3629e9ce12514c4e5eb41</msg>
<status status="PASS" starttime="20220704 21:58:54.453" endtime="20220704 21:58:54.454"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:58:54.789" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:54.454" endtime="20220704 21:58:54.789"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:54.789" endtime="20220704 21:58:54.789"/>
</return>
<msg timestamp="20220704 21:58:54.789" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:54.453" endtime="20220704 21:58:54.789"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:54.789" endtime="20220704 21:58:54.789"/>
</return>
<status status="PASS" starttime="20220704 21:58:54.452" endtime="20220704 21:58:54.790"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:54.792" level="INFO">${url} = boards/62c3629e9ce12514c4e5eb41</msg>
<status status="PASS" starttime="20220704 21:58:54.792" endtime="20220704 21:58:54.792"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:58:54.865" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:58:54.792" endtime="20220704 21:58:54.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:54.865" endtime="20220704 21:58:54.866"/>
</return>
<msg timestamp="20220704 21:58:54.866" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:58:54.791" endtime="20220704 21:58:54.866"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:54.866" endtime="20220704 21:58:54.866"/>
</return>
<status status="PASS" starttime="20220704 21:58:54.790" endtime="20220704 21:58:54.866"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:58:54.273" endtime="20220704 21:58:54.866"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:54.869" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:54.869" endtime="20220704 21:58:54.870"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:54.870" endtime="20220704 21:58:54.870"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:54.871" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:58:54.870" endtime="20220704 21:58:54.871"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:55.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:54.871" endtime="20220704 21:58:55.064"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:55.064" endtime="20220704 21:58:55.064"/>
</return>
<msg timestamp="20220704 21:58:55.065" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:54.869" endtime="20220704 21:58:55.065"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:55.065" endtime="20220704 21:58:55.065"/>
</return>
<msg timestamp="20220704 21:58:55.065" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:54.868" endtime="20220704 21:58:55.065"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:58:55.066" endtime="20220704 21:58:55.070"/>
</kw>
<status status="PASS" starttime="20220704 21:58:55.065" endtime="20220704 21:58:55.070"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:55.072" level="INFO">${url} = boards/62c3629e70a1048ffc59e390</msg>
<status status="PASS" starttime="20220704 21:58:55.072" endtime="20220704 21:58:55.072"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:58:55.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.072" endtime="20220704 21:58:55.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:55.151" endtime="20220704 21:58:55.151"/>
</return>
<msg timestamp="20220704 21:58:55.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.071" endtime="20220704 21:58:55.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:55.151" endtime="20220704 21:58:55.151"/>
</return>
<msg timestamp="20220704 21:58:55.152" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.070" endtime="20220704 21:58:55.152"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:58:55.152" endtime="20220704 21:58:55.157"/>
</kw>
<status status="PASS" starttime="20220704 21:58:55.152" endtime="20220704 21:58:55.157"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:58:55.158" endtime="20220704 21:58:55.158"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:55.161" level="INFO">${url} = boards/62c3629e70a1048ffc59e390</msg>
<status status="PASS" starttime="20220704 21:58:55.160" endtime="20220704 21:58:55.161"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:58:55.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.161" endtime="20220704 21:58:55.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:55.504" endtime="20220704 21:58:55.504"/>
</return>
<msg timestamp="20220704 21:58:55.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.160" endtime="20220704 21:58:55.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:55.505" endtime="20220704 21:58:55.505"/>
</return>
<status status="PASS" starttime="20220704 21:58:55.159" endtime="20220704 21:58:55.505"/>
</kw>
<status status="PASS" starttime="20220704 21:58:55.159" endtime="20220704 21:58:55.505"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:58:54.867" endtime="20220704 21:58:55.505"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:55.507" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:55.507" endtime="20220704 21:58:55.508"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:55.508" endtime="20220704 21:58:55.508"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:55.509" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:58:55.508" endtime="20220704 21:58:55.509"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:55.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.509" endtime="20220704 21:58:55.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:55.693" endtime="20220704 21:58:55.693"/>
</return>
<msg timestamp="20220704 21:58:55.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.507" endtime="20220704 21:58:55.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:55.693" endtime="20220704 21:58:55.693"/>
</return>
<msg timestamp="20220704 21:58:55.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.506" endtime="20220704 21:58:55.693"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:58:55.694" endtime="20220704 21:58:55.698"/>
</kw>
<status status="PASS" starttime="20220704 21:58:55.693" endtime="20220704 21:58:55.698"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:55.700" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:55.700" endtime="20220704 21:58:55.700"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:55.700" endtime="20220704 21:58:55.700"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:55.701" level="INFO">${url} = boards/62c3629f5e18e1298a526c87</msg>
<status status="PASS" starttime="20220704 21:58:55.700" endtime="20220704 21:58:55.701"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:55.836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.701" endtime="20220704 21:58:55.837"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:55.837" endtime="20220704 21:58:55.837"/>
</return>
<msg timestamp="20220704 21:58:55.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.699" endtime="20220704 21:58:55.837"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:55.837" endtime="20220704 21:58:55.837"/>
</return>
<status status="PASS" starttime="20220704 21:58:55.698" endtime="20220704 21:58:55.837"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:55.840" level="INFO">${url} = boards/62c3629f5e18e1298a526c87</msg>
<status status="PASS" starttime="20220704 21:58:55.839" endtime="20220704 21:58:55.840"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:58:55.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.840" endtime="20220704 21:58:55.920"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:55.921" endtime="20220704 21:58:55.921"/>
</return>
<msg timestamp="20220704 21:58:55.921" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.839" endtime="20220704 21:58:55.921"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:55.921" endtime="20220704 21:58:55.921"/>
</return>
<msg timestamp="20220704 21:58:55.921" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.837" endtime="20220704 21:58:55.921"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:58:55.921" endtime="20220704 21:58:55.922"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:55.924" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:55.924" endtime="20220704 21:58:55.924"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:55.924" endtime="20220704 21:58:55.925"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:55.925" level="INFO">${url} = boards/62c3629f5e18e1298a526c87</msg>
<status status="PASS" starttime="20220704 21:58:55.925" endtime="20220704 21:58:55.925"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:56.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.925" endtime="20220704 21:58:56.042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:56.043" endtime="20220704 21:58:56.043"/>
</return>
<msg timestamp="20220704 21:58:56.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:55.923" endtime="20220704 21:58:56.043"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:56.043" endtime="20220704 21:58:56.043"/>
</return>
<status status="PASS" starttime="20220704 21:58:55.922" endtime="20220704 21:58:56.043"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:56.045" level="INFO">${url} = boards/62c3629f5e18e1298a526c87</msg>
<status status="PASS" starttime="20220704 21:58:56.045" endtime="20220704 21:58:56.045"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:58:56.126" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.045" endtime="20220704 21:58:56.126"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:56.126" endtime="20220704 21:58:56.126"/>
</return>
<msg timestamp="20220704 21:58:56.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.044" endtime="20220704 21:58:56.127"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:56.127" endtime="20220704 21:58:56.127"/>
</return>
<msg timestamp="20220704 21:58:56.127" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.043" endtime="20220704 21:58:56.127"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:58:56.128" endtime="20220704 21:58:56.129"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:56.131" level="INFO">${url} = boards/62c3629f5e18e1298a526c87</msg>
<status status="PASS" starttime="20220704 21:58:56.131" endtime="20220704 21:58:56.132"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:58:56.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.132" endtime="20220704 21:58:56.465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:56.465" endtime="20220704 21:58:56.465"/>
</return>
<msg timestamp="20220704 21:58:56.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.130" endtime="20220704 21:58:56.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:56.466" endtime="20220704 21:58:56.466"/>
</return>
<status status="PASS" starttime="20220704 21:58:56.129" endtime="20220704 21:58:56.466"/>
</kw>
<status status="PASS" starttime="20220704 21:58:56.129" endtime="20220704 21:58:56.466"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:58:55.506" endtime="20220704 21:58:56.466"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 21:58:56.467" endtime="20220704 21:58:56.468"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 21:58:52.634" endtime="20220704 21:58:56.469"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:58:56.483" endtime="20220704 21:58:56.483"/>
</kw>
<status status="PASS" starttime="20220704 21:58:56.483" endtime="20220704 21:58:56.484"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:56.485" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:56.484" endtime="20220704 21:58:56.485"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:56.485" endtime="20220704 21:58:56.485"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:56.486" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:58:56.485" endtime="20220704 21:58:56.486"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:56.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.486" endtime="20220704 21:58:56.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:56.786" endtime="20220704 21:58:56.786"/>
</return>
<msg timestamp="20220704 21:58:56.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.484" endtime="20220704 21:58:56.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:56.786" endtime="20220704 21:58:56.786"/>
</return>
<msg timestamp="20220704 21:58:56.787" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.484" endtime="20220704 21:58:56.787"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:58:56.788" level="INFO">${TEST_SUITE_BOARD_ID} = 62c362a034d81f28b7914b6f</msg>
<status status="PASS" starttime="20220704 21:58:56.787" endtime="20220704 21:58:56.788"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:56.789" level="INFO">${url} = boards/62c362a034d81f28b7914b6f/lists/</msg>
<status status="PASS" starttime="20220704 21:58:56.789" endtime="20220704 21:58:56.789"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:58:56.874" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.789" endtime="20220704 21:58:56.874"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:56.874" endtime="20220704 21:58:56.874"/>
</return>
<msg timestamp="20220704 21:58:56.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.789" endtime="20220704 21:58:56.875"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:56.875" endtime="20220704 21:58:56.875"/>
</return>
<msg timestamp="20220704 21:58:56.875" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.788" endtime="20220704 21:58:56.875"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:58:56.876" level="INFO">${TEST_SUITE_LIST_ID} = 62c362a034d81f28b7914b76</msg>
<status status="PASS" starttime="20220704 21:58:56.875" endtime="20220704 21:58:56.876"/>
</kw>
<status status="PASS" starttime="20220704 21:58:56.484" endtime="20220704 21:58:56.877"/>
</kw>
<status status="PASS" starttime="20220704 21:58:56.483" endtime="20220704 21:58:56.877"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:56.879" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:56.879" endtime="20220704 21:58:56.879"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:56.879" endtime="20220704 21:58:56.880"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:56.881" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:58:56.880" endtime="20220704 21:58:56.881"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:57.056" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.881" endtime="20220704 21:58:57.056"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.056" endtime="20220704 21:58:57.056"/>
</return>
<msg timestamp="20220704 21:58:57.056" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.878" endtime="20220704 21:58:57.056"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.056" endtime="20220704 21:58:57.056"/>
</return>
<msg timestamp="20220704 21:58:57.057" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:56.878" endtime="20220704 21:58:57.057"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:58:57.057" endtime="20220704 21:58:57.063"/>
</kw>
<status status="PASS" starttime="20220704 21:58:57.057" endtime="20220704 21:58:57.063"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:58:57.063" endtime="20220704 21:58:57.064"/>
</return>
<msg timestamp="20220704 21:58:57.064" level="INFO">${CARD_ID} = 62c362a0446c150c2024267b</msg>
<status status="PASS" starttime="20220704 21:58:57.063" endtime="20220704 21:58:57.064"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:57.066" level="INFO">${url} = cards/62c362a0446c150c2024267b</msg>
<status status="PASS" starttime="20220704 21:58:57.065" endtime="20220704 21:58:57.066"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:58:57.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.066" endtime="20220704 21:58:57.150"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.150" endtime="20220704 21:58:57.150"/>
</return>
<msg timestamp="20220704 21:58:57.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.065" endtime="20220704 21:58:57.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.151" endtime="20220704 21:58:57.151"/>
</return>
<msg timestamp="20220704 21:58:57.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.064" endtime="20220704 21:58:57.151"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:58:57.152" endtime="20220704 21:58:57.152"/>
</return>
<msg timestamp="20220704 21:58:57.153" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 21:58:57.151" endtime="20220704 21:58:57.153"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:58:57.153" endtime="20220704 21:58:57.153"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:57.155" level="INFO">${url} = cards/62c362a0446c150c2024267b</msg>
<status status="PASS" starttime="20220704 21:58:57.155" endtime="20220704 21:58:57.155"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:58:57.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.156" endtime="20220704 21:58:57.377"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.377" endtime="20220704 21:58:57.377"/>
</return>
<msg timestamp="20220704 21:58:57.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.154" endtime="20220704 21:58:57.377"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.377" endtime="20220704 21:58:57.377"/>
</return>
<status status="PASS" starttime="20220704 21:58:57.154" endtime="20220704 21:58:57.378"/>
</kw>
<status status="PASS" starttime="20220704 21:58:57.154" endtime="20220704 21:58:57.378"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:58:56.877" endtime="20220704 21:58:57.378"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:57.381" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:57.381" endtime="20220704 21:58:57.381"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:57.381" endtime="20220704 21:58:57.382"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:57.382" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:58:57.382" endtime="20220704 21:58:57.382"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:57.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.383" endtime="20220704 21:58:57.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.551" endtime="20220704 21:58:57.551"/>
</return>
<msg timestamp="20220704 21:58:57.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.380" endtime="20220704 21:58:57.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.551" endtime="20220704 21:58:57.552"/>
</return>
<msg timestamp="20220704 21:58:57.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.379" endtime="20220704 21:58:57.552"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:58:57.552" endtime="20220704 21:58:57.552"/>
</return>
<msg timestamp="20220704 21:58:57.553" level="INFO">${CARD_ID} = 62c362a14af7fa5790ae4f88</msg>
<status status="PASS" starttime="20220704 21:58:57.552" endtime="20220704 21:58:57.553"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:57.556" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:57.555" endtime="20220704 21:58:57.556"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:57.556" endtime="20220704 21:58:57.556"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:57.556" level="INFO">${url} = cards/62c362a14af7fa5790ae4f88</msg>
<status status="PASS" starttime="20220704 21:58:57.556" endtime="20220704 21:58:57.556"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:57.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.557" endtime="20220704 21:58:57.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.686" endtime="20220704 21:58:57.686"/>
</return>
<msg timestamp="20220704 21:58:57.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.555" endtime="20220704 21:58:57.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.686" endtime="20220704 21:58:57.686"/>
</return>
<msg timestamp="20220704 21:58:57.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.554" endtime="20220704 21:58:57.687"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.687" endtime="20220704 21:58:57.687"/>
</return>
<status status="PASS" starttime="20220704 21:58:57.553" endtime="20220704 21:58:57.687"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:57.688" level="INFO">${url} = cards/62c362a14af7fa5790ae4f88</msg>
<status status="PASS" starttime="20220704 21:58:57.688" endtime="20220704 21:58:57.688"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:58:57.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.688" endtime="20220704 21:58:57.776"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.776" endtime="20220704 21:58:57.776"/>
</return>
<msg timestamp="20220704 21:58:57.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.688" endtime="20220704 21:58:57.776"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.776" endtime="20220704 21:58:57.777"/>
</return>
<msg timestamp="20220704 21:58:57.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.687" endtime="20220704 21:58:57.777"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:58:57.777" endtime="20220704 21:58:57.777"/>
</return>
<msg timestamp="20220704 21:58:57.778" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 21:58:57.777" endtime="20220704 21:58:57.778"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 21:58:57.778" endtime="20220704 21:58:57.779"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:57.780" level="INFO">${url} = cards/62c362a14af7fa5790ae4f88</msg>
<status status="PASS" starttime="20220704 21:58:57.780" endtime="20220704 21:58:57.780"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:58:57.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.780" endtime="20220704 21:58:57.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.939" endtime="20220704 21:58:57.939"/>
</return>
<msg timestamp="20220704 21:58:57.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.779" endtime="20220704 21:58:57.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:57.939" endtime="20220704 21:58:57.939"/>
</return>
<status status="PASS" starttime="20220704 21:58:57.779" endtime="20220704 21:58:57.939"/>
</kw>
<status status="PASS" starttime="20220704 21:58:57.779" endtime="20220704 21:58:57.939"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:58:57.378" endtime="20220704 21:58:57.939"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:57.942" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:57.942" endtime="20220704 21:58:57.942"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:57.942" endtime="20220704 21:58:57.943"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:57.944" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:58:57.943" endtime="20220704 21:58:57.944"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:58.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.944" endtime="20220704 21:58:58.116"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:58.116" endtime="20220704 21:58:58.116"/>
</return>
<msg timestamp="20220704 21:58:58.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.941" endtime="20220704 21:58:58.117"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:58.117" endtime="20220704 21:58:58.117"/>
</return>
<msg timestamp="20220704 21:58:58.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:57.941" endtime="20220704 21:58:58.117"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:58:58.118" endtime="20220704 21:58:58.118"/>
</return>
<msg timestamp="20220704 21:58:58.119" level="INFO">${CARD_ID} = 62c362a2633472197aa1daf7</msg>
<status status="PASS" starttime="20220704 21:58:58.117" endtime="20220704 21:58:58.119"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:58.120" level="INFO">${url} = cards/62c362a2633472197aa1daf7</msg>
<status status="PASS" starttime="20220704 21:58:58.120" endtime="20220704 21:58:58.120"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:58:58.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.120" endtime="20220704 21:58:58.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:58.306" endtime="20220704 21:58:58.306"/>
</return>
<msg timestamp="20220704 21:58:58.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.119" endtime="20220704 21:58:58.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:58.306" endtime="20220704 21:58:58.306"/>
</return>
<msg timestamp="20220704 21:58:58.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.119" endtime="20220704 21:58:58.307"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:58:58.307" endtime="20220704 21:58:58.309"/>
</kw>
<status status="PASS" starttime="20220704 21:58:58.307" endtime="20220704 21:58:58.309"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:58.311" level="INFO">${url} = cards/62c362a2633472197aa1daf7</msg>
<status status="PASS" starttime="20220704 21:58:58.311" endtime="20220704 21:58:58.311"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:58:58.377" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:58:58.311" endtime="20220704 21:58:58.377"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:58.377" endtime="20220704 21:58:58.377"/>
</return>
<msg timestamp="20220704 21:58:58.378" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:58:58.310" endtime="20220704 21:58:58.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:58.378" endtime="20220704 21:58:58.378"/>
</return>
<status status="PASS" starttime="20220704 21:58:58.310" endtime="20220704 21:58:58.378"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:58:57.940" endtime="20220704 21:58:58.378"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:58.382" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:58.381" endtime="20220704 21:58:58.382"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:58.382" endtime="20220704 21:58:58.382"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:58.383" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:58:58.382" endtime="20220704 21:58:58.383"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:58.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.383" endtime="20220704 21:58:58.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:58.565" endtime="20220704 21:58:58.565"/>
</return>
<msg timestamp="20220704 21:58:58.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.381" endtime="20220704 21:58:58.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:58.565" endtime="20220704 21:58:58.565"/>
</return>
<msg timestamp="20220704 21:58:58.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.380" endtime="20220704 21:58:58.566"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:58:58.566" endtime="20220704 21:58:58.566"/>
</return>
<msg timestamp="20220704 21:58:58.567" level="INFO">${CARD_ID} = 62c362a26a400c6e8c04bd53</msg>
<status status="PASS" starttime="20220704 21:58:58.566" endtime="20220704 21:58:58.567"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:58.568" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:58.568" endtime="20220704 21:58:58.568"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:58.568" endtime="20220704 21:58:58.569"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:58.569" level="INFO">${url} = cards/62c362a26a400c6e8c04bd53</msg>
<status status="PASS" starttime="20220704 21:58:58.569" endtime="20220704 21:58:58.569"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:58.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.569" endtime="20220704 21:58:58.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:58.732" endtime="20220704 21:58:58.732"/>
</return>
<msg timestamp="20220704 21:58:58.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.568" endtime="20220704 21:58:58.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:58.733" endtime="20220704 21:58:58.733"/>
</return>
<msg timestamp="20220704 21:58:58.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.567" endtime="20220704 21:58:58.733"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:58:58.734" endtime="20220704 21:58:58.741"/>
</kw>
<status status="PASS" starttime="20220704 21:58:58.733" endtime="20220704 21:58:58.741"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:58.742" level="INFO">${url} = cards/62c362a26a400c6e8c04bd53</msg>
<status status="PASS" starttime="20220704 21:58:58.742" endtime="20220704 21:58:58.742"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:58:58.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.742" endtime="20220704 21:58:58.825"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:58.825" endtime="20220704 21:58:58.825"/>
</return>
<msg timestamp="20220704 21:58:58.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.741" endtime="20220704 21:58:58.825"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:58.825" endtime="20220704 21:58:58.825"/>
</return>
<msg timestamp="20220704 21:58:58.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.741" endtime="20220704 21:58:58.825"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:58:58.826" endtime="20220704 21:58:58.826"/>
</return>
<msg timestamp="20220704 21:58:58.827" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 21:58:58.826" endtime="20220704 21:58:58.827"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:58:58.828" endtime="20220704 21:58:58.828"/>
</return>
<msg timestamp="20220704 21:58:58.828" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 21:58:58.827" endtime="20220704 21:58:58.829"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:58:58.829" endtime="20220704 21:58:58.829"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:58:58.829" endtime="20220704 21:58:58.829"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:58.831" level="INFO">${url} = cards/62c362a26a400c6e8c04bd53</msg>
<status status="PASS" starttime="20220704 21:58:58.831" endtime="20220704 21:58:58.831"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:58:59.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.832" endtime="20220704 21:58:59.004"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:59.004" endtime="20220704 21:58:59.004"/>
</return>
<msg timestamp="20220704 21:58:59.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:58.830" endtime="20220704 21:58:59.005"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:59.005" endtime="20220704 21:58:59.005"/>
</return>
<status status="PASS" starttime="20220704 21:58:58.830" endtime="20220704 21:58:59.005"/>
</kw>
<status status="PASS" starttime="20220704 21:58:58.830" endtime="20220704 21:58:59.005"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:58:58.379" endtime="20220704 21:58:59.005"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:59.009" level="INFO">${url} = boards/62c362a034d81f28b7914b6f</msg>
<status status="PASS" starttime="20220704 21:58:59.008" endtime="20220704 21:58:59.009"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:58:59.337" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.009" endtime="20220704 21:58:59.337"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:59.337" endtime="20220704 21:58:59.337"/>
</return>
<msg timestamp="20220704 21:58:59.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.008" endtime="20220704 21:58:59.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:59.338" endtime="20220704 21:58:59.338"/>
</return>
<status status="PASS" starttime="20220704 21:58:59.007" endtime="20220704 21:58:59.338"/>
</kw>
<status status="PASS" starttime="20220704 21:58:59.007" endtime="20220704 21:58:59.338"/>
</kw>
<status status="PASS" starttime="20220704 21:58:59.006" endtime="20220704 21:58:59.338"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:58:59.338" endtime="20220704 21:58:59.339"/>
</kw>
<status status="PASS" starttime="20220704 21:58:59.006" endtime="20220704 21:58:59.339"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 21:58:56.470" endtime="20220704 21:58:59.339"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:58:59.351" endtime="20220704 21:58:59.351"/>
</kw>
<status status="PASS" starttime="20220704 21:58:59.350" endtime="20220704 21:58:59.351"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:59.352" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:59.352" endtime="20220704 21:58:59.352"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:59.352" endtime="20220704 21:58:59.353"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:59.353" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:58:59.353" endtime="20220704 21:58:59.353"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:59.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.353" endtime="20220704 21:58:59.624"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:59.624" endtime="20220704 21:58:59.624"/>
</return>
<msg timestamp="20220704 21:58:59.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.352" endtime="20220704 21:58:59.624"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:59.624" endtime="20220704 21:58:59.624"/>
</return>
<msg timestamp="20220704 21:58:59.624" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.351" endtime="20220704 21:58:59.624"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:58:59.626" level="INFO">${TEST_SUITE_BOARD_ID} = 62c362a3606e2b043eddf502</msg>
<status status="PASS" starttime="20220704 21:58:59.625" endtime="20220704 21:58:59.626"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:59.627" level="INFO">${url} = boards/62c362a3606e2b043eddf502/lists/</msg>
<status status="PASS" starttime="20220704 21:58:59.627" endtime="20220704 21:58:59.627"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:58:59.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.627" endtime="20220704 21:58:59.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:59.704" endtime="20220704 21:58:59.704"/>
</return>
<msg timestamp="20220704 21:58:59.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.626" endtime="20220704 21:58:59.705"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:59.705" endtime="20220704 21:58:59.705"/>
</return>
<msg timestamp="20220704 21:58:59.705" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.626" endtime="20220704 21:58:59.705"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:58:59.706" level="INFO">${TEST_SUITE_LIST_ID} = 62c362a3606e2b043eddf509</msg>
<status status="PASS" starttime="20220704 21:58:59.705" endtime="20220704 21:58:59.706"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:59.708" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:59.708" endtime="20220704 21:58:59.708"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:59.708" endtime="20220704 21:58:59.709"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:59.710" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:58:59.709" endtime="20220704 21:58:59.710"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:58:59.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.710" endtime="20220704 21:58:59.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:59.884" endtime="20220704 21:58:59.884"/>
</return>
<msg timestamp="20220704 21:58:59.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.707" endtime="20220704 21:58:59.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:58:59.884" endtime="20220704 21:58:59.884"/>
</return>
<msg timestamp="20220704 21:58:59.884" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.706" endtime="20220704 21:58:59.885"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:58:59.886" level="INFO">${TEST_SUITE_CARD_ID} = 62c362a3df8cf0048c7aab98</msg>
<status status="PASS" starttime="20220704 21:58:59.885" endtime="20220704 21:58:59.886"/>
</kw>
<status status="PASS" starttime="20220704 21:58:59.351" endtime="20220704 21:58:59.886"/>
</kw>
<status status="PASS" starttime="20220704 21:58:59.350" endtime="20220704 21:58:59.886"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:58:59.888" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:58:59.888" endtime="20220704 21:58:59.888"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:58:59.888" endtime="20220704 21:58:59.888"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:58:59.889" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 21:58:59.889" endtime="20220704 21:58:59.889"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:00.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.889" endtime="20220704 21:59:00.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.014" endtime="20220704 21:59:00.014"/>
</return>
<msg timestamp="20220704 21:59:00.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.887" endtime="20220704 21:59:00.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.014" endtime="20220704 21:59:00.014"/>
</return>
<msg timestamp="20220704 21:59:00.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:58:59.887" endtime="20220704 21:59:00.015"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:59:00.015" endtime="20220704 21:59:00.015"/>
</return>
<msg timestamp="20220704 21:59:00.016" level="INFO">${checklist_id} = 62c362a3fc1bb3526385c57f</msg>
<status status="PASS" starttime="20220704 21:59:00.015" endtime="20220704 21:59:00.016"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:00.018" level="INFO">${url} = checklists/62c362a3fc1bb3526385c57f</msg>
<status status="PASS" starttime="20220704 21:59:00.018" endtime="20220704 21:59:00.018"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:59:00.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.018" endtime="20220704 21:59:00.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.111" endtime="20220704 21:59:00.111"/>
</return>
<msg timestamp="20220704 21:59:00.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.017" endtime="20220704 21:59:00.111"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.111" endtime="20220704 21:59:00.111"/>
</return>
<msg timestamp="20220704 21:59:00.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.017" endtime="20220704 21:59:00.111"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:59:00.112" endtime="20220704 21:59:00.112"/>
</return>
<msg timestamp="20220704 21:59:00.113" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 21:59:00.112" endtime="20220704 21:59:00.113"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:59:00.113" endtime="20220704 21:59:00.114"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:00.115" level="INFO">${url} = checklists/62c362a3fc1bb3526385c57f</msg>
<status status="PASS" starttime="20220704 21:59:00.115" endtime="20220704 21:59:00.115"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:59:00.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.115" endtime="20220704 21:59:00.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.238" endtime="20220704 21:59:00.238"/>
</return>
<msg timestamp="20220704 21:59:00.238" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.114" endtime="20220704 21:59:00.238"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.238" endtime="20220704 21:59:00.238"/>
</return>
<status status="PASS" starttime="20220704 21:59:00.114" endtime="20220704 21:59:00.238"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:58:59.886" endtime="20220704 21:59:00.238"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:00.241" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:00.241" endtime="20220704 21:59:00.241"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:00.242" endtime="20220704 21:59:00.242"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:00.243" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 21:59:00.242" endtime="20220704 21:59:00.243"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:00.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.243" endtime="20220704 21:59:00.381"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.381" endtime="20220704 21:59:00.382"/>
</return>
<msg timestamp="20220704 21:59:00.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.240" endtime="20220704 21:59:00.382"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.382" endtime="20220704 21:59:00.382"/>
</return>
<msg timestamp="20220704 21:59:00.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.240" endtime="20220704 21:59:00.382"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:59:00.383" endtime="20220704 21:59:00.383"/>
</return>
<msg timestamp="20220704 21:59:00.384" level="INFO">${checklist_id} = 62c362a431f1fc5c61c325e3</msg>
<status status="PASS" starttime="20220704 21:59:00.382" endtime="20220704 21:59:00.384"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:00.385" level="INFO">${url} = checklists/62c362a431f1fc5c61c325e3</msg>
<status status="PASS" starttime="20220704 21:59:00.385" endtime="20220704 21:59:00.385"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:59:00.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.385" endtime="20220704 21:59:00.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.504" endtime="20220704 21:59:00.504"/>
</return>
<msg timestamp="20220704 21:59:00.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.384" endtime="20220704 21:59:00.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.505" endtime="20220704 21:59:00.505"/>
</return>
<msg timestamp="20220704 21:59:00.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.384" endtime="20220704 21:59:00.505"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:59:00.506" endtime="20220704 21:59:00.508"/>
</kw>
<status status="PASS" starttime="20220704 21:59:00.505" endtime="20220704 21:59:00.508"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:00.510" level="INFO">${url} = checklists/62c362a431f1fc5c61c325e3</msg>
<status status="PASS" starttime="20220704 21:59:00.509" endtime="20220704 21:59:00.510"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:59:00.569" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:59:00.510" endtime="20220704 21:59:00.569"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.569" endtime="20220704 21:59:00.569"/>
</return>
<msg timestamp="20220704 21:59:00.570" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:59:00.509" endtime="20220704 21:59:00.570"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.570" endtime="20220704 21:59:00.570"/>
</return>
<status status="PASS" starttime="20220704 21:59:00.508" endtime="20220704 21:59:00.570"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:59:00.239" endtime="20220704 21:59:00.570"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:00.574" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:00.573" endtime="20220704 21:59:00.574"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:00.574" endtime="20220704 21:59:00.575"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:00.575" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 21:59:00.575" endtime="20220704 21:59:00.575"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:00.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.576" endtime="20220704 21:59:00.715"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.715" endtime="20220704 21:59:00.715"/>
</return>
<msg timestamp="20220704 21:59:00.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.572" endtime="20220704 21:59:00.716"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.716" endtime="20220704 21:59:00.716"/>
</return>
<msg timestamp="20220704 21:59:00.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.571" endtime="20220704 21:59:00.716"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:59:00.717" endtime="20220704 21:59:00.717"/>
</return>
<msg timestamp="20220704 21:59:00.717" level="INFO">${checklist_id} = 62c362a4c047cd85abdf50fd</msg>
<status status="PASS" starttime="20220704 21:59:00.716" endtime="20220704 21:59:00.717"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:00.719" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:00.719" endtime="20220704 21:59:00.719"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:00.719" endtime="20220704 21:59:00.719"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:00.720" level="INFO">${url} = checklists/62c362a4c047cd85abdf50fd</msg>
<status status="PASS" starttime="20220704 21:59:00.719" endtime="20220704 21:59:00.720"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:00.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.720" endtime="20220704 21:59:00.824"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.824" endtime="20220704 21:59:00.824"/>
</return>
<msg timestamp="20220704 21:59:00.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.718" endtime="20220704 21:59:00.824"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.824" endtime="20220704 21:59:00.824"/>
</return>
<msg timestamp="20220704 21:59:00.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.718" endtime="20220704 21:59:00.825"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:00.826" level="INFO">${url} = checklists/62c362a4c047cd85abdf50fd</msg>
<status status="PASS" starttime="20220704 21:59:00.826" endtime="20220704 21:59:00.826"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:59:00.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.827" endtime="20220704 21:59:00.902"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.903" endtime="20220704 21:59:00.903"/>
</return>
<msg timestamp="20220704 21:59:00.903" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.825" endtime="20220704 21:59:00.903"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:00.903" endtime="20220704 21:59:00.903"/>
</return>
<msg timestamp="20220704 21:59:00.903" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.825" endtime="20220704 21:59:00.903"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:59:00.904" endtime="20220704 21:59:00.904"/>
</return>
<msg timestamp="20220704 21:59:00.905" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 21:59:00.903" endtime="20220704 21:59:00.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:59:00.905" endtime="20220704 21:59:00.905"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:00.919" level="INFO">${url} = checklists/62c362a4c047cd85abdf50fd</msg>
<status status="PASS" starttime="20220704 21:59:00.918" endtime="20220704 21:59:00.919"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:59:01.051" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.919" endtime="20220704 21:59:01.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:01.052" endtime="20220704 21:59:01.052"/>
</return>
<msg timestamp="20220704 21:59:01.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:00.918" endtime="20220704 21:59:01.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:01.052" endtime="20220704 21:59:01.052"/>
</return>
<status status="PASS" starttime="20220704 21:59:00.906" endtime="20220704 21:59:01.052"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:59:00.570" endtime="20220704 21:59:01.052"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:01.056" level="INFO">${url} = boards/62c362a3606e2b043eddf502</msg>
<status status="PASS" starttime="20220704 21:59:01.055" endtime="20220704 21:59:01.056"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:59:01.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:01.056" endtime="20220704 21:59:01.375"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:01.375" endtime="20220704 21:59:01.375"/>
</return>
<msg timestamp="20220704 21:59:01.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:01.055" endtime="20220704 21:59:01.375"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:01.375" endtime="20220704 21:59:01.375"/>
</return>
<status status="PASS" starttime="20220704 21:59:01.054" endtime="20220704 21:59:01.376"/>
</kw>
<status status="PASS" starttime="20220704 21:59:01.054" endtime="20220704 21:59:01.376"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:59:01.376" endtime="20220704 21:59:01.377"/>
</kw>
<status status="PASS" starttime="20220704 21:59:01.053" endtime="20220704 21:59:01.377"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 21:58:59.341" endtime="20220704 21:59:01.377"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:59:01.388" endtime="20220704 21:59:01.388"/>
</kw>
<status status="PASS" starttime="20220704 21:59:01.387" endtime="20220704 21:59:01.388"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:01.389" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:01.389" endtime="20220704 21:59:01.389"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:01.389" endtime="20220704 21:59:01.390"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:01.390" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:59:01.390" endtime="20220704 21:59:01.390"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:01.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:01.391" endtime="20220704 21:59:01.719"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:01.719" endtime="20220704 21:59:01.719"/>
</return>
<msg timestamp="20220704 21:59:01.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:01.389" endtime="20220704 21:59:01.719"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:01.719" endtime="20220704 21:59:01.720"/>
</return>
<msg timestamp="20220704 21:59:01.720" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:01.388" endtime="20220704 21:59:01.720"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:59:01.721" level="INFO">${TEST_SUITE_BOARD_ID} = 62c362a56002c77b6d25b471</msg>
<status status="PASS" starttime="20220704 21:59:01.720" endtime="20220704 21:59:01.721"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:59:01.796" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:01.721" endtime="20220704 21:59:01.796"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:59:01.797" level="INFO">${TEST_SUITE_LIST_ID} = 62c362a56002c77b6d25b478</msg>
<status status="PASS" starttime="20220704 21:59:01.796" endtime="20220704 21:59:01.797"/>
</kw>
<status status="PASS" starttime="20220704 21:59:01.388" endtime="20220704 21:59:01.797"/>
</kw>
<status status="PASS" starttime="20220704 21:59:01.387" endtime="20220704 21:59:01.797"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:01.799" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:01.799" endtime="20220704 21:59:01.799"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:01.799" endtime="20220704 21:59:01.800"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:01.801" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 21:59:01.800" endtime="20220704 21:59:01.801"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:01.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:01.801" endtime="20220704 21:59:01.914"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:01.914" endtime="20220704 21:59:01.914"/>
</return>
<msg timestamp="20220704 21:59:01.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:01.799" endtime="20220704 21:59:01.914"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:01.914" endtime="20220704 21:59:01.914"/>
</return>
<msg timestamp="20220704 21:59:01.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:01.798" endtime="20220704 21:59:01.914"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:59:01.915" endtime="20220704 21:59:01.917"/>
</kw>
<status status="PASS" starttime="20220704 21:59:01.915" endtime="20220704 21:59:01.917"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:59:01.917" endtime="20220704 21:59:01.917"/>
</return>
<msg timestamp="20220704 21:59:01.918" level="INFO">${LABEL_ID} = 62c362a5bc49f15c40e3758e</msg>
<status status="PASS" starttime="20220704 21:59:01.917" endtime="20220704 21:59:01.918"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:01.919" level="INFO">${url} = labels/62c362a5bc49f15c40e3758e</msg>
<status status="PASS" starttime="20220704 21:59:01.919" endtime="20220704 21:59:01.919"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:59:02.006" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:01.920" endtime="20220704 21:59:02.006"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:02.006" endtime="20220704 21:59:02.006"/>
</return>
<msg timestamp="20220704 21:59:02.006" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:01.919" endtime="20220704 21:59:02.006"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:02.006" endtime="20220704 21:59:02.006"/>
</return>
<msg timestamp="20220704 21:59:02.006" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:01.918" endtime="20220704 21:59:02.006"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:59:02.007" endtime="20220704 21:59:02.007"/>
</return>
<msg timestamp="20220704 21:59:02.008" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 21:59:02.007" endtime="20220704 21:59:02.008"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:59:02.008" endtime="20220704 21:59:02.008"/>
</return>
<msg timestamp="20220704 21:59:02.009" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 21:59:02.008" endtime="20220704 21:59:02.009"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:59:02.009" endtime="20220704 21:59:02.009"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:59:02.010" endtime="20220704 21:59:02.010"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:02.011" level="INFO">${url} = labels/62c362a5bc49f15c40e3758e</msg>
<status status="PASS" starttime="20220704 21:59:02.011" endtime="20220704 21:59:02.011"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:59:02.502" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:02.011" endtime="20220704 21:59:02.502"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:02.502" endtime="20220704 21:59:02.502"/>
</return>
<msg timestamp="20220704 21:59:02.502" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:02.010" endtime="20220704 21:59:02.502"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:02.502" endtime="20220704 21:59:02.502"/>
</return>
<status status="PASS" starttime="20220704 21:59:02.010" endtime="20220704 21:59:02.502"/>
</kw>
<status status="PASS" starttime="20220704 21:59:02.010" endtime="20220704 21:59:02.502"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:59:01.798" endtime="20220704 21:59:02.503"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:02.505" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:02.505" endtime="20220704 21:59:02.506"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:02.506" endtime="20220704 21:59:02.506"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:02.507" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 21:59:02.506" endtime="20220704 21:59:02.507"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:02.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:02.507" endtime="20220704 21:59:02.625"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:02.626" endtime="20220704 21:59:02.626"/>
</return>
<msg timestamp="20220704 21:59:02.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:02.505" endtime="20220704 21:59:02.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:02.626" endtime="20220704 21:59:02.626"/>
</return>
<msg timestamp="20220704 21:59:02.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:02.504" endtime="20220704 21:59:02.626"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:59:02.627" endtime="20220704 21:59:02.629"/>
</kw>
<status status="PASS" starttime="20220704 21:59:02.626" endtime="20220704 21:59:02.629"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:59:02.630" endtime="20220704 21:59:02.630"/>
</return>
<msg timestamp="20220704 21:59:02.631" level="INFO">${LABEL_ID} = 62c362a665d9df556e2b6ae7</msg>
<status status="PASS" starttime="20220704 21:59:02.630" endtime="20220704 21:59:02.631"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:02.632" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:02.632" endtime="20220704 21:59:02.632"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:02.632" endtime="20220704 21:59:02.632"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:02.633" level="INFO">${url} = labels/62c362a665d9df556e2b6ae7</msg>
<status status="PASS" starttime="20220704 21:59:02.632" endtime="20220704 21:59:02.633"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:02.757" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:02.633" endtime="20220704 21:59:02.757"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:02.757" endtime="20220704 21:59:02.757"/>
</return>
<msg timestamp="20220704 21:59:02.757" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:02.631" endtime="20220704 21:59:02.757"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:02.757" endtime="20220704 21:59:02.757"/>
</return>
<msg timestamp="20220704 21:59:02.757" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:02.631" endtime="20220704 21:59:02.757"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:59:02.758" endtime="20220704 21:59:02.758"/>
</return>
<msg timestamp="20220704 21:59:02.759" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 21:59:02.758" endtime="20220704 21:59:02.759"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:59:02.760" endtime="20220704 21:59:02.760"/>
</return>
<msg timestamp="20220704 21:59:02.760" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 21:59:02.759" endtime="20220704 21:59:02.760"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:59:02.761" endtime="20220704 21:59:02.761"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:59:02.761" endtime="20220704 21:59:02.761"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:02.763" level="INFO">${url} = labels/62c362a665d9df556e2b6ae7</msg>
<status status="PASS" starttime="20220704 21:59:02.763" endtime="20220704 21:59:02.763"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:59:02.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:02.764" endtime="20220704 21:59:02.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:02.908" endtime="20220704 21:59:02.908"/>
</return>
<msg timestamp="20220704 21:59:02.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:02.763" endtime="20220704 21:59:02.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:02.908" endtime="20220704 21:59:02.908"/>
</return>
<status status="PASS" starttime="20220704 21:59:02.762" endtime="20220704 21:59:02.909"/>
</kw>
<status status="PASS" starttime="20220704 21:59:02.762" endtime="20220704 21:59:02.909"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:59:02.503" endtime="20220704 21:59:02.909"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:02.912" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:02.911" endtime="20220704 21:59:02.912"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:02.912" endtime="20220704 21:59:02.912"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:02.913" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 21:59:02.912" endtime="20220704 21:59:02.913"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:03.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:02.913" endtime="20220704 21:59:03.060"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:03.060" endtime="20220704 21:59:03.060"/>
</return>
<msg timestamp="20220704 21:59:03.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:02.911" endtime="20220704 21:59:03.060"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:03.061" endtime="20220704 21:59:03.061"/>
</return>
<msg timestamp="20220704 21:59:03.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:02.910" endtime="20220704 21:59:03.061"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:59:03.061" endtime="20220704 21:59:03.061"/>
</return>
<msg timestamp="20220704 21:59:03.062" level="INFO">${LABEL_ID} = 62c362a7f628651da81a5388</msg>
<status status="PASS" starttime="20220704 21:59:03.061" endtime="20220704 21:59:03.062"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:03.065" level="INFO">${url} = labels/62c362a7f628651da81a5388</msg>
<status status="PASS" starttime="20220704 21:59:03.064" endtime="20220704 21:59:03.065"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:59:03.210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:03.065" endtime="20220704 21:59:03.211"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:03.211" endtime="20220704 21:59:03.211"/>
</return>
<msg timestamp="20220704 21:59:03.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:03.064" endtime="20220704 21:59:03.211"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:03.211" endtime="20220704 21:59:03.211"/>
</return>
<status status="PASS" starttime="20220704 21:59:03.063" endtime="20220704 21:59:03.211"/>
</kw>
<status status="PASS" starttime="20220704 21:59:03.063" endtime="20220704 21:59:03.211"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:03.213" level="INFO">${url} = labels/62c362a7f628651da81a5388</msg>
<status status="PASS" starttime="20220704 21:59:03.213" endtime="20220704 21:59:03.213"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:59:03.293" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:59:03.213" endtime="20220704 21:59:03.293"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:03.293" endtime="20220704 21:59:03.293"/>
</return>
<msg timestamp="20220704 21:59:03.293" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:59:03.212" endtime="20220704 21:59:03.293"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:03.293" endtime="20220704 21:59:03.293"/>
</return>
<status status="PASS" starttime="20220704 21:59:03.212" endtime="20220704 21:59:03.294"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:59:02.909" endtime="20220704 21:59:03.294"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:03.298" level="INFO">${url} = boards/62c362a56002c77b6d25b471</msg>
<status status="PASS" starttime="20220704 21:59:03.297" endtime="20220704 21:59:03.298"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:59:03.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:03.298" endtime="20220704 21:59:03.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:03.683" endtime="20220704 21:59:03.683"/>
</return>
<msg timestamp="20220704 21:59:03.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:03.296" endtime="20220704 21:59:03.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:03.683" endtime="20220704 21:59:03.683"/>
</return>
<status status="PASS" starttime="20220704 21:59:03.296" endtime="20220704 21:59:03.683"/>
</kw>
<status status="PASS" starttime="20220704 21:59:03.296" endtime="20220704 21:59:03.683"/>
</kw>
<status status="PASS" starttime="20220704 21:59:03.295" endtime="20220704 21:59:03.683"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:59:03.684" endtime="20220704 21:59:03.685"/>
</kw>
<status status="PASS" starttime="20220704 21:59:03.295" endtime="20220704 21:59:03.685"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 21:59:01.379" endtime="20220704 21:59:03.685"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:59:03.696" endtime="20220704 21:59:03.696"/>
</kw>
<status status="PASS" starttime="20220704 21:59:03.696" endtime="20220704 21:59:03.697"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:03.698" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:03.698" endtime="20220704 21:59:03.698"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:03.698" endtime="20220704 21:59:03.698"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:03.699" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:59:03.698" endtime="20220704 21:59:03.699"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:03.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:03.699" endtime="20220704 21:59:03.989"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:03.990" endtime="20220704 21:59:03.990"/>
</return>
<msg timestamp="20220704 21:59:03.990" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:03.697" endtime="20220704 21:59:03.990"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:03.990" endtime="20220704 21:59:03.990"/>
</return>
<msg timestamp="20220704 21:59:03.990" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:03.697" endtime="20220704 21:59:03.990"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:59:03.992" level="INFO">${TEST_SUITE_BOARD_ID} = 62c362a7c6489956e4c8ee33</msg>
<status status="PASS" starttime="20220704 21:59:03.991" endtime="20220704 21:59:03.992"/>
</kw>
<status status="PASS" starttime="20220704 21:59:03.990" endtime="20220704 21:59:03.992"/>
</kw>
<status status="PASS" starttime="20220704 21:59:03.697" endtime="20220704 21:59:03.992"/>
</kw>
<status status="PASS" starttime="20220704 21:59:03.696" endtime="20220704 21:59:03.992"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:03.994" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:03.994" endtime="20220704 21:59:03.994"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:03.994" endtime="20220704 21:59:03.994"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:03.995" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 21:59:03.994" endtime="20220704 21:59:03.995"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:04.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:03.995" endtime="20220704 21:59:04.106"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.107" endtime="20220704 21:59:04.107"/>
</return>
<msg timestamp="20220704 21:59:04.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:03.993" endtime="20220704 21:59:04.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.107" endtime="20220704 21:59:04.107"/>
</return>
<msg timestamp="20220704 21:59:04.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:03.993" endtime="20220704 21:59:04.107"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:59:04.108" endtime="20220704 21:59:04.110"/>
</kw>
<status status="PASS" starttime="20220704 21:59:04.108" endtime="20220704 21:59:04.110"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:59:03.992" endtime="20220704 21:59:04.110"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:04.113" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:04.113" endtime="20220704 21:59:04.113"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:04.113" endtime="20220704 21:59:04.113"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:04.114" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 21:59:04.114" endtime="20220704 21:59:04.114"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:04.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.114" endtime="20220704 21:59:04.240"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.240" endtime="20220704 21:59:04.240"/>
</return>
<msg timestamp="20220704 21:59:04.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.112" endtime="20220704 21:59:04.240"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.241" endtime="20220704 21:59:04.241"/>
</return>
<msg timestamp="20220704 21:59:04.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.112" endtime="20220704 21:59:04.241"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:59:04.241" endtime="20220704 21:59:04.243"/>
</kw>
<status status="PASS" starttime="20220704 21:59:04.241" endtime="20220704 21:59:04.244"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:04.245" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:04.245" endtime="20220704 21:59:04.245"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:04.246" endtime="20220704 21:59:04.246"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:04.246" level="INFO">${url} = lists/62c362a88b6b802cd20955d9</msg>
<status status="PASS" starttime="20220704 21:59:04.246" endtime="20220704 21:59:04.246"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:04.345" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.246" endtime="20220704 21:59:04.345"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.345" endtime="20220704 21:59:04.345"/>
</return>
<msg timestamp="20220704 21:59:04.345" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.245" endtime="20220704 21:59:04.345"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.346" endtime="20220704 21:59:04.346"/>
</return>
<status status="PASS" starttime="20220704 21:59:04.244" endtime="20220704 21:59:04.346"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:04.348" level="INFO">${url} = lists/62c362a88b6b802cd20955d9</msg>
<status status="PASS" starttime="20220704 21:59:04.348" endtime="20220704 21:59:04.348"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:59:04.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.348" endtime="20220704 21:59:04.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.423" endtime="20220704 21:59:04.423"/>
</return>
<msg timestamp="20220704 21:59:04.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.347" endtime="20220704 21:59:04.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.423" endtime="20220704 21:59:04.423"/>
</return>
<msg timestamp="20220704 21:59:04.424" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.346" endtime="20220704 21:59:04.424"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:59:04.424" endtime="20220704 21:59:04.426"/>
</kw>
<status status="PASS" starttime="20220704 21:59:04.424" endtime="20220704 21:59:04.426"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:59:04.426" endtime="20220704 21:59:04.427"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:59:04.111" endtime="20220704 21:59:04.427"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:04.431" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:04.431" endtime="20220704 21:59:04.431"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:04.431" endtime="20220704 21:59:04.432"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:04.432" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 21:59:04.432" endtime="20220704 21:59:04.432"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:04.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.433" endtime="20220704 21:59:04.559"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.559" endtime="20220704 21:59:04.559"/>
</return>
<msg timestamp="20220704 21:59:04.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.430" endtime="20220704 21:59:04.559"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.559" endtime="20220704 21:59:04.559"/>
</return>
<msg timestamp="20220704 21:59:04.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.429" endtime="20220704 21:59:04.560"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:59:04.562" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:59:04.562" endtime="20220704 21:59:04.562"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:59:04.562" endtime="20220704 21:59:04.563"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:04.563" level="INFO">${url} = lists/62c362a84355a187ade08d3d/closed</msg>
<status status="PASS" starttime="20220704 21:59:04.563" endtime="20220704 21:59:04.563"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:59:04.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.563" endtime="20220704 21:59:04.671"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.671" endtime="20220704 21:59:04.671"/>
</return>
<msg timestamp="20220704 21:59:04.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.561" endtime="20220704 21:59:04.671"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.671" endtime="20220704 21:59:04.672"/>
</return>
<status status="PASS" starttime="20220704 21:59:04.560" endtime="20220704 21:59:04.672"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:04.674" level="INFO">${url} = lists/62c362a84355a187ade08d3d</msg>
<status status="PASS" starttime="20220704 21:59:04.674" endtime="20220704 21:59:04.674"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:59:04.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.674" endtime="20220704 21:59:04.748"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.748" endtime="20220704 21:59:04.748"/>
</return>
<msg timestamp="20220704 21:59:04.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.673" endtime="20220704 21:59:04.749"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:04.749" endtime="20220704 21:59:04.749"/>
</return>
<msg timestamp="20220704 21:59:04.749" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.672" endtime="20220704 21:59:04.749"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 21:59:04.749" endtime="20220704 21:59:04.750"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:59:04.428" endtime="20220704 21:59:04.750"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:59:04.754" level="INFO">${url} = boards/62c362a7c6489956e4c8ee33</msg>
<status status="PASS" starttime="20220704 21:59:04.754" endtime="20220704 21:59:04.754"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:59:05.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.754" endtime="20220704 21:59:05.130"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:05.130" endtime="20220704 21:59:05.130"/>
</return>
<msg timestamp="20220704 21:59:05.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:59:04.753" endtime="20220704 21:59:05.130"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:59:05.130" endtime="20220704 21:59:05.130"/>
</return>
<status status="PASS" starttime="20220704 21:59:04.753" endtime="20220704 21:59:05.130"/>
</kw>
<status status="PASS" starttime="20220704 21:59:04.753" endtime="20220704 21:59:05.130"/>
</kw>
<status status="PASS" starttime="20220704 21:59:04.752" endtime="20220704 21:59:05.131"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:59:05.131" endtime="20220704 21:59:05.132"/>
</kw>
<status status="PASS" starttime="20220704 21:59:04.752" endtime="20220704 21:59:05.132"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 21:59:03.687" endtime="20220704 21:59:05.132"/>
</suite>
<status status="PASS" starttime="20220704 21:58:52.632" endtime="20220704 21:59:05.135"/>
</suite>
<status status="PASS" starttime="20220704 21:58:52.614" endtime="20220704 21:59:05.138"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
