<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220707 03:45:30.139" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Gui" source="/trello/gui">
<suite id="s1-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 03:45:30.498" endtime="20220707 03:45:30.499"/>
</kw>
<status status="PASS" starttime="20220707 03:45:30.498" endtime="20220707 03:45:30.499"/>
</kw>
<status status="PASS" starttime="20220707 03:45:30.498" endtime="20220707 03:45:30.499"/>
</kw>
<test id="s1-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 03:45:30.502" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 03:45:30.501" endtime="20220707 03:45:33.012"/>
</kw>
<status status="PASS" starttime="20220707 03:45:30.501" endtime="20220707 03:45:33.012"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:45:33.012" endtime="20220707 03:45:33.012"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:45:33.012" endtime="20220707 03:45:33.012"/>
</branch>
<status status="PASS" starttime="20220707 03:45:30.501" endtime="20220707 03:45:33.012"/>
</if>
<status status="PASS" starttime="20220707 03:45:30.500" endtime="20220707 03:45:33.012"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 03:45:33.013" endtime="20220707 03:45:33.145"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:45:33.170" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:45:33.146" endtime="20220707 03:45:33.171"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:45:33.171" endtime="20220707 03:45:33.171"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:45:33.171" endtime="20220707 03:45:33.171"/>
</branch>
<status status="PASS" starttime="20220707 03:45:33.171" endtime="20220707 03:45:33.171"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:33.172" endtime="20220707 03:45:33.246"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:33.247" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 03:45:33.247" endtime="20220707 03:45:33.415"/>
</kw>
<status status="PASS" starttime="20220707 03:45:33.171" endtime="20220707 03:45:33.415"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 03:45:33.415" endtime="20220707 03:45:34.027"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:45:34.044" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:45:34.028" endtime="20220707 03:45:34.044"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:45:34.044" endtime="20220707 03:45:34.135"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:34.136" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 03:45:34.135" endtime="20220707 03:45:35.524"/>
</kw>
<status status="PASS" starttime="20220707 03:45:34.044" endtime="20220707 03:45:35.524"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:45:35.524" endtime="20220707 03:45:35.524"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:45:35.525" endtime="20220707 03:45:35.525"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:45:35.524" endtime="20220707 03:45:35.525"/>
</branch>
<status status="PASS" starttime="20220707 03:45:34.044" endtime="20220707 03:45:35.525"/>
</if>
<status status="PASS" starttime="20220707 03:45:34.028" endtime="20220707 03:45:35.525"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 03:45:35.525" endtime="20220707 03:45:35.566"/>
</kw>
<status status="PASS" starttime="20220707 03:45:35.525" endtime="20220707 03:45:35.566"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:35.567" endtime="20220707 03:45:35.659"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:35.659" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 03:45:35.769" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 03:45:35.879" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 03:45:35.659" endtime="20220707 03:45:35.879"/>
</kw>
<status status="PASS" starttime="20220707 03:45:35.567" endtime="20220707 03:45:35.880"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:45:35.940" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c656...</msg>
<status status="PASS" starttime="20220707 03:45:35.880" endtime="20220707 03:45:35.940"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:45:35.941" endtime="20220707 03:45:35.941"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:45:35.941" endtime="20220707 03:45:35.941"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:45:35.941" endtime="20220707 03:45:35.941"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:45:35.941" endtime="20220707 03:45:36.048"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:36.049" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 03:45:36.049" endtime="20220707 03:45:36.188"/>
</kw>
<status status="PASS" starttime="20220707 03:45:35.941" endtime="20220707 03:45:36.188"/>
</branch>
<status status="PASS" starttime="20220707 03:45:35.941" endtime="20220707 03:45:36.188"/>
</if>
<status status="PASS" starttime="20220707 03:45:35.880" endtime="20220707 03:45:36.188"/>
</kw>
<status status="PASS" starttime="20220707 03:45:33.145" endtime="20220707 03:45:36.188"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 03:45:36.189" endtime="20220707 03:45:40.668"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:40.669" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220707 03:45:40.669" endtime="20220707 03:45:40.878"/>
</kw>
<status status="PASS" starttime="20220707 03:45:40.668" endtime="20220707 03:45:40.878"/>
</kw>
<status status="PASS" starttime="20220707 03:45:36.188" endtime="20220707 03:45:40.878"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:40.879" endtime="20220707 03:45:41.290"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:41.291" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220707 03:45:41.290" endtime="20220707 03:45:41.525"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:45:41.525" endtime="20220707 03:45:41.615"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:41.616" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220707 03:45:41.615" endtime="20220707 03:45:41.727"/>
</kw>
<status status="PASS" starttime="20220707 03:45:40.879" endtime="20220707 03:45:41.727"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20220707 03:45:43.465" level="INFO">Suppressing StaleElementReferenceException from Selenium.</msg>
<status status="PASS" starttime="20220707 03:45:41.728" endtime="20220707 03:45:43.755"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 03:45:43.756" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220707 03:45:43.756" endtime="20220707 03:45:43.840"/>
</kw>
<status status="PASS" starttime="20220707 03:45:41.727" endtime="20220707 03:45:43.840"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:43.841" endtime="20220707 03:45:43.912"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:43.912" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 03:45:43.912" endtime="20220707 03:45:44.027"/>
</kw>
<status status="PASS" starttime="20220707 03:45:43.841" endtime="20220707 03:45:44.027"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:44.028" endtime="20220707 03:45:44.119"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:44.119" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220707 03:45:44.119" endtime="20220707 03:45:44.330"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:44.331" endtime="20220707 03:45:44.439"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:44.439" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220707 03:45:44.439" endtime="20220707 03:45:44.594"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:44.594" endtime="20220707 03:45:44.659"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:44.660" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220707 03:45:44.660" endtime="20220707 03:45:44.800"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:44.800" endtime="20220707 03:45:45.241"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:45.242" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220707 03:45:45.241" endtime="20220707 03:45:45.352"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:45.353" endtime="20220707 03:45:45.446"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:45.447" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220707 03:45:45.447" endtime="20220707 03:45:45.538"/>
</kw>
<status status="PASS" starttime="20220707 03:45:44.028" endtime="20220707 03:45:45.538"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 03:45:45.539" endtime="20220707 03:45:45.644"/>
</kw>
<status status="PASS" starttime="20220707 03:45:43.841" endtime="20220707 03:45:45.644"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:45:30.499" endtime="20220707 03:45:45.644"/>
</test>
<test id="s1-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:45:45.648" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:45:45.648" endtime="20220707 03:45:45.649"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:45:45.649" endtime="20220707 03:45:45.649"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:45:45.651" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:45:45.649" endtime="20220707 03:45:45.651"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:45:45.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:45:45.651" endtime="20220707 03:45:45.978"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:45:45.978" endtime="20220707 03:45:45.978"/>
</return>
<msg timestamp="20220707 03:45:45.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:45:45.647" endtime="20220707 03:45:45.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:45:45.979" endtime="20220707 03:45:45.979"/>
</return>
<msg timestamp="20220707 03:45:45.979" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:45:45.647" endtime="20220707 03:45:45.979"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 03:45:45.981" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 03:45:45.980" endtime="20220707 03:45:47.279"/>
</kw>
<status status="PASS" starttime="20220707 03:45:45.980" endtime="20220707 03:45:47.279"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:45:47.279" endtime="20220707 03:45:47.279"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:45:47.279" endtime="20220707 03:45:47.279"/>
</branch>
<status status="PASS" starttime="20220707 03:45:45.980" endtime="20220707 03:45:47.279"/>
</if>
<status status="PASS" starttime="20220707 03:45:45.979" endtime="20220707 03:45:47.279"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 03:45:47.280" endtime="20220707 03:45:47.415"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:45:47.432" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:45:47.416" endtime="20220707 03:45:47.432"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:45:47.432" endtime="20220707 03:45:47.432"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:45:47.432" endtime="20220707 03:45:47.432"/>
</branch>
<status status="PASS" starttime="20220707 03:45:47.432" endtime="20220707 03:45:47.433"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:47.433" endtime="20220707 03:45:47.492"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:47.492" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 03:45:47.492" endtime="20220707 03:45:47.657"/>
</kw>
<status status="PASS" starttime="20220707 03:45:47.433" endtime="20220707 03:45:47.657"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 03:45:47.657" endtime="20220707 03:45:48.451"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:45:48.466" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:45:48.452" endtime="20220707 03:45:48.466"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:45:48.467" endtime="20220707 03:45:48.564"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:48.564" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 03:45:48.564" endtime="20220707 03:45:49.781"/>
</kw>
<status status="PASS" starttime="20220707 03:45:48.467" endtime="20220707 03:45:49.781"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:45:49.781" endtime="20220707 03:45:49.781"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:45:49.781" endtime="20220707 03:45:49.781"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:45:49.781" endtime="20220707 03:45:49.781"/>
</branch>
<status status="PASS" starttime="20220707 03:45:48.466" endtime="20220707 03:45:49.781"/>
</if>
<status status="PASS" starttime="20220707 03:45:48.451" endtime="20220707 03:45:49.781"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 03:45:49.782" endtime="20220707 03:45:49.810"/>
</kw>
<status status="PASS" starttime="20220707 03:45:49.782" endtime="20220707 03:45:49.810"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:49.811" endtime="20220707 03:45:49.886"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:49.886" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 03:45:49.956" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 03:45:50.068" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 03:45:49.886" endtime="20220707 03:45:50.068"/>
</kw>
<status status="PASS" starttime="20220707 03:45:49.811" endtime="20220707 03:45:50.069"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:45:50.093" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c656...</msg>
<status status="PASS" starttime="20220707 03:45:50.069" endtime="20220707 03:45:50.093"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:45:50.094" endtime="20220707 03:45:50.094"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:45:50.094" endtime="20220707 03:45:50.094"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:45:50.094" endtime="20220707 03:45:50.094"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:45:50.094" endtime="20220707 03:45:50.178"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:50.178" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 03:45:50.178" endtime="20220707 03:45:50.310"/>
</kw>
<status status="PASS" starttime="20220707 03:45:50.094" endtime="20220707 03:45:50.310"/>
</branch>
<status status="PASS" starttime="20220707 03:45:50.093" endtime="20220707 03:45:50.311"/>
</if>
<status status="PASS" starttime="20220707 03:45:50.069" endtime="20220707 03:45:50.311"/>
</kw>
<status status="PASS" starttime="20220707 03:45:47.416" endtime="20220707 03:45:50.311"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:45:50.312" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220707 03:45:50.312" endtime="20220707 03:45:50.312"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:50.312" endtime="20220707 03:45:54.599"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:54.600" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220707 03:45:54.599" endtime="20220707 03:45:55.164"/>
</kw>
<status status="PASS" starttime="20220707 03:45:50.311" endtime="20220707 03:45:55.164"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:55.165" endtime="20220707 03:45:55.953"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 03:45:55.953" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220707 03:45:55.953" endtime="20220707 03:45:56.097"/>
</kw>
<status status="PASS" starttime="20220707 03:45:55.164" endtime="20220707 03:45:56.097"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:56.098" endtime="20220707 03:45:56.163"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:56.163" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 03:45:56.163" endtime="20220707 03:45:56.379"/>
</kw>
<status status="PASS" starttime="20220707 03:45:56.097" endtime="20220707 03:45:56.379"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:56.380" endtime="20220707 03:45:56.461"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:56.462" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220707 03:45:56.462" endtime="20220707 03:45:56.674"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:56.674" endtime="20220707 03:45:56.747"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:56.748" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220707 03:45:56.747" endtime="20220707 03:45:56.852"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:56.852" endtime="20220707 03:45:56.907"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:56.907" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220707 03:45:56.907" endtime="20220707 03:45:57.042"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:57.042" endtime="20220707 03:45:57.472"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:57.472" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220707 03:45:57.472" endtime="20220707 03:45:57.571"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:57.571" endtime="20220707 03:45:57.631"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:57.632" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220707 03:45:57.632" endtime="20220707 03:45:57.723"/>
</kw>
<status status="PASS" starttime="20220707 03:45:56.379" endtime="20220707 03:45:57.724"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 03:45:57.724" endtime="20220707 03:45:57.845"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220707 03:45:57.846" endtime="20220707 03:45:57.846"/>
</kw>
<status status="PASS" starttime="20220707 03:45:57.724" endtime="20220707 03:45:57.846"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:45:45.646" endtime="20220707 03:45:57.846"/>
</test>
<test id="s1-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:45:57.850" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:45:57.849" endtime="20220707 03:45:57.850"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:45:57.850" endtime="20220707 03:45:57.850"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:45:57.852" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:45:57.850" endtime="20220707 03:45:57.852"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:45:58.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:45:57.852" endtime="20220707 03:45:58.093"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:45:58.093" endtime="20220707 03:45:58.093"/>
</return>
<msg timestamp="20220707 03:45:58.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:45:57.849" endtime="20220707 03:45:58.093"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:45:58.093" endtime="20220707 03:45:58.094"/>
</return>
<msg timestamp="20220707 03:45:58.094" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:45:57.848" endtime="20220707 03:45:58.094"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 03:45:58.096" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 03:45:58.095" endtime="20220707 03:45:59.549"/>
</kw>
<status status="PASS" starttime="20220707 03:45:58.095" endtime="20220707 03:45:59.549"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:45:59.549" endtime="20220707 03:45:59.549"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:45:59.549" endtime="20220707 03:45:59.549"/>
</branch>
<status status="PASS" starttime="20220707 03:45:58.095" endtime="20220707 03:45:59.549"/>
</if>
<status status="PASS" starttime="20220707 03:45:58.094" endtime="20220707 03:45:59.549"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 03:45:59.549" endtime="20220707 03:45:59.687"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:45:59.710" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:45:59.688" endtime="20220707 03:45:59.710"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:45:59.711" endtime="20220707 03:45:59.711"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:45:59.711" endtime="20220707 03:45:59.711"/>
</branch>
<status status="PASS" starttime="20220707 03:45:59.710" endtime="20220707 03:45:59.711"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:45:59.712" endtime="20220707 03:45:59.770"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:45:59.771" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 03:45:59.770" endtime="20220707 03:45:59.911"/>
</kw>
<status status="PASS" starttime="20220707 03:45:59.711" endtime="20220707 03:45:59.911"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 03:45:59.911" endtime="20220707 03:46:00.697"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:46:00.710" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:46:00.697" endtime="20220707 03:46:00.710"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:46:00.710" endtime="20220707 03:46:00.818"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:00.819" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 03:46:00.818" endtime="20220707 03:46:02.075"/>
</kw>
<status status="PASS" starttime="20220707 03:46:00.710" endtime="20220707 03:46:02.075"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:46:02.075" endtime="20220707 03:46:02.075"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:46:02.076" endtime="20220707 03:46:02.076"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:46:02.075" endtime="20220707 03:46:02.076"/>
</branch>
<status status="PASS" starttime="20220707 03:46:00.710" endtime="20220707 03:46:02.076"/>
</if>
<status status="PASS" starttime="20220707 03:46:00.697" endtime="20220707 03:46:02.076"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 03:46:02.077" endtime="20220707 03:46:02.105"/>
</kw>
<status status="PASS" starttime="20220707 03:46:02.076" endtime="20220707 03:46:02.106"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:02.106" endtime="20220707 03:46:02.183"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:02.187" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 03:46:02.251" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 03:46:02.340" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 03:46:02.183" endtime="20220707 03:46:02.341"/>
</kw>
<status status="PASS" starttime="20220707 03:46:02.106" endtime="20220707 03:46:02.341"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:46:02.354" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c656...</msg>
<status status="PASS" starttime="20220707 03:46:02.341" endtime="20220707 03:46:02.354"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:46:02.354" endtime="20220707 03:46:02.355"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:46:02.355" endtime="20220707 03:46:02.355"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:46:02.354" endtime="20220707 03:46:02.355"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:46:02.355" endtime="20220707 03:46:02.452"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:02.452" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 03:46:02.452" endtime="20220707 03:46:02.580"/>
</kw>
<status status="PASS" starttime="20220707 03:46:02.355" endtime="20220707 03:46:02.580"/>
</branch>
<status status="PASS" starttime="20220707 03:46:02.354" endtime="20220707 03:46:02.580"/>
</if>
<status status="PASS" starttime="20220707 03:46:02.341" endtime="20220707 03:46:02.580"/>
</kw>
<status status="PASS" starttime="20220707 03:45:59.687" endtime="20220707 03:46:02.580"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:02.581" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220707 03:46:02.581" endtime="20220707 03:46:02.581"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:02.582" endtime="20220707 03:46:06.858"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:06.858" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220707 03:46:06.858" endtime="20220707 03:46:07.410"/>
</kw>
<status status="PASS" starttime="20220707 03:46:02.581" endtime="20220707 03:46:07.410"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:07.411" endtime="20220707 03:46:08.073"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 03:46:08.074" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220707 03:46:08.073" endtime="20220707 03:46:08.229"/>
</kw>
<status status="PASS" starttime="20220707 03:46:07.410" endtime="20220707 03:46:08.229"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:08.230" endtime="20220707 03:46:08.276"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:08.277" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 03:46:08.276" endtime="20220707 03:46:08.495"/>
</kw>
<status status="PASS" starttime="20220707 03:46:08.229" endtime="20220707 03:46:08.495"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:08.495" endtime="20220707 03:46:08.599"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:08.600" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220707 03:46:08.600" endtime="20220707 03:46:08.714"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:08.714" endtime="20220707 03:46:09.010"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:09.010" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220707 03:46:09.010" endtime="20220707 03:46:09.105"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:09.106" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220707 03:46:09.106" endtime="20220707 03:46:09.321"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:09.322" endtime="20220707 03:46:09.371"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:09.372" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220707 03:46:09.372" endtime="20220707 03:46:09.516"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:09.517" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220707 03:46:09.516" endtime="20220707 03:46:09.706"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:09.707" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220707 03:46:09.707" endtime="20220707 03:46:09.804"/>
</kw>
<status status="PASS" starttime="20220707 03:46:08.495" endtime="20220707 03:46:09.805"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 03:46:09.805" endtime="20220707 03:46:09.894"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:09.898" level="INFO">${url} = boards/62c656f57f1a5b634d7bf06e</msg>
<status status="PASS" starttime="20220707 03:46:09.897" endtime="20220707 03:46:09.898"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:46:10.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:09.898" endtime="20220707 03:46:10.212"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:10.212" endtime="20220707 03:46:10.212"/>
</return>
<msg timestamp="20220707 03:46:10.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:09.896" endtime="20220707 03:46:10.212"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:10.212" endtime="20220707 03:46:10.212"/>
</return>
<status status="PASS" starttime="20220707 03:46:09.895" endtime="20220707 03:46:10.212"/>
</kw>
<status status="PASS" starttime="20220707 03:46:09.894" endtime="20220707 03:46:10.213"/>
</kw>
<status status="PASS" starttime="20220707 03:46:09.805" endtime="20220707 03:46:10.213"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:45:57.847" endtime="20220707 03:46:10.213"/>
</test>
<test id="s1-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:46:10.216" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:46:10.216" endtime="20220707 03:46:10.216"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:46:10.216" endtime="20220707 03:46:10.216"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:10.218" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:46:10.216" endtime="20220707 03:46:10.218"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:46:10.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:10.218" endtime="20220707 03:46:10.424"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:10.424" endtime="20220707 03:46:10.424"/>
</return>
<msg timestamp="20220707 03:46:10.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:10.215" endtime="20220707 03:46:10.424"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:10.424" endtime="20220707 03:46:10.424"/>
</return>
<msg timestamp="20220707 03:46:10.425" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:10.214" endtime="20220707 03:46:10.425"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 03:46:10.426" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 03:46:10.426" endtime="20220707 03:46:11.839"/>
</kw>
<status status="PASS" starttime="20220707 03:46:10.425" endtime="20220707 03:46:11.839"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:46:11.840" endtime="20220707 03:46:11.840"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:46:11.839" endtime="20220707 03:46:11.840"/>
</branch>
<status status="PASS" starttime="20220707 03:46:10.425" endtime="20220707 03:46:11.840"/>
</if>
<status status="PASS" starttime="20220707 03:46:10.425" endtime="20220707 03:46:11.840"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 03:46:11.840" endtime="20220707 03:46:11.972"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:46:11.986" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:46:11.973" endtime="20220707 03:46:11.986"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:46:11.987" endtime="20220707 03:46:11.987"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:46:11.987" endtime="20220707 03:46:11.987"/>
</branch>
<status status="PASS" starttime="20220707 03:46:11.987" endtime="20220707 03:46:11.987"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:11.988" endtime="20220707 03:46:12.039"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:12.040" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 03:46:12.040" endtime="20220707 03:46:12.192"/>
</kw>
<status status="PASS" starttime="20220707 03:46:11.988" endtime="20220707 03:46:12.192"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 03:46:12.192" endtime="20220707 03:46:12.966"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:46:12.980" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:46:12.966" endtime="20220707 03:46:12.980"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:46:12.981" endtime="20220707 03:46:13.058"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:13.059" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 03:46:13.058" endtime="20220707 03:46:14.227"/>
</kw>
<status status="PASS" starttime="20220707 03:46:12.981" endtime="20220707 03:46:14.227"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:46:14.227" endtime="20220707 03:46:14.227"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:46:14.227" endtime="20220707 03:46:14.227"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:46:14.227" endtime="20220707 03:46:14.227"/>
</branch>
<status status="PASS" starttime="20220707 03:46:12.980" endtime="20220707 03:46:14.227"/>
</if>
<status status="PASS" starttime="20220707 03:46:12.966" endtime="20220707 03:46:14.228"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 03:46:14.228" endtime="20220707 03:46:14.250"/>
</kw>
<status status="PASS" starttime="20220707 03:46:14.228" endtime="20220707 03:46:14.250"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:14.251" endtime="20220707 03:46:14.307"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:14.307" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 03:46:14.374" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 03:46:14.462" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 03:46:14.307" endtime="20220707 03:46:14.463"/>
</kw>
<status status="PASS" starttime="20220707 03:46:14.250" endtime="20220707 03:46:14.463"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:46:14.475" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c657...</msg>
<status status="PASS" starttime="20220707 03:46:14.464" endtime="20220707 03:46:14.476"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:46:14.476" endtime="20220707 03:46:14.476"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:46:14.476" endtime="20220707 03:46:14.476"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:46:14.476" endtime="20220707 03:46:14.476"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:46:14.477" endtime="20220707 03:46:14.559"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:14.560" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 03:46:14.559" endtime="20220707 03:46:14.678"/>
</kw>
<status status="PASS" starttime="20220707 03:46:14.476" endtime="20220707 03:46:14.679"/>
</branch>
<status status="PASS" starttime="20220707 03:46:14.476" endtime="20220707 03:46:14.679"/>
</if>
<status status="PASS" starttime="20220707 03:46:14.463" endtime="20220707 03:46:14.679"/>
</kw>
<status status="PASS" starttime="20220707 03:46:11.972" endtime="20220707 03:46:14.679"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:14.680" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220707 03:46:14.680" endtime="20220707 03:46:14.680"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:14.681" endtime="20220707 03:46:18.965"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:18.966" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220707 03:46:18.965" endtime="20220707 03:46:19.464"/>
</kw>
<status status="PASS" starttime="20220707 03:46:14.679" endtime="20220707 03:46:19.464"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:19.465" endtime="20220707 03:46:20.195"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 03:46:20.195" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220707 03:46:20.195" endtime="20220707 03:46:20.271"/>
</kw>
<status status="PASS" starttime="20220707 03:46:19.464" endtime="20220707 03:46:20.271"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:20.272" endtime="20220707 03:46:20.318"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:20.371" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220707 03:46:20.318" endtime="20220707 03:46:20.371"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220707 03:46:20.372" level="INFO">Length is 8</msg>
<msg timestamp="20220707 03:46:20.372" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220707 03:46:20.371" endtime="20220707 03:46:20.372"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:20.372" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220707 03:46:20.372" endtime="20220707 03:46:20.559"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:46:20.559" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 03:46:20.870" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 03:46:20.559" endtime="20220707 03:46:20.886"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220707 03:46:20.887" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:46:20.888" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 03:46:21.173" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 03:46:20.887" endtime="20220707 03:46:21.201"/>
</kw>
<msg timestamp="20220707 03:46:21.201" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:46:21.202" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 03:46:21.502" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 03:46:21.202" endtime="20220707 03:46:21.519"/>
</kw>
<msg timestamp="20220707 03:46:21.519" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:46:21.520" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 03:46:21.809" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 03:46:21.519" endtime="20220707 03:46:21.830"/>
</kw>
<msg timestamp="20220707 03:46:21.830" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:46:21.831" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 03:46:22.121" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 03:46:21.830" endtime="20220707 03:46:22.137"/>
</kw>
<msg timestamp="20220707 03:46:22.137" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:46:22.138" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 03:46:22.448" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 03:46:22.137" endtime="20220707 03:46:22.515"/>
</kw>
<msg timestamp="20220707 03:46:22.515" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:46:22.516" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 03:46:22.805" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 03:46:22.515" endtime="20220707 03:46:22.830"/>
</kw>
<msg timestamp="20220707 03:46:22.830" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:46:22.831" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 03:46:23.116" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 03:46:22.830" endtime="20220707 03:46:23.136"/>
</kw>
<msg timestamp="20220707 03:46:23.137" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:46:23.137" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 03:46:23.432" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 03:46:23.137" endtime="20220707 03:46:23.450"/>
</kw>
<status status="PASS" starttime="20220707 03:46:20.887" endtime="20220707 03:46:23.450"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:46:23.451" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 03:46:23.746" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220707 03:46:23.450" endtime="20220707 03:46:23.825"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:46:23.826" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 03:46:24.110" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 03:46:23.825" endtime="20220707 03:46:24.212"/>
</kw>
<status status="PASS" starttime="20220707 03:46:20.271" endtime="20220707 03:46:24.213"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:24.213" endtime="20220707 03:46:24.248"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 03:46:24.249" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220707 03:46:24.249" endtime="20220707 03:46:24.283"/>
</kw>
<status status="PASS" starttime="20220707 03:46:24.213" endtime="20220707 03:46:24.283"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 03:46:24.284" endtime="20220707 03:46:24.373"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:24.377" level="INFO">${url} = boards/62c65702c29b9b89924751ae</msg>
<status status="PASS" starttime="20220707 03:46:24.377" endtime="20220707 03:46:24.377"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:46:24.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:24.377" endtime="20220707 03:46:24.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:24.740" endtime="20220707 03:46:24.740"/>
</return>
<msg timestamp="20220707 03:46:24.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:24.376" endtime="20220707 03:46:24.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:24.740" endtime="20220707 03:46:24.740"/>
</return>
<status status="PASS" starttime="20220707 03:46:24.374" endtime="20220707 03:46:24.741"/>
</kw>
<status status="PASS" starttime="20220707 03:46:24.374" endtime="20220707 03:46:24.741"/>
</kw>
<status status="PASS" starttime="20220707 03:46:24.283" endtime="20220707 03:46:24.741"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:46:10.213" endtime="20220707 03:46:24.741"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 03:46:24.742" endtime="20220707 03:46:24.744"/>
</kw>
<status status="PASS" starttime="20220707 03:46:24.742" endtime="20220707 03:46:24.744"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220707 03:45:30.168" endtime="20220707 03:46:24.744"/>
</suite>
<suite id="s1-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 03:46:24.765" endtime="20220707 03:46:24.765"/>
</kw>
<status status="PASS" starttime="20220707 03:46:24.764" endtime="20220707 03:46:24.765"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:46:24.766" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:46:24.766" endtime="20220707 03:46:24.767"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:46:24.767" endtime="20220707 03:46:24.767"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:24.768" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:46:24.767" endtime="20220707 03:46:24.769"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:46:25.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:24.769" endtime="20220707 03:46:25.073"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:25.073" endtime="20220707 03:46:25.073"/>
</return>
<msg timestamp="20220707 03:46:25.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:24.766" endtime="20220707 03:46:25.073"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:25.073" endtime="20220707 03:46:25.073"/>
</return>
<msg timestamp="20220707 03:46:25.074" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:24.765" endtime="20220707 03:46:25.074"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 03:46:25.076" level="INFO">${TEST_SUITE_BOARD_ID} = 62c65710e648c61eccf0369a</msg>
<status status="PASS" starttime="20220707 03:46:25.074" endtime="20220707 03:46:25.076"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 03:46:25.077" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 03:46:25.077" endtime="20220707 03:46:26.422"/>
</kw>
<status status="PASS" starttime="20220707 03:46:25.076" endtime="20220707 03:46:26.422"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:46:26.422" endtime="20220707 03:46:26.422"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:46:26.422" endtime="20220707 03:46:26.422"/>
</branch>
<status status="PASS" starttime="20220707 03:46:25.076" endtime="20220707 03:46:26.422"/>
</if>
<status status="PASS" starttime="20220707 03:46:25.076" endtime="20220707 03:46:26.423"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 03:46:26.423" endtime="20220707 03:46:26.539"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:46:26.554" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:46:26.540" endtime="20220707 03:46:26.554"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:46:26.555" endtime="20220707 03:46:26.555"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:46:26.555" endtime="20220707 03:46:26.555"/>
</branch>
<status status="PASS" starttime="20220707 03:46:26.554" endtime="20220707 03:46:26.555"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:26.556" endtime="20220707 03:46:26.615"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:26.616" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 03:46:26.615" endtime="20220707 03:46:26.752"/>
</kw>
<status status="PASS" starttime="20220707 03:46:26.555" endtime="20220707 03:46:26.752"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 03:46:26.752" endtime="20220707 03:46:27.504"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:46:27.513" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:46:27.504" endtime="20220707 03:46:27.513"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:46:27.513" endtime="20220707 03:46:27.569"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:27.570" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 03:46:27.570" endtime="20220707 03:46:28.784"/>
</kw>
<status status="PASS" starttime="20220707 03:46:27.513" endtime="20220707 03:46:28.784"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:46:28.784" endtime="20220707 03:46:28.784"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:46:28.784" endtime="20220707 03:46:28.784"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:46:28.784" endtime="20220707 03:46:28.784"/>
</branch>
<status status="PASS" starttime="20220707 03:46:27.513" endtime="20220707 03:46:28.784"/>
</if>
<status status="PASS" starttime="20220707 03:46:27.504" endtime="20220707 03:46:28.784"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 03:46:28.785" endtime="20220707 03:46:28.804"/>
</kw>
<status status="PASS" starttime="20220707 03:46:28.785" endtime="20220707 03:46:28.804"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:28.805" endtime="20220707 03:46:28.857"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:28.858" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 03:46:28.951" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 03:46:29.043" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 03:46:28.858" endtime="20220707 03:46:29.043"/>
</kw>
<status status="PASS" starttime="20220707 03:46:28.804" endtime="20220707 03:46:29.043"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:46:29.067" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c657...</msg>
<status status="PASS" starttime="20220707 03:46:29.044" endtime="20220707 03:46:29.067"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:46:29.068" endtime="20220707 03:46:29.068"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:46:29.068" endtime="20220707 03:46:29.068"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:46:29.068" endtime="20220707 03:46:29.068"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:46:29.068" endtime="20220707 03:46:29.145"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:29.146" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 03:46:29.146" endtime="20220707 03:46:29.274"/>
</kw>
<status status="PASS" starttime="20220707 03:46:29.068" endtime="20220707 03:46:29.274"/>
</branch>
<status status="PASS" starttime="20220707 03:46:29.067" endtime="20220707 03:46:29.274"/>
</if>
<status status="PASS" starttime="20220707 03:46:29.043" endtime="20220707 03:46:29.274"/>
</kw>
<status status="PASS" starttime="20220707 03:46:26.539" endtime="20220707 03:46:29.274"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:29.276" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220707 03:46:29.275" endtime="20220707 03:46:29.276"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:29.276" endtime="20220707 03:46:33.804"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:33.804" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220707 03:46:33.804" endtime="20220707 03:46:34.322"/>
</kw>
<status status="PASS" starttime="20220707 03:46:29.275" endtime="20220707 03:46:34.323"/>
</kw>
<status status="PASS" starttime="20220707 03:46:24.764" endtime="20220707 03:46:34.323"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:34.325" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 03:46:34.324" endtime="20220707 03:46:34.325"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:34.325" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 03:46:34.325" endtime="20220707 03:46:34.325"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:34.331" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 03:46:34.330" endtime="20220707 03:46:34.331"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:34.331" endtime="20220707 03:46:35.057"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:35.058" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 03:46:35.057" endtime="20220707 03:46:35.136"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:35.137" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 03:46:35.137" endtime="20220707 03:46:35.137"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:35.137" endtime="20220707 03:46:35.198"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:35.199" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:46:35.198" endtime="20220707 03:46:35.335"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 03:46:35.335" endtime="20220707 03:46:35.419"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:35.420" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:46:35.419" endtime="20220707 03:46:35.581"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:35.582" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 03:46:35.582" endtime="20220707 03:46:35.582"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:35.583" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 03:46:35.582" endtime="20220707 03:46:35.686"/>
</kw>
<status status="PASS" starttime="20220707 03:46:34.325" endtime="20220707 03:46:35.687"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:35.688" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 03:46:35.688" endtime="20220707 03:46:35.688"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 03:46:35.773" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220707 03:46:35.688" endtime="20220707 03:46:35.773"/>
</kw>
<status status="PASS" starttime="20220707 03:46:35.687" endtime="20220707 03:46:35.773"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:35.775" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 03:46:35.775" endtime="20220707 03:46:35.775"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:35.776" endtime="20220707 03:46:35.824"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:35.825" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 03:46:35.824" endtime="20220707 03:46:35.921"/>
</kw>
<status status="PASS" starttime="20220707 03:46:35.774" endtime="20220707 03:46:35.922"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 03:46:36.345" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 03:46:35.923" endtime="20220707 03:46:36.345"/>
</kw>
<msg timestamp="20220707 03:46:36.346" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 03:46:35.922" endtime="20220707 03:46:36.346"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:36.347" endtime="20220707 03:46:36.484"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:36.485" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 03:46:36.485" endtime="20220707 03:46:36.622"/>
</kw>
<status status="PASS" starttime="20220707 03:46:36.346" endtime="20220707 03:46:36.622"/>
</kw>
<status status="PASS" starttime="20220707 03:46:36.346" endtime="20220707 03:46:36.622"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:36.623" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 03:46:36.623" endtime="20220707 03:46:36.735"/>
</kw>
<status status="PASS" starttime="20220707 03:46:36.622" endtime="20220707 03:46:36.735"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:36.736" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 03:46:36.736" endtime="20220707 03:46:36.990"/>
</kw>
<status status="PASS" starttime="20220707 03:46:35.922" endtime="20220707 03:46:36.990"/>
</kw>
<status status="PASS" starttime="20220707 03:46:35.773" endtime="20220707 03:46:36.990"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:46:34.323" endtime="20220707 03:46:36.990"/>
</test>
<test id="s1-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:36.993" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 03:46:36.992" endtime="20220707 03:46:36.993"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:36.993" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 03:46:36.993" endtime="20220707 03:46:36.993"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:36.994" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 03:46:36.994" endtime="20220707 03:46:36.995"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:36.995" endtime="20220707 03:46:37.040"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:37.041" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 03:46:37.040" endtime="20220707 03:46:37.107"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:37.107" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 03:46:37.107" endtime="20220707 03:46:37.107"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:37.108" endtime="20220707 03:46:37.169"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:37.169" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:46:37.169" endtime="20220707 03:46:37.270"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 03:46:37.270" endtime="20220707 03:46:37.327"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:37.328" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:46:37.327" endtime="20220707 03:46:37.491"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:37.492" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 03:46:37.492" endtime="20220707 03:46:37.492"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:37.493" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 03:46:37.493" endtime="20220707 03:46:37.588"/>
</kw>
<status status="PASS" starttime="20220707 03:46:36.993" endtime="20220707 03:46:37.588"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:37.589" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220707 03:46:37.588" endtime="20220707 03:46:37.589"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:37.590" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 03:46:37.590" endtime="20220707 03:46:37.590"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:37.591" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220707 03:46:37.591" endtime="20220707 03:46:37.591"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:37.591" endtime="20220707 03:46:37.648"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220707 03:46:37.649" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 03:46:37.648" endtime="20220707 03:46:37.950"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 03:46:37.950" endtime="20220707 03:46:37.968"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:37.969" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220707 03:46:37.968" endtime="20220707 03:46:38.080"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:38.080" endtime="20220707 03:46:38.129"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:38.130" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220707 03:46:38.129" endtime="20220707 03:46:38.205"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 03:46:38.205" endtime="20220707 03:46:38.295"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:38.296" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220707 03:46:38.295" endtime="20220707 03:46:38.450"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:38.451" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220707 03:46:38.450" endtime="20220707 03:46:38.555"/>
</kw>
<status status="PASS" starttime="20220707 03:46:37.589" endtime="20220707 03:46:38.556"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:38.557" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220707 03:46:38.557" endtime="20220707 03:46:38.557"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 03:46:38.603" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220707 03:46:38.557" endtime="20220707 03:46:38.603"/>
</kw>
<status status="PASS" starttime="20220707 03:46:38.556" endtime="20220707 03:46:38.603"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:38.605" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220707 03:46:38.605" endtime="20220707 03:46:38.606"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:38.606" endtime="20220707 03:46:38.646"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:38.647" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220707 03:46:38.646" endtime="20220707 03:46:38.974"/>
</kw>
<status status="PASS" starttime="20220707 03:46:38.604" endtime="20220707 03:46:38.974"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 03:46:39.032" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 03:46:38.975" endtime="20220707 03:46:39.032"/>
</kw>
<msg timestamp="20220707 03:46:39.032" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 03:46:38.975" endtime="20220707 03:46:39.032"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:39.034" endtime="20220707 03:46:39.068"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:39.069" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 03:46:39.068" endtime="20220707 03:46:39.192"/>
</kw>
<status status="PASS" starttime="20220707 03:46:39.033" endtime="20220707 03:46:39.192"/>
</kw>
<status status="PASS" starttime="20220707 03:46:39.033" endtime="20220707 03:46:39.192"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:39.193" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 03:46:39.193" endtime="20220707 03:46:39.274"/>
</kw>
<status status="PASS" starttime="20220707 03:46:39.192" endtime="20220707 03:46:39.274"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:39.275" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 03:46:39.274" endtime="20220707 03:46:39.575"/>
</kw>
<status status="PASS" starttime="20220707 03:46:38.974" endtime="20220707 03:46:39.575"/>
</kw>
<status status="PASS" starttime="20220707 03:46:38.604" endtime="20220707 03:46:39.575"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 03:46:36.991" endtime="20220707 03:46:39.575"/>
</test>
<test id="s1-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:39.578" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 03:46:39.578" endtime="20220707 03:46:39.578"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:39.579" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 03:46:39.579" endtime="20220707 03:46:39.579"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:39.580" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 03:46:39.580" endtime="20220707 03:46:39.580"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:39.580" endtime="20220707 03:46:39.670"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:39.671" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 03:46:39.671" endtime="20220707 03:46:39.752"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:39.753" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 03:46:39.752" endtime="20220707 03:46:39.753"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:39.753" endtime="20220707 03:46:39.796"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:39.796" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:46:39.796" endtime="20220707 03:46:39.876"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 03:46:39.876" endtime="20220707 03:46:39.937"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:39.937" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:46:39.937" endtime="20220707 03:46:40.069"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:40.070" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 03:46:40.069" endtime="20220707 03:46:40.070"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:40.070" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 03:46:40.070" endtime="20220707 03:46:40.151"/>
</kw>
<status status="PASS" starttime="20220707 03:46:39.579" endtime="20220707 03:46:40.152"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:40.153" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 03:46:40.153" endtime="20220707 03:46:40.153"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:40.154" endtime="20220707 03:46:40.217"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:40.218" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 03:46:40.217" endtime="20220707 03:46:40.295"/>
</kw>
<status status="PASS" starttime="20220707 03:46:40.152" endtime="20220707 03:46:40.295"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 03:46:40.630" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 03:46:40.296" endtime="20220707 03:46:40.630"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 03:46:40.630" endtime="20220707 03:46:40.630"/>
</return>
<msg timestamp="20220707 03:46:40.631" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220707 03:46:40.295" endtime="20220707 03:46:40.631"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:40.632" endtime="20220707 03:46:40.690"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:40.691" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220707 03:46:40.691" endtime="20220707 03:46:40.829"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 03:46:40.829" endtime="20220707 03:46:40.922"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:40.923" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220707 03:46:40.923" endtime="20220707 03:46:41.152"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:41.153" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220707 03:46:41.152" endtime="20220707 03:46:41.348"/>
</kw>
<status status="PASS" starttime="20220707 03:46:40.631" endtime="20220707 03:46:41.348"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 03:46:41.371" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220707 03:46:41.349" endtime="20220707 03:46:41.371"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 03:46:41.371" endtime="20220707 03:46:41.371"/>
</return>
<msg timestamp="20220707 03:46:41.371" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220707 03:46:41.349" endtime="20220707 03:46:41.371"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 03:46:41.372" endtime="20220707 03:46:41.373"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 03:46:41.396" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 03:46:41.374" endtime="20220707 03:46:41.396"/>
</kw>
<msg timestamp="20220707 03:46:41.396" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 03:46:41.374" endtime="20220707 03:46:41.396"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:41.397" endtime="20220707 03:46:41.540"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:41.540" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 03:46:41.540" endtime="20220707 03:46:41.689"/>
</kw>
<status status="PASS" starttime="20220707 03:46:41.397" endtime="20220707 03:46:41.689"/>
</kw>
<status status="PASS" starttime="20220707 03:46:41.396" endtime="20220707 03:46:41.689"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:41.691" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 03:46:41.690" endtime="20220707 03:46:41.862"/>
</kw>
<status status="PASS" starttime="20220707 03:46:41.690" endtime="20220707 03:46:41.862"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:41.862" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 03:46:41.862" endtime="20220707 03:46:42.243"/>
</kw>
<status status="PASS" starttime="20220707 03:46:41.373" endtime="20220707 03:46:42.243"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 03:46:39.577" endtime="20220707 03:46:42.243"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:42.246" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 03:46:42.245" endtime="20220707 03:46:42.246"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:42.246" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 03:46:42.246" endtime="20220707 03:46:42.246"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:42.248" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220707 03:46:42.247" endtime="20220707 03:46:42.248"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 03:46:42.295" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 03:46:42.248" endtime="20220707 03:46:42.295"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 03:46:42.295" endtime="20220707 03:46:42.295"/>
</return>
<msg timestamp="20220707 03:46:42.296" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220707 03:46:42.246" endtime="20220707 03:46:42.296"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:42.297" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 03:46:42.297" endtime="20220707 03:46:42.297"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:42.297" endtime="20220707 03:46:42.339"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:42.340" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 03:46:42.339" endtime="20220707 03:46:42.457"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:42.458" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 03:46:42.458" endtime="20220707 03:46:42.458"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:42.459" endtime="20220707 03:46:42.504"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:42.505" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:46:42.504" endtime="20220707 03:46:42.579"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 03:46:42.579" endtime="20220707 03:46:42.627"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:42.627" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:46:42.627" endtime="20220707 03:46:42.753"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:42.754" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 03:46:42.753" endtime="20220707 03:46:42.754"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:42.754" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 03:46:42.754" endtime="20220707 03:46:42.870"/>
</kw>
<status status="PASS" starttime="20220707 03:46:42.296" endtime="20220707 03:46:42.870"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:42.871" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 03:46:42.871" endtime="20220707 03:46:42.872"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:42.872" endtime="20220707 03:46:42.952"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:42.952" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 03:46:42.952" endtime="20220707 03:46:43.104"/>
</kw>
<status status="PASS" starttime="20220707 03:46:42.870" endtime="20220707 03:46:43.104"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 03:46:43.529" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 03:46:43.105" endtime="20220707 03:46:43.529"/>
</kw>
<msg timestamp="20220707 03:46:43.530" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 03:46:43.105" endtime="20220707 03:46:43.530"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:43.531" endtime="20220707 03:46:43.622"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:43.623" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 03:46:43.623" endtime="20220707 03:46:43.761"/>
</kw>
<status status="PASS" starttime="20220707 03:46:43.530" endtime="20220707 03:46:43.761"/>
</kw>
<status status="PASS" starttime="20220707 03:46:43.530" endtime="20220707 03:46:43.761"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:43.762" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 03:46:43.762" endtime="20220707 03:46:43.876"/>
</kw>
<status status="PASS" starttime="20220707 03:46:43.761" endtime="20220707 03:46:43.876"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:43.877" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 03:46:43.876" endtime="20220707 03:46:44.246"/>
</kw>
<status status="PASS" starttime="20220707 03:46:43.104" endtime="20220707 03:46:44.246"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:44.248" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220707 03:46:44.247" endtime="20220707 03:46:44.248"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 03:46:44.292" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 03:46:44.248" endtime="20220707 03:46:44.292"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 03:46:44.292" endtime="20220707 03:46:44.292"/>
</return>
<msg timestamp="20220707 03:46:44.292" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220707 03:46:44.247" endtime="20220707 03:46:44.292"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 03:46:44.293" endtime="20220707 03:46:44.293"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:46:42.244" endtime="20220707 03:46:44.293"/>
</test>
<test id="s1-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:44.296" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 03:46:44.296" endtime="20220707 03:46:44.296"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:44.296" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 03:46:44.296" endtime="20220707 03:46:44.296"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:44.298" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 03:46:44.297" endtime="20220707 03:46:44.298"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:44.298" endtime="20220707 03:46:44.334"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:44.335" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 03:46:44.334" endtime="20220707 03:46:44.500"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:44.501" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 03:46:44.500" endtime="20220707 03:46:44.501"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:44.501" endtime="20220707 03:46:44.553"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:44.554" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:46:44.554" endtime="20220707 03:46:44.658"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 03:46:44.658" endtime="20220707 03:46:45.075"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:45.076" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:46:45.076" endtime="20220707 03:46:45.348"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:45.349" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 03:46:45.348" endtime="20220707 03:46:45.349"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:45.350" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 03:46:45.350" endtime="20220707 03:46:45.509"/>
</kw>
<status status="PASS" starttime="20220707 03:46:44.296" endtime="20220707 03:46:45.509"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:45.510" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220707 03:46:45.509" endtime="20220707 03:46:45.510"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:45.511" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 03:46:45.511" endtime="20220707 03:46:45.511"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:45.512" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220707 03:46:45.511" endtime="20220707 03:46:45.512"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:45.512" endtime="20220707 03:46:45.614"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220707 03:46:45.615" endtime="20220707 03:46:46.431"/>
</kw>
<status status="PASS" starttime="20220707 03:46:45.510" endtime="20220707 03:46:46.432"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:46.433" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 03:46:46.432" endtime="20220707 03:46:46.433"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 03:46:46.597" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220707 03:46:46.433" endtime="20220707 03:46:46.597"/>
</kw>
<status status="PASS" starttime="20220707 03:46:46.432" endtime="20220707 03:46:46.597"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:46.611" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 03:46:46.611" endtime="20220707 03:46:46.611"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:46.612" endtime="20220707 03:46:46.879"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:46.880" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 03:46:46.879" endtime="20220707 03:46:47.182"/>
</kw>
<status status="PASS" starttime="20220707 03:46:46.598" endtime="20220707 03:46:47.182"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 03:46:47.654" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 03:46:47.183" endtime="20220707 03:46:47.654"/>
</kw>
<msg timestamp="20220707 03:46:47.654" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 03:46:47.183" endtime="20220707 03:46:47.654"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:47.655" endtime="20220707 03:46:47.732"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:47.732" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 03:46:47.732" endtime="20220707 03:46:47.877"/>
</kw>
<status status="PASS" starttime="20220707 03:46:47.655" endtime="20220707 03:46:47.877"/>
</kw>
<status status="PASS" starttime="20220707 03:46:47.654" endtime="20220707 03:46:47.877"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:47.878" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 03:46:47.878" endtime="20220707 03:46:48.010"/>
</kw>
<status status="PASS" starttime="20220707 03:46:47.877" endtime="20220707 03:46:48.010"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:48.011" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 03:46:48.011" endtime="20220707 03:46:48.321"/>
</kw>
<status status="PASS" starttime="20220707 03:46:47.182" endtime="20220707 03:46:48.322"/>
</kw>
<status status="PASS" starttime="20220707 03:46:46.597" endtime="20220707 03:46:48.322"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 03:46:44.294" endtime="20220707 03:46:48.322"/>
</test>
<test id="s1-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:46:48.326" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:46:48.325" endtime="20220707 03:46:48.326"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:46:48.326" endtime="20220707 03:46:48.326"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:48.328" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:46:48.326" endtime="20220707 03:46:48.328"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:46:48.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:48.329" endtime="20220707 03:46:48.530"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:48.531" endtime="20220707 03:46:48.531"/>
</return>
<msg timestamp="20220707 03:46:48.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:48.325" endtime="20220707 03:46:48.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:48.531" endtime="20220707 03:46:48.531"/>
</return>
<msg timestamp="20220707 03:46:48.531" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:48.324" endtime="20220707 03:46:48.531"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:46:48.532" endtime="20220707 03:46:48.607"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:48.608" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220707 03:46:48.607" endtime="20220707 03:46:48.934"/>
</kw>
<status status="PASS" starttime="20220707 03:46:48.532" endtime="20220707 03:46:48.934"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:48.935" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220707 03:46:48.935" endtime="20220707 03:46:48.935"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:48.935" endtime="20220707 03:46:49.201"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:49.202" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220707 03:46:49.201" endtime="20220707 03:46:49.441"/>
</kw>
<status status="PASS" starttime="20220707 03:46:48.934" endtime="20220707 03:46:49.441"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:49.442" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 03:46:49.441" endtime="20220707 03:46:49.442"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 03:46:49.442" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220707 03:46:49.442" endtime="20220707 03:46:49.442"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:49.444" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 03:46:49.443" endtime="20220707 03:46:49.444"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:49.444" endtime="20220707 03:46:50.290"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:50.291" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 03:46:50.291" endtime="20220707 03:46:50.385"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:50.386" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 03:46:50.385" endtime="20220707 03:46:50.386"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:50.386" endtime="20220707 03:46:50.442"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:50.443" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:46:50.443" endtime="20220707 03:46:50.521"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 03:46:50.522" endtime="20220707 03:46:50.568"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:50.569" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:46:50.569" endtime="20220707 03:46:50.685"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:50.686" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 03:46:50.685" endtime="20220707 03:46:50.686"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:50.686" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 03:46:50.686" endtime="20220707 03:46:50.769"/>
</kw>
<status status="PASS" starttime="20220707 03:46:49.442" endtime="20220707 03:46:50.769"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:50.771" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220707 03:46:50.770" endtime="20220707 03:46:50.771"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:50.771" endtime="20220707 03:46:50.835"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:50.835" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220707 03:46:50.835" endtime="20220707 03:46:50.908"/>
</kw>
<status status="PASS" starttime="20220707 03:46:50.770" endtime="20220707 03:46:50.908"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:50.909" endtime="20220707 03:46:51.304"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:51.305" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220707 03:46:51.304" endtime="20220707 03:46:51.431"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220707 03:46:51.432" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220707 03:46:51.431" endtime="20220707 03:46:51.607"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:46:51.607" endtime="20220707 03:46:51.896"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:51.897" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220707 03:46:51.896" endtime="20220707 03:46:52.117"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 03:46:52.117" endtime="20220707 03:46:52.147"/>
</kw>
<status status="PASS" starttime="20220707 03:46:50.908" endtime="20220707 03:46:52.147"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:52.149" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220707 03:46:52.148" endtime="20220707 03:46:52.149"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 03:46:52.173" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 03:46:52.149" endtime="20220707 03:46:52.173"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 03:46:52.173" endtime="20220707 03:46:52.173"/>
</return>
<msg timestamp="20220707 03:46:52.174" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220707 03:46:52.148" endtime="20220707 03:46:52.174"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220707 03:46:52.174" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220707 03:46:52.174" endtime="20220707 03:46:52.174"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:46:52.174" endtime="20220707 03:46:52.175"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 03:46:52.175" endtime="20220707 03:46:52.269"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:52.273" level="INFO">${url} = boards/62c657285e3c4b03f887bfd4</msg>
<status status="PASS" starttime="20220707 03:46:52.272" endtime="20220707 03:46:52.273"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:46:52.357" level="INFO">${response} = None</msg>
<msg timestamp="20220707 03:46:52.357" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220707 03:46:52.273" endtime="20220707 03:46:52.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:52.357" endtime="20220707 03:46:52.357"/>
</return>
<msg timestamp="20220707 03:46:52.358" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220707 03:46:52.272" endtime="20220707 03:46:52.358"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:52.358" endtime="20220707 03:46:52.358"/>
</return>
<status status="FAIL" starttime="20220707 03:46:52.270" endtime="20220707 03:46:52.358"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:55.362" level="INFO">${url} = boards/62c657285e3c4b03f887bfd4</msg>
<status status="PASS" starttime="20220707 03:46:55.362" endtime="20220707 03:46:55.362"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:46:55.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:55.362" endtime="20220707 03:46:55.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:55.751" endtime="20220707 03:46:55.751"/>
</return>
<msg timestamp="20220707 03:46:55.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:55.361" endtime="20220707 03:46:55.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:55.751" endtime="20220707 03:46:55.752"/>
</return>
<status status="PASS" starttime="20220707 03:46:55.359" endtime="20220707 03:46:55.752"/>
</kw>
<status status="PASS" starttime="20220707 03:46:52.269" endtime="20220707 03:46:55.752"/>
</kw>
<status status="PASS" starttime="20220707 03:46:52.175" endtime="20220707 03:46:55.752"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 03:46:48.323" endtime="20220707 03:46:55.752"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:55.756" level="INFO">${url} = boards/62c65710e648c61eccf0369a</msg>
<status status="PASS" starttime="20220707 03:46:55.755" endtime="20220707 03:46:55.756"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:46:56.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:55.756" endtime="20220707 03:46:56.131"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:56.131" endtime="20220707 03:46:56.131"/>
</return>
<msg timestamp="20220707 03:46:56.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:55.755" endtime="20220707 03:46:56.132"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:56.132" endtime="20220707 03:46:56.132"/>
</return>
<status status="PASS" starttime="20220707 03:46:55.754" endtime="20220707 03:46:56.132"/>
</kw>
<status status="PASS" starttime="20220707 03:46:55.753" endtime="20220707 03:46:56.132"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 03:46:56.132" endtime="20220707 03:46:56.134"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220707 03:46:56.134" endtime="20220707 03:46:56.134"/>
</kw>
<status status="PASS" starttime="20220707 03:46:55.753" endtime="20220707 03:46:56.134"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220707 03:46:24.746" endtime="20220707 03:46:56.134"/>
</suite>
<suite id="s1-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 03:46:56.158" endtime="20220707 03:46:56.158"/>
</kw>
<status status="PASS" starttime="20220707 03:46:56.157" endtime="20220707 03:46:56.158"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:46:56.160" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:46:56.160" endtime="20220707 03:46:56.160"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:46:56.160" endtime="20220707 03:46:56.161"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:46:56.162" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:46:56.161" endtime="20220707 03:46:56.162"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:46:56.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:56.162" endtime="20220707 03:46:56.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:56.493" endtime="20220707 03:46:56.493"/>
</return>
<msg timestamp="20220707 03:46:56.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:56.159" endtime="20220707 03:46:56.494"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:46:56.494" endtime="20220707 03:46:56.494"/>
</return>
<msg timestamp="20220707 03:46:56.494" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:46:56.159" endtime="20220707 03:46:56.494"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 03:46:56.496" level="INFO">${TEST_SUITE_BOARD_ID} = 62c65730643942415cd9e86d</msg>
<status status="PASS" starttime="20220707 03:46:56.494" endtime="20220707 03:46:56.496"/>
</kw>
<status status="PASS" starttime="20220707 03:46:56.159" endtime="20220707 03:46:56.496"/>
</kw>
<status status="PASS" starttime="20220707 03:46:56.157" endtime="20220707 03:46:56.496"/>
</kw>
<test id="s1-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 03:46:56.499" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 03:46:56.498" endtime="20220707 03:46:57.912"/>
</kw>
<status status="PASS" starttime="20220707 03:46:56.498" endtime="20220707 03:46:57.913"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:46:57.913" endtime="20220707 03:46:57.913"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:46:57.913" endtime="20220707 03:46:57.913"/>
</branch>
<status status="PASS" starttime="20220707 03:46:56.498" endtime="20220707 03:46:57.913"/>
</if>
<status status="PASS" starttime="20220707 03:46:56.497" endtime="20220707 03:46:57.913"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 03:46:57.913" endtime="20220707 03:46:58.023"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:46:58.040" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:46:58.024" endtime="20220707 03:46:58.040"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:46:58.041" endtime="20220707 03:46:58.041"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:46:58.041" endtime="20220707 03:46:58.041"/>
</branch>
<status status="PASS" starttime="20220707 03:46:58.040" endtime="20220707 03:46:58.041"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:46:58.042" endtime="20220707 03:46:58.082"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:58.083" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 03:46:58.083" endtime="20220707 03:46:58.217"/>
</kw>
<status status="PASS" starttime="20220707 03:46:58.041" endtime="20220707 03:46:58.217"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 03:46:58.217" endtime="20220707 03:46:58.972"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:46:58.981" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:46:58.972" endtime="20220707 03:46:58.981"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:46:58.981" endtime="20220707 03:46:59.098"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:46:59.098" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 03:46:59.098" endtime="20220707 03:47:00.495"/>
</kw>
<status status="PASS" starttime="20220707 03:46:58.981" endtime="20220707 03:47:00.495"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:47:00.495" endtime="20220707 03:47:00.495"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:00.495" endtime="20220707 03:47:00.495"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:00.495" endtime="20220707 03:47:00.495"/>
</branch>
<status status="PASS" starttime="20220707 03:46:58.981" endtime="20220707 03:47:00.495"/>
</if>
<status status="PASS" starttime="20220707 03:46:58.972" endtime="20220707 03:47:00.496"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 03:47:00.496" endtime="20220707 03:47:00.538"/>
</kw>
<status status="PASS" starttime="20220707 03:47:00.496" endtime="20220707 03:47:00.538"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:00.539" endtime="20220707 03:47:00.597"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:00.598" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 03:47:00.657" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 03:47:00.758" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 03:47:00.597" endtime="20220707 03:47:00.758"/>
</kw>
<status status="PASS" starttime="20220707 03:47:00.538" endtime="20220707 03:47:00.758"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:47:00.782" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c657...</msg>
<status status="PASS" starttime="20220707 03:47:00.759" endtime="20220707 03:47:00.782"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:47:00.783" endtime="20220707 03:47:00.783"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:00.783" endtime="20220707 03:47:00.783"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:00.783" endtime="20220707 03:47:00.783"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:00.783" endtime="20220707 03:47:00.852"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:00.853" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 03:47:00.852" endtime="20220707 03:47:00.984"/>
</kw>
<status status="PASS" starttime="20220707 03:47:00.783" endtime="20220707 03:47:00.984"/>
</branch>
<status status="PASS" starttime="20220707 03:47:00.782" endtime="20220707 03:47:00.985"/>
</if>
<status status="PASS" starttime="20220707 03:47:00.759" endtime="20220707 03:47:00.985"/>
</kw>
<status status="PASS" starttime="20220707 03:46:58.023" endtime="20220707 03:47:00.985"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:00.986" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 03:47:00.986" endtime="20220707 03:47:00.986"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:00.986" endtime="20220707 03:47:05.762"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:05.762" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 03:47:05.762" endtime="20220707 03:47:06.323"/>
</kw>
<status status="PASS" starttime="20220707 03:47:00.985" endtime="20220707 03:47:06.323"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:06.325" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 03:47:06.324" endtime="20220707 03:47:06.325"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:06.325" endtime="20220707 03:47:07.046"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:07.047" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 03:47:07.046" endtime="20220707 03:47:07.203"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:07.204" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 03:47:07.203" endtime="20220707 03:47:07.204"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:07.204" endtime="20220707 03:47:07.263"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:07.264" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:47:07.263" endtime="20220707 03:47:07.331"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 03:47:07.332" endtime="20220707 03:47:07.417"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:07.418" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:47:07.418" endtime="20220707 03:47:07.560"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:07.561" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 03:47:07.561" endtime="20220707 03:47:07.561"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:07.562" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 03:47:07.561" endtime="20220707 03:47:07.678"/>
</kw>
<status status="PASS" starttime="20220707 03:47:06.324" endtime="20220707 03:47:07.678"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:07.679" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220707 03:47:07.679" endtime="20220707 03:47:07.679"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:07.680" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220707 03:47:07.680" endtime="20220707 03:47:07.680"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:07.680" endtime="20220707 03:47:07.794"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220707 03:47:12.795" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220707 03:47:07.794" endtime="20220707 03:47:12.795"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220707 03:47:12.795" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220707 03:47:12.795" endtime="20220707 03:47:13.109"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220707 03:47:18.110" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220707 03:47:13.109" endtime="20220707 03:47:18.110"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 03:47:18.110" endtime="20220707 03:47:18.133"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:18.134" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220707 03:47:18.134" endtime="20220707 03:47:18.241"/>
</kw>
<status status="PASS" starttime="20220707 03:47:07.678" endtime="20220707 03:47:18.241"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:18.242" endtime="20220707 03:47:18.324"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:18.325" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220707 03:47:18.324" endtime="20220707 03:47:18.439"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:18.439" endtime="20220707 03:47:18.534"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:18.535" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220707 03:47:18.534" endtime="20220707 03:47:18.606"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:18.607" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220707 03:47:18.606" endtime="20220707 03:47:18.710"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:18.710" endtime="20220707 03:47:18.751"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:47:18.752" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220707 03:47:19.036" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 03:47:19.036" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 03:47:18.751" endtime="20220707 03:47:19.075"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:47:19.076" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220707 03:47:19.076" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220707 03:47:19.076" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220707 03:47:19.076" endtime="20220707 03:47:19.111"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:47:19.112" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220707 03:47:19.112" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220707 03:47:19.112" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220707 03:47:19.112" endtime="20220707 03:47:19.149"/>
</kw>
<status status="PASS" starttime="20220707 03:47:18.241" endtime="20220707 03:47:19.150"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:19.151" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 03:47:19.150" endtime="20220707 03:47:19.151"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:19.151" endtime="20220707 03:47:19.191"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:19.192" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 03:47:19.191" endtime="20220707 03:47:19.278"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:19.279" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 03:47:19.278" endtime="20220707 03:47:19.279"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:19.279" endtime="20220707 03:47:19.327"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:19.328" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:47:19.327" endtime="20220707 03:47:19.395"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 03:47:19.395" endtime="20220707 03:47:19.440"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:19.440" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:47:19.440" endtime="20220707 03:47:19.518"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:19.519" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 03:47:19.519" endtime="20220707 03:47:19.519"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:19.520" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 03:47:19.520" endtime="20220707 03:47:19.603"/>
</kw>
<status status="PASS" starttime="20220707 03:47:19.150" endtime="20220707 03:47:19.604"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:19.605" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 03:47:19.604" endtime="20220707 03:47:19.605"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:19.605" endtime="20220707 03:47:19.668"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:19.668" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 03:47:19.668" endtime="20220707 03:47:19.742"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:19.743" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 03:47:19.743" endtime="20220707 03:47:19.743"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:19.743" endtime="20220707 03:47:19.782"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:19.783" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:47:19.782" endtime="20220707 03:47:19.871"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 03:47:19.872" endtime="20220707 03:47:19.942"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:19.943" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 03:47:19.942" endtime="20220707 03:47:20.070"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:20.071" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 03:47:20.071" endtime="20220707 03:47:20.071"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:20.072" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 03:47:20.071" endtime="20220707 03:47:20.164"/>
</kw>
<status status="PASS" starttime="20220707 03:47:19.604" endtime="20220707 03:47:20.164"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:20.165" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220707 03:47:20.165" endtime="20220707 03:47:20.307"/>
</kw>
<status status="PASS" starttime="20220707 03:47:20.164" endtime="20220707 03:47:20.307"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:20.307" endtime="20220707 03:47:20.668"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:20.668" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220707 03:47:20.668" endtime="20220707 03:47:20.852"/>
</kw>
<status status="PASS" starttime="20220707 03:47:20.307" endtime="20220707 03:47:20.852"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:20.853" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220707 03:47:20.853" endtime="20220707 03:47:20.853"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 03:47:20.916" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220707 03:47:20.854" endtime="20220707 03:47:20.916"/>
</kw>
<status status="PASS" starttime="20220707 03:47:20.852" endtime="20220707 03:47:20.916"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:20.917" endtime="20220707 03:47:20.961"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:20.963" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220707 03:47:20.961" endtime="20220707 03:47:21.111"/>
</kw>
<status status="PASS" starttime="20220707 03:47:20.916" endtime="20220707 03:47:21.111"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:21.112" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220707 03:47:21.112" endtime="20220707 03:47:21.112"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 03:47:21.157" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220707 03:47:21.113" endtime="20220707 03:47:21.157"/>
</kw>
<status status="PASS" starttime="20220707 03:47:21.111" endtime="20220707 03:47:21.157"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 03:47:21.158" endtime="20220707 03:47:21.307"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:46:56.497" endtime="20220707 03:47:21.307"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:21.312" level="INFO">${url} = boards/62c65730643942415cd9e86d</msg>
<status status="PASS" starttime="20220707 03:47:21.312" endtime="20220707 03:47:21.312"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:47:21.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:47:21.312" endtime="20220707 03:47:21.765"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:47:21.765" endtime="20220707 03:47:21.765"/>
</return>
<msg timestamp="20220707 03:47:21.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:47:21.311" endtime="20220707 03:47:21.765"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:47:21.765" endtime="20220707 03:47:21.765"/>
</return>
<status status="PASS" starttime="20220707 03:47:21.311" endtime="20220707 03:47:21.766"/>
</kw>
<status status="PASS" starttime="20220707 03:47:21.310" endtime="20220707 03:47:21.766"/>
</kw>
<status status="PASS" starttime="20220707 03:47:21.310" endtime="20220707 03:47:21.766"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 03:47:21.766" endtime="20220707 03:47:21.767"/>
</kw>
<status status="PASS" starttime="20220707 03:47:21.309" endtime="20220707 03:47:21.767"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220707 03:46:56.137" endtime="20220707 03:47:21.767"/>
</suite>
<suite id="s1-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 03:47:21.786" endtime="20220707 03:47:21.787"/>
</kw>
<status status="PASS" starttime="20220707 03:47:21.786" endtime="20220707 03:47:21.787"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:47:21.788" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:47:21.788" endtime="20220707 03:47:21.789"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:47:21.789" endtime="20220707 03:47:21.789"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:21.790" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:47:21.789" endtime="20220707 03:47:21.790"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:47:22.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:47:21.791" endtime="20220707 03:47:22.130"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:47:22.130" endtime="20220707 03:47:22.130"/>
</return>
<msg timestamp="20220707 03:47:22.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:47:21.788" endtime="20220707 03:47:22.131"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:47:22.131" endtime="20220707 03:47:22.131"/>
</return>
<msg timestamp="20220707 03:47:22.131" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:47:21.787" endtime="20220707 03:47:22.131"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 03:47:22.133" level="INFO">${TEST_SUITE_BOARD_ID} = 62c65749e6c1f91490be7d9a</msg>
<status status="PASS" starttime="20220707 03:47:22.131" endtime="20220707 03:47:22.133"/>
</kw>
<status status="PASS" starttime="20220707 03:47:21.787" endtime="20220707 03:47:22.133"/>
</kw>
<status status="PASS" starttime="20220707 03:47:21.785" endtime="20220707 03:47:22.133"/>
</kw>
<test id="s1-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 03:47:22.135" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 03:47:22.135" endtime="20220707 03:47:23.472"/>
</kw>
<status status="PASS" starttime="20220707 03:47:22.135" endtime="20220707 03:47:23.472"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:23.472" endtime="20220707 03:47:23.472"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:23.472" endtime="20220707 03:47:23.472"/>
</branch>
<status status="PASS" starttime="20220707 03:47:22.135" endtime="20220707 03:47:23.472"/>
</if>
<status status="PASS" starttime="20220707 03:47:22.134" endtime="20220707 03:47:23.473"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 03:47:23.473" endtime="20220707 03:47:23.587"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:47:23.604" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:47:23.588" endtime="20220707 03:47:23.604"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:23.605" endtime="20220707 03:47:23.605"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:23.605" endtime="20220707 03:47:23.605"/>
</branch>
<status status="PASS" starttime="20220707 03:47:23.605" endtime="20220707 03:47:23.605"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:23.606" endtime="20220707 03:47:23.657"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:23.658" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 03:47:23.658" endtime="20220707 03:47:23.787"/>
</kw>
<status status="PASS" starttime="20220707 03:47:23.605" endtime="20220707 03:47:23.787"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 03:47:23.787" endtime="20220707 03:47:24.557"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:47:24.572" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:47:24.558" endtime="20220707 03:47:24.573"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:24.573" endtime="20220707 03:47:24.624"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:24.625" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 03:47:24.624" endtime="20220707 03:47:25.889"/>
</kw>
<status status="PASS" starttime="20220707 03:47:24.573" endtime="20220707 03:47:25.889"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:47:25.889" endtime="20220707 03:47:25.889"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:25.889" endtime="20220707 03:47:25.889"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:25.889" endtime="20220707 03:47:25.889"/>
</branch>
<status status="PASS" starttime="20220707 03:47:24.573" endtime="20220707 03:47:25.889"/>
</if>
<status status="PASS" starttime="20220707 03:47:24.557" endtime="20220707 03:47:25.890"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 03:47:25.890" endtime="20220707 03:47:25.930"/>
</kw>
<status status="PASS" starttime="20220707 03:47:25.890" endtime="20220707 03:47:25.931"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:25.931" endtime="20220707 03:47:25.989"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:25.990" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 03:47:26.054" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 03:47:26.144" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 03:47:25.989" endtime="20220707 03:47:26.144"/>
</kw>
<status status="PASS" starttime="20220707 03:47:25.931" endtime="20220707 03:47:26.144"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:47:26.164" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c657...</msg>
<status status="PASS" starttime="20220707 03:47:26.145" endtime="20220707 03:47:26.164"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:47:26.164" endtime="20220707 03:47:26.164"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:26.164" endtime="20220707 03:47:26.164"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:26.164" endtime="20220707 03:47:26.164"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:26.165" endtime="20220707 03:47:26.255"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:26.256" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 03:47:26.256" endtime="20220707 03:47:26.407"/>
</kw>
<status status="PASS" starttime="20220707 03:47:26.165" endtime="20220707 03:47:26.407"/>
</branch>
<status status="PASS" starttime="20220707 03:47:26.164" endtime="20220707 03:47:26.407"/>
</if>
<status status="PASS" starttime="20220707 03:47:26.145" endtime="20220707 03:47:26.407"/>
</kw>
<status status="PASS" starttime="20220707 03:47:23.587" endtime="20220707 03:47:26.407"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:26.409" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 03:47:26.408" endtime="20220707 03:47:26.409"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:26.409" endtime="20220707 03:47:31.005"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:31.005" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 03:47:31.005" endtime="20220707 03:47:31.567"/>
</kw>
<status status="PASS" starttime="20220707 03:47:26.408" endtime="20220707 03:47:31.567"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 03:47:31.568" endtime="20220707 03:47:32.230"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:32.231" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220707 03:47:32.230" endtime="20220707 03:47:32.452"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:32.452" endtime="20220707 03:47:32.526"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:32.527" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220707 03:47:32.526" endtime="20220707 03:47:32.739"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:47:32.740" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 03:47:33.129" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 03:47:33.129" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 03:47:32.739" endtime="20220707 03:47:33.170"/>
</kw>
<status status="PASS" starttime="20220707 03:47:31.567" endtime="20220707 03:47:33.170"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:33.172" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220707 03:47:33.171" endtime="20220707 03:47:33.172"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:33.172" endtime="20220707 03:47:33.223"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220707 03:47:33.237" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220707 03:47:33.223" endtime="20220707 03:47:33.237"/>
</kw>
<status status="PASS" starttime="20220707 03:47:33.171" endtime="20220707 03:47:33.237"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:33.239" endtime="20220707 03:47:33.293"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:33.294" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 03:47:33.294" endtime="20220707 03:47:33.411"/>
</kw>
<status status="PASS" starttime="20220707 03:47:33.293" endtime="20220707 03:47:33.411"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:33.412" endtime="20220707 03:47:33.492"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:33.493" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220707 03:47:33.493" endtime="20220707 03:47:33.577"/>
</kw>
<status status="PASS" starttime="20220707 03:47:33.492" endtime="20220707 03:47:33.577"/>
</kw>
<status status="PASS" starttime="20220707 03:47:33.239" endtime="20220707 03:47:33.578"/>
</kw>
<status status="PASS" starttime="20220707 03:47:33.238" endtime="20220707 03:47:33.578"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 03:47:33.578" endtime="20220707 03:47:33.705"/>
</kw>
<status status="PASS" starttime="20220707 03:47:33.238" endtime="20220707 03:47:33.705"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:47:22.133" endtime="20220707 03:47:33.705"/>
</test>
<test id="s1-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 03:47:33.709" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 03:47:33.709" endtime="20220707 03:47:35.160"/>
</kw>
<status status="PASS" starttime="20220707 03:47:33.708" endtime="20220707 03:47:35.160"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:35.161" endtime="20220707 03:47:35.161"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:35.160" endtime="20220707 03:47:35.161"/>
</branch>
<status status="PASS" starttime="20220707 03:47:33.708" endtime="20220707 03:47:35.161"/>
</if>
<status status="PASS" starttime="20220707 03:47:33.708" endtime="20220707 03:47:35.161"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 03:47:35.161" endtime="20220707 03:47:35.284"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:47:35.294" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:47:35.285" endtime="20220707 03:47:35.294"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:35.295" endtime="20220707 03:47:35.295"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:35.295" endtime="20220707 03:47:35.295"/>
</branch>
<status status="PASS" starttime="20220707 03:47:35.294" endtime="20220707 03:47:35.295"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:35.296" endtime="20220707 03:47:35.348"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:35.349" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 03:47:35.348" endtime="20220707 03:47:35.476"/>
</kw>
<status status="PASS" starttime="20220707 03:47:35.295" endtime="20220707 03:47:35.476"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 03:47:35.476" endtime="20220707 03:47:36.243"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:47:36.256" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:47:36.244" endtime="20220707 03:47:36.256"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:36.257" endtime="20220707 03:47:36.340"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:36.341" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 03:47:36.341" endtime="20220707 03:47:37.543"/>
</kw>
<status status="PASS" starttime="20220707 03:47:36.256" endtime="20220707 03:47:37.543"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:47:37.543" endtime="20220707 03:47:37.543"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:37.543" endtime="20220707 03:47:37.544"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:37.543" endtime="20220707 03:47:37.544"/>
</branch>
<status status="PASS" starttime="20220707 03:47:36.256" endtime="20220707 03:47:37.544"/>
</if>
<status status="PASS" starttime="20220707 03:47:36.243" endtime="20220707 03:47:37.544"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 03:47:37.544" endtime="20220707 03:47:37.577"/>
</kw>
<status status="PASS" starttime="20220707 03:47:37.544" endtime="20220707 03:47:37.578"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:37.578" endtime="20220707 03:47:37.636"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:37.636" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 03:47:37.708" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 03:47:37.798" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 03:47:37.636" endtime="20220707 03:47:37.798"/>
</kw>
<status status="PASS" starttime="20220707 03:47:37.578" endtime="20220707 03:47:37.798"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:47:37.812" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c657...</msg>
<status status="PASS" starttime="20220707 03:47:37.799" endtime="20220707 03:47:37.812"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:47:37.812" endtime="20220707 03:47:37.812"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:37.812" endtime="20220707 03:47:37.813"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:37.812" endtime="20220707 03:47:37.813"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:37.813" endtime="20220707 03:47:37.904"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:37.905" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 03:47:37.904" endtime="20220707 03:47:38.031"/>
</kw>
<status status="PASS" starttime="20220707 03:47:37.813" endtime="20220707 03:47:38.031"/>
</branch>
<status status="PASS" starttime="20220707 03:47:37.812" endtime="20220707 03:47:38.031"/>
</if>
<status status="PASS" starttime="20220707 03:47:37.798" endtime="20220707 03:47:38.031"/>
</kw>
<status status="PASS" starttime="20220707 03:47:35.284" endtime="20220707 03:47:38.031"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:38.032" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 03:47:38.032" endtime="20220707 03:47:38.032"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:38.032" endtime="20220707 03:47:42.908"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:42.908" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 03:47:42.908" endtime="20220707 03:47:43.457"/>
</kw>
<status status="PASS" starttime="20220707 03:47:38.031" endtime="20220707 03:47:43.457"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 03:47:43.458" endtime="20220707 03:47:44.102"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:44.103" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220707 03:47:44.103" endtime="20220707 03:47:44.336"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:44.336" endtime="20220707 03:47:44.406"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:44.406" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220707 03:47:44.406" endtime="20220707 03:47:44.590"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:47:44.591" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 03:47:44.932" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 03:47:44.932" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 03:47:44.590" endtime="20220707 03:47:44.980"/>
</kw>
<status status="PASS" starttime="20220707 03:47:43.457" endtime="20220707 03:47:44.980"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:44.982" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220707 03:47:44.981" endtime="20220707 03:47:44.982"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:44.982" endtime="20220707 03:47:45.076"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:45.076" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220707 03:47:45.076" endtime="20220707 03:47:45.145"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:45.145" endtime="20220707 03:47:45.223"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:47:45.224" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 03:47:45.513" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220707 03:47:45.514" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220707 03:47:45.223" endtime="20220707 03:47:45.531"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:45.532" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220707 03:47:45.531" endtime="20220707 03:47:45.685"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:47:45.686" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220707 03:47:45.687" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220707 03:47:45.687" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 03:47:45.686" endtime="20220707 03:47:45.708"/>
</kw>
<status status="PASS" starttime="20220707 03:47:44.980" endtime="20220707 03:47:45.708"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:45.710" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220707 03:47:45.709" endtime="20220707 03:47:45.710"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:45.710" endtime="20220707 03:47:45.775"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220707 03:47:45.789" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220707 03:47:45.775" endtime="20220707 03:47:45.789"/>
</kw>
<status status="PASS" starttime="20220707 03:47:45.708" endtime="20220707 03:47:45.790"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:45.791" endtime="20220707 03:47:45.841"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:45.843" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 03:47:45.842" endtime="20220707 03:47:45.951"/>
</kw>
<status status="PASS" starttime="20220707 03:47:45.842" endtime="20220707 03:47:45.952"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:45.952" endtime="20220707 03:47:46.059"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:46.060" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220707 03:47:46.060" endtime="20220707 03:47:46.189"/>
</kw>
<status status="PASS" starttime="20220707 03:47:46.059" endtime="20220707 03:47:46.189"/>
</kw>
<status status="PASS" starttime="20220707 03:47:45.791" endtime="20220707 03:47:46.189"/>
</kw>
<status status="PASS" starttime="20220707 03:47:45.790" endtime="20220707 03:47:46.189"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 03:47:46.189" endtime="20220707 03:47:46.326"/>
</kw>
<status status="PASS" starttime="20220707 03:47:45.790" endtime="20220707 03:47:46.327"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:47:33.707" endtime="20220707 03:47:46.327"/>
</test>
<test id="s1-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 03:47:46.330" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 03:47:46.330" endtime="20220707 03:47:47.798"/>
</kw>
<status status="PASS" starttime="20220707 03:47:46.330" endtime="20220707 03:47:47.798"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:47.799" endtime="20220707 03:47:47.799"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:47.798" endtime="20220707 03:47:47.799"/>
</branch>
<status status="PASS" starttime="20220707 03:47:46.330" endtime="20220707 03:47:47.799"/>
</if>
<status status="PASS" starttime="20220707 03:47:46.329" endtime="20220707 03:47:47.799"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 03:47:47.799" endtime="20220707 03:47:47.916"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:47:47.934" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:47:47.917" endtime="20220707 03:47:47.934"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:47.935" endtime="20220707 03:47:47.935"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:47.934" endtime="20220707 03:47:47.935"/>
</branch>
<status status="PASS" starttime="20220707 03:47:47.934" endtime="20220707 03:47:47.935"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:47.935" endtime="20220707 03:47:47.984"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:47.985" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 03:47:47.984" endtime="20220707 03:47:48.112"/>
</kw>
<status status="PASS" starttime="20220707 03:47:47.935" endtime="20220707 03:47:48.112"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 03:47:48.112" endtime="20220707 03:47:48.844"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:47:48.852" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:47:48.844" endtime="20220707 03:47:48.852"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:48.852" endtime="20220707 03:47:48.926"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:48.927" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 03:47:48.926" endtime="20220707 03:47:50.233"/>
</kw>
<status status="PASS" starttime="20220707 03:47:48.852" endtime="20220707 03:47:50.234"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:47:50.234" endtime="20220707 03:47:50.234"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:50.234" endtime="20220707 03:47:50.234"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:50.234" endtime="20220707 03:47:50.234"/>
</branch>
<status status="PASS" starttime="20220707 03:47:48.852" endtime="20220707 03:47:50.234"/>
</if>
<status status="PASS" starttime="20220707 03:47:48.844" endtime="20220707 03:47:50.235"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 03:47:50.235" endtime="20220707 03:47:50.252"/>
</kw>
<status status="PASS" starttime="20220707 03:47:50.235" endtime="20220707 03:47:50.252"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:50.253" endtime="20220707 03:47:50.310"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:50.311" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 03:47:50.377" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 03:47:50.459" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 03:47:50.310" endtime="20220707 03:47:50.459"/>
</kw>
<status status="PASS" starttime="20220707 03:47:50.252" endtime="20220707 03:47:50.459"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:47:50.467" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c657...</msg>
<status status="PASS" starttime="20220707 03:47:50.460" endtime="20220707 03:47:50.467"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:47:50.468" endtime="20220707 03:47:50.468"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:47:50.468" endtime="20220707 03:47:50.468"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:47:50.468" endtime="20220707 03:47:50.468"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:50.468" endtime="20220707 03:47:50.516"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:50.517" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 03:47:50.517" endtime="20220707 03:47:50.659"/>
</kw>
<status status="PASS" starttime="20220707 03:47:50.468" endtime="20220707 03:47:50.659"/>
</branch>
<status status="PASS" starttime="20220707 03:47:50.467" endtime="20220707 03:47:50.659"/>
</if>
<status status="PASS" starttime="20220707 03:47:50.459" endtime="20220707 03:47:50.659"/>
</kw>
<status status="PASS" starttime="20220707 03:47:47.916" endtime="20220707 03:47:50.659"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:50.661" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 03:47:50.660" endtime="20220707 03:47:50.661"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:47:50.661" endtime="20220707 03:47:55.235"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:55.236" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 03:47:55.236" endtime="20220707 03:47:55.768"/>
</kw>
<status status="PASS" starttime="20220707 03:47:50.659" endtime="20220707 03:47:55.768"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 03:47:55.769" endtime="20220707 03:47:56.413"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:56.413" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220707 03:47:56.413" endtime="20220707 03:47:56.634"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:56.634" endtime="20220707 03:47:56.724"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:56.725" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220707 03:47:56.725" endtime="20220707 03:47:56.948"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 03:47:56.949" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 03:47:57.285" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 03:47:57.285" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 03:47:56.949" endtime="20220707 03:47:57.338"/>
</kw>
<status status="PASS" starttime="20220707 03:47:55.769" endtime="20220707 03:47:57.338"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:57.340" endtime="20220707 03:47:57.413"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:57.414" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 03:47:57.414" endtime="20220707 03:47:57.560"/>
</kw>
<status status="PASS" starttime="20220707 03:47:57.413" endtime="20220707 03:47:57.560"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:57.560" endtime="20220707 03:47:57.648"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:57.649" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220707 03:47:57.649" endtime="20220707 03:47:57.740"/>
</kw>
<status status="PASS" starttime="20220707 03:47:57.648" endtime="20220707 03:47:57.740"/>
</kw>
<status status="PASS" starttime="20220707 03:47:57.339" endtime="20220707 03:47:57.740"/>
</kw>
<status status="PASS" starttime="20220707 03:47:57.339" endtime="20220707 03:47:57.740"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:57.741" endtime="20220707 03:47:57.808"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:57.809" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 03:47:57.808" endtime="20220707 03:47:57.906"/>
</kw>
<status status="PASS" starttime="20220707 03:47:57.740" endtime="20220707 03:47:57.907"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:57.907" endtime="20220707 03:47:58.014"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:58.015" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220707 03:47:58.015" endtime="20220707 03:47:58.205"/>
</kw>
<status status="PASS" starttime="20220707 03:47:58.014" endtime="20220707 03:47:58.205"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:58.205" endtime="20220707 03:47:58.270"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:58.271" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220707 03:47:58.271" endtime="20220707 03:47:58.431"/>
</kw>
<status status="PASS" starttime="20220707 03:47:58.270" endtime="20220707 03:47:58.431"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:58.432" endtime="20220707 03:47:58.506"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:58.507" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220707 03:47:58.507" endtime="20220707 03:47:58.609"/>
</kw>
<status status="PASS" starttime="20220707 03:47:58.506" endtime="20220707 03:47:58.610"/>
</kw>
<status status="PASS" starttime="20220707 03:47:57.907" endtime="20220707 03:47:58.610"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:58.612" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220707 03:47:58.611" endtime="20220707 03:47:58.612"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:58.612" endtime="20220707 03:47:58.908"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220707 03:47:58.921" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220707 03:47:58.909" endtime="20220707 03:47:58.921"/>
</kw>
<status status="PASS" starttime="20220707 03:47:58.610" endtime="20220707 03:47:58.922"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:47:58.922" endtime="20220707 03:47:58.988"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 03:47:58.989" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220707 03:47:58.988" endtime="20220707 03:47:59.062"/>
</kw>
<status status="PASS" starttime="20220707 03:47:58.922" endtime="20220707 03:47:59.062"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 03:47:59.062" endtime="20220707 03:47:59.153"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:47:46.327" endtime="20220707 03:47:59.153"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:47:59.157" level="INFO">${url} = boards/62c65749e6c1f91490be7d9a</msg>
<status status="PASS" starttime="20220707 03:47:59.157" endtime="20220707 03:47:59.157"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:47:59.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:47:59.157" endtime="20220707 03:47:59.570"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:47:59.570" endtime="20220707 03:47:59.570"/>
</return>
<msg timestamp="20220707 03:47:59.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:47:59.156" endtime="20220707 03:47:59.570"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:47:59.570" endtime="20220707 03:47:59.570"/>
</return>
<status status="PASS" starttime="20220707 03:47:59.156" endtime="20220707 03:47:59.571"/>
</kw>
<status status="PASS" starttime="20220707 03:47:59.155" endtime="20220707 03:47:59.571"/>
</kw>
<status status="PASS" starttime="20220707 03:47:59.155" endtime="20220707 03:47:59.571"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 03:47:59.571" endtime="20220707 03:47:59.572"/>
</kw>
<status status="PASS" starttime="20220707 03:47:59.155" endtime="20220707 03:47:59.572"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220707 03:47:21.769" endtime="20220707 03:47:59.572"/>
</suite>
<suite id="s1-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 03:47:59.585" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 03:47:59.585" endtime="20220707 03:48:01.103"/>
</kw>
<status status="PASS" starttime="20220707 03:47:59.584" endtime="20220707 03:48:01.103"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 03:48:01.103" endtime="20220707 03:48:01.104"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:48:01.103" endtime="20220707 03:48:01.104"/>
</branch>
<status status="PASS" starttime="20220707 03:47:59.584" endtime="20220707 03:48:01.104"/>
</if>
<status status="PASS" starttime="20220707 03:47:59.584" endtime="20220707 03:48:01.104"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:48:01.104" endtime="20220707 03:48:01.154"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:48:01.155" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 03:48:01.155" endtime="20220707 03:48:01.289"/>
</kw>
<status status="PASS" starttime="20220707 03:48:01.104" endtime="20220707 03:48:01.289"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 03:48:01.289" endtime="20220707 03:48:02.022"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:48:02.039" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 03:48:02.023" endtime="20220707 03:48:02.039"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:48:02.040" endtime="20220707 03:48:02.123"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:48:02.124" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 03:48:02.124" endtime="20220707 03:48:03.432"/>
</kw>
<status status="PASS" starttime="20220707 03:48:02.040" endtime="20220707 03:48:03.433"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:48:03.433" endtime="20220707 03:48:03.433"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:48:03.433" endtime="20220707 03:48:03.433"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:48:03.433" endtime="20220707 03:48:03.433"/>
</branch>
<status status="PASS" starttime="20220707 03:48:02.040" endtime="20220707 03:48:03.433"/>
</if>
<status status="PASS" starttime="20220707 03:48:02.022" endtime="20220707 03:48:03.434"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 03:48:03.434" endtime="20220707 03:48:03.462"/>
</kw>
<status status="PASS" starttime="20220707 03:48:03.434" endtime="20220707 03:48:03.462"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:48:03.463" endtime="20220707 03:48:03.522"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 03:48:03.522" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 03:48:03.580" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 03:48:03.656" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 03:48:03.522" endtime="20220707 03:48:03.656"/>
</kw>
<status status="PASS" starttime="20220707 03:48:03.462" endtime="20220707 03:48:03.657"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 03:48:03.675" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c657...</msg>
<status status="PASS" starttime="20220707 03:48:03.657" endtime="20220707 03:48:03.675"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 03:48:03.676" endtime="20220707 03:48:03.676"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 03:48:03.676" endtime="20220707 03:48:03.676"/>
</kw>
<status status="NOT RUN" starttime="20220707 03:48:03.676" endtime="20220707 03:48:03.676"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 03:48:03.676" endtime="20220707 03:48:03.735"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 03:48:03.736" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 03:48:03.735" endtime="20220707 03:48:03.858"/>
</kw>
<status status="PASS" starttime="20220707 03:48:03.676" endtime="20220707 03:48:03.858"/>
</branch>
<status status="PASS" starttime="20220707 03:48:03.675" endtime="20220707 03:48:03.858"/>
</if>
<status status="PASS" starttime="20220707 03:48:03.657" endtime="20220707 03:48:03.859"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 03:48:03.859" endtime="20220707 03:48:08.431"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 03:48:08.431" endtime="20220707 03:48:08.480"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 03:48:08.480" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220707 03:48:08.480" endtime="20220707 03:48:08.512"/>
</kw>
<status status="PASS" starttime="20220707 03:48:03.859" endtime="20220707 03:48:08.512"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 03:48:08.513" endtime="20220707 03:48:08.600"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:47:59.583" endtime="20220707 03:48:08.600"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220707 03:47:59.576" endtime="20220707 03:48:08.603"/>
</suite>
<status status="PASS" starttime="20220707 03:45:30.166" endtime="20220707 03:48:08.607"/>
</suite>
<status status="PASS" starttime="20220707 03:45:30.141" endtime="20220707 03:48:08.613"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.update.description</stat>
<stat pass="1" fail="0" skip="0">board.update.name</stat>
<stat pass="1" fail="0" skip="0">card.comment</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.drag</stat>
<stat pass="1" fail="0" skip="0">card.move</stat>
<stat pass="1" fail="0" skip="0">card.title_board</stat>
<stat pass="15" fail="0" skip="0">gui</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="2" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="4" fail="0" skip="0">regression</stat>
<stat pass="11" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="15" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1" name="Gui">Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="Trello Gui Board">Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s2" name="Trello Gui Cards">Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Trello Gui Labels">Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Gui Lists">Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Trello Gui Login">Trello.Gui.Trello Gui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
