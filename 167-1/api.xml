<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220707 03:44:06.674" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 03:44:06.847" endtime="20220707 03:44:06.848"/>
</kw>
<status status="PASS" starttime="20220707 03:44:06.846" endtime="20220707 03:44:06.848"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:06.850" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:06.850" endtime="20220707 03:44:06.850"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:06.850" endtime="20220707 03:44:06.851"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:06.852" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:44:06.851" endtime="20220707 03:44:06.852"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:07.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:06.852" endtime="20220707 03:44:07.236"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:07.236" endtime="20220707 03:44:07.236"/>
</return>
<msg timestamp="20220707 03:44:07.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:06.849" endtime="20220707 03:44:07.236"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:07.236" endtime="20220707 03:44:07.237"/>
</return>
<msg timestamp="20220707 03:44:07.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:06.849" endtime="20220707 03:44:07.237"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:07.237" endtime="20220707 03:44:07.243"/>
</kw>
<status status="PASS" starttime="20220707 03:44:07.237" endtime="20220707 03:44:07.243"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:07.246" level="INFO">${url} = boards/62c6568767ee901849d748e4</msg>
<status status="PASS" starttime="20220707 03:44:07.245" endtime="20220707 03:44:07.246"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:07.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:07.246" endtime="20220707 03:44:07.623"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:07.623" endtime="20220707 03:44:07.623"/>
</return>
<msg timestamp="20220707 03:44:07.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:07.245" endtime="20220707 03:44:07.624"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:07.624" endtime="20220707 03:44:07.624"/>
</return>
<status status="PASS" starttime="20220707 03:44:07.244" endtime="20220707 03:44:07.624"/>
</kw>
<status status="PASS" starttime="20220707 03:44:07.243" endtime="20220707 03:44:07.624"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:44:06.848" endtime="20220707 03:44:07.624"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:07.627" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:07.627" endtime="20220707 03:44:07.627"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:07.627" endtime="20220707 03:44:07.628"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:07.629" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:44:07.628" endtime="20220707 03:44:07.629"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:07.820" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:07.629" endtime="20220707 03:44:07.820"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:07.820" endtime="20220707 03:44:07.820"/>
</return>
<msg timestamp="20220707 03:44:07.820" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:07.626" endtime="20220707 03:44:07.820"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:07.820" endtime="20220707 03:44:07.820"/>
</return>
<msg timestamp="20220707 03:44:07.820" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:07.625" endtime="20220707 03:44:07.821"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:07.821" endtime="20220707 03:44:07.826"/>
</kw>
<status status="PASS" starttime="20220707 03:44:07.821" endtime="20220707 03:44:07.826"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:07.828" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:07.828" endtime="20220707 03:44:07.828"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:07.828" endtime="20220707 03:44:07.829"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:07.829" level="INFO">${url} = boards/62c656873643f66ae33b7aa0</msg>
<status status="PASS" starttime="20220707 03:44:07.829" endtime="20220707 03:44:07.829"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:07.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:07.829" endtime="20220707 03:44:07.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:07.951" endtime="20220707 03:44:07.951"/>
</return>
<msg timestamp="20220707 03:44:07.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:07.827" endtime="20220707 03:44:07.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:07.951" endtime="20220707 03:44:07.951"/>
</return>
<status status="PASS" starttime="20220707 03:44:07.826" endtime="20220707 03:44:07.951"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:07.954" level="INFO">${url} = boards/62c656873643f66ae33b7aa0</msg>
<status status="PASS" starttime="20220707 03:44:07.953" endtime="20220707 03:44:07.954"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:08.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:07.954" endtime="20220707 03:44:08.032"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:08.032" endtime="20220707 03:44:08.032"/>
</return>
<msg timestamp="20220707 03:44:08.033" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:07.953" endtime="20220707 03:44:08.033"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:08.033" endtime="20220707 03:44:08.033"/>
</return>
<msg timestamp="20220707 03:44:08.033" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:07.952" endtime="20220707 03:44:08.033"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:08.034" endtime="20220707 03:44:08.039"/>
</kw>
<status status="PASS" starttime="20220707 03:44:08.033" endtime="20220707 03:44:08.039"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:08.039" endtime="20220707 03:44:08.040"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:08.043" level="INFO">${url} = boards/62c656873643f66ae33b7aa0</msg>
<status status="PASS" starttime="20220707 03:44:08.042" endtime="20220707 03:44:08.043"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:08.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:08.043" endtime="20220707 03:44:08.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:08.459" endtime="20220707 03:44:08.459"/>
</return>
<msg timestamp="20220707 03:44:08.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:08.042" endtime="20220707 03:44:08.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:08.459" endtime="20220707 03:44:08.459"/>
</return>
<status status="PASS" starttime="20220707 03:44:08.041" endtime="20220707 03:44:08.460"/>
</kw>
<status status="PASS" starttime="20220707 03:44:08.040" endtime="20220707 03:44:08.460"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:44:07.625" endtime="20220707 03:44:08.460"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:08.462" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:08.462" endtime="20220707 03:44:08.462"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:08.462" endtime="20220707 03:44:08.463"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:08.464" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:44:08.463" endtime="20220707 03:44:08.464"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:08.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:08.464" endtime="20220707 03:44:08.667"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:08.667" endtime="20220707 03:44:08.668"/>
</return>
<msg timestamp="20220707 03:44:08.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:08.461" endtime="20220707 03:44:08.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:08.668" endtime="20220707 03:44:08.668"/>
</return>
<msg timestamp="20220707 03:44:08.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:08.461" endtime="20220707 03:44:08.668"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:08.671" level="INFO">${url} = boards/62c656880abf198b8ef5c7e4</msg>
<status status="PASS" starttime="20220707 03:44:08.670" endtime="20220707 03:44:08.671"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:09.049" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:08.671" endtime="20220707 03:44:09.049"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:09.049" endtime="20220707 03:44:09.049"/>
</return>
<msg timestamp="20220707 03:44:09.049" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:08.670" endtime="20220707 03:44:09.049"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:09.049" endtime="20220707 03:44:09.050"/>
</return>
<status status="PASS" starttime="20220707 03:44:08.668" endtime="20220707 03:44:09.050"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:09.052" level="INFO">${url} = boards/62c656880abf198b8ef5c7e4</msg>
<status status="PASS" starttime="20220707 03:44:09.052" endtime="20220707 03:44:09.052"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:09.118" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 03:44:09.052" endtime="20220707 03:44:09.119"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:09.119" endtime="20220707 03:44:09.119"/>
</return>
<msg timestamp="20220707 03:44:09.119" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 03:44:09.051" endtime="20220707 03:44:09.119"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:09.119" endtime="20220707 03:44:09.119"/>
</return>
<status status="PASS" starttime="20220707 03:44:09.050" endtime="20220707 03:44:09.119"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:44:08.460" endtime="20220707 03:44:09.120"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:09.122" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:09.122" endtime="20220707 03:44:09.122"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:09.123" endtime="20220707 03:44:09.123"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:09.124" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:44:09.123" endtime="20220707 03:44:09.124"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:09.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:09.124" endtime="20220707 03:44:09.351"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:09.352" endtime="20220707 03:44:09.352"/>
</return>
<msg timestamp="20220707 03:44:09.352" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:09.121" endtime="20220707 03:44:09.352"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:09.352" endtime="20220707 03:44:09.352"/>
</return>
<msg timestamp="20220707 03:44:09.352" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:09.121" endtime="20220707 03:44:09.352"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:09.353" endtime="20220707 03:44:09.358"/>
</kw>
<status status="PASS" starttime="20220707 03:44:09.353" endtime="20220707 03:44:09.358"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:09.360" level="INFO">${url} = boards/62c6568995f7740431068479</msg>
<status status="PASS" starttime="20220707 03:44:09.360" endtime="20220707 03:44:09.360"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:09.445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:09.360" endtime="20220707 03:44:09.445"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:09.445" endtime="20220707 03:44:09.445"/>
</return>
<msg timestamp="20220707 03:44:09.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:09.359" endtime="20220707 03:44:09.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:09.446" endtime="20220707 03:44:09.446"/>
</return>
<msg timestamp="20220707 03:44:09.446" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:09.358" endtime="20220707 03:44:09.446"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:09.447" endtime="20220707 03:44:09.452"/>
</kw>
<status status="PASS" starttime="20220707 03:44:09.446" endtime="20220707 03:44:09.452"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:09.452" endtime="20220707 03:44:09.453"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:09.456" level="INFO">${url} = boards/62c6568995f7740431068479</msg>
<status status="PASS" starttime="20220707 03:44:09.455" endtime="20220707 03:44:09.456"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:09.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:09.456" endtime="20220707 03:44:09.785"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:09.785" endtime="20220707 03:44:09.785"/>
</return>
<msg timestamp="20220707 03:44:09.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:09.455" endtime="20220707 03:44:09.785"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:09.786" endtime="20220707 03:44:09.786"/>
</return>
<status status="PASS" starttime="20220707 03:44:09.454" endtime="20220707 03:44:09.786"/>
</kw>
<status status="PASS" starttime="20220707 03:44:09.453" endtime="20220707 03:44:09.786"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:44:09.120" endtime="20220707 03:44:09.786"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:09.789" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:09.788" endtime="20220707 03:44:09.789"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:09.789" endtime="20220707 03:44:09.789"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:09.790" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:44:09.789" endtime="20220707 03:44:09.790"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:09.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:09.790" endtime="20220707 03:44:09.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:09.979" endtime="20220707 03:44:09.979"/>
</return>
<msg timestamp="20220707 03:44:09.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:09.788" endtime="20220707 03:44:09.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:09.979" endtime="20220707 03:44:09.979"/>
</return>
<msg timestamp="20220707 03:44:09.980" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:09.787" endtime="20220707 03:44:09.980"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:09.980" endtime="20220707 03:44:09.985"/>
</kw>
<status status="PASS" starttime="20220707 03:44:09.980" endtime="20220707 03:44:09.985"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:09.987" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:09.987" endtime="20220707 03:44:09.987"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:09.987" endtime="20220707 03:44:09.988"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:09.988" level="INFO">${url} = boards/62c65689cc8c1653527669b4</msg>
<status status="PASS" starttime="20220707 03:44:09.988" endtime="20220707 03:44:09.988"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:10.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:09.988" endtime="20220707 03:44:10.108"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:10.108" endtime="20220707 03:44:10.108"/>
</return>
<msg timestamp="20220707 03:44:10.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:09.986" endtime="20220707 03:44:10.108"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:10.109" endtime="20220707 03:44:10.109"/>
</return>
<status status="PASS" starttime="20220707 03:44:09.985" endtime="20220707 03:44:10.109"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:10.111" level="INFO">${url} = boards/62c65689cc8c1653527669b4</msg>
<status status="PASS" starttime="20220707 03:44:10.111" endtime="20220707 03:44:10.111"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:10.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:10.111" endtime="20220707 03:44:10.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:10.188" endtime="20220707 03:44:10.188"/>
</return>
<msg timestamp="20220707 03:44:10.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:10.110" endtime="20220707 03:44:10.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:10.189" endtime="20220707 03:44:10.189"/>
</return>
<msg timestamp="20220707 03:44:10.189" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:10.109" endtime="20220707 03:44:10.189"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:10.189" endtime="20220707 03:44:10.190"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:10.193" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:10.192" endtime="20220707 03:44:10.193"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:10.193" endtime="20220707 03:44:10.193"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:10.193" level="INFO">${url} = boards/62c65689cc8c1653527669b4</msg>
<status status="PASS" starttime="20220707 03:44:10.193" endtime="20220707 03:44:10.193"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:10.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:10.194" endtime="20220707 03:44:10.319"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:10.319" endtime="20220707 03:44:10.319"/>
</return>
<msg timestamp="20220707 03:44:10.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:10.191" endtime="20220707 03:44:10.319"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:10.319" endtime="20220707 03:44:10.319"/>
</return>
<status status="PASS" starttime="20220707 03:44:10.190" endtime="20220707 03:44:10.319"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:10.322" level="INFO">${url} = boards/62c65689cc8c1653527669b4</msg>
<status status="PASS" starttime="20220707 03:44:10.321" endtime="20220707 03:44:10.322"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:10.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:10.322" endtime="20220707 03:44:10.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:10.414" endtime="20220707 03:44:10.414"/>
</return>
<msg timestamp="20220707 03:44:10.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:10.321" endtime="20220707 03:44:10.415"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:10.415" endtime="20220707 03:44:10.415"/>
</return>
<msg timestamp="20220707 03:44:10.415" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:10.320" endtime="20220707 03:44:10.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:10.415" endtime="20220707 03:44:10.416"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:10.419" level="INFO">${url} = boards/62c65689cc8c1653527669b4</msg>
<status status="PASS" starttime="20220707 03:44:10.419" endtime="20220707 03:44:10.419"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:10.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:10.419" endtime="20220707 03:44:10.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:10.751" endtime="20220707 03:44:10.751"/>
</return>
<msg timestamp="20220707 03:44:10.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:10.418" endtime="20220707 03:44:10.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:10.752" endtime="20220707 03:44:10.752"/>
</return>
<status status="PASS" starttime="20220707 03:44:10.417" endtime="20220707 03:44:10.752"/>
</kw>
<status status="PASS" starttime="20220707 03:44:10.416" endtime="20220707 03:44:10.752"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:44:09.787" endtime="20220707 03:44:10.752"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220707 03:44:10.753" endtime="20220707 03:44:10.755"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220707 03:44:06.702" endtime="20220707 03:44:10.755"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 03:44:10.770" endtime="20220707 03:44:10.770"/>
</kw>
<status status="PASS" starttime="20220707 03:44:10.769" endtime="20220707 03:44:10.770"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:10.772" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:10.771" endtime="20220707 03:44:10.772"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:10.772" endtime="20220707 03:44:10.772"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:10.773" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:44:10.772" endtime="20220707 03:44:10.773"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:11.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:10.773" endtime="20220707 03:44:11.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:11.046" endtime="20220707 03:44:11.046"/>
</return>
<msg timestamp="20220707 03:44:11.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:10.771" endtime="20220707 03:44:11.047"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:11.047" endtime="20220707 03:44:11.047"/>
</return>
<msg timestamp="20220707 03:44:11.047" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:10.771" endtime="20220707 03:44:11.047"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 03:44:11.048" level="INFO">${TEST_SUITE_BOARD_ID} = 62c6568a9552c4144cac8f62</msg>
<status status="PASS" starttime="20220707 03:44:11.047" endtime="20220707 03:44:11.048"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:11.050" level="INFO">${url} = boards/62c6568a9552c4144cac8f62/lists/</msg>
<status status="PASS" starttime="20220707 03:44:11.049" endtime="20220707 03:44:11.050"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:11.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.050" endtime="20220707 03:44:11.127"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:11.127" endtime="20220707 03:44:11.127"/>
</return>
<msg timestamp="20220707 03:44:11.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.049" endtime="20220707 03:44:11.127"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:11.127" endtime="20220707 03:44:11.128"/>
</return>
<msg timestamp="20220707 03:44:11.128" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.048" endtime="20220707 03:44:11.128"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 03:44:11.129" level="INFO">${TEST_SUITE_LIST_ID} = 62c6568a9552c4144cac8f69</msg>
<status status="PASS" starttime="20220707 03:44:11.128" endtime="20220707 03:44:11.129"/>
</kw>
<status status="PASS" starttime="20220707 03:44:10.770" endtime="20220707 03:44:11.129"/>
</kw>
<status status="PASS" starttime="20220707 03:44:10.769" endtime="20220707 03:44:11.129"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:11.132" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:11.131" endtime="20220707 03:44:11.132"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:11.132" endtime="20220707 03:44:11.132"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:11.133" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 03:44:11.132" endtime="20220707 03:44:11.133"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:11.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.133" endtime="20220707 03:44:11.348"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:11.349" endtime="20220707 03:44:11.349"/>
</return>
<msg timestamp="20220707 03:44:11.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.131" endtime="20220707 03:44:11.349"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:11.349" endtime="20220707 03:44:11.349"/>
</return>
<msg timestamp="20220707 03:44:11.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.130" endtime="20220707 03:44:11.349"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:11.350" endtime="20220707 03:44:11.356"/>
</kw>
<status status="PASS" starttime="20220707 03:44:11.350" endtime="20220707 03:44:11.356"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:11.357" endtime="20220707 03:44:11.357"/>
</return>
<msg timestamp="20220707 03:44:11.358" level="INFO">${CARD_ID} = 62c6568b6975db7a320c789e</msg>
<status status="PASS" starttime="20220707 03:44:11.357" endtime="20220707 03:44:11.358"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:11.360" level="INFO">${url} = cards/62c6568b6975db7a320c789e</msg>
<status status="PASS" starttime="20220707 03:44:11.359" endtime="20220707 03:44:11.360"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:11.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.360" endtime="20220707 03:44:11.444"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:11.445" endtime="20220707 03:44:11.445"/>
</return>
<msg timestamp="20220707 03:44:11.445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.359" endtime="20220707 03:44:11.445"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:11.445" endtime="20220707 03:44:11.445"/>
</return>
<msg timestamp="20220707 03:44:11.445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.358" endtime="20220707 03:44:11.445"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:11.446" endtime="20220707 03:44:11.446"/>
</return>
<msg timestamp="20220707 03:44:11.447" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220707 03:44:11.446" endtime="20220707 03:44:11.447"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:11.447" endtime="20220707 03:44:11.447"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:11.450" level="INFO">${url} = cards/62c6568b6975db7a320c789e</msg>
<status status="PASS" starttime="20220707 03:44:11.449" endtime="20220707 03:44:11.450"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:11.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.450" endtime="20220707 03:44:11.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:11.626" endtime="20220707 03:44:11.626"/>
</return>
<msg timestamp="20220707 03:44:11.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.448" endtime="20220707 03:44:11.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:11.627" endtime="20220707 03:44:11.627"/>
</return>
<status status="PASS" starttime="20220707 03:44:11.448" endtime="20220707 03:44:11.627"/>
</kw>
<status status="PASS" starttime="20220707 03:44:11.448" endtime="20220707 03:44:11.627"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:44:11.129" endtime="20220707 03:44:11.627"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:11.630" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:11.630" endtime="20220707 03:44:11.630"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:11.630" endtime="20220707 03:44:11.630"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:11.631" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 03:44:11.631" endtime="20220707 03:44:11.631"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:11.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.632" endtime="20220707 03:44:11.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:11.861" endtime="20220707 03:44:11.861"/>
</return>
<msg timestamp="20220707 03:44:11.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.629" endtime="20220707 03:44:11.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:11.862" endtime="20220707 03:44:11.862"/>
</return>
<msg timestamp="20220707 03:44:11.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.628" endtime="20220707 03:44:11.862"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:11.863" endtime="20220707 03:44:11.863"/>
</return>
<msg timestamp="20220707 03:44:11.864" level="INFO">${CARD_ID} = 62c6568b36086603cbb8341f</msg>
<status status="PASS" starttime="20220707 03:44:11.862" endtime="20220707 03:44:11.864"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:11.866" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:11.866" endtime="20220707 03:44:11.866"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:11.866" endtime="20220707 03:44:11.867"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:11.867" level="INFO">${url} = cards/62c6568b36086603cbb8341f</msg>
<status status="PASS" starttime="20220707 03:44:11.867" endtime="20220707 03:44:11.867"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:12.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.867" endtime="20220707 03:44:12.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.029" endtime="20220707 03:44:12.029"/>
</return>
<msg timestamp="20220707 03:44:12.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.865" endtime="20220707 03:44:12.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.029" endtime="20220707 03:44:12.029"/>
</return>
<msg timestamp="20220707 03:44:12.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:11.864" endtime="20220707 03:44:12.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.030" endtime="20220707 03:44:12.030"/>
</return>
<status status="PASS" starttime="20220707 03:44:11.864" endtime="20220707 03:44:12.030"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:12.032" level="INFO">${url} = cards/62c6568b36086603cbb8341f</msg>
<status status="PASS" starttime="20220707 03:44:12.031" endtime="20220707 03:44:12.032"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:12.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.032" endtime="20220707 03:44:12.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.120" endtime="20220707 03:44:12.120"/>
</return>
<msg timestamp="20220707 03:44:12.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.031" endtime="20220707 03:44:12.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.121" endtime="20220707 03:44:12.121"/>
</return>
<msg timestamp="20220707 03:44:12.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.030" endtime="20220707 03:44:12.121"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:12.122" endtime="20220707 03:44:12.122"/>
</return>
<msg timestamp="20220707 03:44:12.123" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220707 03:44:12.121" endtime="20220707 03:44:12.123"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 03:44:12.123" endtime="20220707 03:44:12.123"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:12.125" level="INFO">${url} = cards/62c6568b36086603cbb8341f</msg>
<status status="PASS" starttime="20220707 03:44:12.125" endtime="20220707 03:44:12.125"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:12.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.125" endtime="20220707 03:44:12.315"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.316" endtime="20220707 03:44:12.316"/>
</return>
<msg timestamp="20220707 03:44:12.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.124" endtime="20220707 03:44:12.316"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.316" endtime="20220707 03:44:12.316"/>
</return>
<status status="PASS" starttime="20220707 03:44:12.124" endtime="20220707 03:44:12.316"/>
</kw>
<status status="PASS" starttime="20220707 03:44:12.123" endtime="20220707 03:44:12.316"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 03:44:11.627" endtime="20220707 03:44:12.316"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:12.320" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:12.319" endtime="20220707 03:44:12.320"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:12.320" endtime="20220707 03:44:12.320"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:12.321" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 03:44:12.320" endtime="20220707 03:44:12.321"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:12.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.321" endtime="20220707 03:44:12.511"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.511" endtime="20220707 03:44:12.511"/>
</return>
<msg timestamp="20220707 03:44:12.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.318" endtime="20220707 03:44:12.511"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.511" endtime="20220707 03:44:12.511"/>
</return>
<msg timestamp="20220707 03:44:12.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.318" endtime="20220707 03:44:12.512"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:12.512" endtime="20220707 03:44:12.512"/>
</return>
<msg timestamp="20220707 03:44:12.513" level="INFO">${CARD_ID} = 62c6568c5c492e4713fe313b</msg>
<status status="PASS" starttime="20220707 03:44:12.512" endtime="20220707 03:44:12.513"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:12.515" level="INFO">${url} = cards/62c6568c5c492e4713fe313b</msg>
<status status="PASS" starttime="20220707 03:44:12.514" endtime="20220707 03:44:12.515"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:12.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.515" endtime="20220707 03:44:12.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.691" endtime="20220707 03:44:12.691"/>
</return>
<msg timestamp="20220707 03:44:12.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.514" endtime="20220707 03:44:12.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.691" endtime="20220707 03:44:12.692"/>
</return>
<msg timestamp="20220707 03:44:12.692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.513" endtime="20220707 03:44:12.692"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:12.693" endtime="20220707 03:44:12.695"/>
</kw>
<status status="PASS" starttime="20220707 03:44:12.692" endtime="20220707 03:44:12.695"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:12.696" level="INFO">${url} = cards/62c6568c5c492e4713fe313b</msg>
<status status="PASS" starttime="20220707 03:44:12.696" endtime="20220707 03:44:12.697"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:12.763" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 03:44:12.697" endtime="20220707 03:44:12.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.763" endtime="20220707 03:44:12.763"/>
</return>
<msg timestamp="20220707 03:44:12.763" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 03:44:12.695" endtime="20220707 03:44:12.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.763" endtime="20220707 03:44:12.763"/>
</return>
<status status="PASS" starttime="20220707 03:44:12.695" endtime="20220707 03:44:12.764"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:44:12.317" endtime="20220707 03:44:12.764"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:12.767" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:12.766" endtime="20220707 03:44:12.767"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:12.767" endtime="20220707 03:44:12.767"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:12.768" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 03:44:12.767" endtime="20220707 03:44:12.768"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:12.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.768" endtime="20220707 03:44:12.981"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.981" endtime="20220707 03:44:12.981"/>
</return>
<msg timestamp="20220707 03:44:12.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.766" endtime="20220707 03:44:12.981"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:12.981" endtime="20220707 03:44:12.981"/>
</return>
<msg timestamp="20220707 03:44:12.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.765" endtime="20220707 03:44:12.981"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:12.982" endtime="20220707 03:44:12.982"/>
</return>
<msg timestamp="20220707 03:44:12.983" level="INFO">${CARD_ID} = 62c6568c0e9df94899c472f9</msg>
<status status="PASS" starttime="20220707 03:44:12.982" endtime="20220707 03:44:12.983"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:12.985" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:12.985" endtime="20220707 03:44:12.985"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:12.985" endtime="20220707 03:44:12.985"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:12.986" level="INFO">${url} = cards/62c6568c0e9df94899c472f9</msg>
<status status="PASS" starttime="20220707 03:44:12.986" endtime="20220707 03:44:12.986"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:13.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.986" endtime="20220707 03:44:13.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:13.177" endtime="20220707 03:44:13.177"/>
</return>
<msg timestamp="20220707 03:44:13.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.984" endtime="20220707 03:44:13.177"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:13.177" endtime="20220707 03:44:13.177"/>
</return>
<msg timestamp="20220707 03:44:13.178" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:12.983" endtime="20220707 03:44:13.178"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:13.178" endtime="20220707 03:44:13.185"/>
</kw>
<status status="PASS" starttime="20220707 03:44:13.178" endtime="20220707 03:44:13.185"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:13.187" level="INFO">${url} = cards/62c6568c0e9df94899c472f9</msg>
<status status="PASS" starttime="20220707 03:44:13.186" endtime="20220707 03:44:13.187"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:13.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:13.187" endtime="20220707 03:44:13.271"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:13.272" endtime="20220707 03:44:13.272"/>
</return>
<msg timestamp="20220707 03:44:13.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:13.186" endtime="20220707 03:44:13.272"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:13.272" endtime="20220707 03:44:13.272"/>
</return>
<msg timestamp="20220707 03:44:13.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:13.185" endtime="20220707 03:44:13.272"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:13.273" endtime="20220707 03:44:13.273"/>
</return>
<msg timestamp="20220707 03:44:13.274" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220707 03:44:13.273" endtime="20220707 03:44:13.274"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:13.275" endtime="20220707 03:44:13.275"/>
</return>
<msg timestamp="20220707 03:44:13.276" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220707 03:44:13.274" endtime="20220707 03:44:13.276"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:13.276" endtime="20220707 03:44:13.276"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:13.276" endtime="20220707 03:44:13.277"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:13.279" level="INFO">${url} = cards/62c6568c0e9df94899c472f9</msg>
<status status="PASS" starttime="20220707 03:44:13.278" endtime="20220707 03:44:13.279"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:13.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:13.279" endtime="20220707 03:44:13.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:13.466" endtime="20220707 03:44:13.466"/>
</return>
<msg timestamp="20220707 03:44:13.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:13.278" endtime="20220707 03:44:13.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:13.466" endtime="20220707 03:44:13.466"/>
</return>
<status status="PASS" starttime="20220707 03:44:13.277" endtime="20220707 03:44:13.467"/>
</kw>
<status status="PASS" starttime="20220707 03:44:13.277" endtime="20220707 03:44:13.467"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 03:44:12.764" endtime="20220707 03:44:13.467"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:13.470" level="INFO">${url} = boards/62c6568a9552c4144cac8f62</msg>
<status status="PASS" starttime="20220707 03:44:13.470" endtime="20220707 03:44:13.470"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:13.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:13.471" endtime="20220707 03:44:13.828"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:13.828" endtime="20220707 03:44:13.828"/>
</return>
<msg timestamp="20220707 03:44:13.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:13.469" endtime="20220707 03:44:13.828"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:13.828" endtime="20220707 03:44:13.828"/>
</return>
<status status="PASS" starttime="20220707 03:44:13.469" endtime="20220707 03:44:13.829"/>
</kw>
<status status="PASS" starttime="20220707 03:44:13.468" endtime="20220707 03:44:13.829"/>
</kw>
<status status="PASS" starttime="20220707 03:44:13.468" endtime="20220707 03:44:13.829"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 03:44:13.829" endtime="20220707 03:44:13.830"/>
</kw>
<status status="PASS" starttime="20220707 03:44:13.468" endtime="20220707 03:44:13.830"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220707 03:44:10.757" endtime="20220707 03:44:13.830"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 03:44:13.845" endtime="20220707 03:44:13.845"/>
</kw>
<status status="PASS" starttime="20220707 03:44:13.844" endtime="20220707 03:44:13.845"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:13.846" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:13.846" endtime="20220707 03:44:13.847"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:13.847" endtime="20220707 03:44:13.847"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:13.848" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:44:13.847" endtime="20220707 03:44:13.848"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:14.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:13.848" endtime="20220707 03:44:14.147"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.148" endtime="20220707 03:44:14.148"/>
</return>
<msg timestamp="20220707 03:44:14.148" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:13.846" endtime="20220707 03:44:14.148"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.148" endtime="20220707 03:44:14.148"/>
</return>
<msg timestamp="20220707 03:44:14.148" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:13.845" endtime="20220707 03:44:14.148"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 03:44:14.149" level="INFO">${TEST_SUITE_BOARD_ID} = 62c6568e573a77443b7b7af2</msg>
<status status="PASS" starttime="20220707 03:44:14.149" endtime="20220707 03:44:14.150"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:14.151" level="INFO">${url} = boards/62c6568e573a77443b7b7af2/lists/</msg>
<status status="PASS" starttime="20220707 03:44:14.151" endtime="20220707 03:44:14.151"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:14.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.151" endtime="20220707 03:44:14.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.253" endtime="20220707 03:44:14.253"/>
</return>
<msg timestamp="20220707 03:44:14.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.150" endtime="20220707 03:44:14.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.253" endtime="20220707 03:44:14.253"/>
</return>
<msg timestamp="20220707 03:44:14.253" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.150" endtime="20220707 03:44:14.253"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 03:44:14.255" level="INFO">${TEST_SUITE_LIST_ID} = 62c6568e573a77443b7b7af9</msg>
<status status="PASS" starttime="20220707 03:44:14.254" endtime="20220707 03:44:14.255"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:14.257" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:14.256" endtime="20220707 03:44:14.257"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:14.257" endtime="20220707 03:44:14.257"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:14.258" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 03:44:14.257" endtime="20220707 03:44:14.258"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:14.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.258" endtime="20220707 03:44:14.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.439" endtime="20220707 03:44:14.439"/>
</return>
<msg timestamp="20220707 03:44:14.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.256" endtime="20220707 03:44:14.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.440" endtime="20220707 03:44:14.440"/>
</return>
<msg timestamp="20220707 03:44:14.440" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.255" endtime="20220707 03:44:14.440"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 03:44:14.441" level="INFO">${TEST_SUITE_CARD_ID} = 62c6568e6932008a811f5dda</msg>
<status status="PASS" starttime="20220707 03:44:14.440" endtime="20220707 03:44:14.441"/>
</kw>
<status status="PASS" starttime="20220707 03:44:13.845" endtime="20220707 03:44:14.441"/>
</kw>
<status status="PASS" starttime="20220707 03:44:13.844" endtime="20220707 03:44:14.441"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:14.444" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:14.444" endtime="20220707 03:44:14.444"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:14.444" endtime="20220707 03:44:14.444"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:14.445" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 03:44:14.444" endtime="20220707 03:44:14.445"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:14.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.445" endtime="20220707 03:44:14.582"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.582" endtime="20220707 03:44:14.582"/>
</return>
<msg timestamp="20220707 03:44:14.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.443" endtime="20220707 03:44:14.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.583" endtime="20220707 03:44:14.583"/>
</return>
<msg timestamp="20220707 03:44:14.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.442" endtime="20220707 03:44:14.583"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:14.584" endtime="20220707 03:44:14.584"/>
</return>
<msg timestamp="20220707 03:44:14.585" level="INFO">${checklist_id} = 62c6568ec064ee6ed9af9405</msg>
<status status="PASS" starttime="20220707 03:44:14.583" endtime="20220707 03:44:14.585"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:14.586" level="INFO">${url} = checklists/62c6568ec064ee6ed9af9405</msg>
<status status="PASS" starttime="20220707 03:44:14.586" endtime="20220707 03:44:14.586"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:14.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.586" endtime="20220707 03:44:14.674"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.674" endtime="20220707 03:44:14.674"/>
</return>
<msg timestamp="20220707 03:44:14.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.585" endtime="20220707 03:44:14.675"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.675" endtime="20220707 03:44:14.675"/>
</return>
<msg timestamp="20220707 03:44:14.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.585" endtime="20220707 03:44:14.675"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:14.676" endtime="20220707 03:44:14.676"/>
</return>
<msg timestamp="20220707 03:44:14.676" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220707 03:44:14.675" endtime="20220707 03:44:14.677"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:14.677" endtime="20220707 03:44:14.677"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:14.679" level="INFO">${url} = checklists/62c6568ec064ee6ed9af9405</msg>
<status status="PASS" starttime="20220707 03:44:14.678" endtime="20220707 03:44:14.679"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:14.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.679" endtime="20220707 03:44:14.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.813" endtime="20220707 03:44:14.813"/>
</return>
<msg timestamp="20220707 03:44:14.813" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.678" endtime="20220707 03:44:14.813"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.813" endtime="20220707 03:44:14.813"/>
</return>
<status status="PASS" starttime="20220707 03:44:14.677" endtime="20220707 03:44:14.813"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:44:14.442" endtime="20220707 03:44:14.813"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:14.816" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:14.816" endtime="20220707 03:44:14.817"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:14.817" endtime="20220707 03:44:14.817"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:14.818" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 03:44:14.817" endtime="20220707 03:44:14.818"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:14.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.818" endtime="20220707 03:44:14.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.957" endtime="20220707 03:44:14.957"/>
</return>
<msg timestamp="20220707 03:44:14.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.815" endtime="20220707 03:44:14.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:14.958" endtime="20220707 03:44:14.958"/>
</return>
<msg timestamp="20220707 03:44:14.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.815" endtime="20220707 03:44:14.958"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:14.959" endtime="20220707 03:44:14.959"/>
</return>
<msg timestamp="20220707 03:44:14.960" level="INFO">${checklist_id} = 62c6568e0236ae3493961366</msg>
<status status="PASS" starttime="20220707 03:44:14.958" endtime="20220707 03:44:14.960"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:14.962" level="INFO">${url} = checklists/62c6568e0236ae3493961366</msg>
<status status="PASS" starttime="20220707 03:44:14.961" endtime="20220707 03:44:14.962"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:15.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.962" endtime="20220707 03:44:15.100"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:15.100" endtime="20220707 03:44:15.100"/>
</return>
<msg timestamp="20220707 03:44:15.101" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.961" endtime="20220707 03:44:15.101"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:15.101" endtime="20220707 03:44:15.101"/>
</return>
<msg timestamp="20220707 03:44:15.101" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:14.960" endtime="20220707 03:44:15.101"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:15.102" endtime="20220707 03:44:15.104"/>
</kw>
<status status="PASS" starttime="20220707 03:44:15.101" endtime="20220707 03:44:15.104"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:15.105" level="INFO">${url} = checklists/62c6568e0236ae3493961366</msg>
<status status="PASS" starttime="20220707 03:44:15.105" endtime="20220707 03:44:15.105"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:15.172" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 03:44:15.106" endtime="20220707 03:44:15.172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:15.172" endtime="20220707 03:44:15.172"/>
</return>
<msg timestamp="20220707 03:44:15.172" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 03:44:15.104" endtime="20220707 03:44:15.172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:15.172" endtime="20220707 03:44:15.172"/>
</return>
<status status="PASS" starttime="20220707 03:44:15.104" endtime="20220707 03:44:15.173"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:44:14.814" endtime="20220707 03:44:15.173"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:15.177" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:15.175" endtime="20220707 03:44:15.177"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:15.178" endtime="20220707 03:44:15.178"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:15.179" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 03:44:15.178" endtime="20220707 03:44:15.179"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:15.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:15.179" endtime="20220707 03:44:15.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:15.313" endtime="20220707 03:44:15.313"/>
</return>
<msg timestamp="20220707 03:44:15.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:15.175" endtime="20220707 03:44:15.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:15.313" endtime="20220707 03:44:15.313"/>
</return>
<msg timestamp="20220707 03:44:15.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:15.174" endtime="20220707 03:44:15.314"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:15.314" endtime="20220707 03:44:15.315"/>
</return>
<msg timestamp="20220707 03:44:15.315" level="INFO">${checklist_id} = 62c6568f0efed188286dab24</msg>
<status status="PASS" starttime="20220707 03:44:15.314" endtime="20220707 03:44:15.315"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:15.317" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:15.317" endtime="20220707 03:44:15.317"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:15.317" endtime="20220707 03:44:15.318"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:15.318" level="INFO">${url} = checklists/62c6568f0efed188286dab24</msg>
<status status="PASS" starttime="20220707 03:44:15.318" endtime="20220707 03:44:15.318"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:15.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:15.319" endtime="20220707 03:44:15.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:15.437" endtime="20220707 03:44:15.437"/>
</return>
<msg timestamp="20220707 03:44:15.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:15.316" endtime="20220707 03:44:15.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:15.437" endtime="20220707 03:44:15.437"/>
</return>
<msg timestamp="20220707 03:44:15.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:15.316" endtime="20220707 03:44:15.438"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:15.439" level="INFO">${url} = checklists/62c6568f0efed188286dab24</msg>
<status status="PASS" starttime="20220707 03:44:15.439" endtime="20220707 03:44:15.440"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:15.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:15.440" endtime="20220707 03:44:15.530"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:15.530" endtime="20220707 03:44:15.530"/>
</return>
<msg timestamp="20220707 03:44:15.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:15.438" endtime="20220707 03:44:15.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:15.531" endtime="20220707 03:44:15.531"/>
</return>
<msg timestamp="20220707 03:44:15.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:15.438" endtime="20220707 03:44:15.531"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:15.531" endtime="20220707 03:44:15.532"/>
</return>
<msg timestamp="20220707 03:44:15.532" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220707 03:44:15.531" endtime="20220707 03:44:15.532"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:15.533" endtime="20220707 03:44:15.533"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:15.548" level="INFO">${url} = checklists/62c6568f0efed188286dab24</msg>
<status status="PASS" starttime="20220707 03:44:15.547" endtime="20220707 03:44:15.548"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:15.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:15.548" endtime="20220707 03:44:15.675"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:15.675" endtime="20220707 03:44:15.675"/>
</return>
<msg timestamp="20220707 03:44:15.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:15.547" endtime="20220707 03:44:15.675"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:15.675" endtime="20220707 03:44:15.675"/>
</return>
<status status="PASS" starttime="20220707 03:44:15.533" endtime="20220707 03:44:15.676"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 03:44:15.173" endtime="20220707 03:44:15.676"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:15.678" level="INFO">${url} = boards/62c6568e573a77443b7b7af2</msg>
<status status="PASS" starttime="20220707 03:44:15.678" endtime="20220707 03:44:15.678"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:16.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:15.678" endtime="20220707 03:44:16.031"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:16.031" endtime="20220707 03:44:16.031"/>
</return>
<msg timestamp="20220707 03:44:16.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:15.677" endtime="20220707 03:44:16.031"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:16.031" endtime="20220707 03:44:16.032"/>
</return>
<status status="PASS" starttime="20220707 03:44:15.677" endtime="20220707 03:44:16.032"/>
</kw>
<status status="PASS" starttime="20220707 03:44:15.677" endtime="20220707 03:44:16.032"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 03:44:16.032" endtime="20220707 03:44:16.033"/>
</kw>
<status status="PASS" starttime="20220707 03:44:15.676" endtime="20220707 03:44:16.033"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220707 03:44:13.832" endtime="20220707 03:44:16.033"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 03:44:16.047" endtime="20220707 03:44:16.048"/>
</kw>
<status status="PASS" starttime="20220707 03:44:16.047" endtime="20220707 03:44:16.048"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:16.050" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:16.049" endtime="20220707 03:44:16.050"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:16.050" endtime="20220707 03:44:16.050"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:16.051" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:44:16.050" endtime="20220707 03:44:16.051"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:16.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.051" endtime="20220707 03:44:16.326"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:16.326" endtime="20220707 03:44:16.326"/>
</return>
<msg timestamp="20220707 03:44:16.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.049" endtime="20220707 03:44:16.327"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:16.327" endtime="20220707 03:44:16.327"/>
</return>
<msg timestamp="20220707 03:44:16.327" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.049" endtime="20220707 03:44:16.327"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 03:44:16.328" level="INFO">${TEST_SUITE_BOARD_ID} = 62c656908ebd973217585a8b</msg>
<status status="PASS" starttime="20220707 03:44:16.327" endtime="20220707 03:44:16.328"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:16.408" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.328" endtime="20220707 03:44:16.408"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 03:44:16.410" level="INFO">${TEST_SUITE_LIST_ID} = 62c656908ebd973217585a92</msg>
<status status="PASS" starttime="20220707 03:44:16.409" endtime="20220707 03:44:16.410"/>
</kw>
<status status="PASS" starttime="20220707 03:44:16.048" endtime="20220707 03:44:16.411"/>
</kw>
<status status="PASS" starttime="20220707 03:44:16.047" endtime="20220707 03:44:16.411"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:16.413" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:16.413" endtime="20220707 03:44:16.413"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:16.413" endtime="20220707 03:44:16.413"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:16.414" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 03:44:16.413" endtime="20220707 03:44:16.414"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:16.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.414" endtime="20220707 03:44:16.521"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:16.522" endtime="20220707 03:44:16.522"/>
</return>
<msg timestamp="20220707 03:44:16.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.412" endtime="20220707 03:44:16.522"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:16.522" endtime="20220707 03:44:16.522"/>
</return>
<msg timestamp="20220707 03:44:16.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.412" endtime="20220707 03:44:16.523"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:16.523" endtime="20220707 03:44:16.525"/>
</kw>
<status status="PASS" starttime="20220707 03:44:16.523" endtime="20220707 03:44:16.526"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:16.526" endtime="20220707 03:44:16.526"/>
</return>
<msg timestamp="20220707 03:44:16.527" level="INFO">${LABEL_ID} = 62c6569077618432644b85b5</msg>
<status status="PASS" starttime="20220707 03:44:16.526" endtime="20220707 03:44:16.527"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:16.529" level="INFO">${url} = labels/62c6569077618432644b85b5</msg>
<status status="PASS" starttime="20220707 03:44:16.528" endtime="20220707 03:44:16.529"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:16.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.529" endtime="20220707 03:44:16.614"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:16.614" endtime="20220707 03:44:16.614"/>
</return>
<msg timestamp="20220707 03:44:16.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.528" endtime="20220707 03:44:16.615"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:16.615" endtime="20220707 03:44:16.615"/>
</return>
<msg timestamp="20220707 03:44:16.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.527" endtime="20220707 03:44:16.615"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:16.616" endtime="20220707 03:44:16.616"/>
</return>
<msg timestamp="20220707 03:44:16.617" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220707 03:44:16.615" endtime="20220707 03:44:16.617"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:16.617" endtime="20220707 03:44:16.617"/>
</return>
<msg timestamp="20220707 03:44:16.618" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220707 03:44:16.617" endtime="20220707 03:44:16.618"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:16.618" endtime="20220707 03:44:16.619"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:16.619" endtime="20220707 03:44:16.619"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:16.621" level="INFO">${url} = labels/62c6569077618432644b85b5</msg>
<status status="PASS" starttime="20220707 03:44:16.621" endtime="20220707 03:44:16.621"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:16.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.621" endtime="20220707 03:44:16.755"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:16.755" endtime="20220707 03:44:16.755"/>
</return>
<msg timestamp="20220707 03:44:16.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.620" endtime="20220707 03:44:16.755"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:16.756" endtime="20220707 03:44:16.756"/>
</return>
<status status="PASS" starttime="20220707 03:44:16.619" endtime="20220707 03:44:16.756"/>
</kw>
<status status="PASS" starttime="20220707 03:44:16.619" endtime="20220707 03:44:16.756"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:44:16.411" endtime="20220707 03:44:16.756"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:16.759" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:16.759" endtime="20220707 03:44:16.759"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:16.759" endtime="20220707 03:44:16.760"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:16.761" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 03:44:16.760" endtime="20220707 03:44:16.761"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:16.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.761" endtime="20220707 03:44:16.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:16.893" endtime="20220707 03:44:16.893"/>
</return>
<msg timestamp="20220707 03:44:16.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.758" endtime="20220707 03:44:16.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:16.893" endtime="20220707 03:44:16.893"/>
</return>
<msg timestamp="20220707 03:44:16.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.757" endtime="20220707 03:44:16.893"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:16.894" endtime="20220707 03:44:16.896"/>
</kw>
<status status="PASS" starttime="20220707 03:44:16.894" endtime="20220707 03:44:16.897"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:16.897" endtime="20220707 03:44:16.897"/>
</return>
<msg timestamp="20220707 03:44:16.898" level="INFO">${LABEL_ID} = 62c65690616cf717519265c5</msg>
<status status="PASS" starttime="20220707 03:44:16.897" endtime="20220707 03:44:16.898"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:16.900" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:16.899" endtime="20220707 03:44:16.900"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:16.900" endtime="20220707 03:44:16.900"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:16.901" level="INFO">${url} = labels/62c65690616cf717519265c5</msg>
<status status="PASS" starttime="20220707 03:44:16.900" endtime="20220707 03:44:16.901"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:17.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.901" endtime="20220707 03:44:17.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:17.017" endtime="20220707 03:44:17.017"/>
</return>
<msg timestamp="20220707 03:44:17.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.899" endtime="20220707 03:44:17.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:17.017" endtime="20220707 03:44:17.017"/>
</return>
<msg timestamp="20220707 03:44:17.018" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:16.898" endtime="20220707 03:44:17.018"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:17.018" endtime="20220707 03:44:17.018"/>
</return>
<msg timestamp="20220707 03:44:17.019" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220707 03:44:17.018" endtime="20220707 03:44:17.019"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:17.020" endtime="20220707 03:44:17.020"/>
</return>
<msg timestamp="20220707 03:44:17.020" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220707 03:44:17.019" endtime="20220707 03:44:17.021"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:17.021" endtime="20220707 03:44:17.021"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:17.021" endtime="20220707 03:44:17.021"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:17.025" level="INFO">${url} = labels/62c65690616cf717519265c5</msg>
<status status="PASS" starttime="20220707 03:44:17.024" endtime="20220707 03:44:17.025"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:17.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:17.025" endtime="20220707 03:44:17.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:17.186" endtime="20220707 03:44:17.186"/>
</return>
<msg timestamp="20220707 03:44:17.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:17.023" endtime="20220707 03:44:17.186"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:17.186" endtime="20220707 03:44:17.186"/>
</return>
<status status="PASS" starttime="20220707 03:44:17.022" endtime="20220707 03:44:17.186"/>
</kw>
<status status="PASS" starttime="20220707 03:44:17.022" endtime="20220707 03:44:17.186"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:44:16.756" endtime="20220707 03:44:17.187"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:17.189" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:17.189" endtime="20220707 03:44:17.189"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:17.190" endtime="20220707 03:44:17.190"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:17.191" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 03:44:17.190" endtime="20220707 03:44:17.191"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:17.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:17.191" endtime="20220707 03:44:17.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:17.311" endtime="20220707 03:44:17.311"/>
</return>
<msg timestamp="20220707 03:44:17.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:17.188" endtime="20220707 03:44:17.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:17.311" endtime="20220707 03:44:17.311"/>
</return>
<msg timestamp="20220707 03:44:17.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:17.188" endtime="20220707 03:44:17.311"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 03:44:17.312" endtime="20220707 03:44:17.312"/>
</return>
<msg timestamp="20220707 03:44:17.313" level="INFO">${LABEL_ID} = 62c6569150e72878ffa49f46</msg>
<status status="PASS" starttime="20220707 03:44:17.312" endtime="20220707 03:44:17.313"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:17.315" level="INFO">${url} = labels/62c6569150e72878ffa49f46</msg>
<status status="PASS" starttime="20220707 03:44:17.315" endtime="20220707 03:44:17.315"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:17.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:17.315" endtime="20220707 03:44:17.461"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:17.461" endtime="20220707 03:44:17.461"/>
</return>
<msg timestamp="20220707 03:44:17.462" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:17.314" endtime="20220707 03:44:17.462"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:17.462" endtime="20220707 03:44:17.462"/>
</return>
<status status="PASS" starttime="20220707 03:44:17.313" endtime="20220707 03:44:17.462"/>
</kw>
<status status="PASS" starttime="20220707 03:44:17.313" endtime="20220707 03:44:17.462"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:17.466" level="INFO">${url} = labels/62c6569150e72878ffa49f46</msg>
<status status="PASS" starttime="20220707 03:44:17.465" endtime="20220707 03:44:17.466"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:17.548" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 03:44:17.466" endtime="20220707 03:44:17.548"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:17.548" endtime="20220707 03:44:17.548"/>
</return>
<msg timestamp="20220707 03:44:17.549" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 03:44:17.463" endtime="20220707 03:44:17.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:17.549" endtime="20220707 03:44:17.549"/>
</return>
<status status="PASS" starttime="20220707 03:44:17.463" endtime="20220707 03:44:17.549"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:44:17.187" endtime="20220707 03:44:17.549"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:17.552" level="INFO">${url} = boards/62c656908ebd973217585a8b</msg>
<status status="PASS" starttime="20220707 03:44:17.552" endtime="20220707 03:44:17.552"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:17.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:17.553" endtime="20220707 03:44:17.983"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:17.983" endtime="20220707 03:44:17.983"/>
</return>
<msg timestamp="20220707 03:44:17.984" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:17.551" endtime="20220707 03:44:17.984"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:17.984" endtime="20220707 03:44:17.984"/>
</return>
<status status="PASS" starttime="20220707 03:44:17.551" endtime="20220707 03:44:17.984"/>
</kw>
<status status="PASS" starttime="20220707 03:44:17.550" endtime="20220707 03:44:17.984"/>
</kw>
<status status="PASS" starttime="20220707 03:44:17.550" endtime="20220707 03:44:17.984"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 03:44:17.984" endtime="20220707 03:44:17.986"/>
</kw>
<status status="PASS" starttime="20220707 03:44:17.550" endtime="20220707 03:44:17.986"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220707 03:44:16.035" endtime="20220707 03:44:17.986"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 03:44:17.998" endtime="20220707 03:44:17.999"/>
</kw>
<status status="PASS" starttime="20220707 03:44:17.998" endtime="20220707 03:44:17.999"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:18.000" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:18.000" endtime="20220707 03:44:18.000"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:18.000" endtime="20220707 03:44:18.001"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:18.002" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 03:44:18.001" endtime="20220707 03:44:18.002"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:18.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.002" endtime="20220707 03:44:18.312"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:18.312" endtime="20220707 03:44:18.312"/>
</return>
<msg timestamp="20220707 03:44:18.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:17.999" endtime="20220707 03:44:18.312"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:18.312" endtime="20220707 03:44:18.312"/>
</return>
<msg timestamp="20220707 03:44:18.313" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:17.999" endtime="20220707 03:44:18.313"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 03:44:18.314" level="INFO">${TEST_SUITE_BOARD_ID} = 62c65692b020b947c5731003</msg>
<status status="PASS" starttime="20220707 03:44:18.313" endtime="20220707 03:44:18.314"/>
</kw>
<status status="PASS" starttime="20220707 03:44:18.313" endtime="20220707 03:44:18.314"/>
</kw>
<status status="PASS" starttime="20220707 03:44:17.999" endtime="20220707 03:44:18.314"/>
</kw>
<status status="PASS" starttime="20220707 03:44:17.998" endtime="20220707 03:44:18.315"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:18.317" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:18.317" endtime="20220707 03:44:18.317"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:18.317" endtime="20220707 03:44:18.317"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:18.318" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 03:44:18.317" endtime="20220707 03:44:18.318"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:18.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.318" endtime="20220707 03:44:18.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:18.453" endtime="20220707 03:44:18.453"/>
</return>
<msg timestamp="20220707 03:44:18.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.316" endtime="20220707 03:44:18.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:18.453" endtime="20220707 03:44:18.453"/>
</return>
<msg timestamp="20220707 03:44:18.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.315" endtime="20220707 03:44:18.453"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:18.454" endtime="20220707 03:44:18.456"/>
</kw>
<status status="PASS" starttime="20220707 03:44:18.454" endtime="20220707 03:44:18.456"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 03:44:18.315" endtime="20220707 03:44:18.456"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:18.459" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:18.459" endtime="20220707 03:44:18.459"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:18.460" endtime="20220707 03:44:18.460"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:18.461" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 03:44:18.460" endtime="20220707 03:44:18.461"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:18.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.461" endtime="20220707 03:44:18.594"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:18.594" endtime="20220707 03:44:18.594"/>
</return>
<msg timestamp="20220707 03:44:18.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.459" endtime="20220707 03:44:18.594"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:18.595" endtime="20220707 03:44:18.595"/>
</return>
<msg timestamp="20220707 03:44:18.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.458" endtime="20220707 03:44:18.595"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:18.596" endtime="20220707 03:44:18.597"/>
</kw>
<status status="PASS" starttime="20220707 03:44:18.595" endtime="20220707 03:44:18.598"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:18.600" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:18.600" endtime="20220707 03:44:18.600"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:18.600" endtime="20220707 03:44:18.600"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:18.601" level="INFO">${url} = lists/62c6569231e5325a514f21dd</msg>
<status status="PASS" starttime="20220707 03:44:18.601" endtime="20220707 03:44:18.601"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:18.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.601" endtime="20220707 03:44:18.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:18.704" endtime="20220707 03:44:18.704"/>
</return>
<msg timestamp="20220707 03:44:18.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.599" endtime="20220707 03:44:18.705"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:18.705" endtime="20220707 03:44:18.705"/>
</return>
<status status="PASS" starttime="20220707 03:44:18.598" endtime="20220707 03:44:18.705"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:18.707" level="INFO">${url} = lists/62c6569231e5325a514f21dd</msg>
<status status="PASS" starttime="20220707 03:44:18.707" endtime="20220707 03:44:18.707"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:18.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.707" endtime="20220707 03:44:18.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:18.787" endtime="20220707 03:44:18.787"/>
</return>
<msg timestamp="20220707 03:44:18.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.706" endtime="20220707 03:44:18.788"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:18.788" endtime="20220707 03:44:18.788"/>
</return>
<msg timestamp="20220707 03:44:18.788" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.705" endtime="20220707 03:44:18.788"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 03:44:18.789" endtime="20220707 03:44:18.791"/>
</kw>
<status status="PASS" starttime="20220707 03:44:18.788" endtime="20220707 03:44:18.791"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 03:44:18.791" endtime="20220707 03:44:18.792"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 03:44:18.457" endtime="20220707 03:44:18.792"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:18.797" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:18.796" endtime="20220707 03:44:18.797"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:18.797" endtime="20220707 03:44:18.797"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:18.798" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 03:44:18.797" endtime="20220707 03:44:18.798"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:18.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.798" endtime="20220707 03:44:18.928"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:18.928" endtime="20220707 03:44:18.928"/>
</return>
<msg timestamp="20220707 03:44:18.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.796" endtime="20220707 03:44:18.929"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:18.929" endtime="20220707 03:44:18.929"/>
</return>
<msg timestamp="20220707 03:44:18.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.793" endtime="20220707 03:44:18.929"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 03:44:18.931" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 03:44:18.931" endtime="20220707 03:44:18.931"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 03:44:18.932" endtime="20220707 03:44:18.932"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:18.932" level="INFO">${url} = lists/62c656923b37c887491d7ab1/closed</msg>
<status status="PASS" starttime="20220707 03:44:18.932" endtime="20220707 03:44:18.932"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 03:44:19.051" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.932" endtime="20220707 03:44:19.051"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:19.051" endtime="20220707 03:44:19.052"/>
</return>
<msg timestamp="20220707 03:44:19.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:18.930" endtime="20220707 03:44:19.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:19.052" endtime="20220707 03:44:19.052"/>
</return>
<status status="PASS" starttime="20220707 03:44:18.929" endtime="20220707 03:44:19.053"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:19.055" level="INFO">${url} = lists/62c656923b37c887491d7ab1</msg>
<status status="PASS" starttime="20220707 03:44:19.055" endtime="20220707 03:44:19.055"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 03:44:19.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:19.055" endtime="20220707 03:44:19.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:19.135" endtime="20220707 03:44:19.135"/>
</return>
<msg timestamp="20220707 03:44:19.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:19.054" endtime="20220707 03:44:19.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:19.135" endtime="20220707 03:44:19.135"/>
</return>
<msg timestamp="20220707 03:44:19.136" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:19.053" endtime="20220707 03:44:19.136"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 03:44:19.136" endtime="20220707 03:44:19.137"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 03:44:18.793" endtime="20220707 03:44:19.137"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 03:44:19.140" level="INFO">${url} = boards/62c65692b020b947c5731003</msg>
<status status="PASS" starttime="20220707 03:44:19.140" endtime="20220707 03:44:19.140"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 03:44:19.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:19.140" endtime="20220707 03:44:19.483"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:19.483" endtime="20220707 03:44:19.483"/>
</return>
<msg timestamp="20220707 03:44:19.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 03:44:19.139" endtime="20220707 03:44:19.483"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 03:44:19.483" endtime="20220707 03:44:19.483"/>
</return>
<status status="PASS" starttime="20220707 03:44:19.139" endtime="20220707 03:44:19.484"/>
</kw>
<status status="PASS" starttime="20220707 03:44:19.138" endtime="20220707 03:44:19.484"/>
</kw>
<status status="PASS" starttime="20220707 03:44:19.138" endtime="20220707 03:44:19.484"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 03:44:19.484" endtime="20220707 03:44:19.485"/>
</kw>
<status status="PASS" starttime="20220707 03:44:19.138" endtime="20220707 03:44:19.485"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220707 03:44:17.987" endtime="20220707 03:44:19.485"/>
</suite>
<status status="PASS" starttime="20220707 03:44:06.701" endtime="20220707 03:44:19.488"/>
</suite>
<status status="PASS" starttime="20220707 03:44:06.676" endtime="20220707 03:44:19.490"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
