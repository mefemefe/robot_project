<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 03:52:04.552" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 03:52:04.679" endtime="20220705 03:52:04.680"/>
</kw>
<status status="PASS" starttime="20220705 03:52:04.678" endtime="20220705 03:52:04.680"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:04.682" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:04.682" endtime="20220705 03:52:04.682"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:04.682" endtime="20220705 03:52:04.682"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:04.683" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 03:52:04.682" endtime="20220705 03:52:04.683"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:05.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:04.683" endtime="20220705 03:52:05.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:05.046" endtime="20220705 03:52:05.046"/>
</return>
<msg timestamp="20220705 03:52:05.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:04.681" endtime="20220705 03:52:05.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:05.046" endtime="20220705 03:52:05.046"/>
</return>
<msg timestamp="20220705 03:52:05.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:04.681" endtime="20220705 03:52:05.047"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:05.047" endtime="20220705 03:52:05.052"/>
</kw>
<status status="PASS" starttime="20220705 03:52:05.047" endtime="20220705 03:52:05.052"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:05.054" level="INFO">${url} = boards/62c3b5648f5d9d4585790409</msg>
<status status="PASS" starttime="20220705 03:52:05.053" endtime="20220705 03:52:05.054"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:05.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:05.054" endtime="20220705 03:52:05.408"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:05.408" endtime="20220705 03:52:05.408"/>
</return>
<msg timestamp="20220705 03:52:05.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:05.053" endtime="20220705 03:52:05.408"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:05.408" endtime="20220705 03:52:05.408"/>
</return>
<status status="PASS" starttime="20220705 03:52:05.052" endtime="20220705 03:52:05.408"/>
</kw>
<status status="PASS" starttime="20220705 03:52:05.052" endtime="20220705 03:52:05.408"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 03:52:04.680" endtime="20220705 03:52:05.408"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:05.410" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:05.410" endtime="20220705 03:52:05.410"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:05.410" endtime="20220705 03:52:05.411"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:05.411" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 03:52:05.411" endtime="20220705 03:52:05.411"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:05.635" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:05.411" endtime="20220705 03:52:05.635"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:05.635" endtime="20220705 03:52:05.635"/>
</return>
<msg timestamp="20220705 03:52:05.635" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:05.410" endtime="20220705 03:52:05.636"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:05.636" endtime="20220705 03:52:05.636"/>
</return>
<msg timestamp="20220705 03:52:05.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:05.409" endtime="20220705 03:52:05.636"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:05.636" endtime="20220705 03:52:05.640"/>
</kw>
<status status="PASS" starttime="20220705 03:52:05.636" endtime="20220705 03:52:05.640"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:05.642" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:05.641" endtime="20220705 03:52:05.642"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:05.642" endtime="20220705 03:52:05.642"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:05.642" level="INFO">${url} = boards/62c3b565ae12ac7495925054</msg>
<status status="PASS" starttime="20220705 03:52:05.642" endtime="20220705 03:52:05.642"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:05.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:05.642" endtime="20220705 03:52:05.804"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:05.804" endtime="20220705 03:52:05.804"/>
</return>
<msg timestamp="20220705 03:52:05.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:05.641" endtime="20220705 03:52:05.804"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:05.804" endtime="20220705 03:52:05.804"/>
</return>
<status status="PASS" starttime="20220705 03:52:05.640" endtime="20220705 03:52:05.804"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:05.806" level="INFO">${url} = boards/62c3b565ae12ac7495925054</msg>
<status status="PASS" starttime="20220705 03:52:05.806" endtime="20220705 03:52:05.806"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:05.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:05.806" endtime="20220705 03:52:05.926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:05.926" endtime="20220705 03:52:05.926"/>
</return>
<msg timestamp="20220705 03:52:05.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:05.805" endtime="20220705 03:52:05.926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:05.926" endtime="20220705 03:52:05.926"/>
</return>
<msg timestamp="20220705 03:52:05.927" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:05.804" endtime="20220705 03:52:05.927"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:05.927" endtime="20220705 03:52:05.931"/>
</kw>
<status status="PASS" starttime="20220705 03:52:05.927" endtime="20220705 03:52:05.931"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:05.931" endtime="20220705 03:52:05.932"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:05.934" level="INFO">${url} = boards/62c3b565ae12ac7495925054</msg>
<status status="PASS" starttime="20220705 03:52:05.934" endtime="20220705 03:52:05.934"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:06.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:05.934" endtime="20220705 03:52:06.351"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:06.351" endtime="20220705 03:52:06.351"/>
</return>
<msg timestamp="20220705 03:52:06.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:05.933" endtime="20220705 03:52:06.351"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:06.351" endtime="20220705 03:52:06.351"/>
</return>
<status status="PASS" starttime="20220705 03:52:05.932" endtime="20220705 03:52:06.352"/>
</kw>
<status status="PASS" starttime="20220705 03:52:05.932" endtime="20220705 03:52:06.352"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 03:52:05.409" endtime="20220705 03:52:06.352"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:06.354" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:06.354" endtime="20220705 03:52:06.354"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:06.354" endtime="20220705 03:52:06.354"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:06.355" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 03:52:06.354" endtime="20220705 03:52:06.355"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:06.571" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:06.355" endtime="20220705 03:52:06.571"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:06.571" endtime="20220705 03:52:06.571"/>
</return>
<msg timestamp="20220705 03:52:06.572" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:06.353" endtime="20220705 03:52:06.572"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:06.572" endtime="20220705 03:52:06.572"/>
</return>
<msg timestamp="20220705 03:52:06.572" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:06.353" endtime="20220705 03:52:06.572"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:06.574" level="INFO">${url} = boards/62c3b5662c20ee1d27fd6c4d</msg>
<status status="PASS" starttime="20220705 03:52:06.573" endtime="20220705 03:52:06.574"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:06.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:06.574" endtime="20220705 03:52:06.977"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:06.977" endtime="20220705 03:52:06.977"/>
</return>
<msg timestamp="20220705 03:52:06.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:06.573" endtime="20220705 03:52:06.977"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:06.977" endtime="20220705 03:52:06.977"/>
</return>
<status status="PASS" starttime="20220705 03:52:06.572" endtime="20220705 03:52:06.977"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:06.979" level="INFO">${url} = boards/62c3b5662c20ee1d27fd6c4d</msg>
<status status="PASS" starttime="20220705 03:52:06.979" endtime="20220705 03:52:06.979"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:07.102" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 03:52:06.979" endtime="20220705 03:52:07.102"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:07.102" endtime="20220705 03:52:07.102"/>
</return>
<msg timestamp="20220705 03:52:07.102" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 03:52:06.978" endtime="20220705 03:52:07.102"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:07.102" endtime="20220705 03:52:07.102"/>
</return>
<status status="PASS" starttime="20220705 03:52:06.978" endtime="20220705 03:52:07.102"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 03:52:06.352" endtime="20220705 03:52:07.102"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:07.104" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:07.104" endtime="20220705 03:52:07.104"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:07.105" endtime="20220705 03:52:07.105"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:07.105" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 03:52:07.105" endtime="20220705 03:52:07.105"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:07.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:07.106" endtime="20220705 03:52:07.324"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:07.324" endtime="20220705 03:52:07.324"/>
</return>
<msg timestamp="20220705 03:52:07.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:07.104" endtime="20220705 03:52:07.324"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:07.324" endtime="20220705 03:52:07.324"/>
</return>
<msg timestamp="20220705 03:52:07.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:07.103" endtime="20220705 03:52:07.325"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:07.325" endtime="20220705 03:52:07.329"/>
</kw>
<status status="PASS" starttime="20220705 03:52:07.325" endtime="20220705 03:52:07.329"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:07.331" level="INFO">${url} = boards/62c3b56703ad4e66e7ed9aee</msg>
<status status="PASS" starttime="20220705 03:52:07.330" endtime="20220705 03:52:07.331"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:07.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:07.331" endtime="20220705 03:52:07.451"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:07.451" endtime="20220705 03:52:07.451"/>
</return>
<msg timestamp="20220705 03:52:07.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:07.330" endtime="20220705 03:52:07.451"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:07.451" endtime="20220705 03:52:07.451"/>
</return>
<msg timestamp="20220705 03:52:07.452" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:07.329" endtime="20220705 03:52:07.452"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:07.452" endtime="20220705 03:52:07.456"/>
</kw>
<status status="PASS" starttime="20220705 03:52:07.452" endtime="20220705 03:52:07.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:07.456" endtime="20220705 03:52:07.457"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:07.459" level="INFO">${url} = boards/62c3b56703ad4e66e7ed9aee</msg>
<status status="PASS" starttime="20220705 03:52:07.458" endtime="20220705 03:52:07.459"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:07.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:07.459" endtime="20220705 03:52:07.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:07.884" endtime="20220705 03:52:07.884"/>
</return>
<msg timestamp="20220705 03:52:07.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:07.458" endtime="20220705 03:52:07.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:07.884" endtime="20220705 03:52:07.884"/>
</return>
<status status="PASS" starttime="20220705 03:52:07.457" endtime="20220705 03:52:07.884"/>
</kw>
<status status="PASS" starttime="20220705 03:52:07.457" endtime="20220705 03:52:07.884"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 03:52:07.103" endtime="20220705 03:52:07.884"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:07.887" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:07.886" endtime="20220705 03:52:07.887"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:07.887" endtime="20220705 03:52:07.887"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:07.888" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 03:52:07.887" endtime="20220705 03:52:07.888"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:08.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:07.888" endtime="20220705 03:52:08.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:08.179" endtime="20220705 03:52:08.179"/>
</return>
<msg timestamp="20220705 03:52:08.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:07.886" endtime="20220705 03:52:08.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:08.179" endtime="20220705 03:52:08.179"/>
</return>
<msg timestamp="20220705 03:52:08.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:07.886" endtime="20220705 03:52:08.179"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:08.180" endtime="20220705 03:52:08.184"/>
</kw>
<status status="PASS" starttime="20220705 03:52:08.179" endtime="20220705 03:52:08.184"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:08.185" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:08.185" endtime="20220705 03:52:08.185"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:08.185" endtime="20220705 03:52:08.186"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:08.186" level="INFO">${url} = boards/62c3b567e71ff528a8ad3774</msg>
<status status="PASS" starttime="20220705 03:52:08.186" endtime="20220705 03:52:08.186"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:08.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:08.186" endtime="20220705 03:52:08.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:08.338" endtime="20220705 03:52:08.338"/>
</return>
<msg timestamp="20220705 03:52:08.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:08.185" endtime="20220705 03:52:08.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:08.338" endtime="20220705 03:52:08.339"/>
</return>
<status status="PASS" starttime="20220705 03:52:08.184" endtime="20220705 03:52:08.339"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:08.340" level="INFO">${url} = boards/62c3b567e71ff528a8ad3774</msg>
<status status="PASS" starttime="20220705 03:52:08.340" endtime="20220705 03:52:08.340"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:08.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:08.340" endtime="20220705 03:52:08.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:08.460" endtime="20220705 03:52:08.460"/>
</return>
<msg timestamp="20220705 03:52:08.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:08.340" endtime="20220705 03:52:08.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:08.460" endtime="20220705 03:52:08.460"/>
</return>
<msg timestamp="20220705 03:52:08.461" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:08.339" endtime="20220705 03:52:08.461"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:08.461" endtime="20220705 03:52:08.462"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:08.463" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:08.463" endtime="20220705 03:52:08.463"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:08.463" endtime="20220705 03:52:08.464"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:08.464" level="INFO">${url} = boards/62c3b567e71ff528a8ad3774</msg>
<status status="PASS" starttime="20220705 03:52:08.464" endtime="20220705 03:52:08.464"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:08.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:08.464" endtime="20220705 03:52:08.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:08.626" endtime="20220705 03:52:08.626"/>
</return>
<msg timestamp="20220705 03:52:08.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:08.462" endtime="20220705 03:52:08.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:08.627" endtime="20220705 03:52:08.627"/>
</return>
<status status="PASS" starttime="20220705 03:52:08.462" endtime="20220705 03:52:08.627"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:08.628" level="INFO">${url} = boards/62c3b567e71ff528a8ad3774</msg>
<status status="PASS" starttime="20220705 03:52:08.628" endtime="20220705 03:52:08.628"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:08.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:08.628" endtime="20220705 03:52:08.738"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:08.739" endtime="20220705 03:52:08.739"/>
</return>
<msg timestamp="20220705 03:52:08.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:08.628" endtime="20220705 03:52:08.739"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:08.739" endtime="20220705 03:52:08.739"/>
</return>
<msg timestamp="20220705 03:52:08.739" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:08.627" endtime="20220705 03:52:08.739"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:08.739" endtime="20220705 03:52:08.740"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:08.742" level="INFO">${url} = boards/62c3b567e71ff528a8ad3774</msg>
<status status="PASS" starttime="20220705 03:52:08.742" endtime="20220705 03:52:08.742"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:09.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:08.742" endtime="20220705 03:52:09.137"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:09.137" endtime="20220705 03:52:09.137"/>
</return>
<msg timestamp="20220705 03:52:09.138" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:08.741" endtime="20220705 03:52:09.138"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:09.138" endtime="20220705 03:52:09.138"/>
</return>
<status status="PASS" starttime="20220705 03:52:08.740" endtime="20220705 03:52:09.138"/>
</kw>
<status status="PASS" starttime="20220705 03:52:08.740" endtime="20220705 03:52:09.138"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 03:52:07.885" endtime="20220705 03:52:09.138"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 03:52:09.139" endtime="20220705 03:52:09.140"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 03:52:04.572" endtime="20220705 03:52:09.140"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 03:52:09.152" endtime="20220705 03:52:09.152"/>
</kw>
<status status="PASS" starttime="20220705 03:52:09.152" endtime="20220705 03:52:09.152"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:09.153" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:09.153" endtime="20220705 03:52:09.153"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:09.153" endtime="20220705 03:52:09.153"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:09.154" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 03:52:09.154" endtime="20220705 03:52:09.154"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:09.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.154" endtime="20220705 03:52:09.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:09.460" endtime="20220705 03:52:09.460"/>
</return>
<msg timestamp="20220705 03:52:09.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.153" endtime="20220705 03:52:09.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:09.460" endtime="20220705 03:52:09.460"/>
</return>
<msg timestamp="20220705 03:52:09.460" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.152" endtime="20220705 03:52:09.460"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 03:52:09.461" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3b5693897e50ab141ed02</msg>
<status status="PASS" starttime="20220705 03:52:09.461" endtime="20220705 03:52:09.461"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:09.462" level="INFO">${url} = boards/62c3b5693897e50ab141ed02/lists/</msg>
<status status="PASS" starttime="20220705 03:52:09.462" endtime="20220705 03:52:09.462"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:09.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.463" endtime="20220705 03:52:09.578"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:09.578" endtime="20220705 03:52:09.578"/>
</return>
<msg timestamp="20220705 03:52:09.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.462" endtime="20220705 03:52:09.578"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:09.578" endtime="20220705 03:52:09.578"/>
</return>
<msg timestamp="20220705 03:52:09.578" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.462" endtime="20220705 03:52:09.578"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 03:52:09.579" level="INFO">${TEST_SUITE_LIST_ID} = 62c3b5693897e50ab141ed09</msg>
<status status="PASS" starttime="20220705 03:52:09.579" endtime="20220705 03:52:09.579"/>
</kw>
<status status="PASS" starttime="20220705 03:52:09.152" endtime="20220705 03:52:09.579"/>
</kw>
<status status="PASS" starttime="20220705 03:52:09.151" endtime="20220705 03:52:09.580"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:09.581" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:09.581" endtime="20220705 03:52:09.581"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:09.581" endtime="20220705 03:52:09.582"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:09.582" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 03:52:09.582" endtime="20220705 03:52:09.582"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:09.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.582" endtime="20220705 03:52:09.824"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:09.824" endtime="20220705 03:52:09.824"/>
</return>
<msg timestamp="20220705 03:52:09.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.581" endtime="20220705 03:52:09.824"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:09.824" endtime="20220705 03:52:09.824"/>
</return>
<msg timestamp="20220705 03:52:09.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.580" endtime="20220705 03:52:09.825"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:09.825" endtime="20220705 03:52:09.830"/>
</kw>
<status status="PASS" starttime="20220705 03:52:09.825" endtime="20220705 03:52:09.830"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:09.831" endtime="20220705 03:52:09.831"/>
</return>
<msg timestamp="20220705 03:52:09.831" level="INFO">${CARD_ID} = 62c3b56941b92c44aca6667d</msg>
<status status="PASS" starttime="20220705 03:52:09.830" endtime="20220705 03:52:09.831"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:09.832" level="INFO">${url} = cards/62c3b56941b92c44aca6667d</msg>
<status status="PASS" starttime="20220705 03:52:09.832" endtime="20220705 03:52:09.832"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:09.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.833" endtime="20220705 03:52:09.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:09.971" endtime="20220705 03:52:09.971"/>
</return>
<msg timestamp="20220705 03:52:09.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.832" endtime="20220705 03:52:09.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:09.971" endtime="20220705 03:52:09.972"/>
</return>
<msg timestamp="20220705 03:52:09.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.831" endtime="20220705 03:52:09.972"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:09.972" endtime="20220705 03:52:09.972"/>
</return>
<msg timestamp="20220705 03:52:09.973" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 03:52:09.972" endtime="20220705 03:52:09.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:09.973" endtime="20220705 03:52:09.973"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:09.975" level="INFO">${url} = cards/62c3b56941b92c44aca6667d</msg>
<status status="PASS" starttime="20220705 03:52:09.975" endtime="20220705 03:52:09.975"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:10.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.975" endtime="20220705 03:52:10.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:10.185" endtime="20220705 03:52:10.185"/>
</return>
<msg timestamp="20220705 03:52:10.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:09.974" endtime="20220705 03:52:10.186"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:10.186" endtime="20220705 03:52:10.186"/>
</return>
<status status="PASS" starttime="20220705 03:52:09.974" endtime="20220705 03:52:10.186"/>
</kw>
<status status="PASS" starttime="20220705 03:52:09.974" endtime="20220705 03:52:10.186"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 03:52:09.580" endtime="20220705 03:52:10.186"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:10.188" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:10.188" endtime="20220705 03:52:10.188"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:10.188" endtime="20220705 03:52:10.188"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:10.189" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 03:52:10.188" endtime="20220705 03:52:10.189"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:10.416" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.189" endtime="20220705 03:52:10.416"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:10.416" endtime="20220705 03:52:10.416"/>
</return>
<msg timestamp="20220705 03:52:10.416" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.187" endtime="20220705 03:52:10.416"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:10.416" endtime="20220705 03:52:10.416"/>
</return>
<msg timestamp="20220705 03:52:10.416" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.187" endtime="20220705 03:52:10.416"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:10.417" endtime="20220705 03:52:10.417"/>
</return>
<msg timestamp="20220705 03:52:10.418" level="INFO">${CARD_ID} = 62c3b56a598f522ce1540318</msg>
<status status="PASS" starttime="20220705 03:52:10.417" endtime="20220705 03:52:10.418"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:10.420" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:10.419" endtime="20220705 03:52:10.420"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:10.420" endtime="20220705 03:52:10.420"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:10.420" level="INFO">${url} = cards/62c3b56a598f522ce1540318</msg>
<status status="PASS" starttime="20220705 03:52:10.420" endtime="20220705 03:52:10.420"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:10.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.420" endtime="20220705 03:52:10.614"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:10.614" endtime="20220705 03:52:10.614"/>
</return>
<msg timestamp="20220705 03:52:10.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.419" endtime="20220705 03:52:10.615"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:10.615" endtime="20220705 03:52:10.615"/>
</return>
<msg timestamp="20220705 03:52:10.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.418" endtime="20220705 03:52:10.615"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:10.615" endtime="20220705 03:52:10.615"/>
</return>
<status status="PASS" starttime="20220705 03:52:10.418" endtime="20220705 03:52:10.615"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:10.616" level="INFO">${url} = cards/62c3b56a598f522ce1540318</msg>
<status status="PASS" starttime="20220705 03:52:10.616" endtime="20220705 03:52:10.616"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:10.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.617" endtime="20220705 03:52:10.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:10.733" endtime="20220705 03:52:10.733"/>
</return>
<msg timestamp="20220705 03:52:10.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.616" endtime="20220705 03:52:10.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:10.733" endtime="20220705 03:52:10.733"/>
</return>
<msg timestamp="20220705 03:52:10.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.615" endtime="20220705 03:52:10.733"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:10.734" endtime="20220705 03:52:10.734"/>
</return>
<msg timestamp="20220705 03:52:10.734" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 03:52:10.733" endtime="20220705 03:52:10.734"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 03:52:10.735" endtime="20220705 03:52:10.735"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:10.736" level="INFO">${url} = cards/62c3b56a598f522ce1540318</msg>
<status status="PASS" starttime="20220705 03:52:10.736" endtime="20220705 03:52:10.736"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:10.954" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.736" endtime="20220705 03:52:10.954"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:10.954" endtime="20220705 03:52:10.954"/>
</return>
<msg timestamp="20220705 03:52:10.954" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.736" endtime="20220705 03:52:10.954"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:10.954" endtime="20220705 03:52:10.954"/>
</return>
<status status="PASS" starttime="20220705 03:52:10.735" endtime="20220705 03:52:10.954"/>
</kw>
<status status="PASS" starttime="20220705 03:52:10.735" endtime="20220705 03:52:10.954"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 03:52:10.186" endtime="20220705 03:52:10.955"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:10.957" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:10.957" endtime="20220705 03:52:10.957"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:10.957" endtime="20220705 03:52:10.957"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:10.958" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 03:52:10.958" endtime="20220705 03:52:10.958"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:11.170" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.958" endtime="20220705 03:52:11.170"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:11.170" endtime="20220705 03:52:11.170"/>
</return>
<msg timestamp="20220705 03:52:11.170" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.956" endtime="20220705 03:52:11.170"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:11.170" endtime="20220705 03:52:11.170"/>
</return>
<msg timestamp="20220705 03:52:11.170" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:10.956" endtime="20220705 03:52:11.170"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:11.171" endtime="20220705 03:52:11.171"/>
</return>
<msg timestamp="20220705 03:52:11.171" level="INFO">${CARD_ID} = 62c3b56baf72d186c9e23b88</msg>
<status status="PASS" starttime="20220705 03:52:11.170" endtime="20220705 03:52:11.172"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:11.173" level="INFO">${url} = cards/62c3b56baf72d186c9e23b88</msg>
<status status="PASS" starttime="20220705 03:52:11.172" endtime="20220705 03:52:11.173"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:11.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:11.173" endtime="20220705 03:52:11.381"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:11.381" endtime="20220705 03:52:11.381"/>
</return>
<msg timestamp="20220705 03:52:11.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:11.172" endtime="20220705 03:52:11.381"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:11.381" endtime="20220705 03:52:11.382"/>
</return>
<msg timestamp="20220705 03:52:11.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:11.172" endtime="20220705 03:52:11.382"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:11.382" endtime="20220705 03:52:11.384"/>
</kw>
<status status="PASS" starttime="20220705 03:52:11.382" endtime="20220705 03:52:11.384"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:11.385" level="INFO">${url} = cards/62c3b56baf72d186c9e23b88</msg>
<status status="PASS" starttime="20220705 03:52:11.385" endtime="20220705 03:52:11.385"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:11.490" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 03:52:11.385" endtime="20220705 03:52:11.490"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:11.490" endtime="20220705 03:52:11.490"/>
</return>
<msg timestamp="20220705 03:52:11.490" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 03:52:11.385" endtime="20220705 03:52:11.490"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:11.490" endtime="20220705 03:52:11.490"/>
</return>
<status status="PASS" starttime="20220705 03:52:11.384" endtime="20220705 03:52:11.490"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 03:52:10.955" endtime="20220705 03:52:11.490"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:11.493" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:11.493" endtime="20220705 03:52:11.493"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:11.493" endtime="20220705 03:52:11.493"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:11.494" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 03:52:11.493" endtime="20220705 03:52:11.494"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:11.703" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:11.494" endtime="20220705 03:52:11.703"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:11.703" endtime="20220705 03:52:11.703"/>
</return>
<msg timestamp="20220705 03:52:11.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:11.492" endtime="20220705 03:52:11.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:11.704" endtime="20220705 03:52:11.704"/>
</return>
<msg timestamp="20220705 03:52:11.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:11.492" endtime="20220705 03:52:11.704"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:11.704" endtime="20220705 03:52:11.704"/>
</return>
<msg timestamp="20220705 03:52:11.705" level="INFO">${CARD_ID} = 62c3b56b4bf0fd4580d09932</msg>
<status status="PASS" starttime="20220705 03:52:11.704" endtime="20220705 03:52:11.705"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:11.706" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:11.706" endtime="20220705 03:52:11.706"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:11.706" endtime="20220705 03:52:11.707"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:11.707" level="INFO">${url} = cards/62c3b56b4bf0fd4580d09932</msg>
<status status="PASS" starttime="20220705 03:52:11.707" endtime="20220705 03:52:11.707"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:11.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:11.707" endtime="20220705 03:52:11.915"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:11.915" endtime="20220705 03:52:11.915"/>
</return>
<msg timestamp="20220705 03:52:11.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:11.706" endtime="20220705 03:52:11.916"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:11.916" endtime="20220705 03:52:11.916"/>
</return>
<msg timestamp="20220705 03:52:11.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:11.705" endtime="20220705 03:52:11.916"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:11.916" endtime="20220705 03:52:11.921"/>
</kw>
<status status="PASS" starttime="20220705 03:52:11.916" endtime="20220705 03:52:11.922"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:11.923" level="INFO">${url} = cards/62c3b56b4bf0fd4580d09932</msg>
<status status="PASS" starttime="20220705 03:52:11.923" endtime="20220705 03:52:11.923"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:12.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:11.923" endtime="20220705 03:52:12.047"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:12.047" endtime="20220705 03:52:12.047"/>
</return>
<msg timestamp="20220705 03:52:12.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:11.922" endtime="20220705 03:52:12.047"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:12.048" endtime="20220705 03:52:12.048"/>
</return>
<msg timestamp="20220705 03:52:12.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:11.922" endtime="20220705 03:52:12.048"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:12.048" endtime="20220705 03:52:12.048"/>
</return>
<msg timestamp="20220705 03:52:12.049" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 03:52:12.048" endtime="20220705 03:52:12.049"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:12.049" endtime="20220705 03:52:12.049"/>
</return>
<msg timestamp="20220705 03:52:12.050" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 03:52:12.049" endtime="20220705 03:52:12.050"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:12.050" endtime="20220705 03:52:12.050"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:12.051" endtime="20220705 03:52:12.051"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:12.052" level="INFO">${url} = cards/62c3b56b4bf0fd4580d09932</msg>
<status status="PASS" starttime="20220705 03:52:12.052" endtime="20220705 03:52:12.052"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:12.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:12.052" endtime="20220705 03:52:12.259"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:12.259" endtime="20220705 03:52:12.259"/>
</return>
<msg timestamp="20220705 03:52:12.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:12.051" endtime="20220705 03:52:12.259"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:12.259" endtime="20220705 03:52:12.259"/>
</return>
<status status="PASS" starttime="20220705 03:52:12.051" endtime="20220705 03:52:12.259"/>
</kw>
<status status="PASS" starttime="20220705 03:52:12.051" endtime="20220705 03:52:12.259"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 03:52:11.491" endtime="20220705 03:52:12.259"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:12.262" level="INFO">${url} = boards/62c3b5693897e50ab141ed02</msg>
<status status="PASS" starttime="20220705 03:52:12.262" endtime="20220705 03:52:12.262"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:12.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:12.263" endtime="20220705 03:52:12.670"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:12.670" endtime="20220705 03:52:12.670"/>
</return>
<msg timestamp="20220705 03:52:12.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:12.262" endtime="20220705 03:52:12.670"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:12.670" endtime="20220705 03:52:12.670"/>
</return>
<status status="PASS" starttime="20220705 03:52:12.261" endtime="20220705 03:52:12.670"/>
</kw>
<status status="PASS" starttime="20220705 03:52:12.261" endtime="20220705 03:52:12.670"/>
</kw>
<status status="PASS" starttime="20220705 03:52:12.261" endtime="20220705 03:52:12.670"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 03:52:12.670" endtime="20220705 03:52:12.671"/>
</kw>
<status status="PASS" starttime="20220705 03:52:12.260" endtime="20220705 03:52:12.671"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 03:52:09.142" endtime="20220705 03:52:12.671"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 03:52:12.682" endtime="20220705 03:52:12.683"/>
</kw>
<status status="PASS" starttime="20220705 03:52:12.682" endtime="20220705 03:52:12.683"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:12.684" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:12.684" endtime="20220705 03:52:12.684"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:12.684" endtime="20220705 03:52:12.684"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:12.685" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 03:52:12.684" endtime="20220705 03:52:12.685"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:12.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:12.685" endtime="20220705 03:52:12.941"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:12.941" endtime="20220705 03:52:12.941"/>
</return>
<msg timestamp="20220705 03:52:12.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:12.683" endtime="20220705 03:52:12.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:12.942" endtime="20220705 03:52:12.942"/>
</return>
<msg timestamp="20220705 03:52:12.942" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:12.683" endtime="20220705 03:52:12.942"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 03:52:12.943" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3b56cf764142d04dc3a49</msg>
<status status="PASS" starttime="20220705 03:52:12.942" endtime="20220705 03:52:12.943"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:12.944" level="INFO">${url} = boards/62c3b56cf764142d04dc3a49/lists/</msg>
<status status="PASS" starttime="20220705 03:52:12.943" endtime="20220705 03:52:12.944"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:13.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:12.944" endtime="20220705 03:52:13.054"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:13.054" endtime="20220705 03:52:13.055"/>
</return>
<msg timestamp="20220705 03:52:13.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:12.943" endtime="20220705 03:52:13.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:13.055" endtime="20220705 03:52:13.055"/>
</return>
<msg timestamp="20220705 03:52:13.055" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:12.943" endtime="20220705 03:52:13.055"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 03:52:13.056" level="INFO">${TEST_SUITE_LIST_ID} = 62c3b56cf764142d04dc3a50</msg>
<status status="PASS" starttime="20220705 03:52:13.055" endtime="20220705 03:52:13.056"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:13.057" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:13.057" endtime="20220705 03:52:13.057"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:13.058" endtime="20220705 03:52:13.058"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:13.058" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 03:52:13.058" endtime="20220705 03:52:13.058"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:13.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.059" endtime="20220705 03:52:13.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:13.313" endtime="20220705 03:52:13.313"/>
</return>
<msg timestamp="20220705 03:52:13.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.057" endtime="20220705 03:52:13.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:13.313" endtime="20220705 03:52:13.313"/>
</return>
<msg timestamp="20220705 03:52:13.313" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.056" endtime="20220705 03:52:13.313"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 03:52:13.314" level="INFO">${TEST_SUITE_CARD_ID} = 62c3b56d61ea4a3642f51b1f</msg>
<status status="PASS" starttime="20220705 03:52:13.313" endtime="20220705 03:52:13.314"/>
</kw>
<status status="PASS" starttime="20220705 03:52:12.683" endtime="20220705 03:52:13.314"/>
</kw>
<status status="PASS" starttime="20220705 03:52:12.682" endtime="20220705 03:52:13.314"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:13.316" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:13.316" endtime="20220705 03:52:13.316"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:13.316" endtime="20220705 03:52:13.317"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:13.317" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 03:52:13.317" endtime="20220705 03:52:13.317"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:13.500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.317" endtime="20220705 03:52:13.500"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:13.500" endtime="20220705 03:52:13.500"/>
</return>
<msg timestamp="20220705 03:52:13.500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.316" endtime="20220705 03:52:13.500"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:13.500" endtime="20220705 03:52:13.500"/>
</return>
<msg timestamp="20220705 03:52:13.500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.315" endtime="20220705 03:52:13.500"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:13.501" endtime="20220705 03:52:13.501"/>
</return>
<msg timestamp="20220705 03:52:13.501" level="INFO">${checklist_id} = 62c3b56d23ac6703159dc5f5</msg>
<status status="PASS" starttime="20220705 03:52:13.500" endtime="20220705 03:52:13.501"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:13.503" level="INFO">${url} = checklists/62c3b56d23ac6703159dc5f5</msg>
<status status="PASS" starttime="20220705 03:52:13.502" endtime="20220705 03:52:13.503"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:13.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.503" endtime="20220705 03:52:13.631"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:13.632" endtime="20220705 03:52:13.632"/>
</return>
<msg timestamp="20220705 03:52:13.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.502" endtime="20220705 03:52:13.632"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:13.632" endtime="20220705 03:52:13.632"/>
</return>
<msg timestamp="20220705 03:52:13.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.502" endtime="20220705 03:52:13.632"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:13.633" endtime="20220705 03:52:13.633"/>
</return>
<msg timestamp="20220705 03:52:13.633" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 03:52:13.632" endtime="20220705 03:52:13.633"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:13.634" endtime="20220705 03:52:13.634"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:13.635" level="INFO">${url} = checklists/62c3b56d23ac6703159dc5f5</msg>
<status status="PASS" starttime="20220705 03:52:13.635" endtime="20220705 03:52:13.635"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:13.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.635" endtime="20220705 03:52:13.810"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:13.810" endtime="20220705 03:52:13.810"/>
</return>
<msg timestamp="20220705 03:52:13.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.634" endtime="20220705 03:52:13.810"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:13.810" endtime="20220705 03:52:13.810"/>
</return>
<status status="PASS" starttime="20220705 03:52:13.634" endtime="20220705 03:52:13.810"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 03:52:13.315" endtime="20220705 03:52:13.810"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:13.812" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:13.812" endtime="20220705 03:52:13.813"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:13.813" endtime="20220705 03:52:13.813"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:13.814" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 03:52:13.813" endtime="20220705 03:52:13.814"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:13.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.814" endtime="20220705 03:52:13.978"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:13.978" endtime="20220705 03:52:13.978"/>
</return>
<msg timestamp="20220705 03:52:13.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.812" endtime="20220705 03:52:13.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:13.979" endtime="20220705 03:52:13.979"/>
</return>
<msg timestamp="20220705 03:52:13.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.811" endtime="20220705 03:52:13.979"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:13.979" endtime="20220705 03:52:13.979"/>
</return>
<msg timestamp="20220705 03:52:13.980" level="INFO">${checklist_id} = 62c3b56de7c1f5662c7e1ed1</msg>
<status status="PASS" starttime="20220705 03:52:13.979" endtime="20220705 03:52:13.980"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:13.982" level="INFO">${url} = checklists/62c3b56de7c1f5662c7e1ed1</msg>
<status status="PASS" starttime="20220705 03:52:13.981" endtime="20220705 03:52:13.982"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:14.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.982" endtime="20220705 03:52:14.161"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:14.161" endtime="20220705 03:52:14.161"/>
</return>
<msg timestamp="20220705 03:52:14.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.981" endtime="20220705 03:52:14.161"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:14.161" endtime="20220705 03:52:14.161"/>
</return>
<msg timestamp="20220705 03:52:14.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:13.980" endtime="20220705 03:52:14.161"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:14.162" endtime="20220705 03:52:14.163"/>
</kw>
<status status="PASS" starttime="20220705 03:52:14.161" endtime="20220705 03:52:14.164"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:14.165" level="INFO">${url} = checklists/62c3b56de7c1f5662c7e1ed1</msg>
<status status="PASS" starttime="20220705 03:52:14.164" endtime="20220705 03:52:14.165"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:14.268" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 03:52:14.165" endtime="20220705 03:52:14.268"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:14.268" endtime="20220705 03:52:14.268"/>
</return>
<msg timestamp="20220705 03:52:14.268" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 03:52:14.164" endtime="20220705 03:52:14.268"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:14.268" endtime="20220705 03:52:14.268"/>
</return>
<status status="PASS" starttime="20220705 03:52:14.164" endtime="20220705 03:52:14.269"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 03:52:13.811" endtime="20220705 03:52:14.269"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:14.272" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:14.271" endtime="20220705 03:52:14.272"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:14.272" endtime="20220705 03:52:14.272"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:14.273" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 03:52:14.273" endtime="20220705 03:52:14.273"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:14.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:14.273" endtime="20220705 03:52:14.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:14.439" endtime="20220705 03:52:14.439"/>
</return>
<msg timestamp="20220705 03:52:14.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:14.270" endtime="20220705 03:52:14.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:14.439" endtime="20220705 03:52:14.439"/>
</return>
<msg timestamp="20220705 03:52:14.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:14.270" endtime="20220705 03:52:14.440"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:14.440" endtime="20220705 03:52:14.440"/>
</return>
<msg timestamp="20220705 03:52:14.441" level="INFO">${checklist_id} = 62c3b56eb37ed1151952d285</msg>
<status status="PASS" starttime="20220705 03:52:14.440" endtime="20220705 03:52:14.441"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:14.442" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:14.442" endtime="20220705 03:52:14.442"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:14.442" endtime="20220705 03:52:14.442"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:14.443" level="INFO">${url} = checklists/62c3b56eb37ed1151952d285</msg>
<status status="PASS" starttime="20220705 03:52:14.442" endtime="20220705 03:52:14.443"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:14.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:14.443" endtime="20220705 03:52:14.604"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:14.604" endtime="20220705 03:52:14.604"/>
</return>
<msg timestamp="20220705 03:52:14.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:14.441" endtime="20220705 03:52:14.604"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:14.604" endtime="20220705 03:52:14.604"/>
</return>
<msg timestamp="20220705 03:52:14.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:14.441" endtime="20220705 03:52:14.604"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:14.606" level="INFO">${url} = checklists/62c3b56eb37ed1151952d285</msg>
<status status="PASS" starttime="20220705 03:52:14.605" endtime="20220705 03:52:14.606"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:14.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:14.606" endtime="20220705 03:52:14.726"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:14.726" endtime="20220705 03:52:14.726"/>
</return>
<msg timestamp="20220705 03:52:14.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:14.605" endtime="20220705 03:52:14.727"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:14.727" endtime="20220705 03:52:14.727"/>
</return>
<msg timestamp="20220705 03:52:14.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:14.604" endtime="20220705 03:52:14.727"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:14.727" endtime="20220705 03:52:14.727"/>
</return>
<msg timestamp="20220705 03:52:14.728" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 03:52:14.727" endtime="20220705 03:52:14.728"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:14.728" endtime="20220705 03:52:14.728"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:14.740" level="INFO">${url} = checklists/62c3b56eb37ed1151952d285</msg>
<status status="PASS" starttime="20220705 03:52:14.740" endtime="20220705 03:52:14.740"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:14.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:14.740" endtime="20220705 03:52:14.915"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:14.915" endtime="20220705 03:52:14.915"/>
</return>
<msg timestamp="20220705 03:52:14.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:14.739" endtime="20220705 03:52:14.915"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:14.915" endtime="20220705 03:52:14.915"/>
</return>
<status status="PASS" starttime="20220705 03:52:14.729" endtime="20220705 03:52:14.915"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 03:52:14.269" endtime="20220705 03:52:14.915"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:14.917" level="INFO">${url} = boards/62c3b56cf764142d04dc3a49</msg>
<status status="PASS" starttime="20220705 03:52:14.917" endtime="20220705 03:52:14.917"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:15.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:14.917" endtime="20220705 03:52:15.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:15.340" endtime="20220705 03:52:15.340"/>
</return>
<msg timestamp="20220705 03:52:15.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:14.917" endtime="20220705 03:52:15.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:15.340" endtime="20220705 03:52:15.340"/>
</return>
<status status="PASS" starttime="20220705 03:52:14.916" endtime="20220705 03:52:15.340"/>
</kw>
<status status="PASS" starttime="20220705 03:52:14.916" endtime="20220705 03:52:15.340"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 03:52:15.340" endtime="20220705 03:52:15.341"/>
</kw>
<status status="PASS" starttime="20220705 03:52:14.916" endtime="20220705 03:52:15.341"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 03:52:12.673" endtime="20220705 03:52:15.341"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 03:52:15.351" endtime="20220705 03:52:15.351"/>
</kw>
<status status="PASS" starttime="20220705 03:52:15.351" endtime="20220705 03:52:15.351"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:15.352" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:15.352" endtime="20220705 03:52:15.352"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:15.352" endtime="20220705 03:52:15.353"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:15.353" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 03:52:15.353" endtime="20220705 03:52:15.353"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:15.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:15.353" endtime="20220705 03:52:15.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:15.617" endtime="20220705 03:52:15.617"/>
</return>
<msg timestamp="20220705 03:52:15.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:15.352" endtime="20220705 03:52:15.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:15.617" endtime="20220705 03:52:15.617"/>
</return>
<msg timestamp="20220705 03:52:15.617" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:15.352" endtime="20220705 03:52:15.617"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 03:52:15.618" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3b56fe310876f9f04bc8c</msg>
<status status="PASS" starttime="20220705 03:52:15.618" endtime="20220705 03:52:15.618"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:15.729" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:15.618" endtime="20220705 03:52:15.729"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 03:52:15.730" level="INFO">${TEST_SUITE_LIST_ID} = 62c3b56fe310876f9f04bc93</msg>
<status status="PASS" starttime="20220705 03:52:15.729" endtime="20220705 03:52:15.730"/>
</kw>
<status status="PASS" starttime="20220705 03:52:15.351" endtime="20220705 03:52:15.730"/>
</kw>
<status status="PASS" starttime="20220705 03:52:15.351" endtime="20220705 03:52:15.730"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:15.732" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:15.732" endtime="20220705 03:52:15.732"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:15.732" endtime="20220705 03:52:15.732"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:15.733" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 03:52:15.732" endtime="20220705 03:52:15.733"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:15.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:15.733" endtime="20220705 03:52:15.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:15.884" endtime="20220705 03:52:15.885"/>
</return>
<msg timestamp="20220705 03:52:15.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:15.731" endtime="20220705 03:52:15.885"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:15.885" endtime="20220705 03:52:15.885"/>
</return>
<msg timestamp="20220705 03:52:15.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:15.731" endtime="20220705 03:52:15.885"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:15.886" endtime="20220705 03:52:15.887"/>
</kw>
<status status="PASS" starttime="20220705 03:52:15.885" endtime="20220705 03:52:15.887"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:15.888" endtime="20220705 03:52:15.888"/>
</return>
<msg timestamp="20220705 03:52:15.889" level="INFO">${LABEL_ID} = 62c3b56f2445bd5277b1372c</msg>
<status status="PASS" starttime="20220705 03:52:15.888" endtime="20220705 03:52:15.889"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:15.890" level="INFO">${url} = labels/62c3b56f2445bd5277b1372c</msg>
<status status="PASS" starttime="20220705 03:52:15.889" endtime="20220705 03:52:15.890"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:16.000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:15.890" endtime="20220705 03:52:16.000"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:16.000" endtime="20220705 03:52:16.000"/>
</return>
<msg timestamp="20220705 03:52:16.000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:15.889" endtime="20220705 03:52:16.000"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:16.000" endtime="20220705 03:52:16.000"/>
</return>
<msg timestamp="20220705 03:52:16.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:15.889" endtime="20220705 03:52:16.001"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:16.001" endtime="20220705 03:52:16.001"/>
</return>
<msg timestamp="20220705 03:52:16.002" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 03:52:16.001" endtime="20220705 03:52:16.002"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:16.002" endtime="20220705 03:52:16.002"/>
</return>
<msg timestamp="20220705 03:52:16.003" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 03:52:16.002" endtime="20220705 03:52:16.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:16.003" endtime="20220705 03:52:16.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:16.003" endtime="20220705 03:52:16.004"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:16.005" level="INFO">${url} = labels/62c3b56f2445bd5277b1372c</msg>
<status status="PASS" starttime="20220705 03:52:16.005" endtime="20220705 03:52:16.005"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:16.183" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:16.005" endtime="20220705 03:52:16.183"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:16.183" endtime="20220705 03:52:16.184"/>
</return>
<msg timestamp="20220705 03:52:16.184" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:16.004" endtime="20220705 03:52:16.184"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:16.184" endtime="20220705 03:52:16.184"/>
</return>
<status status="PASS" starttime="20220705 03:52:16.004" endtime="20220705 03:52:16.184"/>
</kw>
<status status="PASS" starttime="20220705 03:52:16.004" endtime="20220705 03:52:16.184"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 03:52:15.730" endtime="20220705 03:52:16.184"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:16.186" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:16.186" endtime="20220705 03:52:16.186"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:16.187" endtime="20220705 03:52:16.187"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:16.187" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 03:52:16.187" endtime="20220705 03:52:16.187"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:16.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:16.188" endtime="20220705 03:52:16.343"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:16.343" endtime="20220705 03:52:16.343"/>
</return>
<msg timestamp="20220705 03:52:16.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:16.186" endtime="20220705 03:52:16.344"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:16.344" endtime="20220705 03:52:16.344"/>
</return>
<msg timestamp="20220705 03:52:16.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:16.185" endtime="20220705 03:52:16.344"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:16.344" endtime="20220705 03:52:16.346"/>
</kw>
<status status="PASS" starttime="20220705 03:52:16.344" endtime="20220705 03:52:16.346"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:16.347" endtime="20220705 03:52:16.347"/>
</return>
<msg timestamp="20220705 03:52:16.348" level="INFO">${LABEL_ID} = 62c3b570c3819c851d800a43</msg>
<status status="PASS" starttime="20220705 03:52:16.347" endtime="20220705 03:52:16.348"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:16.349" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:16.348" endtime="20220705 03:52:16.349"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:16.349" endtime="20220705 03:52:16.349"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:16.349" level="INFO">${url} = labels/62c3b570c3819c851d800a43</msg>
<status status="PASS" starttime="20220705 03:52:16.349" endtime="20220705 03:52:16.349"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:16.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:16.349" endtime="20220705 03:52:16.522"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:16.522" endtime="20220705 03:52:16.522"/>
</return>
<msg timestamp="20220705 03:52:16.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:16.348" endtime="20220705 03:52:16.522"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:16.522" endtime="20220705 03:52:16.522"/>
</return>
<msg timestamp="20220705 03:52:16.522" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:16.348" endtime="20220705 03:52:16.522"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:16.523" endtime="20220705 03:52:16.523"/>
</return>
<msg timestamp="20220705 03:52:16.523" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 03:52:16.522" endtime="20220705 03:52:16.523"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:16.524" endtime="20220705 03:52:16.524"/>
</return>
<msg timestamp="20220705 03:52:16.524" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 03:52:16.523" endtime="20220705 03:52:16.524"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:16.525" endtime="20220705 03:52:16.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:16.525" endtime="20220705 03:52:16.525"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:16.527" level="INFO">${url} = labels/62c3b570c3819c851d800a43</msg>
<status status="PASS" starttime="20220705 03:52:16.526" endtime="20220705 03:52:16.527"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:16.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:16.527" endtime="20220705 03:52:16.869"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:16.869" endtime="20220705 03:52:16.869"/>
</return>
<msg timestamp="20220705 03:52:16.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:16.526" endtime="20220705 03:52:16.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:16.870" endtime="20220705 03:52:16.870"/>
</return>
<status status="PASS" starttime="20220705 03:52:16.525" endtime="20220705 03:52:16.870"/>
</kw>
<status status="PASS" starttime="20220705 03:52:16.525" endtime="20220705 03:52:16.870"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 03:52:16.184" endtime="20220705 03:52:16.870"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:16.872" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:16.872" endtime="20220705 03:52:16.872"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:16.872" endtime="20220705 03:52:16.872"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:16.873" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 03:52:16.873" endtime="20220705 03:52:16.873"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:17.021" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:16.873" endtime="20220705 03:52:17.021"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:17.021" endtime="20220705 03:52:17.021"/>
</return>
<msg timestamp="20220705 03:52:17.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:16.872" endtime="20220705 03:52:17.022"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:17.022" endtime="20220705 03:52:17.022"/>
</return>
<msg timestamp="20220705 03:52:17.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:16.871" endtime="20220705 03:52:17.022"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 03:52:17.022" endtime="20220705 03:52:17.022"/>
</return>
<msg timestamp="20220705 03:52:17.023" level="INFO">${LABEL_ID} = 62c3b57051fe6d50f484029e</msg>
<status status="PASS" starttime="20220705 03:52:17.022" endtime="20220705 03:52:17.023"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:17.024" level="INFO">${url} = labels/62c3b57051fe6d50f484029e</msg>
<status status="PASS" starttime="20220705 03:52:17.024" endtime="20220705 03:52:17.024"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:17.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:17.025" endtime="20220705 03:52:17.201"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:17.202" endtime="20220705 03:52:17.202"/>
</return>
<msg timestamp="20220705 03:52:17.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:17.024" endtime="20220705 03:52:17.202"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:17.202" endtime="20220705 03:52:17.202"/>
</return>
<status status="PASS" starttime="20220705 03:52:17.023" endtime="20220705 03:52:17.202"/>
</kw>
<status status="PASS" starttime="20220705 03:52:17.023" endtime="20220705 03:52:17.202"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:17.203" level="INFO">${url} = labels/62c3b57051fe6d50f484029e</msg>
<status status="PASS" starttime="20220705 03:52:17.203" endtime="20220705 03:52:17.203"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:17.307" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 03:52:17.203" endtime="20220705 03:52:17.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:17.307" endtime="20220705 03:52:17.307"/>
</return>
<msg timestamp="20220705 03:52:17.308" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 03:52:17.203" endtime="20220705 03:52:17.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:17.308" endtime="20220705 03:52:17.308"/>
</return>
<status status="PASS" starttime="20220705 03:52:17.202" endtime="20220705 03:52:17.308"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 03:52:16.870" endtime="20220705 03:52:17.308"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:17.311" level="INFO">${url} = boards/62c3b56fe310876f9f04bc8c</msg>
<status status="PASS" starttime="20220705 03:52:17.310" endtime="20220705 03:52:17.311"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:17.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:17.311" endtime="20220705 03:52:17.716"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:17.716" endtime="20220705 03:52:17.716"/>
</return>
<msg timestamp="20220705 03:52:17.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:17.310" endtime="20220705 03:52:17.717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:17.717" endtime="20220705 03:52:17.717"/>
</return>
<status status="PASS" starttime="20220705 03:52:17.310" endtime="20220705 03:52:17.717"/>
</kw>
<status status="PASS" starttime="20220705 03:52:17.309" endtime="20220705 03:52:17.717"/>
</kw>
<status status="PASS" starttime="20220705 03:52:17.309" endtime="20220705 03:52:17.717"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 03:52:17.717" endtime="20220705 03:52:17.718"/>
</kw>
<status status="PASS" starttime="20220705 03:52:17.309" endtime="20220705 03:52:17.718"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 03:52:15.343" endtime="20220705 03:52:17.718"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 03:52:17.729" endtime="20220705 03:52:17.730"/>
</kw>
<status status="PASS" starttime="20220705 03:52:17.729" endtime="20220705 03:52:17.730"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:17.731" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:17.731" endtime="20220705 03:52:17.731"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:17.731" endtime="20220705 03:52:17.731"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:17.732" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 03:52:17.731" endtime="20220705 03:52:17.732"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:18.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:17.732" endtime="20220705 03:52:18.171"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:18.171" endtime="20220705 03:52:18.171"/>
</return>
<msg timestamp="20220705 03:52:18.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:17.730" endtime="20220705 03:52:18.171"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:18.171" endtime="20220705 03:52:18.171"/>
</return>
<msg timestamp="20220705 03:52:18.171" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:17.730" endtime="20220705 03:52:18.171"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 03:52:18.173" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3b572187d8b63d0321abd</msg>
<status status="PASS" starttime="20220705 03:52:18.172" endtime="20220705 03:52:18.173"/>
</kw>
<status status="PASS" starttime="20220705 03:52:18.172" endtime="20220705 03:52:18.173"/>
</kw>
<status status="PASS" starttime="20220705 03:52:17.730" endtime="20220705 03:52:18.173"/>
</kw>
<status status="PASS" starttime="20220705 03:52:17.729" endtime="20220705 03:52:18.173"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:18.175" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:18.175" endtime="20220705 03:52:18.175"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:18.175" endtime="20220705 03:52:18.175"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:18.176" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 03:52:18.175" endtime="20220705 03:52:18.176"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:18.362" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.176" endtime="20220705 03:52:18.362"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:18.362" endtime="20220705 03:52:18.362"/>
</return>
<msg timestamp="20220705 03:52:18.362" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.174" endtime="20220705 03:52:18.362"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:18.362" endtime="20220705 03:52:18.363"/>
</return>
<msg timestamp="20220705 03:52:18.363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.174" endtime="20220705 03:52:18.363"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:18.363" endtime="20220705 03:52:18.365"/>
</kw>
<status status="PASS" starttime="20220705 03:52:18.363" endtime="20220705 03:52:18.365"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 03:52:18.173" endtime="20220705 03:52:18.365"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:18.367" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:18.367" endtime="20220705 03:52:18.367"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:18.368" endtime="20220705 03:52:18.368"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:18.368" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 03:52:18.368" endtime="20220705 03:52:18.368"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:18.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.369" endtime="20220705 03:52:18.521"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:18.521" endtime="20220705 03:52:18.521"/>
</return>
<msg timestamp="20220705 03:52:18.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.367" endtime="20220705 03:52:18.521"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:18.521" endtime="20220705 03:52:18.521"/>
</return>
<msg timestamp="20220705 03:52:18.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.366" endtime="20220705 03:52:18.522"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:18.522" endtime="20220705 03:52:18.524"/>
</kw>
<status status="PASS" starttime="20220705 03:52:18.522" endtime="20220705 03:52:18.524"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:18.525" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:18.525" endtime="20220705 03:52:18.525"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:18.525" endtime="20220705 03:52:18.526"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:18.526" level="INFO">${url} = lists/62c3b572dd14a67e1bc739c3</msg>
<status status="PASS" starttime="20220705 03:52:18.526" endtime="20220705 03:52:18.526"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:18.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.526" endtime="20220705 03:52:18.658"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:18.658" endtime="20220705 03:52:18.658"/>
</return>
<msg timestamp="20220705 03:52:18.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.525" endtime="20220705 03:52:18.659"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:18.659" endtime="20220705 03:52:18.659"/>
</return>
<status status="PASS" starttime="20220705 03:52:18.524" endtime="20220705 03:52:18.659"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:18.661" level="INFO">${url} = lists/62c3b572dd14a67e1bc739c3</msg>
<status status="PASS" starttime="20220705 03:52:18.660" endtime="20220705 03:52:18.661"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:18.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.661" endtime="20220705 03:52:18.771"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:18.771" endtime="20220705 03:52:18.771"/>
</return>
<msg timestamp="20220705 03:52:18.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.660" endtime="20220705 03:52:18.771"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:18.771" endtime="20220705 03:52:18.771"/>
</return>
<msg timestamp="20220705 03:52:18.771" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.659" endtime="20220705 03:52:18.771"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 03:52:18.772" endtime="20220705 03:52:18.773"/>
</kw>
<status status="PASS" starttime="20220705 03:52:18.772" endtime="20220705 03:52:18.774"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 03:52:18.774" endtime="20220705 03:52:18.774"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 03:52:18.366" endtime="20220705 03:52:18.774"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:18.777" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:18.776" endtime="20220705 03:52:18.777"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:18.777" endtime="20220705 03:52:18.778"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:18.779" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 03:52:18.778" endtime="20220705 03:52:18.779"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:18.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.779" endtime="20220705 03:52:18.940"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:18.940" endtime="20220705 03:52:18.940"/>
</return>
<msg timestamp="20220705 03:52:18.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.776" endtime="20220705 03:52:18.941"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:18.941" endtime="20220705 03:52:18.941"/>
</return>
<msg timestamp="20220705 03:52:18.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.776" endtime="20220705 03:52:18.941"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 03:52:18.943" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 03:52:18.942" endtime="20220705 03:52:18.943"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 03:52:18.943" endtime="20220705 03:52:18.943"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:18.943" level="INFO">${url} = lists/62c3b572ae229b6f7fe226b8/closed</msg>
<status status="PASS" starttime="20220705 03:52:18.943" endtime="20220705 03:52:18.943"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 03:52:19.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.943" endtime="20220705 03:52:19.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:19.099" endtime="20220705 03:52:19.099"/>
</return>
<msg timestamp="20220705 03:52:19.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:18.942" endtime="20220705 03:52:19.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:19.099" endtime="20220705 03:52:19.100"/>
</return>
<status status="PASS" starttime="20220705 03:52:18.941" endtime="20220705 03:52:19.100"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:19.101" level="INFO">${url} = lists/62c3b572ae229b6f7fe226b8</msg>
<status status="PASS" starttime="20220705 03:52:19.101" endtime="20220705 03:52:19.101"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 03:52:19.210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:19.102" endtime="20220705 03:52:19.210"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:19.210" endtime="20220705 03:52:19.210"/>
</return>
<msg timestamp="20220705 03:52:19.210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:19.101" endtime="20220705 03:52:19.210"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:19.211" endtime="20220705 03:52:19.211"/>
</return>
<msg timestamp="20220705 03:52:19.211" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:19.100" endtime="20220705 03:52:19.211"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 03:52:19.211" endtime="20220705 03:52:19.212"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 03:52:18.775" endtime="20220705 03:52:19.212"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 03:52:19.214" level="INFO">${url} = boards/62c3b572187d8b63d0321abd</msg>
<status status="PASS" starttime="20220705 03:52:19.214" endtime="20220705 03:52:19.214"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 03:52:19.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:19.215" endtime="20220705 03:52:19.564"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:19.564" endtime="20220705 03:52:19.564"/>
</return>
<msg timestamp="20220705 03:52:19.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 03:52:19.214" endtime="20220705 03:52:19.564"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 03:52:19.564" endtime="20220705 03:52:19.564"/>
</return>
<status status="PASS" starttime="20220705 03:52:19.213" endtime="20220705 03:52:19.565"/>
</kw>
<status status="PASS" starttime="20220705 03:52:19.213" endtime="20220705 03:52:19.565"/>
</kw>
<status status="PASS" starttime="20220705 03:52:19.213" endtime="20220705 03:52:19.565"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 03:52:19.565" endtime="20220705 03:52:19.566"/>
</kw>
<status status="PASS" starttime="20220705 03:52:19.212" endtime="20220705 03:52:19.566"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 03:52:17.719" endtime="20220705 03:52:19.566"/>
</suite>
<status status="PASS" starttime="20220705 03:52:04.570" endtime="20220705 03:52:19.568"/>
</suite>
<status status="PASS" starttime="20220705 03:52:04.553" endtime="20220705 03:52:19.570"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
