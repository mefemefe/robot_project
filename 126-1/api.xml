<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 21:25:59.716" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:25:59.843" endtime="20220704 21:25:59.844"/>
</kw>
<status status="PASS" starttime="20220704 21:25:59.842" endtime="20220704 21:25:59.844"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:25:59.846" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:25:59.846" endtime="20220704 21:25:59.846"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:25:59.846" endtime="20220704 21:25:59.846"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:25:59.847" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:25:59.846" endtime="20220704 21:25:59.847"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:00.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:25:59.847" endtime="20220704 21:26:00.508"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:00.508" endtime="20220704 21:26:00.508"/>
</return>
<msg timestamp="20220704 21:26:00.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:25:59.845" endtime="20220704 21:26:00.509"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:00.509" endtime="20220704 21:26:00.509"/>
</return>
<msg timestamp="20220704 21:26:00.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:25:59.845" endtime="20220704 21:26:00.509"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:00.510" endtime="20220704 21:26:00.514"/>
</kw>
<status status="PASS" starttime="20220704 21:26:00.509" endtime="20220704 21:26:00.514"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:00.516" level="INFO">${url} = boards/62c35ae8f24e181dbae43b62</msg>
<status status="PASS" starttime="20220704 21:26:00.516" endtime="20220704 21:26:00.516"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:01.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:00.517" endtime="20220704 21:26:01.324"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:01.324" endtime="20220704 21:26:01.325"/>
</return>
<msg timestamp="20220704 21:26:01.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:00.516" endtime="20220704 21:26:01.325"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:01.325" endtime="20220704 21:26:01.325"/>
</return>
<status status="PASS" starttime="20220704 21:26:00.515" endtime="20220704 21:26:01.325"/>
</kw>
<status status="PASS" starttime="20220704 21:26:00.515" endtime="20220704 21:26:01.325"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:25:59.844" endtime="20220704 21:26:01.325"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:01.327" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:01.327" endtime="20220704 21:26:01.327"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:01.328" endtime="20220704 21:26:01.328"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:01.329" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:26:01.328" endtime="20220704 21:26:01.329"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:01.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:01.329" endtime="20220704 21:26:01.490"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:01.490" endtime="20220704 21:26:01.490"/>
</return>
<msg timestamp="20220704 21:26:01.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:01.327" endtime="20220704 21:26:01.490"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:01.490" endtime="20220704 21:26:01.490"/>
</return>
<msg timestamp="20220704 21:26:01.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:01.326" endtime="20220704 21:26:01.490"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:01.491" endtime="20220704 21:26:01.495"/>
</kw>
<status status="PASS" starttime="20220704 21:26:01.490" endtime="20220704 21:26:01.495"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:01.497" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:01.497" endtime="20220704 21:26:01.497"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:01.497" endtime="20220704 21:26:01.497"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:01.498" level="INFO">${url} = boards/62c35ae92611878448f5e4a3</msg>
<status status="PASS" starttime="20220704 21:26:01.497" endtime="20220704 21:26:01.498"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:01.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:01.498" endtime="20220704 21:26:01.586"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:01.586" endtime="20220704 21:26:01.586"/>
</return>
<msg timestamp="20220704 21:26:01.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:01.496" endtime="20220704 21:26:01.587"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:01.587" endtime="20220704 21:26:01.587"/>
</return>
<status status="PASS" starttime="20220704 21:26:01.495" endtime="20220704 21:26:01.587"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:01.589" level="INFO">${url} = boards/62c35ae92611878448f5e4a3</msg>
<status status="PASS" starttime="20220704 21:26:01.588" endtime="20220704 21:26:01.589"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:01.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:01.589" endtime="20220704 21:26:01.644"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:01.644" endtime="20220704 21:26:01.644"/>
</return>
<msg timestamp="20220704 21:26:01.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:01.588" endtime="20220704 21:26:01.645"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:01.645" endtime="20220704 21:26:01.645"/>
</return>
<msg timestamp="20220704 21:26:01.645" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:01.587" endtime="20220704 21:26:01.645"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:01.646" endtime="20220704 21:26:01.649"/>
</kw>
<status status="PASS" starttime="20220704 21:26:01.645" endtime="20220704 21:26:01.650"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:01.650" endtime="20220704 21:26:01.650"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:01.653" level="INFO">${url} = boards/62c35ae92611878448f5e4a3</msg>
<status status="PASS" starttime="20220704 21:26:01.652" endtime="20220704 21:26:01.653"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:01.948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:01.653" endtime="20220704 21:26:01.948"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:01.948" endtime="20220704 21:26:01.949"/>
</return>
<msg timestamp="20220704 21:26:01.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:01.652" endtime="20220704 21:26:01.949"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:01.949" endtime="20220704 21:26:01.949"/>
</return>
<status status="PASS" starttime="20220704 21:26:01.651" endtime="20220704 21:26:01.949"/>
</kw>
<status status="PASS" starttime="20220704 21:26:01.651" endtime="20220704 21:26:01.949"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:26:01.326" endtime="20220704 21:26:01.949"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:01.952" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:01.951" endtime="20220704 21:26:01.952"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:01.952" endtime="20220704 21:26:01.952"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:01.953" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:26:01.952" endtime="20220704 21:26:01.953"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:02.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:01.953" endtime="20220704 21:26:02.133"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:02.133" endtime="20220704 21:26:02.133"/>
</return>
<msg timestamp="20220704 21:26:02.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:01.951" endtime="20220704 21:26:02.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:02.134" endtime="20220704 21:26:02.134"/>
</return>
<msg timestamp="20220704 21:26:02.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:01.951" endtime="20220704 21:26:02.134"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:02.136" level="INFO">${url} = boards/62c35aeaf8b32474c977ffa2</msg>
<status status="PASS" starttime="20220704 21:26:02.136" endtime="20220704 21:26:02.136"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:02.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:02.136" endtime="20220704 21:26:02.433"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:02.433" endtime="20220704 21:26:02.433"/>
</return>
<msg timestamp="20220704 21:26:02.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:02.135" endtime="20220704 21:26:02.433"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:02.433" endtime="20220704 21:26:02.433"/>
</return>
<status status="PASS" starttime="20220704 21:26:02.134" endtime="20220704 21:26:02.434"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:02.436" level="INFO">${url} = boards/62c35aeaf8b32474c977ffa2</msg>
<status status="PASS" starttime="20220704 21:26:02.435" endtime="20220704 21:26:02.436"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:02.475" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:26:02.436" endtime="20220704 21:26:02.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:02.475" endtime="20220704 21:26:02.475"/>
</return>
<msg timestamp="20220704 21:26:02.475" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:26:02.435" endtime="20220704 21:26:02.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:02.475" endtime="20220704 21:26:02.475"/>
</return>
<status status="PASS" starttime="20220704 21:26:02.434" endtime="20220704 21:26:02.475"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:26:01.950" endtime="20220704 21:26:02.475"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:02.478" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:02.478" endtime="20220704 21:26:02.478"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:02.478" endtime="20220704 21:26:02.478"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:02.479" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:26:02.478" endtime="20220704 21:26:02.479"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:02.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:02.479" endtime="20220704 21:26:02.634"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:02.634" endtime="20220704 21:26:02.634"/>
</return>
<msg timestamp="20220704 21:26:02.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:02.477" endtime="20220704 21:26:02.634"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:02.634" endtime="20220704 21:26:02.635"/>
</return>
<msg timestamp="20220704 21:26:02.635" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:02.477" endtime="20220704 21:26:02.635"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:02.635" endtime="20220704 21:26:02.640"/>
</kw>
<status status="PASS" starttime="20220704 21:26:02.635" endtime="20220704 21:26:02.640"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:02.642" level="INFO">${url} = boards/62c35aead3f96f5f50e12a38</msg>
<status status="PASS" starttime="20220704 21:26:02.642" endtime="20220704 21:26:02.642"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:02.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:02.642" endtime="20220704 21:26:02.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:02.690" endtime="20220704 21:26:02.690"/>
</return>
<msg timestamp="20220704 21:26:02.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:02.641" endtime="20220704 21:26:02.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:02.690" endtime="20220704 21:26:02.690"/>
</return>
<msg timestamp="20220704 21:26:02.690" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:02.640" endtime="20220704 21:26:02.690"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:02.691" endtime="20220704 21:26:02.695"/>
</kw>
<status status="PASS" starttime="20220704 21:26:02.690" endtime="20220704 21:26:02.695"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:02.695" endtime="20220704 21:26:02.696"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:02.698" level="INFO">${url} = boards/62c35aead3f96f5f50e12a38</msg>
<status status="PASS" starttime="20220704 21:26:02.698" endtime="20220704 21:26:02.698"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:03.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:02.698" endtime="20220704 21:26:03.028"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.028" endtime="20220704 21:26:03.028"/>
</return>
<msg timestamp="20220704 21:26:03.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:02.697" endtime="20220704 21:26:03.028"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.028" endtime="20220704 21:26:03.028"/>
</return>
<status status="PASS" starttime="20220704 21:26:02.696" endtime="20220704 21:26:03.028"/>
</kw>
<status status="PASS" starttime="20220704 21:26:02.696" endtime="20220704 21:26:03.028"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:26:02.476" endtime="20220704 21:26:03.028"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:03.031" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:03.030" endtime="20220704 21:26:03.031"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:03.031" endtime="20220704 21:26:03.031"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:03.032" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:26:03.031" endtime="20220704 21:26:03.032"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:03.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.032" endtime="20220704 21:26:03.186"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.186" endtime="20220704 21:26:03.186"/>
</return>
<msg timestamp="20220704 21:26:03.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.030" endtime="20220704 21:26:03.186"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.186" endtime="20220704 21:26:03.186"/>
</return>
<msg timestamp="20220704 21:26:03.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.029" endtime="20220704 21:26:03.186"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:03.187" endtime="20220704 21:26:03.191"/>
</kw>
<status status="PASS" starttime="20220704 21:26:03.187" endtime="20220704 21:26:03.191"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:03.193" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:03.192" endtime="20220704 21:26:03.193"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:03.193" endtime="20220704 21:26:03.193"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:03.194" level="INFO">${url} = boards/62c35aeb8045b78d0c94f3fa</msg>
<status status="PASS" starttime="20220704 21:26:03.194" endtime="20220704 21:26:03.194"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:03.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.194" endtime="20220704 21:26:03.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.284" endtime="20220704 21:26:03.284"/>
</return>
<msg timestamp="20220704 21:26:03.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.192" endtime="20220704 21:26:03.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.284" endtime="20220704 21:26:03.284"/>
</return>
<status status="PASS" starttime="20220704 21:26:03.191" endtime="20220704 21:26:03.285"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:03.287" level="INFO">${url} = boards/62c35aeb8045b78d0c94f3fa</msg>
<status status="PASS" starttime="20220704 21:26:03.286" endtime="20220704 21:26:03.287"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:03.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.287" endtime="20220704 21:26:03.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.334" endtime="20220704 21:26:03.334"/>
</return>
<msg timestamp="20220704 21:26:03.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.286" endtime="20220704 21:26:03.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.334" endtime="20220704 21:26:03.334"/>
</return>
<msg timestamp="20220704 21:26:03.334" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.285" endtime="20220704 21:26:03.334"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:03.335" endtime="20220704 21:26:03.335"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:03.338" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:03.337" endtime="20220704 21:26:03.338"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:03.338" endtime="20220704 21:26:03.338"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:03.338" level="INFO">${url} = boards/62c35aeb8045b78d0c94f3fa</msg>
<status status="PASS" starttime="20220704 21:26:03.338" endtime="20220704 21:26:03.338"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:03.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.338" endtime="20220704 21:26:03.422"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.422" endtime="20220704 21:26:03.422"/>
</return>
<msg timestamp="20220704 21:26:03.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.337" endtime="20220704 21:26:03.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.423" endtime="20220704 21:26:03.423"/>
</return>
<status status="PASS" starttime="20220704 21:26:03.336" endtime="20220704 21:26:03.423"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:03.425" level="INFO">${url} = boards/62c35aeb8045b78d0c94f3fa</msg>
<status status="PASS" starttime="20220704 21:26:03.424" endtime="20220704 21:26:03.425"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:03.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.425" endtime="20220704 21:26:03.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.475" endtime="20220704 21:26:03.475"/>
</return>
<msg timestamp="20220704 21:26:03.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.424" endtime="20220704 21:26:03.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.476" endtime="20220704 21:26:03.476"/>
</return>
<msg timestamp="20220704 21:26:03.476" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.423" endtime="20220704 21:26:03.476"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:03.476" endtime="20220704 21:26:03.477"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:03.479" level="INFO">${url} = boards/62c35aeb8045b78d0c94f3fa</msg>
<status status="PASS" starttime="20220704 21:26:03.479" endtime="20220704 21:26:03.479"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:03.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.480" endtime="20220704 21:26:03.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.773" endtime="20220704 21:26:03.773"/>
</return>
<msg timestamp="20220704 21:26:03.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.479" endtime="20220704 21:26:03.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.774" endtime="20220704 21:26:03.774"/>
</return>
<status status="PASS" starttime="20220704 21:26:03.478" endtime="20220704 21:26:03.774"/>
</kw>
<status status="PASS" starttime="20220704 21:26:03.477" endtime="20220704 21:26:03.774"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:26:03.029" endtime="20220704 21:26:03.774"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 21:26:03.775" endtime="20220704 21:26:03.776"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 21:25:59.736" endtime="20220704 21:26:03.777"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:26:03.788" endtime="20220704 21:26:03.788"/>
</kw>
<status status="PASS" starttime="20220704 21:26:03.788" endtime="20220704 21:26:03.788"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:03.789" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:03.789" endtime="20220704 21:26:03.789"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:03.789" endtime="20220704 21:26:03.789"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:03.790" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:26:03.790" endtime="20220704 21:26:03.790"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:03.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.790" endtime="20220704 21:26:03.989"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.989" endtime="20220704 21:26:03.989"/>
</return>
<msg timestamp="20220704 21:26:03.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.789" endtime="20220704 21:26:03.989"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:03.989" endtime="20220704 21:26:03.989"/>
</return>
<msg timestamp="20220704 21:26:03.990" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.788" endtime="20220704 21:26:03.990"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:26:03.991" level="INFO">${TEST_SUITE_BOARD_ID} = 62c35aeb3b8a9516181a73a5</msg>
<status status="PASS" starttime="20220704 21:26:03.990" endtime="20220704 21:26:03.991"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:03.992" level="INFO">${url} = boards/62c35aeb3b8a9516181a73a5/lists/</msg>
<status status="PASS" starttime="20220704 21:26:03.992" endtime="20220704 21:26:03.992"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:04.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.992" endtime="20220704 21:26:04.042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.042" endtime="20220704 21:26:04.042"/>
</return>
<msg timestamp="20220704 21:26:04.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.991" endtime="20220704 21:26:04.043"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.043" endtime="20220704 21:26:04.043"/>
</return>
<msg timestamp="20220704 21:26:04.043" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:03.991" endtime="20220704 21:26:04.043"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:26:04.044" level="INFO">${TEST_SUITE_LIST_ID} = 62c35aeb3b8a9516181a73ac</msg>
<status status="PASS" starttime="20220704 21:26:04.043" endtime="20220704 21:26:04.044"/>
</kw>
<status status="PASS" starttime="20220704 21:26:03.788" endtime="20220704 21:26:04.044"/>
</kw>
<status status="PASS" starttime="20220704 21:26:03.787" endtime="20220704 21:26:04.044"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:04.046" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:04.046" endtime="20220704 21:26:04.046"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:04.046" endtime="20220704 21:26:04.046"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:04.047" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:26:04.046" endtime="20220704 21:26:04.047"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:04.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.047" endtime="20220704 21:26:04.279"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.279" endtime="20220704 21:26:04.279"/>
</return>
<msg timestamp="20220704 21:26:04.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.045" endtime="20220704 21:26:04.279"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.279" endtime="20220704 21:26:04.280"/>
</return>
<msg timestamp="20220704 21:26:04.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.045" endtime="20220704 21:26:04.280"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:04.280" endtime="20220704 21:26:04.286"/>
</kw>
<status status="PASS" starttime="20220704 21:26:04.280" endtime="20220704 21:26:04.286"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:04.287" endtime="20220704 21:26:04.287"/>
</return>
<msg timestamp="20220704 21:26:04.287" level="INFO">${CARD_ID} = 62c35aec282b050827da450d</msg>
<status status="PASS" starttime="20220704 21:26:04.286" endtime="20220704 21:26:04.287"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:04.289" level="INFO">${url} = cards/62c35aec282b050827da450d</msg>
<status status="PASS" starttime="20220704 21:26:04.288" endtime="20220704 21:26:04.289"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:04.345" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.289" endtime="20220704 21:26:04.345"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.345" endtime="20220704 21:26:04.346"/>
</return>
<msg timestamp="20220704 21:26:04.346" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.288" endtime="20220704 21:26:04.346"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.346" endtime="20220704 21:26:04.346"/>
</return>
<msg timestamp="20220704 21:26:04.346" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.288" endtime="20220704 21:26:04.346"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:04.347" endtime="20220704 21:26:04.347"/>
</return>
<msg timestamp="20220704 21:26:04.348" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 21:26:04.346" endtime="20220704 21:26:04.348"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:04.348" endtime="20220704 21:26:04.348"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:04.350" level="INFO">${url} = cards/62c35aec282b050827da450d</msg>
<status status="PASS" starttime="20220704 21:26:04.349" endtime="20220704 21:26:04.350"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:04.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.350" endtime="20220704 21:26:04.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.486" endtime="20220704 21:26:04.486"/>
</return>
<msg timestamp="20220704 21:26:04.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.349" endtime="20220704 21:26:04.487"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.487" endtime="20220704 21:26:04.487"/>
</return>
<status status="PASS" starttime="20220704 21:26:04.349" endtime="20220704 21:26:04.487"/>
</kw>
<status status="PASS" starttime="20220704 21:26:04.348" endtime="20220704 21:26:04.487"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:26:04.044" endtime="20220704 21:26:04.487"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:04.489" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:04.489" endtime="20220704 21:26:04.489"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:04.490" endtime="20220704 21:26:04.490"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:04.491" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:26:04.490" endtime="20220704 21:26:04.491"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:04.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.491" endtime="20220704 21:26:04.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.652" endtime="20220704 21:26:04.652"/>
</return>
<msg timestamp="20220704 21:26:04.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.488" endtime="20220704 21:26:04.653"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.653" endtime="20220704 21:26:04.653"/>
</return>
<msg timestamp="20220704 21:26:04.653" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.488" endtime="20220704 21:26:04.653"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:04.653" endtime="20220704 21:26:04.653"/>
</return>
<msg timestamp="20220704 21:26:04.654" level="INFO">${CARD_ID} = 62c35aece6c178187be38589</msg>
<status status="PASS" starttime="20220704 21:26:04.653" endtime="20220704 21:26:04.654"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:04.656" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:04.656" endtime="20220704 21:26:04.656"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:04.657" endtime="20220704 21:26:04.657"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:04.657" level="INFO">${url} = cards/62c35aece6c178187be38589</msg>
<status status="PASS" starttime="20220704 21:26:04.657" endtime="20220704 21:26:04.657"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:04.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.657" endtime="20220704 21:26:04.764"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.764" endtime="20220704 21:26:04.764"/>
</return>
<msg timestamp="20220704 21:26:04.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.656" endtime="20220704 21:26:04.765"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.765" endtime="20220704 21:26:04.765"/>
</return>
<msg timestamp="20220704 21:26:04.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.655" endtime="20220704 21:26:04.765"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.765" endtime="20220704 21:26:04.765"/>
</return>
<status status="PASS" starttime="20220704 21:26:04.654" endtime="20220704 21:26:04.765"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:04.767" level="INFO">${url} = cards/62c35aece6c178187be38589</msg>
<status status="PASS" starttime="20220704 21:26:04.766" endtime="20220704 21:26:04.767"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:04.823" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.767" endtime="20220704 21:26:04.823"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.823" endtime="20220704 21:26:04.824"/>
</return>
<msg timestamp="20220704 21:26:04.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.766" endtime="20220704 21:26:04.824"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.824" endtime="20220704 21:26:04.824"/>
</return>
<msg timestamp="20220704 21:26:04.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.765" endtime="20220704 21:26:04.824"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:04.825" endtime="20220704 21:26:04.825"/>
</return>
<msg timestamp="20220704 21:26:04.826" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 21:26:04.824" endtime="20220704 21:26:04.826"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 21:26:04.826" endtime="20220704 21:26:04.826"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:04.828" level="INFO">${url} = cards/62c35aece6c178187be38589</msg>
<status status="PASS" starttime="20220704 21:26:04.828" endtime="20220704 21:26:04.828"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:04.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.828" endtime="20220704 21:26:04.949"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.949" endtime="20220704 21:26:04.949"/>
</return>
<msg timestamp="20220704 21:26:04.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.827" endtime="20220704 21:26:04.949"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:04.949" endtime="20220704 21:26:04.949"/>
</return>
<status status="PASS" starttime="20220704 21:26:04.827" endtime="20220704 21:26:04.950"/>
</kw>
<status status="PASS" starttime="20220704 21:26:04.826" endtime="20220704 21:26:04.950"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:26:04.487" endtime="20220704 21:26:04.950"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:04.953" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:04.952" endtime="20220704 21:26:04.953"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:04.953" endtime="20220704 21:26:04.953"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:04.954" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:26:04.953" endtime="20220704 21:26:04.954"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:05.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.954" endtime="20220704 21:26:05.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.107" endtime="20220704 21:26:05.107"/>
</return>
<msg timestamp="20220704 21:26:05.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.951" endtime="20220704 21:26:05.108"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.108" endtime="20220704 21:26:05.108"/>
</return>
<msg timestamp="20220704 21:26:05.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:04.951" endtime="20220704 21:26:05.108"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:05.109" endtime="20220704 21:26:05.109"/>
</return>
<msg timestamp="20220704 21:26:05.109" level="INFO">${CARD_ID} = 62c35aed470af503ac6bdfbd</msg>
<status status="PASS" starttime="20220704 21:26:05.108" endtime="20220704 21:26:05.110"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:05.111" level="INFO">${url} = cards/62c35aed470af503ac6bdfbd</msg>
<status status="PASS" starttime="20220704 21:26:05.111" endtime="20220704 21:26:05.111"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:05.267" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.111" endtime="20220704 21:26:05.267"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.267" endtime="20220704 21:26:05.267"/>
</return>
<msg timestamp="20220704 21:26:05.267" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.110" endtime="20220704 21:26:05.267"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.267" endtime="20220704 21:26:05.267"/>
</return>
<msg timestamp="20220704 21:26:05.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.110" endtime="20220704 21:26:05.268"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:05.268" endtime="20220704 21:26:05.270"/>
</kw>
<status status="PASS" starttime="20220704 21:26:05.268" endtime="20220704 21:26:05.270"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:05.272" level="INFO">${url} = cards/62c35aed470af503ac6bdfbd</msg>
<status status="PASS" starttime="20220704 21:26:05.271" endtime="20220704 21:26:05.272"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:05.316" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:26:05.272" endtime="20220704 21:26:05.316"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.317" endtime="20220704 21:26:05.317"/>
</return>
<msg timestamp="20220704 21:26:05.317" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:26:05.271" endtime="20220704 21:26:05.317"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.317" endtime="20220704 21:26:05.317"/>
</return>
<status status="PASS" starttime="20220704 21:26:05.271" endtime="20220704 21:26:05.317"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:26:04.950" endtime="20220704 21:26:05.317"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:05.320" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:05.319" endtime="20220704 21:26:05.320"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:05.320" endtime="20220704 21:26:05.320"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:05.321" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:26:05.320" endtime="20220704 21:26:05.321"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:05.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.321" endtime="20220704 21:26:05.471"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.471" endtime="20220704 21:26:05.471"/>
</return>
<msg timestamp="20220704 21:26:05.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.319" endtime="20220704 21:26:05.472"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.472" endtime="20220704 21:26:05.472"/>
</return>
<msg timestamp="20220704 21:26:05.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.318" endtime="20220704 21:26:05.472"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:05.473" endtime="20220704 21:26:05.473"/>
</return>
<msg timestamp="20220704 21:26:05.473" level="INFO">${CARD_ID} = 62c35aed510662266a7821ce</msg>
<status status="PASS" starttime="20220704 21:26:05.472" endtime="20220704 21:26:05.473"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:05.475" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:05.475" endtime="20220704 21:26:05.475"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:05.475" endtime="20220704 21:26:05.475"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:05.476" level="INFO">${url} = cards/62c35aed510662266a7821ce</msg>
<status status="PASS" starttime="20220704 21:26:05.475" endtime="20220704 21:26:05.476"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:05.605" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.476" endtime="20220704 21:26:05.605"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.606" endtime="20220704 21:26:05.606"/>
</return>
<msg timestamp="20220704 21:26:05.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.474" endtime="20220704 21:26:05.606"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.606" endtime="20220704 21:26:05.606"/>
</return>
<msg timestamp="20220704 21:26:05.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.474" endtime="20220704 21:26:05.606"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:05.607" endtime="20220704 21:26:05.613"/>
</kw>
<status status="PASS" starttime="20220704 21:26:05.606" endtime="20220704 21:26:05.613"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:05.615" level="INFO">${url} = cards/62c35aed510662266a7821ce</msg>
<status status="PASS" starttime="20220704 21:26:05.614" endtime="20220704 21:26:05.615"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:05.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.615" endtime="20220704 21:26:05.673"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.673" endtime="20220704 21:26:05.673"/>
</return>
<msg timestamp="20220704 21:26:05.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.614" endtime="20220704 21:26:05.673"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.673" endtime="20220704 21:26:05.673"/>
</return>
<msg timestamp="20220704 21:26:05.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.613" endtime="20220704 21:26:05.673"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:05.674" endtime="20220704 21:26:05.674"/>
</return>
<msg timestamp="20220704 21:26:05.675" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 21:26:05.673" endtime="20220704 21:26:05.675"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:05.675" endtime="20220704 21:26:05.675"/>
</return>
<msg timestamp="20220704 21:26:05.676" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 21:26:05.675" endtime="20220704 21:26:05.676"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:05.676" endtime="20220704 21:26:05.676"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:05.676" endtime="20220704 21:26:05.676"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:05.678" level="INFO">${url} = cards/62c35aed510662266a7821ce</msg>
<status status="PASS" starttime="20220704 21:26:05.678" endtime="20220704 21:26:05.678"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:05.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.678" endtime="20220704 21:26:05.826"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.826" endtime="20220704 21:26:05.826"/>
</return>
<msg timestamp="20220704 21:26:05.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.677" endtime="20220704 21:26:05.826"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:05.826" endtime="20220704 21:26:05.826"/>
</return>
<status status="PASS" starttime="20220704 21:26:05.677" endtime="20220704 21:26:05.826"/>
</kw>
<status status="PASS" starttime="20220704 21:26:05.677" endtime="20220704 21:26:05.826"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:26:05.318" endtime="20220704 21:26:05.826"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:05.830" level="INFO">${url} = boards/62c35aeb3b8a9516181a73a5</msg>
<status status="PASS" starttime="20220704 21:26:05.829" endtime="20220704 21:26:05.830"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:06.209" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.830" endtime="20220704 21:26:06.209"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.209" endtime="20220704 21:26:06.209"/>
</return>
<msg timestamp="20220704 21:26:06.210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:05.829" endtime="20220704 21:26:06.210"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.210" endtime="20220704 21:26:06.210"/>
</return>
<status status="PASS" starttime="20220704 21:26:05.828" endtime="20220704 21:26:06.210"/>
</kw>
<status status="PASS" starttime="20220704 21:26:05.828" endtime="20220704 21:26:06.210"/>
</kw>
<status status="PASS" starttime="20220704 21:26:05.828" endtime="20220704 21:26:06.210"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:26:06.210" endtime="20220704 21:26:06.212"/>
</kw>
<status status="PASS" starttime="20220704 21:26:05.827" endtime="20220704 21:26:06.212"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 21:26:03.778" endtime="20220704 21:26:06.212"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:26:06.224" endtime="20220704 21:26:06.224"/>
</kw>
<status status="PASS" starttime="20220704 21:26:06.223" endtime="20220704 21:26:06.224"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:06.225" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:06.225" endtime="20220704 21:26:06.225"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:06.225" endtime="20220704 21:26:06.226"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:06.226" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:26:06.226" endtime="20220704 21:26:06.226"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:06.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.226" endtime="20220704 21:26:06.431"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.431" endtime="20220704 21:26:06.431"/>
</return>
<msg timestamp="20220704 21:26:06.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.225" endtime="20220704 21:26:06.432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.432" endtime="20220704 21:26:06.432"/>
</return>
<msg timestamp="20220704 21:26:06.432" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.225" endtime="20220704 21:26:06.432"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:26:06.433" level="INFO">${TEST_SUITE_BOARD_ID} = 62c35aee4b7591642701a131</msg>
<status status="PASS" starttime="20220704 21:26:06.432" endtime="20220704 21:26:06.433"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:06.434" level="INFO">${url} = boards/62c35aee4b7591642701a131/lists/</msg>
<status status="PASS" starttime="20220704 21:26:06.434" endtime="20220704 21:26:06.434"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:06.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.435" endtime="20220704 21:26:06.494"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.494" endtime="20220704 21:26:06.494"/>
</return>
<msg timestamp="20220704 21:26:06.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.434" endtime="20220704 21:26:06.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.495" endtime="20220704 21:26:06.495"/>
</return>
<msg timestamp="20220704 21:26:06.495" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.433" endtime="20220704 21:26:06.495"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:26:06.496" level="INFO">${TEST_SUITE_LIST_ID} = 62c35aee4b7591642701a138</msg>
<status status="PASS" starttime="20220704 21:26:06.495" endtime="20220704 21:26:06.496"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:06.498" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:06.498" endtime="20220704 21:26:06.498"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:06.498" endtime="20220704 21:26:06.498"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:06.499" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:26:06.499" endtime="20220704 21:26:06.499"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:06.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.499" endtime="20220704 21:26:06.659"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.659" endtime="20220704 21:26:06.659"/>
</return>
<msg timestamp="20220704 21:26:06.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.497" endtime="20220704 21:26:06.659"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.660" endtime="20220704 21:26:06.660"/>
</return>
<msg timestamp="20220704 21:26:06.660" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.497" endtime="20220704 21:26:06.660"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:26:06.661" level="INFO">${TEST_SUITE_CARD_ID} = 62c35aeec601050188ef933e</msg>
<status status="PASS" starttime="20220704 21:26:06.660" endtime="20220704 21:26:06.661"/>
</kw>
<status status="PASS" starttime="20220704 21:26:06.224" endtime="20220704 21:26:06.661"/>
</kw>
<status status="PASS" starttime="20220704 21:26:06.223" endtime="20220704 21:26:06.661"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:06.663" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:06.663" endtime="20220704 21:26:06.663"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:06.664" endtime="20220704 21:26:06.664"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:06.665" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 21:26:06.664" endtime="20220704 21:26:06.665"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:06.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.665" endtime="20220704 21:26:06.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.768" endtime="20220704 21:26:06.768"/>
</return>
<msg timestamp="20220704 21:26:06.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.663" endtime="20220704 21:26:06.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.768" endtime="20220704 21:26:06.768"/>
</return>
<msg timestamp="20220704 21:26:06.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.662" endtime="20220704 21:26:06.768"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:06.769" endtime="20220704 21:26:06.769"/>
</return>
<msg timestamp="20220704 21:26:06.770" level="INFO">${checklist_id} = 62c35aeee70c475b7089307e</msg>
<status status="PASS" starttime="20220704 21:26:06.769" endtime="20220704 21:26:06.770"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:06.771" level="INFO">${url} = checklists/62c35aeee70c475b7089307e</msg>
<status status="PASS" starttime="20220704 21:26:06.771" endtime="20220704 21:26:06.771"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:06.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.771" endtime="20220704 21:26:06.828"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.828" endtime="20220704 21:26:06.828"/>
</return>
<msg timestamp="20220704 21:26:06.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.770" endtime="20220704 21:26:06.829"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.829" endtime="20220704 21:26:06.829"/>
</return>
<msg timestamp="20220704 21:26:06.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.770" endtime="20220704 21:26:06.829"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:06.830" endtime="20220704 21:26:06.830"/>
</return>
<msg timestamp="20220704 21:26:06.830" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 21:26:06.829" endtime="20220704 21:26:06.830"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:06.831" endtime="20220704 21:26:06.831"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:06.832" level="INFO">${url} = checklists/62c35aeee70c475b7089307e</msg>
<status status="PASS" starttime="20220704 21:26:06.832" endtime="20220704 21:26:06.832"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:06.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.832" endtime="20220704 21:26:06.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.939" endtime="20220704 21:26:06.939"/>
</return>
<msg timestamp="20220704 21:26:06.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.831" endtime="20220704 21:26:06.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:06.939" endtime="20220704 21:26:06.939"/>
</return>
<status status="PASS" starttime="20220704 21:26:06.831" endtime="20220704 21:26:06.939"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:26:06.661" endtime="20220704 21:26:06.939"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:06.942" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:06.942" endtime="20220704 21:26:06.942"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:06.942" endtime="20220704 21:26:06.943"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:06.943" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 21:26:06.943" endtime="20220704 21:26:06.943"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:07.066" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.943" endtime="20220704 21:26:07.066"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.066" endtime="20220704 21:26:07.066"/>
</return>
<msg timestamp="20220704 21:26:07.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.942" endtime="20220704 21:26:07.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.067" endtime="20220704 21:26:07.067"/>
</return>
<msg timestamp="20220704 21:26:07.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:06.941" endtime="20220704 21:26:07.067"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:07.068" endtime="20220704 21:26:07.068"/>
</return>
<msg timestamp="20220704 21:26:07.069" level="INFO">${checklist_id} = 62c35aee26a3548db0a846d1</msg>
<status status="PASS" starttime="20220704 21:26:07.067" endtime="20220704 21:26:07.069"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:07.070" level="INFO">${url} = checklists/62c35aee26a3548db0a846d1</msg>
<status status="PASS" starttime="20220704 21:26:07.070" endtime="20220704 21:26:07.070"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:07.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.070" endtime="20220704 21:26:07.181"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.182" endtime="20220704 21:26:07.182"/>
</return>
<msg timestamp="20220704 21:26:07.182" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.069" endtime="20220704 21:26:07.182"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.182" endtime="20220704 21:26:07.182"/>
</return>
<msg timestamp="20220704 21:26:07.182" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.069" endtime="20220704 21:26:07.182"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:07.183" endtime="20220704 21:26:07.185"/>
</kw>
<status status="PASS" starttime="20220704 21:26:07.182" endtime="20220704 21:26:07.185"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:07.186" level="INFO">${url} = checklists/62c35aee26a3548db0a846d1</msg>
<status status="PASS" starttime="20220704 21:26:07.186" endtime="20220704 21:26:07.187"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:07.227" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:26:07.187" endtime="20220704 21:26:07.227"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.227" endtime="20220704 21:26:07.228"/>
</return>
<msg timestamp="20220704 21:26:07.228" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:26:07.186" endtime="20220704 21:26:07.228"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.228" endtime="20220704 21:26:07.228"/>
</return>
<status status="PASS" starttime="20220704 21:26:07.185" endtime="20220704 21:26:07.228"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:26:06.940" endtime="20220704 21:26:07.228"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:07.233" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:07.231" endtime="20220704 21:26:07.233"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:07.233" endtime="20220704 21:26:07.233"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:07.234" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 21:26:07.234" endtime="20220704 21:26:07.234"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:07.361" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.234" endtime="20220704 21:26:07.361"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.361" endtime="20220704 21:26:07.361"/>
</return>
<msg timestamp="20220704 21:26:07.361" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.230" endtime="20220704 21:26:07.361"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.361" endtime="20220704 21:26:07.361"/>
</return>
<msg timestamp="20220704 21:26:07.362" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.229" endtime="20220704 21:26:07.362"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:07.362" endtime="20220704 21:26:07.362"/>
</return>
<msg timestamp="20220704 21:26:07.363" level="INFO">${checklist_id} = 62c35aef5fedcf3e580f739a</msg>
<status status="PASS" starttime="20220704 21:26:07.362" endtime="20220704 21:26:07.363"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:07.364" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:07.364" endtime="20220704 21:26:07.364"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:07.365" endtime="20220704 21:26:07.365"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:07.365" level="INFO">${url} = checklists/62c35aef5fedcf3e580f739a</msg>
<status status="PASS" starttime="20220704 21:26:07.365" endtime="20220704 21:26:07.365"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:07.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.365" endtime="20220704 21:26:07.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.457" endtime="20220704 21:26:07.457"/>
</return>
<msg timestamp="20220704 21:26:07.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.364" endtime="20220704 21:26:07.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.458" endtime="20220704 21:26:07.458"/>
</return>
<msg timestamp="20220704 21:26:07.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.363" endtime="20220704 21:26:07.458"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:07.459" level="INFO">${url} = checklists/62c35aef5fedcf3e580f739a</msg>
<status status="PASS" starttime="20220704 21:26:07.459" endtime="20220704 21:26:07.459"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:07.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.459" endtime="20220704 21:26:07.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.519" endtime="20220704 21:26:07.519"/>
</return>
<msg timestamp="20220704 21:26:07.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.458" endtime="20220704 21:26:07.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.519" endtime="20220704 21:26:07.519"/>
</return>
<msg timestamp="20220704 21:26:07.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.458" endtime="20220704 21:26:07.519"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:07.520" endtime="20220704 21:26:07.520"/>
</return>
<msg timestamp="20220704 21:26:07.521" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 21:26:07.519" endtime="20220704 21:26:07.521"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:07.521" endtime="20220704 21:26:07.521"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:07.539" level="INFO">${url} = checklists/62c35aef5fedcf3e580f739a</msg>
<status status="PASS" starttime="20220704 21:26:07.538" endtime="20220704 21:26:07.539"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:07.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.539" endtime="20220704 21:26:07.643"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.644" endtime="20220704 21:26:07.644"/>
</return>
<msg timestamp="20220704 21:26:07.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.538" endtime="20220704 21:26:07.644"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.644" endtime="20220704 21:26:07.644"/>
</return>
<status status="PASS" starttime="20220704 21:26:07.521" endtime="20220704 21:26:07.644"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:26:07.229" endtime="20220704 21:26:07.644"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:07.647" level="INFO">${url} = boards/62c35aee4b7591642701a131</msg>
<status status="PASS" starttime="20220704 21:26:07.647" endtime="20220704 21:26:07.647"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:07.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.647" endtime="20220704 21:26:07.970"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.970" endtime="20220704 21:26:07.970"/>
</return>
<msg timestamp="20220704 21:26:07.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.646" endtime="20220704 21:26:07.970"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:07.970" endtime="20220704 21:26:07.971"/>
</return>
<status status="PASS" starttime="20220704 21:26:07.646" endtime="20220704 21:26:07.971"/>
</kw>
<status status="PASS" starttime="20220704 21:26:07.646" endtime="20220704 21:26:07.971"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:26:07.971" endtime="20220704 21:26:07.972"/>
</kw>
<status status="PASS" starttime="20220704 21:26:07.645" endtime="20220704 21:26:07.972"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 21:26:06.213" endtime="20220704 21:26:07.972"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:26:07.983" endtime="20220704 21:26:07.983"/>
</kw>
<status status="PASS" starttime="20220704 21:26:07.982" endtime="20220704 21:26:07.983"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:07.984" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:07.984" endtime="20220704 21:26:07.984"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:07.984" endtime="20220704 21:26:07.985"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:07.985" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:26:07.985" endtime="20220704 21:26:07.985"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:08.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.985" endtime="20220704 21:26:08.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.175" endtime="20220704 21:26:08.175"/>
</return>
<msg timestamp="20220704 21:26:08.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.984" endtime="20220704 21:26:08.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.175" endtime="20220704 21:26:08.176"/>
</return>
<msg timestamp="20220704 21:26:08.176" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:07.984" endtime="20220704 21:26:08.176"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:26:08.177" level="INFO">${TEST_SUITE_BOARD_ID} = 62c35af05ef7a93f21e0898e</msg>
<status status="PASS" starttime="20220704 21:26:08.176" endtime="20220704 21:26:08.177"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:08.228" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.177" endtime="20220704 21:26:08.228"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:26:08.229" level="INFO">${TEST_SUITE_LIST_ID} = 62c35af05ef7a93f21e08995</msg>
<status status="PASS" starttime="20220704 21:26:08.228" endtime="20220704 21:26:08.229"/>
</kw>
<status status="PASS" starttime="20220704 21:26:07.983" endtime="20220704 21:26:08.229"/>
</kw>
<status status="PASS" starttime="20220704 21:26:07.982" endtime="20220704 21:26:08.229"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:08.231" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:08.231" endtime="20220704 21:26:08.231"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:08.231" endtime="20220704 21:26:08.232"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:08.232" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 21:26:08.232" endtime="20220704 21:26:08.233"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:08.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.233" endtime="20220704 21:26:08.324"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.324" endtime="20220704 21:26:08.324"/>
</return>
<msg timestamp="20220704 21:26:08.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.231" endtime="20220704 21:26:08.325"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.325" endtime="20220704 21:26:08.325"/>
</return>
<msg timestamp="20220704 21:26:08.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.230" endtime="20220704 21:26:08.325"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:08.326" endtime="20220704 21:26:08.328"/>
</kw>
<status status="PASS" starttime="20220704 21:26:08.325" endtime="20220704 21:26:08.328"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:08.328" endtime="20220704 21:26:08.328"/>
</return>
<msg timestamp="20220704 21:26:08.329" level="INFO">${LABEL_ID} = 62c35af0db1fd958c9e7b13c</msg>
<status status="PASS" starttime="20220704 21:26:08.328" endtime="20220704 21:26:08.329"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:08.330" level="INFO">${url} = labels/62c35af0db1fd958c9e7b13c</msg>
<status status="PASS" starttime="20220704 21:26:08.330" endtime="20220704 21:26:08.330"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:08.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.331" endtime="20220704 21:26:08.385"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.385" endtime="20220704 21:26:08.385"/>
</return>
<msg timestamp="20220704 21:26:08.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.330" endtime="20220704 21:26:08.385"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.386" endtime="20220704 21:26:08.386"/>
</return>
<msg timestamp="20220704 21:26:08.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.329" endtime="20220704 21:26:08.386"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:08.386" endtime="20220704 21:26:08.386"/>
</return>
<msg timestamp="20220704 21:26:08.387" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 21:26:08.386" endtime="20220704 21:26:08.387"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:08.388" endtime="20220704 21:26:08.388"/>
</return>
<msg timestamp="20220704 21:26:08.388" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 21:26:08.387" endtime="20220704 21:26:08.388"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:08.389" endtime="20220704 21:26:08.389"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:08.389" endtime="20220704 21:26:08.389"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:08.391" level="INFO">${url} = labels/62c35af0db1fd958c9e7b13c</msg>
<status status="PASS" starttime="20220704 21:26:08.391" endtime="20220704 21:26:08.391"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:08.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.391" endtime="20220704 21:26:08.494"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.494" endtime="20220704 21:26:08.494"/>
</return>
<msg timestamp="20220704 21:26:08.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.390" endtime="20220704 21:26:08.494"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.494" endtime="20220704 21:26:08.494"/>
</return>
<status status="PASS" starttime="20220704 21:26:08.390" endtime="20220704 21:26:08.494"/>
</kw>
<status status="PASS" starttime="20220704 21:26:08.389" endtime="20220704 21:26:08.494"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:26:08.229" endtime="20220704 21:26:08.494"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:08.497" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:08.496" endtime="20220704 21:26:08.497"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:08.497" endtime="20220704 21:26:08.497"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:08.498" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 21:26:08.497" endtime="20220704 21:26:08.498"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:08.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.498" endtime="20220704 21:26:08.594"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.594" endtime="20220704 21:26:08.594"/>
</return>
<msg timestamp="20220704 21:26:08.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.496" endtime="20220704 21:26:08.594"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.594" endtime="20220704 21:26:08.594"/>
</return>
<msg timestamp="20220704 21:26:08.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.495" endtime="20220704 21:26:08.595"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:08.595" endtime="20220704 21:26:08.597"/>
</kw>
<status status="PASS" starttime="20220704 21:26:08.595" endtime="20220704 21:26:08.597"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:08.598" endtime="20220704 21:26:08.598"/>
</return>
<msg timestamp="20220704 21:26:08.598" level="INFO">${LABEL_ID} = 62c35af01b600d136f595022</msg>
<status status="PASS" starttime="20220704 21:26:08.597" endtime="20220704 21:26:08.598"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:08.599" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:08.599" endtime="20220704 21:26:08.599"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:08.600" endtime="20220704 21:26:08.600"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:08.600" level="INFO">${url} = labels/62c35af01b600d136f595022</msg>
<status status="PASS" starttime="20220704 21:26:08.600" endtime="20220704 21:26:08.600"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:08.722" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.600" endtime="20220704 21:26:08.722"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.722" endtime="20220704 21:26:08.722"/>
</return>
<msg timestamp="20220704 21:26:08.722" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.599" endtime="20220704 21:26:08.722"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.722" endtime="20220704 21:26:08.723"/>
</return>
<msg timestamp="20220704 21:26:08.723" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.598" endtime="20220704 21:26:08.723"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:08.723" endtime="20220704 21:26:08.723"/>
</return>
<msg timestamp="20220704 21:26:08.724" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 21:26:08.723" endtime="20220704 21:26:08.724"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:08.725" endtime="20220704 21:26:08.725"/>
</return>
<msg timestamp="20220704 21:26:08.725" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 21:26:08.724" endtime="20220704 21:26:08.725"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:08.726" endtime="20220704 21:26:08.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:08.726" endtime="20220704 21:26:08.726"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:08.728" level="INFO">${url} = labels/62c35af01b600d136f595022</msg>
<status status="PASS" starttime="20220704 21:26:08.728" endtime="20220704 21:26:08.728"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:08.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.729" endtime="20220704 21:26:08.837"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.837" endtime="20220704 21:26:08.838"/>
</return>
<msg timestamp="20220704 21:26:08.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.727" endtime="20220704 21:26:08.838"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.838" endtime="20220704 21:26:08.838"/>
</return>
<status status="PASS" starttime="20220704 21:26:08.727" endtime="20220704 21:26:08.838"/>
</kw>
<status status="PASS" starttime="20220704 21:26:08.726" endtime="20220704 21:26:08.838"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:26:08.495" endtime="20220704 21:26:08.838"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:08.840" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:08.840" endtime="20220704 21:26:08.841"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:08.841" endtime="20220704 21:26:08.841"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:08.842" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 21:26:08.841" endtime="20220704 21:26:08.842"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:08.927" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.842" endtime="20220704 21:26:08.927"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.927" endtime="20220704 21:26:08.928"/>
</return>
<msg timestamp="20220704 21:26:08.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.840" endtime="20220704 21:26:08.928"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:08.928" endtime="20220704 21:26:08.928"/>
</return>
<msg timestamp="20220704 21:26:08.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.839" endtime="20220704 21:26:08.928"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:26:08.929" endtime="20220704 21:26:08.929"/>
</return>
<msg timestamp="20220704 21:26:08.930" level="INFO">${LABEL_ID} = 62c35af0103d362b38791cbc</msg>
<status status="PASS" starttime="20220704 21:26:08.928" endtime="20220704 21:26:08.930"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:08.932" level="INFO">${url} = labels/62c35af0103d362b38791cbc</msg>
<status status="PASS" starttime="20220704 21:26:08.931" endtime="20220704 21:26:08.932"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:09.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.932" endtime="20220704 21:26:09.034"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.035" endtime="20220704 21:26:09.035"/>
</return>
<msg timestamp="20220704 21:26:09.035" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:08.931" endtime="20220704 21:26:09.035"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.035" endtime="20220704 21:26:09.035"/>
</return>
<status status="PASS" starttime="20220704 21:26:08.930" endtime="20220704 21:26:09.035"/>
</kw>
<status status="PASS" starttime="20220704 21:26:08.930" endtime="20220704 21:26:09.035"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:09.037" level="INFO">${url} = labels/62c35af0103d362b38791cbc</msg>
<status status="PASS" starttime="20220704 21:26:09.036" endtime="20220704 21:26:09.037"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:09.077" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:26:09.037" endtime="20220704 21:26:09.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.077" endtime="20220704 21:26:09.077"/>
</return>
<msg timestamp="20220704 21:26:09.078" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:26:09.036" endtime="20220704 21:26:09.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.078" endtime="20220704 21:26:09.078"/>
</return>
<status status="PASS" starttime="20220704 21:26:09.035" endtime="20220704 21:26:09.078"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:26:08.839" endtime="20220704 21:26:09.078"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:09.081" level="INFO">${url} = boards/62c35af05ef7a93f21e0898e</msg>
<status status="PASS" starttime="20220704 21:26:09.080" endtime="20220704 21:26:09.081"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:09.389" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.081" endtime="20220704 21:26:09.389"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.389" endtime="20220704 21:26:09.389"/>
</return>
<msg timestamp="20220704 21:26:09.389" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.080" endtime="20220704 21:26:09.389"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.389" endtime="20220704 21:26:09.389"/>
</return>
<status status="PASS" starttime="20220704 21:26:09.079" endtime="20220704 21:26:09.390"/>
</kw>
<status status="PASS" starttime="20220704 21:26:09.079" endtime="20220704 21:26:09.390"/>
</kw>
<status status="PASS" starttime="20220704 21:26:09.079" endtime="20220704 21:26:09.390"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:26:09.390" endtime="20220704 21:26:09.391"/>
</kw>
<status status="PASS" starttime="20220704 21:26:09.079" endtime="20220704 21:26:09.391"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 21:26:07.974" endtime="20220704 21:26:09.391"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:26:09.402" endtime="20220704 21:26:09.403"/>
</kw>
<status status="PASS" starttime="20220704 21:26:09.402" endtime="20220704 21:26:09.403"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:09.404" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:09.404" endtime="20220704 21:26:09.404"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:09.404" endtime="20220704 21:26:09.404"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:09.405" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:26:09.404" endtime="20220704 21:26:09.405"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:09.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.405" endtime="20220704 21:26:09.615"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.615" endtime="20220704 21:26:09.615"/>
</return>
<msg timestamp="20220704 21:26:09.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.403" endtime="20220704 21:26:09.615"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.615" endtime="20220704 21:26:09.615"/>
</return>
<msg timestamp="20220704 21:26:09.615" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.403" endtime="20220704 21:26:09.615"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:26:09.617" level="INFO">${TEST_SUITE_BOARD_ID} = 62c35af19e68b968e837125a</msg>
<status status="PASS" starttime="20220704 21:26:09.616" endtime="20220704 21:26:09.617"/>
</kw>
<status status="PASS" starttime="20220704 21:26:09.615" endtime="20220704 21:26:09.617"/>
</kw>
<status status="PASS" starttime="20220704 21:26:09.403" endtime="20220704 21:26:09.617"/>
</kw>
<status status="PASS" starttime="20220704 21:26:09.402" endtime="20220704 21:26:09.617"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:09.619" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:09.619" endtime="20220704 21:26:09.619"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:09.619" endtime="20220704 21:26:09.619"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:09.620" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 21:26:09.619" endtime="20220704 21:26:09.620"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:09.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.620" endtime="20220704 21:26:09.729"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.729" endtime="20220704 21:26:09.729"/>
</return>
<msg timestamp="20220704 21:26:09.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.618" endtime="20220704 21:26:09.729"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.729" endtime="20220704 21:26:09.729"/>
</return>
<msg timestamp="20220704 21:26:09.730" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.618" endtime="20220704 21:26:09.730"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:09.730" endtime="20220704 21:26:09.732"/>
</kw>
<status status="PASS" starttime="20220704 21:26:09.730" endtime="20220704 21:26:09.732"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:26:09.617" endtime="20220704 21:26:09.732"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:09.735" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:09.735" endtime="20220704 21:26:09.735"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:09.735" endtime="20220704 21:26:09.735"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:09.736" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 21:26:09.735" endtime="20220704 21:26:09.736"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:09.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.736" endtime="20220704 21:26:09.826"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.826" endtime="20220704 21:26:09.826"/>
</return>
<msg timestamp="20220704 21:26:09.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.734" endtime="20220704 21:26:09.826"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.826" endtime="20220704 21:26:09.826"/>
</return>
<msg timestamp="20220704 21:26:09.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.734" endtime="20220704 21:26:09.827"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:09.827" endtime="20220704 21:26:09.829"/>
</kw>
<status status="PASS" starttime="20220704 21:26:09.827" endtime="20220704 21:26:09.829"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:09.831" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:09.831" endtime="20220704 21:26:09.831"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:09.831" endtime="20220704 21:26:09.831"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:09.832" level="INFO">${url} = lists/62c35af1aa2a64450584fee2</msg>
<status status="PASS" starttime="20220704 21:26:09.831" endtime="20220704 21:26:09.832"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:09.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.832" endtime="20220704 21:26:09.913"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.913" endtime="20220704 21:26:09.913"/>
</return>
<msg timestamp="20220704 21:26:09.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.830" endtime="20220704 21:26:09.913"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.913" endtime="20220704 21:26:09.913"/>
</return>
<status status="PASS" starttime="20220704 21:26:09.829" endtime="20220704 21:26:09.914"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:09.916" level="INFO">${url} = lists/62c35af1aa2a64450584fee2</msg>
<status status="PASS" starttime="20220704 21:26:09.915" endtime="20220704 21:26:09.916"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:09.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.916" endtime="20220704 21:26:09.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.962" endtime="20220704 21:26:09.962"/>
</return>
<msg timestamp="20220704 21:26:09.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.915" endtime="20220704 21:26:09.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:09.963" endtime="20220704 21:26:09.963"/>
</return>
<msg timestamp="20220704 21:26:09.963" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.914" endtime="20220704 21:26:09.963"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:26:09.963" endtime="20220704 21:26:09.965"/>
</kw>
<status status="PASS" starttime="20220704 21:26:09.963" endtime="20220704 21:26:09.965"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:26:09.965" endtime="20220704 21:26:09.966"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:26:09.733" endtime="20220704 21:26:09.966"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:09.970" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:09.970" endtime="20220704 21:26:09.970"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:09.970" endtime="20220704 21:26:09.970"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:09.971" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 21:26:09.970" endtime="20220704 21:26:09.971"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:10.066" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.971" endtime="20220704 21:26:10.066"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:10.066" endtime="20220704 21:26:10.066"/>
</return>
<msg timestamp="20220704 21:26:10.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.969" endtime="20220704 21:26:10.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:10.067" endtime="20220704 21:26:10.067"/>
</return>
<msg timestamp="20220704 21:26:10.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:09.967" endtime="20220704 21:26:10.067"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:26:10.069" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:26:10.069" endtime="20220704 21:26:10.069"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:26:10.069" endtime="20220704 21:26:10.070"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:10.070" level="INFO">${url} = lists/62c35af29ac7198fcdade168/closed</msg>
<status status="PASS" starttime="20220704 21:26:10.070" endtime="20220704 21:26:10.070"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:26:10.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:10.070" endtime="20220704 21:26:10.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:10.163" endtime="20220704 21:26:10.163"/>
</return>
<msg timestamp="20220704 21:26:10.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:10.068" endtime="20220704 21:26:10.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:10.163" endtime="20220704 21:26:10.163"/>
</return>
<status status="PASS" starttime="20220704 21:26:10.067" endtime="20220704 21:26:10.163"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:10.165" level="INFO">${url} = lists/62c35af29ac7198fcdade168</msg>
<status status="PASS" starttime="20220704 21:26:10.165" endtime="20220704 21:26:10.165"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:26:10.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:10.165" endtime="20220704 21:26:10.214"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:10.214" endtime="20220704 21:26:10.214"/>
</return>
<msg timestamp="20220704 21:26:10.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:10.165" endtime="20220704 21:26:10.214"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:10.214" endtime="20220704 21:26:10.214"/>
</return>
<msg timestamp="20220704 21:26:10.215" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:10.164" endtime="20220704 21:26:10.215"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 21:26:10.215" endtime="20220704 21:26:10.216"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:26:09.967" endtime="20220704 21:26:10.216"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:26:10.218" level="INFO">${url} = boards/62c35af19e68b968e837125a</msg>
<status status="PASS" starttime="20220704 21:26:10.218" endtime="20220704 21:26:10.218"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:26:10.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:10.218" endtime="20220704 21:26:10.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:10.565" endtime="20220704 21:26:10.565"/>
</return>
<msg timestamp="20220704 21:26:10.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:26:10.217" endtime="20220704 21:26:10.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:26:10.565" endtime="20220704 21:26:10.565"/>
</return>
<status status="PASS" starttime="20220704 21:26:10.217" endtime="20220704 21:26:10.565"/>
</kw>
<status status="PASS" starttime="20220704 21:26:10.217" endtime="20220704 21:26:10.565"/>
</kw>
<status status="PASS" starttime="20220704 21:26:10.216" endtime="20220704 21:26:10.565"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:26:10.566" endtime="20220704 21:26:10.567"/>
</kw>
<status status="PASS" starttime="20220704 21:26:10.216" endtime="20220704 21:26:10.567"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 21:26:09.393" endtime="20220704 21:26:10.567"/>
</suite>
<status status="PASS" starttime="20220704 21:25:59.734" endtime="20220704 21:26:10.569"/>
</suite>
<status status="PASS" starttime="20220704 21:25:59.717" endtime="20220704 21:26:10.571"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
