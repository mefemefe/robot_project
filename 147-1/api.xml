<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 10:47:47.565" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 10:47:47.693" endtime="20220705 10:47:47.694"/>
</kw>
<status status="PASS" starttime="20220705 10:47:47.692" endtime="20220705 10:47:47.694"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:47.696" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:47.695" endtime="20220705 10:47:47.696"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:47.696" endtime="20220705 10:47:47.696"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:47.697" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:47:47.696" endtime="20220705 10:47:47.697"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:48.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:47.697" endtime="20220705 10:47:48.016"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:48.016" endtime="20220705 10:47:48.016"/>
</return>
<msg timestamp="20220705 10:47:48.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:47.695" endtime="20220705 10:47:48.016"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:48.016" endtime="20220705 10:47:48.016"/>
</return>
<msg timestamp="20220705 10:47:48.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:47.695" endtime="20220705 10:47:48.016"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:47:48.017" endtime="20220705 10:47:48.022"/>
</kw>
<status status="PASS" starttime="20220705 10:47:48.017" endtime="20220705 10:47:48.022"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:48.024" level="INFO">${url} = boards/62c416d3ce21ad7d932d3aa9</msg>
<status status="PASS" starttime="20220705 10:47:48.024" endtime="20220705 10:47:48.024"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:48.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:48.024" endtime="20220705 10:47:48.521"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:48.521" endtime="20220705 10:47:48.521"/>
</return>
<msg timestamp="20220705 10:47:48.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:48.023" endtime="20220705 10:47:48.521"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:48.521" endtime="20220705 10:47:48.521"/>
</return>
<status status="PASS" starttime="20220705 10:47:48.022" endtime="20220705 10:47:48.521"/>
</kw>
<status status="PASS" starttime="20220705 10:47:48.022" endtime="20220705 10:47:48.521"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:47:47.694" endtime="20220705 10:47:48.521"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:48.524" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:48.524" endtime="20220705 10:47:48.524"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:48.524" endtime="20220705 10:47:48.524"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:48.525" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:47:48.524" endtime="20220705 10:47:48.525"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:48.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:48.525" endtime="20220705 10:47:48.749"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:48.750" endtime="20220705 10:47:48.750"/>
</return>
<msg timestamp="20220705 10:47:48.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:48.523" endtime="20220705 10:47:48.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:48.750" endtime="20220705 10:47:48.750"/>
</return>
<msg timestamp="20220705 10:47:48.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:48.523" endtime="20220705 10:47:48.750"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:47:48.751" endtime="20220705 10:47:48.755"/>
</kw>
<status status="PASS" starttime="20220705 10:47:48.750" endtime="20220705 10:47:48.755"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:48.756" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:48.756" endtime="20220705 10:47:48.756"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:48.757" endtime="20220705 10:47:48.757"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:48.757" level="INFO">${url} = boards/62c416d4497b4e62b0f44398</msg>
<status status="PASS" starttime="20220705 10:47:48.757" endtime="20220705 10:47:48.757"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:48.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:48.757" endtime="20220705 10:47:48.914"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:48.914" endtime="20220705 10:47:48.915"/>
</return>
<msg timestamp="20220705 10:47:48.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:48.756" endtime="20220705 10:47:48.915"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:48.915" endtime="20220705 10:47:48.915"/>
</return>
<status status="PASS" starttime="20220705 10:47:48.755" endtime="20220705 10:47:48.915"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:48.917" level="INFO">${url} = boards/62c416d4497b4e62b0f44398</msg>
<status status="PASS" starttime="20220705 10:47:48.917" endtime="20220705 10:47:48.917"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:49.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:48.917" endtime="20220705 10:47:49.034"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:49.035" endtime="20220705 10:47:49.035"/>
</return>
<msg timestamp="20220705 10:47:49.035" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:48.916" endtime="20220705 10:47:49.035"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:49.035" endtime="20220705 10:47:49.035"/>
</return>
<msg timestamp="20220705 10:47:49.035" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:48.915" endtime="20220705 10:47:49.035"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:47:49.036" endtime="20220705 10:47:49.040"/>
</kw>
<status status="PASS" starttime="20220705 10:47:49.035" endtime="20220705 10:47:49.040"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:47:49.040" endtime="20220705 10:47:49.041"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:49.043" level="INFO">${url} = boards/62c416d4497b4e62b0f44398</msg>
<status status="PASS" starttime="20220705 10:47:49.042" endtime="20220705 10:47:49.043"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:49.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:49.043" endtime="20220705 10:47:49.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:49.447" endtime="20220705 10:47:49.448"/>
</return>
<msg timestamp="20220705 10:47:49.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:49.042" endtime="20220705 10:47:49.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:49.448" endtime="20220705 10:47:49.448"/>
</return>
<status status="PASS" starttime="20220705 10:47:49.041" endtime="20220705 10:47:49.448"/>
</kw>
<status status="PASS" starttime="20220705 10:47:49.041" endtime="20220705 10:47:49.448"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:47:48.522" endtime="20220705 10:47:49.448"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:49.451" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:49.451" endtime="20220705 10:47:49.451"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:49.451" endtime="20220705 10:47:49.451"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:49.452" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:47:49.451" endtime="20220705 10:47:49.452"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:49.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:49.452" endtime="20220705 10:47:49.694"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:49.694" endtime="20220705 10:47:49.694"/>
</return>
<msg timestamp="20220705 10:47:49.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:49.450" endtime="20220705 10:47:49.694"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:49.694" endtime="20220705 10:47:49.694"/>
</return>
<msg timestamp="20220705 10:47:49.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:49.450" endtime="20220705 10:47:49.694"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:49.696" level="INFO">${url} = boards/62c416d5cebfa46ef68f606e</msg>
<status status="PASS" starttime="20220705 10:47:49.696" endtime="20220705 10:47:49.696"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:50.086" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:49.696" endtime="20220705 10:47:50.086"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:50.086" endtime="20220705 10:47:50.086"/>
</return>
<msg timestamp="20220705 10:47:50.087" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:49.695" endtime="20220705 10:47:50.087"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:50.087" endtime="20220705 10:47:50.087"/>
</return>
<status status="PASS" starttime="20220705 10:47:49.694" endtime="20220705 10:47:50.087"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:50.089" level="INFO">${url} = boards/62c416d5cebfa46ef68f606e</msg>
<status status="PASS" starttime="20220705 10:47:50.089" endtime="20220705 10:47:50.089"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:50.194" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:47:50.089" endtime="20220705 10:47:50.194"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:50.194" endtime="20220705 10:47:50.194"/>
</return>
<msg timestamp="20220705 10:47:50.194" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:47:50.088" endtime="20220705 10:47:50.194"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:50.194" endtime="20220705 10:47:50.194"/>
</return>
<status status="PASS" starttime="20220705 10:47:50.087" endtime="20220705 10:47:50.194"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:47:49.449" endtime="20220705 10:47:50.194"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:50.197" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:50.196" endtime="20220705 10:47:50.197"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:50.197" endtime="20220705 10:47:50.197"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:50.198" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:47:50.197" endtime="20220705 10:47:50.198"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:50.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:50.198" endtime="20220705 10:47:50.538"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:50.538" endtime="20220705 10:47:50.538"/>
</return>
<msg timestamp="20220705 10:47:50.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:50.196" endtime="20220705 10:47:50.538"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:50.539" endtime="20220705 10:47:50.539"/>
</return>
<msg timestamp="20220705 10:47:50.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:50.196" endtime="20220705 10:47:50.539"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:47:50.539" endtime="20220705 10:47:50.543"/>
</kw>
<status status="PASS" starttime="20220705 10:47:50.539" endtime="20220705 10:47:50.543"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:50.545" level="INFO">${url} = boards/62c416d68e9c3836442fec80</msg>
<status status="PASS" starttime="20220705 10:47:50.545" endtime="20220705 10:47:50.545"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:50.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:50.545" endtime="20220705 10:47:50.661"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:50.661" endtime="20220705 10:47:50.661"/>
</return>
<msg timestamp="20220705 10:47:50.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:50.544" endtime="20220705 10:47:50.661"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:50.662" endtime="20220705 10:47:50.662"/>
</return>
<msg timestamp="20220705 10:47:50.662" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:50.544" endtime="20220705 10:47:50.662"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:47:50.662" endtime="20220705 10:47:50.666"/>
</kw>
<status status="PASS" starttime="20220705 10:47:50.662" endtime="20220705 10:47:50.666"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:47:50.666" endtime="20220705 10:47:50.667"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:50.669" level="INFO">${url} = boards/62c416d68e9c3836442fec80</msg>
<status status="PASS" starttime="20220705 10:47:50.669" endtime="20220705 10:47:50.669"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:51.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:50.670" endtime="20220705 10:47:51.079"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:51.079" endtime="20220705 10:47:51.079"/>
</return>
<msg timestamp="20220705 10:47:51.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:50.668" endtime="20220705 10:47:51.079"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:51.079" endtime="20220705 10:47:51.079"/>
</return>
<status status="PASS" starttime="20220705 10:47:50.668" endtime="20220705 10:47:51.079"/>
</kw>
<status status="PASS" starttime="20220705 10:47:50.667" endtime="20220705 10:47:51.079"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:47:50.195" endtime="20220705 10:47:51.079"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:51.082" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:51.082" endtime="20220705 10:47:51.082"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:51.082" endtime="20220705 10:47:51.082"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:51.083" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:47:51.082" endtime="20220705 10:47:51.083"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:51.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.083" endtime="20220705 10:47:51.329"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:51.329" endtime="20220705 10:47:51.329"/>
</return>
<msg timestamp="20220705 10:47:51.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.081" endtime="20220705 10:47:51.330"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:51.330" endtime="20220705 10:47:51.330"/>
</return>
<msg timestamp="20220705 10:47:51.330" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.081" endtime="20220705 10:47:51.330"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:47:51.330" endtime="20220705 10:47:51.334"/>
</kw>
<status status="PASS" starttime="20220705 10:47:51.330" endtime="20220705 10:47:51.335"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:51.336" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:51.336" endtime="20220705 10:47:51.336"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:51.336" endtime="20220705 10:47:51.336"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:51.337" level="INFO">${url} = boards/62c416d7a2416f6c7ec8288f</msg>
<status status="PASS" starttime="20220705 10:47:51.337" endtime="20220705 10:47:51.337"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:51.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.337" endtime="20220705 10:47:51.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:51.505" endtime="20220705 10:47:51.505"/>
</return>
<msg timestamp="20220705 10:47:51.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.336" endtime="20220705 10:47:51.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:51.505" endtime="20220705 10:47:51.506"/>
</return>
<status status="PASS" starttime="20220705 10:47:51.335" endtime="20220705 10:47:51.506"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:51.508" level="INFO">${url} = boards/62c416d7a2416f6c7ec8288f</msg>
<status status="PASS" starttime="20220705 10:47:51.507" endtime="20220705 10:47:51.508"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:51.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.508" endtime="20220705 10:47:51.620"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:51.620" endtime="20220705 10:47:51.621"/>
</return>
<msg timestamp="20220705 10:47:51.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.507" endtime="20220705 10:47:51.621"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:51.621" endtime="20220705 10:47:51.621"/>
</return>
<msg timestamp="20220705 10:47:51.621" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.506" endtime="20220705 10:47:51.621"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:47:51.621" endtime="20220705 10:47:51.622"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:51.624" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:51.624" endtime="20220705 10:47:51.624"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:51.624" endtime="20220705 10:47:51.624"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:51.625" level="INFO">${url} = boards/62c416d7a2416f6c7ec8288f</msg>
<status status="PASS" starttime="20220705 10:47:51.624" endtime="20220705 10:47:51.625"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:51.800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.625" endtime="20220705 10:47:51.800"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:51.800" endtime="20220705 10:47:51.800"/>
</return>
<msg timestamp="20220705 10:47:51.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.623" endtime="20220705 10:47:51.801"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:51.801" endtime="20220705 10:47:51.801"/>
</return>
<status status="PASS" starttime="20220705 10:47:51.622" endtime="20220705 10:47:51.801"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:51.803" level="INFO">${url} = boards/62c416d7a2416f6c7ec8288f</msg>
<status status="PASS" starttime="20220705 10:47:51.802" endtime="20220705 10:47:51.803"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:51.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.803" endtime="20220705 10:47:51.918"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:51.918" endtime="20220705 10:47:51.918"/>
</return>
<msg timestamp="20220705 10:47:51.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.802" endtime="20220705 10:47:51.919"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:51.919" endtime="20220705 10:47:51.919"/>
</return>
<msg timestamp="20220705 10:47:51.919" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.801" endtime="20220705 10:47:51.919"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:47:51.919" endtime="20220705 10:47:51.920"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:51.922" level="INFO">${url} = boards/62c416d7a2416f6c7ec8288f</msg>
<status status="PASS" starttime="20220705 10:47:51.922" endtime="20220705 10:47:51.922"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:52.288" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.922" endtime="20220705 10:47:52.288"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:52.288" endtime="20220705 10:47:52.288"/>
</return>
<msg timestamp="20220705 10:47:52.289" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:51.921" endtime="20220705 10:47:52.289"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:52.289" endtime="20220705 10:47:52.289"/>
</return>
<status status="PASS" starttime="20220705 10:47:51.920" endtime="20220705 10:47:52.289"/>
</kw>
<status status="PASS" starttime="20220705 10:47:51.920" endtime="20220705 10:47:52.289"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:47:51.080" endtime="20220705 10:47:52.289"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 10:47:52.290" endtime="20220705 10:47:52.291"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 10:47:47.585" endtime="20220705 10:47:52.292"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 10:47:52.304" endtime="20220705 10:47:52.304"/>
</kw>
<status status="PASS" starttime="20220705 10:47:52.304" endtime="20220705 10:47:52.304"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:52.305" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:52.305" endtime="20220705 10:47:52.305"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:52.305" endtime="20220705 10:47:52.305"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:52.306" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:47:52.305" endtime="20220705 10:47:52.306"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:52.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:52.306" endtime="20220705 10:47:52.618"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:52.618" endtime="20220705 10:47:52.618"/>
</return>
<msg timestamp="20220705 10:47:52.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:52.305" endtime="20220705 10:47:52.618"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:52.618" endtime="20220705 10:47:52.618"/>
</return>
<msg timestamp="20220705 10:47:52.619" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:52.304" endtime="20220705 10:47:52.619"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:47:52.620" level="INFO">${TEST_SUITE_BOARD_ID} = 62c416d843c90e8648e1db68</msg>
<status status="PASS" starttime="20220705 10:47:52.619" endtime="20220705 10:47:52.620"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:52.621" level="INFO">${url} = boards/62c416d843c90e8648e1db68/lists/</msg>
<status status="PASS" starttime="20220705 10:47:52.620" endtime="20220705 10:47:52.621"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:52.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:52.621" endtime="20220705 10:47:52.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:52.740" endtime="20220705 10:47:52.740"/>
</return>
<msg timestamp="20220705 10:47:52.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:52.620" endtime="20220705 10:47:52.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:52.740" endtime="20220705 10:47:52.740"/>
</return>
<msg timestamp="20220705 10:47:52.740" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:52.620" endtime="20220705 10:47:52.740"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:47:52.741" level="INFO">${TEST_SUITE_LIST_ID} = 62c416d843c90e8648e1db6f</msg>
<status status="PASS" starttime="20220705 10:47:52.741" endtime="20220705 10:47:52.741"/>
</kw>
<status status="PASS" starttime="20220705 10:47:52.304" endtime="20220705 10:47:52.742"/>
</kw>
<status status="PASS" starttime="20220705 10:47:52.303" endtime="20220705 10:47:52.742"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:52.744" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:52.743" endtime="20220705 10:47:52.744"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:52.744" endtime="20220705 10:47:52.744"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:52.745" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 10:47:52.744" endtime="20220705 10:47:52.745"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:53.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:52.745" endtime="20220705 10:47:53.030"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:53.030" endtime="20220705 10:47:53.030"/>
</return>
<msg timestamp="20220705 10:47:53.030" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:52.743" endtime="20220705 10:47:53.030"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:53.030" endtime="20220705 10:47:53.030"/>
</return>
<msg timestamp="20220705 10:47:53.030" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:52.742" endtime="20220705 10:47:53.030"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:47:53.031" endtime="20220705 10:47:53.036"/>
</kw>
<status status="PASS" starttime="20220705 10:47:53.031" endtime="20220705 10:47:53.036"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:53.036" endtime="20220705 10:47:53.037"/>
</return>
<msg timestamp="20220705 10:47:53.037" level="INFO">${CARD_ID} = 62c416d895ec7d31e4db2442</msg>
<status status="PASS" starttime="20220705 10:47:53.036" endtime="20220705 10:47:53.037"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:53.038" level="INFO">${url} = cards/62c416d895ec7d31e4db2442</msg>
<status status="PASS" starttime="20220705 10:47:53.038" endtime="20220705 10:47:53.038"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:53.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:53.039" endtime="20220705 10:47:53.162"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:53.162" endtime="20220705 10:47:53.162"/>
</return>
<msg timestamp="20220705 10:47:53.162" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:53.038" endtime="20220705 10:47:53.162"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:53.162" endtime="20220705 10:47:53.162"/>
</return>
<msg timestamp="20220705 10:47:53.162" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:53.037" endtime="20220705 10:47:53.162"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:53.163" endtime="20220705 10:47:53.163"/>
</return>
<msg timestamp="20220705 10:47:53.164" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 10:47:53.162" endtime="20220705 10:47:53.164"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:47:53.164" endtime="20220705 10:47:53.164"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:53.166" level="INFO">${url} = cards/62c416d895ec7d31e4db2442</msg>
<status status="PASS" starttime="20220705 10:47:53.165" endtime="20220705 10:47:53.166"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:53.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:53.166" endtime="20220705 10:47:53.589"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:53.589" endtime="20220705 10:47:53.589"/>
</return>
<msg timestamp="20220705 10:47:53.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:53.165" endtime="20220705 10:47:53.589"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:53.589" endtime="20220705 10:47:53.589"/>
</return>
<status status="PASS" starttime="20220705 10:47:53.164" endtime="20220705 10:47:53.589"/>
</kw>
<status status="PASS" starttime="20220705 10:47:53.164" endtime="20220705 10:47:53.589"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:47:52.742" endtime="20220705 10:47:53.589"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:53.592" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:53.592" endtime="20220705 10:47:53.592"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:53.592" endtime="20220705 10:47:53.592"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:53.593" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 10:47:53.593" endtime="20220705 10:47:53.593"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:53.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:53.593" endtime="20220705 10:47:53.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:53.811" endtime="20220705 10:47:53.811"/>
</return>
<msg timestamp="20220705 10:47:53.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:53.591" endtime="20220705 10:47:53.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:53.812" endtime="20220705 10:47:53.812"/>
</return>
<msg timestamp="20220705 10:47:53.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:53.591" endtime="20220705 10:47:53.812"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:53.813" endtime="20220705 10:47:53.813"/>
</return>
<msg timestamp="20220705 10:47:53.813" level="INFO">${CARD_ID} = 62c416d94eb7823f3ffa5f67</msg>
<status status="PASS" starttime="20220705 10:47:53.812" endtime="20220705 10:47:53.813"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:53.816" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:53.815" endtime="20220705 10:47:53.816"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:53.816" endtime="20220705 10:47:53.816"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:53.816" level="INFO">${url} = cards/62c416d94eb7823f3ffa5f67</msg>
<status status="PASS" starttime="20220705 10:47:53.816" endtime="20220705 10:47:53.816"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:54.007" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:53.816" endtime="20220705 10:47:54.007"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:54.007" endtime="20220705 10:47:54.007"/>
</return>
<msg timestamp="20220705 10:47:54.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:53.815" endtime="20220705 10:47:54.008"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:54.008" endtime="20220705 10:47:54.008"/>
</return>
<msg timestamp="20220705 10:47:54.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:53.814" endtime="20220705 10:47:54.008"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:54.008" endtime="20220705 10:47:54.008"/>
</return>
<status status="PASS" starttime="20220705 10:47:53.813" endtime="20220705 10:47:54.008"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:54.009" level="INFO">${url} = cards/62c416d94eb7823f3ffa5f67</msg>
<status status="PASS" starttime="20220705 10:47:54.009" endtime="20220705 10:47:54.009"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:54.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:54.010" endtime="20220705 10:47:54.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:54.146" endtime="20220705 10:47:54.146"/>
</return>
<msg timestamp="20220705 10:47:54.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:54.009" endtime="20220705 10:47:54.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:54.146" endtime="20220705 10:47:54.146"/>
</return>
<msg timestamp="20220705 10:47:54.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:54.008" endtime="20220705 10:47:54.146"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:54.147" endtime="20220705 10:47:54.147"/>
</return>
<msg timestamp="20220705 10:47:54.148" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 10:47:54.147" endtime="20220705 10:47:54.148"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 10:47:54.148" endtime="20220705 10:47:54.148"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:54.150" level="INFO">${url} = cards/62c416d94eb7823f3ffa5f67</msg>
<status status="PASS" starttime="20220705 10:47:54.149" endtime="20220705 10:47:54.150"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:54.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:54.150" endtime="20220705 10:47:54.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:54.356" endtime="20220705 10:47:54.356"/>
</return>
<msg timestamp="20220705 10:47:54.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:54.149" endtime="20220705 10:47:54.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:54.356" endtime="20220705 10:47:54.356"/>
</return>
<status status="PASS" starttime="20220705 10:47:54.149" endtime="20220705 10:47:54.356"/>
</kw>
<status status="PASS" starttime="20220705 10:47:54.148" endtime="20220705 10:47:54.356"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 10:47:53.590" endtime="20220705 10:47:54.356"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:54.359" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:54.359" endtime="20220705 10:47:54.359"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:54.359" endtime="20220705 10:47:54.360"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:54.360" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 10:47:54.360" endtime="20220705 10:47:54.360"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:54.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:54.360" endtime="20220705 10:47:54.745"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:54.745" endtime="20220705 10:47:54.746"/>
</return>
<msg timestamp="20220705 10:47:54.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:54.358" endtime="20220705 10:47:54.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:54.746" endtime="20220705 10:47:54.746"/>
</return>
<msg timestamp="20220705 10:47:54.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:54.358" endtime="20220705 10:47:54.746"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:54.747" endtime="20220705 10:47:54.747"/>
</return>
<msg timestamp="20220705 10:47:54.747" level="INFO">${CARD_ID} = 62c416daf0f2b752bfe9c886</msg>
<status status="PASS" starttime="20220705 10:47:54.746" endtime="20220705 10:47:54.747"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:54.749" level="INFO">${url} = cards/62c416daf0f2b752bfe9c886</msg>
<status status="PASS" starttime="20220705 10:47:54.748" endtime="20220705 10:47:54.749"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:54.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:54.749" endtime="20220705 10:47:54.968"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:54.968" endtime="20220705 10:47:54.969"/>
</return>
<msg timestamp="20220705 10:47:54.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:54.748" endtime="20220705 10:47:54.969"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:54.969" endtime="20220705 10:47:54.969"/>
</return>
<msg timestamp="20220705 10:47:54.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:54.748" endtime="20220705 10:47:54.969"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:47:54.970" endtime="20220705 10:47:54.972"/>
</kw>
<status status="PASS" starttime="20220705 10:47:54.969" endtime="20220705 10:47:54.972"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:54.973" level="INFO">${url} = cards/62c416daf0f2b752bfe9c886</msg>
<status status="PASS" starttime="20220705 10:47:54.973" endtime="20220705 10:47:54.973"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:55.078" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:47:54.973" endtime="20220705 10:47:55.079"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:55.079" endtime="20220705 10:47:55.079"/>
</return>
<msg timestamp="20220705 10:47:55.079" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:47:54.972" endtime="20220705 10:47:55.079"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:55.079" endtime="20220705 10:47:55.079"/>
</return>
<status status="PASS" starttime="20220705 10:47:54.972" endtime="20220705 10:47:55.079"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:47:54.357" endtime="20220705 10:47:55.079"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:55.082" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:55.081" endtime="20220705 10:47:55.082"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:55.082" endtime="20220705 10:47:55.082"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:55.083" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 10:47:55.082" endtime="20220705 10:47:55.083"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:55.295" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:55.083" endtime="20220705 10:47:55.295"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:55.295" endtime="20220705 10:47:55.295"/>
</return>
<msg timestamp="20220705 10:47:55.295" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:55.081" endtime="20220705 10:47:55.295"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:55.295" endtime="20220705 10:47:55.295"/>
</return>
<msg timestamp="20220705 10:47:55.295" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:55.080" endtime="20220705 10:47:55.295"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:55.296" endtime="20220705 10:47:55.296"/>
</return>
<msg timestamp="20220705 10:47:55.297" level="INFO">${CARD_ID} = 62c416db10ffc303119dfdb2</msg>
<status status="PASS" starttime="20220705 10:47:55.295" endtime="20220705 10:47:55.297"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:55.298" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:55.298" endtime="20220705 10:47:55.298"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:55.298" endtime="20220705 10:47:55.298"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:55.299" level="INFO">${url} = cards/62c416db10ffc303119dfdb2</msg>
<status status="PASS" starttime="20220705 10:47:55.298" endtime="20220705 10:47:55.299"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:55.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:55.299" endtime="20220705 10:47:55.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:55.517" endtime="20220705 10:47:55.517"/>
</return>
<msg timestamp="20220705 10:47:55.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:55.297" endtime="20220705 10:47:55.518"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:55.518" endtime="20220705 10:47:55.518"/>
</return>
<msg timestamp="20220705 10:47:55.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:55.297" endtime="20220705 10:47:55.518"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:47:55.519" endtime="20220705 10:47:55.524"/>
</kw>
<status status="PASS" starttime="20220705 10:47:55.518" endtime="20220705 10:47:55.524"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:55.525" level="INFO">${url} = cards/62c416db10ffc303119dfdb2</msg>
<status status="PASS" starttime="20220705 10:47:55.525" endtime="20220705 10:47:55.525"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:55.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:55.525" endtime="20220705 10:47:55.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:55.654" endtime="20220705 10:47:55.654"/>
</return>
<msg timestamp="20220705 10:47:55.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:55.524" endtime="20220705 10:47:55.655"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:55.655" endtime="20220705 10:47:55.655"/>
</return>
<msg timestamp="20220705 10:47:55.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:55.524" endtime="20220705 10:47:55.655"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:55.655" endtime="20220705 10:47:55.655"/>
</return>
<msg timestamp="20220705 10:47:55.656" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 10:47:55.655" endtime="20220705 10:47:55.656"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:55.657" endtime="20220705 10:47:55.657"/>
</return>
<msg timestamp="20220705 10:47:55.657" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 10:47:55.656" endtime="20220705 10:47:55.657"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:47:55.657" endtime="20220705 10:47:55.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:47:55.658" endtime="20220705 10:47:55.658"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:55.660" level="INFO">${url} = cards/62c416db10ffc303119dfdb2</msg>
<status status="PASS" starttime="20220705 10:47:55.659" endtime="20220705 10:47:55.660"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:55.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:55.660" endtime="20220705 10:47:55.871"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:55.871" endtime="20220705 10:47:55.871"/>
</return>
<msg timestamp="20220705 10:47:55.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:55.659" endtime="20220705 10:47:55.871"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:55.871" endtime="20220705 10:47:55.871"/>
</return>
<status status="PASS" starttime="20220705 10:47:55.658" endtime="20220705 10:47:55.872"/>
</kw>
<status status="PASS" starttime="20220705 10:47:55.658" endtime="20220705 10:47:55.872"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 10:47:55.080" endtime="20220705 10:47:55.872"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:55.875" level="INFO">${url} = boards/62c416d843c90e8648e1db68</msg>
<status status="PASS" starttime="20220705 10:47:55.875" endtime="20220705 10:47:55.875"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:56.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:55.875" endtime="20220705 10:47:56.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:56.458" endtime="20220705 10:47:56.458"/>
</return>
<msg timestamp="20220705 10:47:56.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:55.874" endtime="20220705 10:47:56.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:56.458" endtime="20220705 10:47:56.458"/>
</return>
<status status="PASS" starttime="20220705 10:47:55.874" endtime="20220705 10:47:56.459"/>
</kw>
<status status="PASS" starttime="20220705 10:47:55.873" endtime="20220705 10:47:56.459"/>
</kw>
<status status="PASS" starttime="20220705 10:47:55.873" endtime="20220705 10:47:56.459"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 10:47:56.459" endtime="20220705 10:47:56.460"/>
</kw>
<status status="PASS" starttime="20220705 10:47:55.872" endtime="20220705 10:47:56.460"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 10:47:52.294" endtime="20220705 10:47:56.460"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 10:47:56.471" endtime="20220705 10:47:56.471"/>
</kw>
<status status="PASS" starttime="20220705 10:47:56.471" endtime="20220705 10:47:56.471"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:56.472" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:56.472" endtime="20220705 10:47:56.472"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:56.472" endtime="20220705 10:47:56.473"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:56.473" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:47:56.473" endtime="20220705 10:47:56.473"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:56.762" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:56.473" endtime="20220705 10:47:56.762"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:56.762" endtime="20220705 10:47:56.762"/>
</return>
<msg timestamp="20220705 10:47:56.762" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:56.472" endtime="20220705 10:47:56.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:56.763" endtime="20220705 10:47:56.763"/>
</return>
<msg timestamp="20220705 10:47:56.763" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:56.471" endtime="20220705 10:47:56.763"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:47:56.764" level="INFO">${TEST_SUITE_BOARD_ID} = 62c416dc6226cc0b66f90df6</msg>
<status status="PASS" starttime="20220705 10:47:56.763" endtime="20220705 10:47:56.764"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:56.765" level="INFO">${url} = boards/62c416dc6226cc0b66f90df6/lists/</msg>
<status status="PASS" starttime="20220705 10:47:56.765" endtime="20220705 10:47:56.765"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:56.888" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:56.765" endtime="20220705 10:47:56.888"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:56.888" endtime="20220705 10:47:56.889"/>
</return>
<msg timestamp="20220705 10:47:56.889" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:56.764" endtime="20220705 10:47:56.889"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:56.889" endtime="20220705 10:47:56.889"/>
</return>
<msg timestamp="20220705 10:47:56.889" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:56.764" endtime="20220705 10:47:56.889"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:47:56.890" level="INFO">${TEST_SUITE_LIST_ID} = 62c416dc6226cc0b66f90dfd</msg>
<status status="PASS" starttime="20220705 10:47:56.889" endtime="20220705 10:47:56.890"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:56.892" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:56.892" endtime="20220705 10:47:56.892"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:56.892" endtime="20220705 10:47:56.892"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:56.893" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 10:47:56.892" endtime="20220705 10:47:56.893"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:57.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:56.893" endtime="20220705 10:47:57.144"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:57.144" endtime="20220705 10:47:57.144"/>
</return>
<msg timestamp="20220705 10:47:57.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:56.891" endtime="20220705 10:47:57.145"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:57.145" endtime="20220705 10:47:57.145"/>
</return>
<msg timestamp="20220705 10:47:57.145" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:56.890" endtime="20220705 10:47:57.145"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:47:57.146" level="INFO">${TEST_SUITE_CARD_ID} = 62c416dd84c1d6887fb9335f</msg>
<status status="PASS" starttime="20220705 10:47:57.145" endtime="20220705 10:47:57.146"/>
</kw>
<status status="PASS" starttime="20220705 10:47:56.471" endtime="20220705 10:47:57.146"/>
</kw>
<status status="PASS" starttime="20220705 10:47:56.470" endtime="20220705 10:47:57.146"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:57.148" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:57.148" endtime="20220705 10:47:57.148"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:57.148" endtime="20220705 10:47:57.149"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:57.149" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 10:47:57.149" endtime="20220705 10:47:57.149"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:57.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.149" endtime="20220705 10:47:57.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:57.334" endtime="20220705 10:47:57.334"/>
</return>
<msg timestamp="20220705 10:47:57.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.148" endtime="20220705 10:47:57.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:57.334" endtime="20220705 10:47:57.334"/>
</return>
<msg timestamp="20220705 10:47:57.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.147" endtime="20220705 10:47:57.334"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:57.335" endtime="20220705 10:47:57.335"/>
</return>
<msg timestamp="20220705 10:47:57.335" level="INFO">${checklist_id} = 62c416dda7bf631e86b6d079</msg>
<status status="PASS" starttime="20220705 10:47:57.334" endtime="20220705 10:47:57.336"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:57.337" level="INFO">${url} = checklists/62c416dda7bf631e86b6d079</msg>
<status status="PASS" starttime="20220705 10:47:57.336" endtime="20220705 10:47:57.337"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:57.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.337" endtime="20220705 10:47:57.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:57.457" endtime="20220705 10:47:57.457"/>
</return>
<msg timestamp="20220705 10:47:57.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.336" endtime="20220705 10:47:57.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:57.457" endtime="20220705 10:47:57.457"/>
</return>
<msg timestamp="20220705 10:47:57.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.336" endtime="20220705 10:47:57.458"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:57.458" endtime="20220705 10:47:57.458"/>
</return>
<msg timestamp="20220705 10:47:57.459" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 10:47:57.458" endtime="20220705 10:47:57.459"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:47:57.459" endtime="20220705 10:47:57.459"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:57.461" level="INFO">${url} = checklists/62c416dda7bf631e86b6d079</msg>
<status status="PASS" starttime="20220705 10:47:57.460" endtime="20220705 10:47:57.461"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:57.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.461" endtime="20220705 10:47:57.643"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:57.643" endtime="20220705 10:47:57.643"/>
</return>
<msg timestamp="20220705 10:47:57.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.460" endtime="20220705 10:47:57.643"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:57.643" endtime="20220705 10:47:57.643"/>
</return>
<status status="PASS" starttime="20220705 10:47:57.460" endtime="20220705 10:47:57.643"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:47:57.146" endtime="20220705 10:47:57.643"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:57.646" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:57.645" endtime="20220705 10:47:57.646"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:57.646" endtime="20220705 10:47:57.646"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:57.647" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 10:47:57.646" endtime="20220705 10:47:57.647"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:57.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.647" endtime="20220705 10:47:57.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:57.819" endtime="20220705 10:47:57.819"/>
</return>
<msg timestamp="20220705 10:47:57.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.645" endtime="20220705 10:47:57.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:57.819" endtime="20220705 10:47:57.819"/>
</return>
<msg timestamp="20220705 10:47:57.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.644" endtime="20220705 10:47:57.819"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:57.820" endtime="20220705 10:47:57.820"/>
</return>
<msg timestamp="20220705 10:47:57.821" level="INFO">${checklist_id} = 62c416ddfec7b52c9bacf68d</msg>
<status status="PASS" starttime="20220705 10:47:57.820" endtime="20220705 10:47:57.821"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:57.822" level="INFO">${url} = checklists/62c416ddfec7b52c9bacf68d</msg>
<status status="PASS" starttime="20220705 10:47:57.822" endtime="20220705 10:47:57.822"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:58.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.822" endtime="20220705 10:47:58.036"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:58.036" endtime="20220705 10:47:58.037"/>
</return>
<msg timestamp="20220705 10:47:58.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.822" endtime="20220705 10:47:58.037"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:58.037" endtime="20220705 10:47:58.037"/>
</return>
<msg timestamp="20220705 10:47:58.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:57.821" endtime="20220705 10:47:58.037"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:47:58.038" endtime="20220705 10:47:58.040"/>
</kw>
<status status="PASS" starttime="20220705 10:47:58.037" endtime="20220705 10:47:58.040"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:58.041" level="INFO">${url} = checklists/62c416ddfec7b52c9bacf68d</msg>
<status status="PASS" starttime="20220705 10:47:58.041" endtime="20220705 10:47:58.041"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:58.153" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:47:58.041" endtime="20220705 10:47:58.153"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:58.153" endtime="20220705 10:47:58.153"/>
</return>
<msg timestamp="20220705 10:47:58.154" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:47:58.040" endtime="20220705 10:47:58.154"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:58.154" endtime="20220705 10:47:58.154"/>
</return>
<status status="PASS" starttime="20220705 10:47:58.040" endtime="20220705 10:47:58.154"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:47:57.644" endtime="20220705 10:47:58.154"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:58.158" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:58.156" endtime="20220705 10:47:58.158"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:58.158" endtime="20220705 10:47:58.159"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:58.159" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 10:47:58.159" endtime="20220705 10:47:58.159"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:58.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:58.159" endtime="20220705 10:47:58.344"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:58.344" endtime="20220705 10:47:58.344"/>
</return>
<msg timestamp="20220705 10:47:58.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:58.156" endtime="20220705 10:47:58.344"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:58.344" endtime="20220705 10:47:58.344"/>
</return>
<msg timestamp="20220705 10:47:58.345" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:58.155" endtime="20220705 10:47:58.345"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:58.345" endtime="20220705 10:47:58.345"/>
</return>
<msg timestamp="20220705 10:47:58.346" level="INFO">${checklist_id} = 62c416de9bb8ac037cab9828</msg>
<status status="PASS" starttime="20220705 10:47:58.345" endtime="20220705 10:47:58.346"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:58.347" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:58.347" endtime="20220705 10:47:58.347"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:58.347" endtime="20220705 10:47:58.348"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:58.348" level="INFO">${url} = checklists/62c416de9bb8ac037cab9828</msg>
<status status="PASS" starttime="20220705 10:47:58.348" endtime="20220705 10:47:58.348"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:58.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:58.348" endtime="20220705 10:47:58.494"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:58.494" endtime="20220705 10:47:58.494"/>
</return>
<msg timestamp="20220705 10:47:58.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:58.347" endtime="20220705 10:47:58.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:58.495" endtime="20220705 10:47:58.495"/>
</return>
<msg timestamp="20220705 10:47:58.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:58.346" endtime="20220705 10:47:58.495"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:58.496" level="INFO">${url} = checklists/62c416de9bb8ac037cab9828</msg>
<status status="PASS" starttime="20220705 10:47:58.496" endtime="20220705 10:47:58.496"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:58.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:58.496" endtime="20220705 10:47:58.619"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:58.620" endtime="20220705 10:47:58.620"/>
</return>
<msg timestamp="20220705 10:47:58.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:58.495" endtime="20220705 10:47:58.620"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:58.620" endtime="20220705 10:47:58.620"/>
</return>
<msg timestamp="20220705 10:47:58.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:58.495" endtime="20220705 10:47:58.620"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:58.621" endtime="20220705 10:47:58.621"/>
</return>
<msg timestamp="20220705 10:47:58.621" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 10:47:58.620" endtime="20220705 10:47:58.621"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:47:58.622" endtime="20220705 10:47:58.622"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:58.635" level="INFO">${url} = checklists/62c416de9bb8ac037cab9828</msg>
<status status="PASS" starttime="20220705 10:47:58.635" endtime="20220705 10:47:58.635"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:58.815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:58.635" endtime="20220705 10:47:58.815"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:58.815" endtime="20220705 10:47:58.815"/>
</return>
<msg timestamp="20220705 10:47:58.815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:58.634" endtime="20220705 10:47:58.815"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:58.815" endtime="20220705 10:47:58.815"/>
</return>
<status status="PASS" starttime="20220705 10:47:58.622" endtime="20220705 10:47:58.816"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 10:47:58.155" endtime="20220705 10:47:58.816"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:58.818" level="INFO">${url} = boards/62c416dc6226cc0b66f90df6</msg>
<status status="PASS" starttime="20220705 10:47:58.817" endtime="20220705 10:47:58.818"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:47:59.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:58.818" endtime="20220705 10:47:59.234"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:59.234" endtime="20220705 10:47:59.234"/>
</return>
<msg timestamp="20220705 10:47:59.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:58.817" endtime="20220705 10:47:59.234"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:59.234" endtime="20220705 10:47:59.235"/>
</return>
<status status="PASS" starttime="20220705 10:47:58.817" endtime="20220705 10:47:59.235"/>
</kw>
<status status="PASS" starttime="20220705 10:47:58.817" endtime="20220705 10:47:59.235"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 10:47:59.235" endtime="20220705 10:47:59.236"/>
</kw>
<status status="PASS" starttime="20220705 10:47:58.816" endtime="20220705 10:47:59.236"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 10:47:56.462" endtime="20220705 10:47:59.236"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 10:47:59.247" endtime="20220705 10:47:59.248"/>
</kw>
<status status="PASS" starttime="20220705 10:47:59.247" endtime="20220705 10:47:59.248"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:59.249" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:59.248" endtime="20220705 10:47:59.249"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:59.249" endtime="20220705 10:47:59.249"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:59.250" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:47:59.249" endtime="20220705 10:47:59.250"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:59.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:59.250" endtime="20220705 10:47:59.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:59.534" endtime="20220705 10:47:59.534"/>
</return>
<msg timestamp="20220705 10:47:59.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:59.248" endtime="20220705 10:47:59.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:59.534" endtime="20220705 10:47:59.534"/>
</return>
<msg timestamp="20220705 10:47:59.534" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:59.248" endtime="20220705 10:47:59.534"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:47:59.535" level="INFO">${TEST_SUITE_BOARD_ID} = 62c416df739c5a7fe17580b3</msg>
<status status="PASS" starttime="20220705 10:47:59.535" endtime="20220705 10:47:59.535"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:59.654" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:59.536" endtime="20220705 10:47:59.654"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:47:59.655" level="INFO">${TEST_SUITE_LIST_ID} = 62c416df739c5a7fe17580ba</msg>
<status status="PASS" starttime="20220705 10:47:59.654" endtime="20220705 10:47:59.655"/>
</kw>
<status status="PASS" starttime="20220705 10:47:59.248" endtime="20220705 10:47:59.655"/>
</kw>
<status status="PASS" starttime="20220705 10:47:59.246" endtime="20220705 10:47:59.655"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:47:59.657" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:47:59.657" endtime="20220705 10:47:59.657"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:47:59.657" endtime="20220705 10:47:59.657"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:59.658" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 10:47:59.657" endtime="20220705 10:47:59.658"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:47:59.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:59.658" endtime="20220705 10:47:59.831"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:59.831" endtime="20220705 10:47:59.831"/>
</return>
<msg timestamp="20220705 10:47:59.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:59.656" endtime="20220705 10:47:59.832"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:59.832" endtime="20220705 10:47:59.832"/>
</return>
<msg timestamp="20220705 10:47:59.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:59.656" endtime="20220705 10:47:59.832"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:47:59.833" endtime="20220705 10:47:59.835"/>
</kw>
<status status="PASS" starttime="20220705 10:47:59.832" endtime="20220705 10:47:59.835"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:59.835" endtime="20220705 10:47:59.835"/>
</return>
<msg timestamp="20220705 10:47:59.836" level="INFO">${LABEL_ID} = 62c416df420494796f469d2b</msg>
<status status="PASS" starttime="20220705 10:47:59.835" endtime="20220705 10:47:59.836"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:59.837" level="INFO">${url} = labels/62c416df420494796f469d2b</msg>
<status status="PASS" starttime="20220705 10:47:59.837" endtime="20220705 10:47:59.837"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:47:59.948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:59.837" endtime="20220705 10:47:59.948"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:59.948" endtime="20220705 10:47:59.948"/>
</return>
<msg timestamp="20220705 10:47:59.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:59.836" endtime="20220705 10:47:59.949"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:47:59.949" endtime="20220705 10:47:59.949"/>
</return>
<msg timestamp="20220705 10:47:59.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:59.836" endtime="20220705 10:47:59.949"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:59.949" endtime="20220705 10:47:59.949"/>
</return>
<msg timestamp="20220705 10:47:59.950" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 10:47:59.949" endtime="20220705 10:47:59.950"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:47:59.950" endtime="20220705 10:47:59.950"/>
</return>
<msg timestamp="20220705 10:47:59.951" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 10:47:59.950" endtime="20220705 10:47:59.951"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:47:59.951" endtime="20220705 10:47:59.951"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:47:59.952" endtime="20220705 10:47:59.952"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:47:59.954" level="INFO">${url} = labels/62c416df420494796f469d2b</msg>
<status status="PASS" starttime="20220705 10:47:59.953" endtime="20220705 10:47:59.954"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:48:00.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:59.954" endtime="20220705 10:48:00.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:00.134" endtime="20220705 10:48:00.134"/>
</return>
<msg timestamp="20220705 10:48:00.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:47:59.953" endtime="20220705 10:48:00.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:00.134" endtime="20220705 10:48:00.134"/>
</return>
<status status="PASS" starttime="20220705 10:47:59.952" endtime="20220705 10:48:00.135"/>
</kw>
<status status="PASS" starttime="20220705 10:47:59.952" endtime="20220705 10:48:00.135"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:47:59.655" endtime="20220705 10:48:00.135"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:48:00.137" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:48:00.137" endtime="20220705 10:48:00.137"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:48:00.137" endtime="20220705 10:48:00.138"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:00.138" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 10:48:00.138" endtime="20220705 10:48:00.138"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:48:00.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:00.138" endtime="20220705 10:48:00.305"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:00.305" endtime="20220705 10:48:00.306"/>
</return>
<msg timestamp="20220705 10:48:00.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:00.136" endtime="20220705 10:48:00.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:00.306" endtime="20220705 10:48:00.306"/>
</return>
<msg timestamp="20220705 10:48:00.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:00.136" endtime="20220705 10:48:00.306"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:48:00.307" endtime="20220705 10:48:00.309"/>
</kw>
<status status="PASS" starttime="20220705 10:48:00.306" endtime="20220705 10:48:00.309"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:48:00.309" endtime="20220705 10:48:00.309"/>
</return>
<msg timestamp="20220705 10:48:00.310" level="INFO">${LABEL_ID} = 62c416e0aa7280596aee0647</msg>
<status status="PASS" starttime="20220705 10:48:00.309" endtime="20220705 10:48:00.310"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:48:00.311" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:48:00.311" endtime="20220705 10:48:00.311"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:48:00.311" endtime="20220705 10:48:00.312"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:00.312" level="INFO">${url} = labels/62c416e0aa7280596aee0647</msg>
<status status="PASS" starttime="20220705 10:48:00.312" endtime="20220705 10:48:00.312"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:48:00.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:00.312" endtime="20220705 10:48:00.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:00.492" endtime="20220705 10:48:00.492"/>
</return>
<msg timestamp="20220705 10:48:00.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:00.311" endtime="20220705 10:48:00.492"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:00.492" endtime="20220705 10:48:00.492"/>
</return>
<msg timestamp="20220705 10:48:00.492" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:00.310" endtime="20220705 10:48:00.492"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:48:00.493" endtime="20220705 10:48:00.493"/>
</return>
<msg timestamp="20220705 10:48:00.493" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 10:48:00.492" endtime="20220705 10:48:00.493"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:48:00.494" endtime="20220705 10:48:00.494"/>
</return>
<msg timestamp="20220705 10:48:00.495" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 10:48:00.494" endtime="20220705 10:48:00.495"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:48:00.495" endtime="20220705 10:48:00.495"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:48:00.495" endtime="20220705 10:48:00.495"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:00.497" level="INFO">${url} = labels/62c416e0aa7280596aee0647</msg>
<status status="PASS" starttime="20220705 10:48:00.496" endtime="20220705 10:48:00.497"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:48:00.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:00.497" endtime="20220705 10:48:00.672"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:00.672" endtime="20220705 10:48:00.672"/>
</return>
<msg timestamp="20220705 10:48:00.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:00.496" endtime="20220705 10:48:00.673"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:00.673" endtime="20220705 10:48:00.673"/>
</return>
<status status="PASS" starttime="20220705 10:48:00.496" endtime="20220705 10:48:00.673"/>
</kw>
<status status="PASS" starttime="20220705 10:48:00.495" endtime="20220705 10:48:00.673"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:48:00.135" endtime="20220705 10:48:00.673"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:48:00.675" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:48:00.675" endtime="20220705 10:48:00.675"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:48:00.676" endtime="20220705 10:48:00.676"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:00.677" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 10:48:00.676" endtime="20220705 10:48:00.677"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:48:00.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:00.677" endtime="20220705 10:48:00.832"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:00.832" endtime="20220705 10:48:00.832"/>
</return>
<msg timestamp="20220705 10:48:00.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:00.675" endtime="20220705 10:48:00.832"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:00.832" endtime="20220705 10:48:00.832"/>
</return>
<msg timestamp="20220705 10:48:00.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:00.674" endtime="20220705 10:48:00.832"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:48:00.833" endtime="20220705 10:48:00.833"/>
</return>
<msg timestamp="20220705 10:48:00.834" level="INFO">${LABEL_ID} = 62c416e0672d28532302145c</msg>
<status status="PASS" starttime="20220705 10:48:00.832" endtime="20220705 10:48:00.834"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:00.835" level="INFO">${url} = labels/62c416e0672d28532302145c</msg>
<status status="PASS" starttime="20220705 10:48:00.835" endtime="20220705 10:48:00.835"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:48:01.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:00.835" endtime="20220705 10:48:01.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:01.024" endtime="20220705 10:48:01.024"/>
</return>
<msg timestamp="20220705 10:48:01.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:00.834" endtime="20220705 10:48:01.025"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:01.025" endtime="20220705 10:48:01.025"/>
</return>
<status status="PASS" starttime="20220705 10:48:00.834" endtime="20220705 10:48:01.025"/>
</kw>
<status status="PASS" starttime="20220705 10:48:00.834" endtime="20220705 10:48:01.025"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:01.026" level="INFO">${url} = labels/62c416e0672d28532302145c</msg>
<status status="PASS" starttime="20220705 10:48:01.026" endtime="20220705 10:48:01.026"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:48:01.137" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:48:01.026" endtime="20220705 10:48:01.137"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:01.137" endtime="20220705 10:48:01.137"/>
</return>
<msg timestamp="20220705 10:48:01.137" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:48:01.025" endtime="20220705 10:48:01.137"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:01.137" endtime="20220705 10:48:01.137"/>
</return>
<status status="PASS" starttime="20220705 10:48:01.025" endtime="20220705 10:48:01.138"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:48:00.673" endtime="20220705 10:48:01.138"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:01.141" level="INFO">${url} = boards/62c416df739c5a7fe17580b3</msg>
<status status="PASS" starttime="20220705 10:48:01.140" endtime="20220705 10:48:01.141"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:48:01.590" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:01.141" endtime="20220705 10:48:01.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:01.591" endtime="20220705 10:48:01.591"/>
</return>
<msg timestamp="20220705 10:48:01.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:01.140" endtime="20220705 10:48:01.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:01.591" endtime="20220705 10:48:01.591"/>
</return>
<status status="PASS" starttime="20220705 10:48:01.140" endtime="20220705 10:48:01.591"/>
</kw>
<status status="PASS" starttime="20220705 10:48:01.139" endtime="20220705 10:48:01.591"/>
</kw>
<status status="PASS" starttime="20220705 10:48:01.139" endtime="20220705 10:48:01.591"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 10:48:01.591" endtime="20220705 10:48:01.593"/>
</kw>
<status status="PASS" starttime="20220705 10:48:01.138" endtime="20220705 10:48:01.593"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 10:47:59.238" endtime="20220705 10:48:01.593"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 10:48:01.604" endtime="20220705 10:48:01.604"/>
</kw>
<status status="PASS" starttime="20220705 10:48:01.603" endtime="20220705 10:48:01.604"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:48:01.605" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:48:01.605" endtime="20220705 10:48:01.605"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:48:01.605" endtime="20220705 10:48:01.605"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:01.606" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:48:01.606" endtime="20220705 10:48:01.606"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:48:01.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:01.606" endtime="20220705 10:48:01.882"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:01.882" endtime="20220705 10:48:01.882"/>
</return>
<msg timestamp="20220705 10:48:01.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:01.604" endtime="20220705 10:48:01.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:01.883" endtime="20220705 10:48:01.883"/>
</return>
<msg timestamp="20220705 10:48:01.883" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:01.604" endtime="20220705 10:48:01.883"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:48:01.884" level="INFO">${TEST_SUITE_BOARD_ID} = 62c416e1cd725d65f83ab41d</msg>
<status status="PASS" starttime="20220705 10:48:01.883" endtime="20220705 10:48:01.884"/>
</kw>
<status status="PASS" starttime="20220705 10:48:01.883" endtime="20220705 10:48:01.884"/>
</kw>
<status status="PASS" starttime="20220705 10:48:01.604" endtime="20220705 10:48:01.884"/>
</kw>
<status status="PASS" starttime="20220705 10:48:01.603" endtime="20220705 10:48:01.884"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:48:01.886" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:48:01.886" endtime="20220705 10:48:01.886"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:48:01.886" endtime="20220705 10:48:01.887"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:01.887" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 10:48:01.887" endtime="20220705 10:48:01.887"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:48:02.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:01.887" endtime="20220705 10:48:02.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.053" endtime="20220705 10:48:02.053"/>
</return>
<msg timestamp="20220705 10:48:02.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:01.886" endtime="20220705 10:48:02.053"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.053" endtime="20220705 10:48:02.053"/>
</return>
<msg timestamp="20220705 10:48:02.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:01.885" endtime="20220705 10:48:02.053"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:48:02.054" endtime="20220705 10:48:02.056"/>
</kw>
<status status="PASS" starttime="20220705 10:48:02.053" endtime="20220705 10:48:02.056"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:48:01.885" endtime="20220705 10:48:02.056"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:48:02.059" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:48:02.059" endtime="20220705 10:48:02.059"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:48:02.059" endtime="20220705 10:48:02.059"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:02.060" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 10:48:02.059" endtime="20220705 10:48:02.060"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:48:02.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.060" endtime="20220705 10:48:02.222"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.222" endtime="20220705 10:48:02.223"/>
</return>
<msg timestamp="20220705 10:48:02.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.058" endtime="20220705 10:48:02.223"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.223" endtime="20220705 10:48:02.223"/>
</return>
<msg timestamp="20220705 10:48:02.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.058" endtime="20220705 10:48:02.223"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:48:02.224" endtime="20220705 10:48:02.225"/>
</kw>
<status status="PASS" starttime="20220705 10:48:02.223" endtime="20220705 10:48:02.225"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:48:02.227" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:48:02.227" endtime="20220705 10:48:02.227"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:48:02.227" endtime="20220705 10:48:02.227"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:02.228" level="INFO">${url} = lists/62c416e2272cfd6a80302c9d</msg>
<status status="PASS" starttime="20220705 10:48:02.228" endtime="20220705 10:48:02.228"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:48:02.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.228" endtime="20220705 10:48:02.370"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.370" endtime="20220705 10:48:02.370"/>
</return>
<msg timestamp="20220705 10:48:02.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.226" endtime="20220705 10:48:02.371"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.371" endtime="20220705 10:48:02.371"/>
</return>
<status status="PASS" starttime="20220705 10:48:02.226" endtime="20220705 10:48:02.371"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:02.373" level="INFO">${url} = lists/62c416e2272cfd6a80302c9d</msg>
<status status="PASS" starttime="20220705 10:48:02.372" endtime="20220705 10:48:02.373"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:48:02.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.373" endtime="20220705 10:48:02.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.486" endtime="20220705 10:48:02.486"/>
</return>
<msg timestamp="20220705 10:48:02.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.372" endtime="20220705 10:48:02.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.486" endtime="20220705 10:48:02.486"/>
</return>
<msg timestamp="20220705 10:48:02.487" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.371" endtime="20220705 10:48:02.487"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:48:02.487" endtime="20220705 10:48:02.489"/>
</kw>
<status status="PASS" starttime="20220705 10:48:02.487" endtime="20220705 10:48:02.489"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:48:02.489" endtime="20220705 10:48:02.490"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 10:48:02.057" endtime="20220705 10:48:02.490"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:48:02.492" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:48:02.492" endtime="20220705 10:48:02.492"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:48:02.492" endtime="20220705 10:48:02.494"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:02.494" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 10:48:02.494" endtime="20220705 10:48:02.494"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:48:02.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.494" endtime="20220705 10:48:02.651"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.651" endtime="20220705 10:48:02.651"/>
</return>
<msg timestamp="20220705 10:48:02.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.491" endtime="20220705 10:48:02.651"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.651" endtime="20220705 10:48:02.651"/>
</return>
<msg timestamp="20220705 10:48:02.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.491" endtime="20220705 10:48:02.652"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:48:02.653" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:48:02.653" endtime="20220705 10:48:02.654"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:48:02.654" endtime="20220705 10:48:02.654"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:02.654" level="INFO">${url} = lists/62c416e29345618cca6b0f59/closed</msg>
<status status="PASS" starttime="20220705 10:48:02.654" endtime="20220705 10:48:02.654"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:48:02.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.654" endtime="20220705 10:48:02.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.802" endtime="20220705 10:48:02.802"/>
</return>
<msg timestamp="20220705 10:48:02.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.653" endtime="20220705 10:48:02.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.803" endtime="20220705 10:48:02.803"/>
</return>
<status status="PASS" starttime="20220705 10:48:02.652" endtime="20220705 10:48:02.803"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:02.805" level="INFO">${url} = lists/62c416e29345618cca6b0f59</msg>
<status status="PASS" starttime="20220705 10:48:02.804" endtime="20220705 10:48:02.805"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:48:02.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.805" endtime="20220705 10:48:02.915"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.915" endtime="20220705 10:48:02.915"/>
</return>
<msg timestamp="20220705 10:48:02.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.804" endtime="20220705 10:48:02.916"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:02.916" endtime="20220705 10:48:02.916"/>
</return>
<msg timestamp="20220705 10:48:02.916" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.803" endtime="20220705 10:48:02.916"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 10:48:02.916" endtime="20220705 10:48:02.917"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 10:48:02.490" endtime="20220705 10:48:02.917"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:48:02.920" level="INFO">${url} = boards/62c416e1cd725d65f83ab41d</msg>
<status status="PASS" starttime="20220705 10:48:02.919" endtime="20220705 10:48:02.920"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:48:03.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.920" endtime="20220705 10:48:03.286"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:03.286" endtime="20220705 10:48:03.286"/>
</return>
<msg timestamp="20220705 10:48:03.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:48:02.919" endtime="20220705 10:48:03.286"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:48:03.287" endtime="20220705 10:48:03.287"/>
</return>
<status status="PASS" starttime="20220705 10:48:02.918" endtime="20220705 10:48:03.287"/>
</kw>
<status status="PASS" starttime="20220705 10:48:02.918" endtime="20220705 10:48:03.287"/>
</kw>
<status status="PASS" starttime="20220705 10:48:02.918" endtime="20220705 10:48:03.287"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 10:48:03.287" endtime="20220705 10:48:03.288"/>
</kw>
<status status="PASS" starttime="20220705 10:48:02.918" endtime="20220705 10:48:03.288"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 10:48:01.594" endtime="20220705 10:48:03.288"/>
</suite>
<status status="PASS" starttime="20220705 10:47:47.584" endtime="20220705 10:48:03.290"/>
</suite>
<status status="PASS" starttime="20220705 10:47:47.566" endtime="20220705 10:48:03.293"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
