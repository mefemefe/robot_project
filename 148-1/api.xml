<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 11:21:31.650" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:21:31.791" endtime="20220705 11:21:31.792"/>
</kw>
<status status="PASS" starttime="20220705 11:21:31.790" endtime="20220705 11:21:31.792"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:31.794" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:31.794" endtime="20220705 11:21:31.794"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:31.794" endtime="20220705 11:21:31.795"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:31.795" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:21:31.795" endtime="20220705 11:21:31.796"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:32.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:31.796" endtime="20220705 11:21:32.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:32.038" endtime="20220705 11:21:32.038"/>
</return>
<msg timestamp="20220705 11:21:32.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:31.793" endtime="20220705 11:21:32.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:32.039" endtime="20220705 11:21:32.039"/>
</return>
<msg timestamp="20220705 11:21:32.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:31.793" endtime="20220705 11:21:32.039"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:32.040" endtime="20220705 11:21:32.045"/>
</kw>
<status status="PASS" starttime="20220705 11:21:32.040" endtime="20220705 11:21:32.045"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:32.047" level="INFO">${url} = boards/62c41ebb256f9845755cccff</msg>
<status status="PASS" starttime="20220705 11:21:32.047" endtime="20220705 11:21:32.047"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:32.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:32.047" endtime="20220705 11:21:32.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:32.458" endtime="20220705 11:21:32.459"/>
</return>
<msg timestamp="20220705 11:21:32.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:32.046" endtime="20220705 11:21:32.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:32.459" endtime="20220705 11:21:32.459"/>
</return>
<status status="PASS" starttime="20220705 11:21:32.045" endtime="20220705 11:21:32.459"/>
</kw>
<status status="PASS" starttime="20220705 11:21:32.045" endtime="20220705 11:21:32.460"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:21:31.792" endtime="20220705 11:21:32.460"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:32.464" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:32.464" endtime="20220705 11:21:32.464"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:32.464" endtime="20220705 11:21:32.465"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:32.466" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:21:32.465" endtime="20220705 11:21:32.466"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:32.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:32.466" endtime="20220705 11:21:32.673"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:32.673" endtime="20220705 11:21:32.674"/>
</return>
<msg timestamp="20220705 11:21:32.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:32.463" endtime="20220705 11:21:32.674"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:32.674" endtime="20220705 11:21:32.674"/>
</return>
<msg timestamp="20220705 11:21:32.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:32.462" endtime="20220705 11:21:32.675"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:32.676" endtime="20220705 11:21:32.681"/>
</kw>
<status status="PASS" starttime="20220705 11:21:32.675" endtime="20220705 11:21:32.681"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:32.683" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:32.683" endtime="20220705 11:21:32.683"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:32.683" endtime="20220705 11:21:32.683"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:32.684" level="INFO">${url} = boards/62c41ebc610f9889d00c67fa</msg>
<status status="PASS" starttime="20220705 11:21:32.683" endtime="20220705 11:21:32.684"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:32.840" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:32.684" endtime="20220705 11:21:32.840"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:32.840" endtime="20220705 11:21:32.840"/>
</return>
<msg timestamp="20220705 11:21:32.840" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:32.682" endtime="20220705 11:21:32.841"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:32.841" endtime="20220705 11:21:32.841"/>
</return>
<status status="PASS" starttime="20220705 11:21:32.681" endtime="20220705 11:21:32.841"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:32.843" level="INFO">${url} = boards/62c41ebc610f9889d00c67fa</msg>
<status status="PASS" starttime="20220705 11:21:32.842" endtime="20220705 11:21:32.843"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:32.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:32.843" endtime="20220705 11:21:32.960"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:32.960" endtime="20220705 11:21:32.961"/>
</return>
<msg timestamp="20220705 11:21:32.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:32.842" endtime="20220705 11:21:32.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:32.961" endtime="20220705 11:21:32.961"/>
</return>
<msg timestamp="20220705 11:21:32.962" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:32.841" endtime="20220705 11:21:32.962"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:32.962" endtime="20220705 11:21:32.967"/>
</kw>
<status status="PASS" starttime="20220705 11:21:32.962" endtime="20220705 11:21:32.967"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:32.967" endtime="20220705 11:21:32.968"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:32.970" level="INFO">${url} = boards/62c41ebc610f9889d00c67fa</msg>
<status status="PASS" starttime="20220705 11:21:32.970" endtime="20220705 11:21:32.970"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:33.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:32.970" endtime="20220705 11:21:33.358"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:33.358" endtime="20220705 11:21:33.358"/>
</return>
<msg timestamp="20220705 11:21:33.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:32.969" endtime="20220705 11:21:33.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:33.359" endtime="20220705 11:21:33.359"/>
</return>
<status status="PASS" starttime="20220705 11:21:32.968" endtime="20220705 11:21:33.359"/>
</kw>
<status status="PASS" starttime="20220705 11:21:32.968" endtime="20220705 11:21:33.359"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:21:32.461" endtime="20220705 11:21:33.359"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:33.364" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:33.363" endtime="20220705 11:21:33.364"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:33.364" endtime="20220705 11:21:33.364"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:33.366" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:21:33.364" endtime="20220705 11:21:33.366"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:33.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:33.366" endtime="20220705 11:21:33.630"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:33.630" endtime="20220705 11:21:33.630"/>
</return>
<msg timestamp="20220705 11:21:33.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:33.362" endtime="20220705 11:21:33.630"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:33.630" endtime="20220705 11:21:33.631"/>
</return>
<msg timestamp="20220705 11:21:33.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:33.362" endtime="20220705 11:21:33.631"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:33.633" level="INFO">${url} = boards/62c41ebdb541141b3a30d257</msg>
<status status="PASS" starttime="20220705 11:21:33.633" endtime="20220705 11:21:33.633"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:34.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:33.633" endtime="20220705 11:21:34.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:34.026" endtime="20220705 11:21:34.026"/>
</return>
<msg timestamp="20220705 11:21:34.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:33.632" endtime="20220705 11:21:34.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:34.027" endtime="20220705 11:21:34.027"/>
</return>
<status status="PASS" starttime="20220705 11:21:33.631" endtime="20220705 11:21:34.028"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:34.030" level="INFO">${url} = boards/62c41ebdb541141b3a30d257</msg>
<status status="PASS" starttime="20220705 11:21:34.030" endtime="20220705 11:21:34.030"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:34.124" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:21:34.031" endtime="20220705 11:21:34.124"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:34.124" endtime="20220705 11:21:34.125"/>
</return>
<msg timestamp="20220705 11:21:34.125" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:21:34.029" endtime="20220705 11:21:34.125"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:34.125" endtime="20220705 11:21:34.125"/>
</return>
<status status="PASS" starttime="20220705 11:21:34.028" endtime="20220705 11:21:34.125"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:21:33.360" endtime="20220705 11:21:34.126"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:34.129" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:34.129" endtime="20220705 11:21:34.129"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:34.129" endtime="20220705 11:21:34.129"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:34.130" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:21:34.129" endtime="20220705 11:21:34.130"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:34.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:34.130" endtime="20220705 11:21:34.365"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:34.365" endtime="20220705 11:21:34.365"/>
</return>
<msg timestamp="20220705 11:21:34.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:34.128" endtime="20220705 11:21:34.365"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:34.365" endtime="20220705 11:21:34.365"/>
</return>
<msg timestamp="20220705 11:21:34.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:34.128" endtime="20220705 11:21:34.366"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:34.367" endtime="20220705 11:21:34.372"/>
</kw>
<status status="PASS" starttime="20220705 11:21:34.366" endtime="20220705 11:21:34.372"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:34.374" level="INFO">${url} = boards/62c41ebe1b798845febf184d</msg>
<status status="PASS" starttime="20220705 11:21:34.374" endtime="20220705 11:21:34.374"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:34.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:34.374" endtime="20220705 11:21:34.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:34.476" endtime="20220705 11:21:34.476"/>
</return>
<msg timestamp="20220705 11:21:34.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:34.373" endtime="20220705 11:21:34.477"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:34.477" endtime="20220705 11:21:34.477"/>
</return>
<msg timestamp="20220705 11:21:34.477" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:34.372" endtime="20220705 11:21:34.477"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:34.478" endtime="20220705 11:21:34.483"/>
</kw>
<status status="PASS" starttime="20220705 11:21:34.477" endtime="20220705 11:21:34.484"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:34.484" endtime="20220705 11:21:34.484"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:34.487" level="INFO">${url} = boards/62c41ebe1b798845febf184d</msg>
<status status="PASS" starttime="20220705 11:21:34.486" endtime="20220705 11:21:34.487"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:34.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:34.487" endtime="20220705 11:21:34.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:34.892" endtime="20220705 11:21:34.892"/>
</return>
<msg timestamp="20220705 11:21:34.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:34.486" endtime="20220705 11:21:34.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:34.893" endtime="20220705 11:21:34.893"/>
</return>
<status status="PASS" starttime="20220705 11:21:34.485" endtime="20220705 11:21:34.893"/>
</kw>
<status status="PASS" starttime="20220705 11:21:34.485" endtime="20220705 11:21:34.894"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:21:34.127" endtime="20220705 11:21:34.894"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:34.897" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:34.897" endtime="20220705 11:21:34.897"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:34.898" endtime="20220705 11:21:34.898"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:34.899" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:21:34.898" endtime="20220705 11:21:34.899"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:35.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:34.899" endtime="20220705 11:21:35.149"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:35.149" endtime="20220705 11:21:35.149"/>
</return>
<msg timestamp="20220705 11:21:35.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:34.897" endtime="20220705 11:21:35.149"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:35.149" endtime="20220705 11:21:35.149"/>
</return>
<msg timestamp="20220705 11:21:35.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:34.896" endtime="20220705 11:21:35.150"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:35.151" endtime="20220705 11:21:35.155"/>
</kw>
<status status="PASS" starttime="20220705 11:21:35.150" endtime="20220705 11:21:35.155"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:35.158" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:35.158" endtime="20220705 11:21:35.158"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:35.158" endtime="20220705 11:21:35.159"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:35.159" level="INFO">${url} = boards/62c41ebebf719213a9bc2a94</msg>
<status status="PASS" starttime="20220705 11:21:35.159" endtime="20220705 11:21:35.159"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:35.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:35.159" endtime="20220705 11:21:35.305"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:35.305" endtime="20220705 11:21:35.306"/>
</return>
<msg timestamp="20220705 11:21:35.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:35.157" endtime="20220705 11:21:35.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:35.306" endtime="20220705 11:21:35.306"/>
</return>
<status status="PASS" starttime="20220705 11:21:35.156" endtime="20220705 11:21:35.307"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:35.312" level="INFO">${url} = boards/62c41ebebf719213a9bc2a94</msg>
<status status="PASS" starttime="20220705 11:21:35.311" endtime="20220705 11:21:35.312"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:35.413" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:35.312" endtime="20220705 11:21:35.413"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:35.414" endtime="20220705 11:21:35.414"/>
</return>
<msg timestamp="20220705 11:21:35.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:35.310" endtime="20220705 11:21:35.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:35.414" endtime="20220705 11:21:35.414"/>
</return>
<msg timestamp="20220705 11:21:35.415" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:35.307" endtime="20220705 11:21:35.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:35.415" endtime="20220705 11:21:35.416"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:35.420" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:35.420" endtime="20220705 11:21:35.420"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:35.420" endtime="20220705 11:21:35.421"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:35.421" level="INFO">${url} = boards/62c41ebebf719213a9bc2a94</msg>
<status status="PASS" starttime="20220705 11:21:35.421" endtime="20220705 11:21:35.421"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:35.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:35.421" endtime="20220705 11:21:35.587"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:35.587" endtime="20220705 11:21:35.587"/>
</return>
<msg timestamp="20220705 11:21:35.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:35.418" endtime="20220705 11:21:35.587"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:35.587" endtime="20220705 11:21:35.587"/>
</return>
<status status="PASS" starttime="20220705 11:21:35.417" endtime="20220705 11:21:35.588"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:35.591" level="INFO">${url} = boards/62c41ebebf719213a9bc2a94</msg>
<status status="PASS" starttime="20220705 11:21:35.591" endtime="20220705 11:21:35.591"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:35.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:35.591" endtime="20220705 11:21:35.696"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:35.696" endtime="20220705 11:21:35.696"/>
</return>
<msg timestamp="20220705 11:21:35.697" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:35.590" endtime="20220705 11:21:35.697"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:35.697" endtime="20220705 11:21:35.697"/>
</return>
<msg timestamp="20220705 11:21:35.697" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:35.588" endtime="20220705 11:21:35.697"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:35.697" endtime="20220705 11:21:35.698"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:35.700" level="INFO">${url} = boards/62c41ebebf719213a9bc2a94</msg>
<status status="PASS" starttime="20220705 11:21:35.700" endtime="20220705 11:21:35.700"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:36.088" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:35.700" endtime="20220705 11:21:36.088"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:36.088" endtime="20220705 11:21:36.088"/>
</return>
<msg timestamp="20220705 11:21:36.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:35.699" endtime="20220705 11:21:36.089"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:36.089" endtime="20220705 11:21:36.089"/>
</return>
<status status="PASS" starttime="20220705 11:21:35.698" endtime="20220705 11:21:36.089"/>
</kw>
<status status="PASS" starttime="20220705 11:21:35.698" endtime="20220705 11:21:36.090"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:21:34.895" endtime="20220705 11:21:36.090"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 11:21:36.092" endtime="20220705 11:21:36.094"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 11:21:31.671" endtime="20220705 11:21:36.094"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:21:36.109" endtime="20220705 11:21:36.110"/>
</kw>
<status status="PASS" starttime="20220705 11:21:36.109" endtime="20220705 11:21:36.110"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:36.111" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:36.111" endtime="20220705 11:21:36.111"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:36.111" endtime="20220705 11:21:36.111"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:36.112" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:21:36.112" endtime="20220705 11:21:36.112"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:36.361" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.113" endtime="20220705 11:21:36.362"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:36.362" endtime="20220705 11:21:36.362"/>
</return>
<msg timestamp="20220705 11:21:36.362" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.110" endtime="20220705 11:21:36.362"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:36.362" endtime="20220705 11:21:36.362"/>
</return>
<msg timestamp="20220705 11:21:36.362" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.110" endtime="20220705 11:21:36.362"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:21:36.363" level="INFO">${TEST_SUITE_BOARD_ID} = 62c41ec0b3932a5f1e20abbf</msg>
<status status="PASS" starttime="20220705 11:21:36.362" endtime="20220705 11:21:36.363"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:36.365" level="INFO">${url} = boards/62c41ec0b3932a5f1e20abbf/lists/</msg>
<status status="PASS" starttime="20220705 11:21:36.364" endtime="20220705 11:21:36.365"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:36.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.365" endtime="20220705 11:21:36.478"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:36.478" endtime="20220705 11:21:36.478"/>
</return>
<msg timestamp="20220705 11:21:36.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.364" endtime="20220705 11:21:36.478"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:36.478" endtime="20220705 11:21:36.478"/>
</return>
<msg timestamp="20220705 11:21:36.479" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.364" endtime="20220705 11:21:36.479"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:21:36.480" level="INFO">${TEST_SUITE_LIST_ID} = 62c41ec0b3932a5f1e20abc6</msg>
<status status="PASS" starttime="20220705 11:21:36.479" endtime="20220705 11:21:36.480"/>
</kw>
<status status="PASS" starttime="20220705 11:21:36.110" endtime="20220705 11:21:36.480"/>
</kw>
<status status="PASS" starttime="20220705 11:21:36.108" endtime="20220705 11:21:36.480"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:36.482" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:36.482" endtime="20220705 11:21:36.482"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:36.483" endtime="20220705 11:21:36.483"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:36.484" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 11:21:36.483" endtime="20220705 11:21:36.484"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:36.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.484" endtime="20220705 11:21:36.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:36.720" endtime="20220705 11:21:36.720"/>
</return>
<msg timestamp="20220705 11:21:36.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.482" endtime="20220705 11:21:36.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:36.720" endtime="20220705 11:21:36.721"/>
</return>
<msg timestamp="20220705 11:21:36.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.481" endtime="20220705 11:21:36.721"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:36.721" endtime="20220705 11:21:36.727"/>
</kw>
<status status="PASS" starttime="20220705 11:21:36.721" endtime="20220705 11:21:36.727"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:36.727" endtime="20220705 11:21:36.728"/>
</return>
<msg timestamp="20220705 11:21:36.728" level="INFO">${CARD_ID} = 62c41ec0e31f4f46b11c1ee4</msg>
<status status="PASS" starttime="20220705 11:21:36.727" endtime="20220705 11:21:36.728"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:36.729" level="INFO">${url} = cards/62c41ec0e31f4f46b11c1ee4</msg>
<status status="PASS" starttime="20220705 11:21:36.729" endtime="20220705 11:21:36.730"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:36.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.730" endtime="20220705 11:21:36.837"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:36.837" endtime="20220705 11:21:36.837"/>
</return>
<msg timestamp="20220705 11:21:36.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.729" endtime="20220705 11:21:36.838"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:36.838" endtime="20220705 11:21:36.838"/>
</return>
<msg timestamp="20220705 11:21:36.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.728" endtime="20220705 11:21:36.838"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:36.839" endtime="20220705 11:21:36.839"/>
</return>
<msg timestamp="20220705 11:21:36.840" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 11:21:36.838" endtime="20220705 11:21:36.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:36.841" endtime="20220705 11:21:36.841"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:36.843" level="INFO">${url} = cards/62c41ec0e31f4f46b11c1ee4</msg>
<status status="PASS" starttime="20220705 11:21:36.843" endtime="20220705 11:21:36.843"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:37.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.843" endtime="20220705 11:21:37.041"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:37.041" endtime="20220705 11:21:37.042"/>
</return>
<msg timestamp="20220705 11:21:37.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:36.842" endtime="20220705 11:21:37.042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:37.042" endtime="20220705 11:21:37.042"/>
</return>
<status status="PASS" starttime="20220705 11:21:36.842" endtime="20220705 11:21:37.042"/>
</kw>
<status status="PASS" starttime="20220705 11:21:36.841" endtime="20220705 11:21:37.043"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:21:36.480" endtime="20220705 11:21:37.043"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:37.047" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:37.046" endtime="20220705 11:21:37.047"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:37.047" endtime="20220705 11:21:37.047"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:37.048" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 11:21:37.047" endtime="20220705 11:21:37.048"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:37.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.048" endtime="20220705 11:21:37.250"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:37.250" endtime="20220705 11:21:37.250"/>
</return>
<msg timestamp="20220705 11:21:37.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.046" endtime="20220705 11:21:37.251"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:37.251" endtime="20220705 11:21:37.251"/>
</return>
<msg timestamp="20220705 11:21:37.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.045" endtime="20220705 11:21:37.251"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:37.252" endtime="20220705 11:21:37.252"/>
</return>
<msg timestamp="20220705 11:21:37.253" level="INFO">${CARD_ID} = 62c41ec105302e4a1f8cc5dc</msg>
<status status="PASS" starttime="20220705 11:21:37.251" endtime="20220705 11:21:37.253"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:37.256" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:37.256" endtime="20220705 11:21:37.256"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:37.256" endtime="20220705 11:21:37.257"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:37.257" level="INFO">${url} = cards/62c41ec105302e4a1f8cc5dc</msg>
<status status="PASS" starttime="20220705 11:21:37.257" endtime="20220705 11:21:37.257"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:37.445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.257" endtime="20220705 11:21:37.445"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:37.445" endtime="20220705 11:21:37.445"/>
</return>
<msg timestamp="20220705 11:21:37.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.255" endtime="20220705 11:21:37.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:37.446" endtime="20220705 11:21:37.446"/>
</return>
<msg timestamp="20220705 11:21:37.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.254" endtime="20220705 11:21:37.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:37.446" endtime="20220705 11:21:37.446"/>
</return>
<status status="PASS" starttime="20220705 11:21:37.253" endtime="20220705 11:21:37.447"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:37.449" level="INFO">${url} = cards/62c41ec105302e4a1f8cc5dc</msg>
<status status="PASS" starttime="20220705 11:21:37.448" endtime="20220705 11:21:37.449"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:37.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.449" endtime="20220705 11:21:37.563"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:37.563" endtime="20220705 11:21:37.563"/>
</return>
<msg timestamp="20220705 11:21:37.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.448" endtime="20220705 11:21:37.564"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:37.564" endtime="20220705 11:21:37.564"/>
</return>
<msg timestamp="20220705 11:21:37.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.447" endtime="20220705 11:21:37.564"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:37.565" endtime="20220705 11:21:37.565"/>
</return>
<msg timestamp="20220705 11:21:37.567" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 11:21:37.564" endtime="20220705 11:21:37.567"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 11:21:37.567" endtime="20220705 11:21:37.567"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:37.570" level="INFO">${url} = cards/62c41ec105302e4a1f8cc5dc</msg>
<status status="PASS" starttime="20220705 11:21:37.570" endtime="20220705 11:21:37.570"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:37.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.570" endtime="20220705 11:21:37.749"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:37.749" endtime="20220705 11:21:37.749"/>
</return>
<msg timestamp="20220705 11:21:37.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.569" endtime="20220705 11:21:37.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:37.750" endtime="20220705 11:21:37.750"/>
</return>
<status status="PASS" starttime="20220705 11:21:37.568" endtime="20220705 11:21:37.750"/>
</kw>
<status status="PASS" starttime="20220705 11:21:37.568" endtime="20220705 11:21:37.750"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:21:37.044" endtime="20220705 11:21:37.750"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:37.754" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:37.754" endtime="20220705 11:21:37.754"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:37.754" endtime="20220705 11:21:37.754"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:37.755" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 11:21:37.755" endtime="20220705 11:21:37.755"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:37.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.755" endtime="20220705 11:21:37.956"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:37.956" endtime="20220705 11:21:37.956"/>
</return>
<msg timestamp="20220705 11:21:37.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.753" endtime="20220705 11:21:37.956"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:37.956" endtime="20220705 11:21:37.956"/>
</return>
<msg timestamp="20220705 11:21:37.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.752" endtime="20220705 11:21:37.956"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:37.957" endtime="20220705 11:21:37.957"/>
</return>
<msg timestamp="20220705 11:21:37.958" level="INFO">${CARD_ID} = 62c41ec19407a16a2d6fdaaa</msg>
<status status="PASS" starttime="20220705 11:21:37.956" endtime="20220705 11:21:37.958"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:37.961" level="INFO">${url} = cards/62c41ec19407a16a2d6fdaaa</msg>
<status status="PASS" starttime="20220705 11:21:37.960" endtime="20220705 11:21:37.961"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:38.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.961" endtime="20220705 11:21:38.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:38.163" endtime="20220705 11:21:38.163"/>
</return>
<msg timestamp="20220705 11:21:38.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.959" endtime="20220705 11:21:38.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:38.163" endtime="20220705 11:21:38.164"/>
</return>
<msg timestamp="20220705 11:21:38.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:37.959" endtime="20220705 11:21:38.164"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:38.165" endtime="20220705 11:21:38.168"/>
</kw>
<status status="PASS" starttime="20220705 11:21:38.164" endtime="20220705 11:21:38.168"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:38.171" level="INFO">${url} = cards/62c41ec19407a16a2d6fdaaa</msg>
<status status="PASS" starttime="20220705 11:21:38.170" endtime="20220705 11:21:38.171"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:38.269" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:21:38.171" endtime="20220705 11:21:38.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:38.269" endtime="20220705 11:21:38.269"/>
</return>
<msg timestamp="20220705 11:21:38.269" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:21:38.169" endtime="20220705 11:21:38.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:38.269" endtime="20220705 11:21:38.269"/>
</return>
<status status="PASS" starttime="20220705 11:21:38.169" endtime="20220705 11:21:38.270"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:21:37.751" endtime="20220705 11:21:38.270"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:38.273" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:38.273" endtime="20220705 11:21:38.273"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:38.273" endtime="20220705 11:21:38.273"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:38.274" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 11:21:38.273" endtime="20220705 11:21:38.274"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:38.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:38.274" endtime="20220705 11:21:38.480"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:38.480" endtime="20220705 11:21:38.480"/>
</return>
<msg timestamp="20220705 11:21:38.481" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:38.272" endtime="20220705 11:21:38.481"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:38.481" endtime="20220705 11:21:38.481"/>
</return>
<msg timestamp="20220705 11:21:38.481" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:38.272" endtime="20220705 11:21:38.481"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:38.482" endtime="20220705 11:21:38.482"/>
</return>
<msg timestamp="20220705 11:21:38.484" level="INFO">${CARD_ID} = 62c41ec235261b8ffb6848d9</msg>
<status status="PASS" starttime="20220705 11:21:38.481" endtime="20220705 11:21:38.484"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:38.485" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:38.485" endtime="20220705 11:21:38.485"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:38.485" endtime="20220705 11:21:38.485"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:38.486" level="INFO">${url} = cards/62c41ec235261b8ffb6848d9</msg>
<status status="PASS" starttime="20220705 11:21:38.485" endtime="20220705 11:21:38.486"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:38.692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:38.486" endtime="20220705 11:21:38.692"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:38.693" endtime="20220705 11:21:38.693"/>
</return>
<msg timestamp="20220705 11:21:38.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:38.484" endtime="20220705 11:21:38.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:38.693" endtime="20220705 11:21:38.693"/>
</return>
<msg timestamp="20220705 11:21:38.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:38.484" endtime="20220705 11:21:38.694"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:38.695" endtime="20220705 11:21:38.701"/>
</kw>
<status status="PASS" starttime="20220705 11:21:38.694" endtime="20220705 11:21:38.701"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:38.703" level="INFO">${url} = cards/62c41ec235261b8ffb6848d9</msg>
<status status="PASS" starttime="20220705 11:21:38.702" endtime="20220705 11:21:38.703"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:38.813" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:38.703" endtime="20220705 11:21:38.813"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:38.814" endtime="20220705 11:21:38.814"/>
</return>
<msg timestamp="20220705 11:21:38.814" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:38.702" endtime="20220705 11:21:38.814"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:38.814" endtime="20220705 11:21:38.814"/>
</return>
<msg timestamp="20220705 11:21:38.815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:38.701" endtime="20220705 11:21:38.815"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:38.816" endtime="20220705 11:21:38.816"/>
</return>
<msg timestamp="20220705 11:21:38.817" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 11:21:38.815" endtime="20220705 11:21:38.817"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:38.818" endtime="20220705 11:21:38.818"/>
</return>
<msg timestamp="20220705 11:21:38.819" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 11:21:38.817" endtime="20220705 11:21:38.819"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:38.819" endtime="20220705 11:21:38.820"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:38.820" endtime="20220705 11:21:38.820"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:38.822" level="INFO">${url} = cards/62c41ec235261b8ffb6848d9</msg>
<status status="PASS" starttime="20220705 11:21:38.821" endtime="20220705 11:21:38.822"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:39.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:38.822" endtime="20220705 11:21:39.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:39.039" endtime="20220705 11:21:39.039"/>
</return>
<msg timestamp="20220705 11:21:39.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:38.821" endtime="20220705 11:21:39.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:39.039" endtime="20220705 11:21:39.039"/>
</return>
<status status="PASS" starttime="20220705 11:21:38.820" endtime="20220705 11:21:39.040"/>
</kw>
<status status="PASS" starttime="20220705 11:21:38.820" endtime="20220705 11:21:39.040"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:21:38.271" endtime="20220705 11:21:39.040"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:39.043" level="INFO">${url} = boards/62c41ec0b3932a5f1e20abbf</msg>
<status status="PASS" starttime="20220705 11:21:39.043" endtime="20220705 11:21:39.043"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:39.450" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:39.044" endtime="20220705 11:21:39.450"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:39.450" endtime="20220705 11:21:39.450"/>
</return>
<msg timestamp="20220705 11:21:39.450" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:39.043" endtime="20220705 11:21:39.450"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:39.451" endtime="20220705 11:21:39.451"/>
</return>
<status status="PASS" starttime="20220705 11:21:39.042" endtime="20220705 11:21:39.451"/>
</kw>
<status status="PASS" starttime="20220705 11:21:39.042" endtime="20220705 11:21:39.451"/>
</kw>
<status status="PASS" starttime="20220705 11:21:39.041" endtime="20220705 11:21:39.451"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 11:21:39.451" endtime="20220705 11:21:39.453"/>
</kw>
<status status="PASS" starttime="20220705 11:21:39.041" endtime="20220705 11:21:39.453"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 11:21:36.096" endtime="20220705 11:21:39.453"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:21:39.467" endtime="20220705 11:21:39.467"/>
</kw>
<status status="PASS" starttime="20220705 11:21:39.466" endtime="20220705 11:21:39.467"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:39.468" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:39.468" endtime="20220705 11:21:39.468"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:39.468" endtime="20220705 11:21:39.469"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:39.469" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:21:39.469" endtime="20220705 11:21:39.469"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:39.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:39.470" endtime="20220705 11:21:39.748"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:39.749" endtime="20220705 11:21:39.749"/>
</return>
<msg timestamp="20220705 11:21:39.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:39.468" endtime="20220705 11:21:39.749"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:39.749" endtime="20220705 11:21:39.749"/>
</return>
<msg timestamp="20220705 11:21:39.750" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:39.467" endtime="20220705 11:21:39.750"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:21:39.751" level="INFO">${TEST_SUITE_BOARD_ID} = 62c41ec31ed10c61561f6671</msg>
<status status="PASS" starttime="20220705 11:21:39.750" endtime="20220705 11:21:39.751"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:39.752" level="INFO">${url} = boards/62c41ec31ed10c61561f6671/lists/</msg>
<status status="PASS" starttime="20220705 11:21:39.752" endtime="20220705 11:21:39.752"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:39.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:39.752" endtime="20220705 11:21:39.862"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:39.862" endtime="20220705 11:21:39.862"/>
</return>
<msg timestamp="20220705 11:21:39.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:39.751" endtime="20220705 11:21:39.863"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:39.863" endtime="20220705 11:21:39.863"/>
</return>
<msg timestamp="20220705 11:21:39.863" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:39.751" endtime="20220705 11:21:39.863"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:21:39.865" level="INFO">${TEST_SUITE_LIST_ID} = 62c41ec31ed10c61561f6678</msg>
<status status="PASS" starttime="20220705 11:21:39.864" endtime="20220705 11:21:39.865"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:39.868" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:39.868" endtime="20220705 11:21:39.868"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:39.869" endtime="20220705 11:21:39.869"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:39.870" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 11:21:39.869" endtime="20220705 11:21:39.870"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:40.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:39.871" endtime="20220705 11:21:40.113"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:40.113" endtime="20220705 11:21:40.113"/>
</return>
<msg timestamp="20220705 11:21:40.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:39.867" endtime="20220705 11:21:40.114"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:40.114" endtime="20220705 11:21:40.114"/>
</return>
<msg timestamp="20220705 11:21:40.114" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:39.866" endtime="20220705 11:21:40.114"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:21:40.116" level="INFO">${TEST_SUITE_CARD_ID} = 62c41ec4752cb28578b050c2</msg>
<status status="PASS" starttime="20220705 11:21:40.115" endtime="20220705 11:21:40.116"/>
</kw>
<status status="PASS" starttime="20220705 11:21:39.467" endtime="20220705 11:21:40.116"/>
</kw>
<status status="PASS" starttime="20220705 11:21:39.466" endtime="20220705 11:21:40.116"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:40.118" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:40.118" endtime="20220705 11:21:40.118"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:40.118" endtime="20220705 11:21:40.118"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:40.119" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 11:21:40.118" endtime="20220705 11:21:40.119"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:40.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.119" endtime="20220705 11:21:40.282"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:40.282" endtime="20220705 11:21:40.282"/>
</return>
<msg timestamp="20220705 11:21:40.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.117" endtime="20220705 11:21:40.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:40.283" endtime="20220705 11:21:40.283"/>
</return>
<msg timestamp="20220705 11:21:40.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.117" endtime="20220705 11:21:40.283"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:40.284" endtime="20220705 11:21:40.284"/>
</return>
<msg timestamp="20220705 11:21:40.285" level="INFO">${checklist_id} = 62c41ec4da829351abd21e9e</msg>
<status status="PASS" starttime="20220705 11:21:40.283" endtime="20220705 11:21:40.286"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:40.287" level="INFO">${url} = checklists/62c41ec4da829351abd21e9e</msg>
<status status="PASS" starttime="20220705 11:21:40.287" endtime="20220705 11:21:40.287"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:40.402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.288" endtime="20220705 11:21:40.402"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:40.403" endtime="20220705 11:21:40.403"/>
</return>
<msg timestamp="20220705 11:21:40.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.286" endtime="20220705 11:21:40.403"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:40.403" endtime="20220705 11:21:40.403"/>
</return>
<msg timestamp="20220705 11:21:40.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.286" endtime="20220705 11:21:40.404"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:40.405" endtime="20220705 11:21:40.405"/>
</return>
<msg timestamp="20220705 11:21:40.406" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 11:21:40.404" endtime="20220705 11:21:40.406"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:40.406" endtime="20220705 11:21:40.407"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:40.409" level="INFO">${url} = checklists/62c41ec4da829351abd21e9e</msg>
<status status="PASS" starttime="20220705 11:21:40.409" endtime="20220705 11:21:40.409"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:40.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.409" endtime="20220705 11:21:40.570"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:40.570" endtime="20220705 11:21:40.571"/>
</return>
<msg timestamp="20220705 11:21:40.571" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.408" endtime="20220705 11:21:40.571"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:40.571" endtime="20220705 11:21:40.571"/>
</return>
<status status="PASS" starttime="20220705 11:21:40.407" endtime="20220705 11:21:40.571"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:21:40.116" endtime="20220705 11:21:40.571"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:40.575" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:40.575" endtime="20220705 11:21:40.575"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:40.575" endtime="20220705 11:21:40.575"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:40.576" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 11:21:40.575" endtime="20220705 11:21:40.576"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:40.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.576" endtime="20220705 11:21:40.749"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:40.749" endtime="20220705 11:21:40.749"/>
</return>
<msg timestamp="20220705 11:21:40.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.574" endtime="20220705 11:21:40.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:40.750" endtime="20220705 11:21:40.750"/>
</return>
<msg timestamp="20220705 11:21:40.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.572" endtime="20220705 11:21:40.750"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:40.751" endtime="20220705 11:21:40.751"/>
</return>
<msg timestamp="20220705 11:21:40.752" level="INFO">${checklist_id} = 62c41ec480a72f49582d569b</msg>
<status status="PASS" starttime="20220705 11:21:40.750" endtime="20220705 11:21:40.752"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:40.753" level="INFO">${url} = checklists/62c41ec480a72f49582d569b</msg>
<status status="PASS" starttime="20220705 11:21:40.753" endtime="20220705 11:21:40.753"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:40.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.753" endtime="20220705 11:21:40.913"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:40.914" endtime="20220705 11:21:40.914"/>
</return>
<msg timestamp="20220705 11:21:40.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.753" endtime="20220705 11:21:40.914"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:40.914" endtime="20220705 11:21:40.914"/>
</return>
<msg timestamp="20220705 11:21:40.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:40.752" endtime="20220705 11:21:40.914"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:40.915" endtime="20220705 11:21:40.917"/>
</kw>
<status status="PASS" starttime="20220705 11:21:40.915" endtime="20220705 11:21:40.917"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:40.918" level="INFO">${url} = checklists/62c41ec480a72f49582d569b</msg>
<status status="PASS" starttime="20220705 11:21:40.918" endtime="20220705 11:21:40.918"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:41.012" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:21:40.918" endtime="20220705 11:21:41.012"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:41.012" endtime="20220705 11:21:41.012"/>
</return>
<msg timestamp="20220705 11:21:41.013" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:21:40.917" endtime="20220705 11:21:41.013"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:41.013" endtime="20220705 11:21:41.013"/>
</return>
<status status="PASS" starttime="20220705 11:21:40.917" endtime="20220705 11:21:41.013"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:21:40.572" endtime="20220705 11:21:41.013"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:41.018" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:41.016" endtime="20220705 11:21:41.018"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:41.018" endtime="20220705 11:21:41.018"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:41.019" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 11:21:41.018" endtime="20220705 11:21:41.019"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:41.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:41.019" endtime="20220705 11:21:41.190"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:41.190" endtime="20220705 11:21:41.190"/>
</return>
<msg timestamp="20220705 11:21:41.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:41.016" endtime="20220705 11:21:41.190"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:41.191" endtime="20220705 11:21:41.191"/>
</return>
<msg timestamp="20220705 11:21:41.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:41.015" endtime="20220705 11:21:41.191"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:41.192" endtime="20220705 11:21:41.192"/>
</return>
<msg timestamp="20220705 11:21:41.193" level="INFO">${checklist_id} = 62c41ec57c0f2845236a579d</msg>
<status status="PASS" starttime="20220705 11:21:41.191" endtime="20220705 11:21:41.193"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:41.196" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:41.195" endtime="20220705 11:21:41.196"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:41.196" endtime="20220705 11:21:41.196"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:41.197" level="INFO">${url} = checklists/62c41ec57c0f2845236a579d</msg>
<status status="PASS" starttime="20220705 11:21:41.197" endtime="20220705 11:21:41.197"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:41.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:41.197" endtime="20220705 11:21:41.355"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:41.355" endtime="20220705 11:21:41.355"/>
</return>
<msg timestamp="20220705 11:21:41.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:41.194" endtime="20220705 11:21:41.355"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:41.355" endtime="20220705 11:21:41.356"/>
</return>
<msg timestamp="20220705 11:21:41.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:41.193" endtime="20220705 11:21:41.356"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:41.358" level="INFO">${url} = checklists/62c41ec57c0f2845236a579d</msg>
<status status="PASS" starttime="20220705 11:21:41.358" endtime="20220705 11:21:41.358"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:41.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:41.359" endtime="20220705 11:21:41.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:41.464" endtime="20220705 11:21:41.464"/>
</return>
<msg timestamp="20220705 11:21:41.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:41.357" endtime="20220705 11:21:41.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:41.464" endtime="20220705 11:21:41.464"/>
</return>
<msg timestamp="20220705 11:21:41.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:41.356" endtime="20220705 11:21:41.465"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:41.466" endtime="20220705 11:21:41.466"/>
</return>
<msg timestamp="20220705 11:21:41.467" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 11:21:41.465" endtime="20220705 11:21:41.467"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:41.467" endtime="20220705 11:21:41.468"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:41.482" level="INFO">${url} = checklists/62c41ec57c0f2845236a579d</msg>
<status status="PASS" starttime="20220705 11:21:41.482" endtime="20220705 11:21:41.482"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:41.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:41.482" endtime="20220705 11:21:41.649"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:41.649" endtime="20220705 11:21:41.649"/>
</return>
<msg timestamp="20220705 11:21:41.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:41.481" endtime="20220705 11:21:41.649"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:41.649" endtime="20220705 11:21:41.649"/>
</return>
<status status="PASS" starttime="20220705 11:21:41.468" endtime="20220705 11:21:41.650"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:21:41.014" endtime="20220705 11:21:41.650"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:41.653" level="INFO">${url} = boards/62c41ec31ed10c61561f6671</msg>
<status status="PASS" starttime="20220705 11:21:41.653" endtime="20220705 11:21:41.653"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:42.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:41.653" endtime="20220705 11:21:42.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:42.097" endtime="20220705 11:21:42.097"/>
</return>
<msg timestamp="20220705 11:21:42.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:41.652" endtime="20220705 11:21:42.098"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:42.098" endtime="20220705 11:21:42.098"/>
</return>
<status status="PASS" starttime="20220705 11:21:41.652" endtime="20220705 11:21:42.098"/>
</kw>
<status status="PASS" starttime="20220705 11:21:41.651" endtime="20220705 11:21:42.099"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 11:21:42.099" endtime="20220705 11:21:42.100"/>
</kw>
<status status="PASS" starttime="20220705 11:21:41.651" endtime="20220705 11:21:42.100"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 11:21:39.457" endtime="20220705 11:21:42.100"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:21:42.112" endtime="20220705 11:21:42.112"/>
</kw>
<status status="PASS" starttime="20220705 11:21:42.111" endtime="20220705 11:21:42.112"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:42.113" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:42.113" endtime="20220705 11:21:42.113"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:42.113" endtime="20220705 11:21:42.114"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:42.114" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:21:42.114" endtime="20220705 11:21:42.114"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:42.462" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:42.115" endtime="20220705 11:21:42.462"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:42.462" endtime="20220705 11:21:42.462"/>
</return>
<msg timestamp="20220705 11:21:42.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:42.113" endtime="20220705 11:21:42.463"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:42.463" endtime="20220705 11:21:42.463"/>
</return>
<msg timestamp="20220705 11:21:42.463" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:42.112" endtime="20220705 11:21:42.463"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:21:42.465" level="INFO">${TEST_SUITE_BOARD_ID} = 62c41ec6d13f7e21b5118ac6</msg>
<status status="PASS" starttime="20220705 11:21:42.464" endtime="20220705 11:21:42.465"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:42.572" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:42.465" endtime="20220705 11:21:42.572"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:21:42.574" level="INFO">${TEST_SUITE_LIST_ID} = 62c41ec6d13f7e21b5118acd</msg>
<status status="PASS" starttime="20220705 11:21:42.573" endtime="20220705 11:21:42.574"/>
</kw>
<status status="PASS" starttime="20220705 11:21:42.112" endtime="20220705 11:21:42.574"/>
</kw>
<status status="PASS" starttime="20220705 11:21:42.111" endtime="20220705 11:21:42.575"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:42.578" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:42.578" endtime="20220705 11:21:42.578"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:42.578" endtime="20220705 11:21:42.578"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:42.579" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 11:21:42.578" endtime="20220705 11:21:42.579"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:42.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:42.579" endtime="20220705 11:21:42.910"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:42.910" endtime="20220705 11:21:42.910"/>
</return>
<msg timestamp="20220705 11:21:42.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:42.577" endtime="20220705 11:21:42.911"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:42.911" endtime="20220705 11:21:42.911"/>
</return>
<msg timestamp="20220705 11:21:42.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:42.576" endtime="20220705 11:21:42.911"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:42.912" endtime="20220705 11:21:42.914"/>
</kw>
<status status="PASS" starttime="20220705 11:21:42.911" endtime="20220705 11:21:42.914"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:42.914" endtime="20220705 11:21:42.914"/>
</return>
<msg timestamp="20220705 11:21:42.915" level="INFO">${LABEL_ID} = 62c41ec6d9d9290c6532a16b</msg>
<status status="PASS" starttime="20220705 11:21:42.914" endtime="20220705 11:21:42.915"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:42.916" level="INFO">${url} = labels/62c41ec6d9d9290c6532a16b</msg>
<status status="PASS" starttime="20220705 11:21:42.916" endtime="20220705 11:21:42.917"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:43.019" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:42.917" endtime="20220705 11:21:43.019"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:43.019" endtime="20220705 11:21:43.019"/>
</return>
<msg timestamp="20220705 11:21:43.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:42.916" endtime="20220705 11:21:43.020"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:43.020" endtime="20220705 11:21:43.020"/>
</return>
<msg timestamp="20220705 11:21:43.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:42.915" endtime="20220705 11:21:43.020"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:43.021" endtime="20220705 11:21:43.021"/>
</return>
<msg timestamp="20220705 11:21:43.022" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 11:21:43.020" endtime="20220705 11:21:43.022"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:43.023" endtime="20220705 11:21:43.023"/>
</return>
<msg timestamp="20220705 11:21:43.024" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 11:21:43.023" endtime="20220705 11:21:43.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:43.024" endtime="20220705 11:21:43.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:43.024" endtime="20220705 11:21:43.025"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:43.027" level="INFO">${url} = labels/62c41ec6d9d9290c6532a16b</msg>
<status status="PASS" starttime="20220705 11:21:43.026" endtime="20220705 11:21:43.027"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:43.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.027" endtime="20220705 11:21:43.203"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:43.203" endtime="20220705 11:21:43.203"/>
</return>
<msg timestamp="20220705 11:21:43.204" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.026" endtime="20220705 11:21:43.204"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:43.204" endtime="20220705 11:21:43.204"/>
</return>
<status status="PASS" starttime="20220705 11:21:43.025" endtime="20220705 11:21:43.204"/>
</kw>
<status status="PASS" starttime="20220705 11:21:43.025" endtime="20220705 11:21:43.204"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:21:42.575" endtime="20220705 11:21:43.204"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:43.207" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:43.206" endtime="20220705 11:21:43.207"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:43.207" endtime="20220705 11:21:43.207"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:43.208" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 11:21:43.207" endtime="20220705 11:21:43.208"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:43.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.208" endtime="20220705 11:21:43.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:43.358" endtime="20220705 11:21:43.358"/>
</return>
<msg timestamp="20220705 11:21:43.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.206" endtime="20220705 11:21:43.358"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:43.358" endtime="20220705 11:21:43.358"/>
</return>
<msg timestamp="20220705 11:21:43.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.205" endtime="20220705 11:21:43.359"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:43.360" endtime="20220705 11:21:43.363"/>
</kw>
<status status="PASS" starttime="20220705 11:21:43.359" endtime="20220705 11:21:43.363"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:43.364" endtime="20220705 11:21:43.364"/>
</return>
<msg timestamp="20220705 11:21:43.365" level="INFO">${LABEL_ID} = 62c41ec7573c128fb2890c17</msg>
<status status="PASS" starttime="20220705 11:21:43.363" endtime="20220705 11:21:43.365"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:43.367" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:43.367" endtime="20220705 11:21:43.367"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:43.367" endtime="20220705 11:21:43.367"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:43.368" level="INFO">${url} = labels/62c41ec7573c128fb2890c17</msg>
<status status="PASS" starttime="20220705 11:21:43.367" endtime="20220705 11:21:43.368"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:43.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.368" endtime="20220705 11:21:43.530"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:43.530" endtime="20220705 11:21:43.530"/>
</return>
<msg timestamp="20220705 11:21:43.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.366" endtime="20220705 11:21:43.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:43.531" endtime="20220705 11:21:43.531"/>
</return>
<msg timestamp="20220705 11:21:43.531" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.365" endtime="20220705 11:21:43.531"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:43.532" endtime="20220705 11:21:43.532"/>
</return>
<msg timestamp="20220705 11:21:43.533" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 11:21:43.531" endtime="20220705 11:21:43.534"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:43.534" endtime="20220705 11:21:43.534"/>
</return>
<msg timestamp="20220705 11:21:43.536" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 11:21:43.534" endtime="20220705 11:21:43.536"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:43.536" endtime="20220705 11:21:43.536"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:43.537" endtime="20220705 11:21:43.537"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:43.540" level="INFO">${url} = labels/62c41ec7573c128fb2890c17</msg>
<status status="PASS" starttime="20220705 11:21:43.539" endtime="20220705 11:21:43.540"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:43.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.540" endtime="20220705 11:21:43.721"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:43.721" endtime="20220705 11:21:43.721"/>
</return>
<msg timestamp="20220705 11:21:43.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.539" endtime="20220705 11:21:43.721"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:43.721" endtime="20220705 11:21:43.721"/>
</return>
<status status="PASS" starttime="20220705 11:21:43.538" endtime="20220705 11:21:43.722"/>
</kw>
<status status="PASS" starttime="20220705 11:21:43.537" endtime="20220705 11:21:43.722"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:21:43.205" endtime="20220705 11:21:43.722"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:43.724" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:43.724" endtime="20220705 11:21:43.724"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:43.724" endtime="20220705 11:21:43.724"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:43.725" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 11:21:43.724" endtime="20220705 11:21:43.725"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:43.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.725" endtime="20220705 11:21:43.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:43.872" endtime="20220705 11:21:43.872"/>
</return>
<msg timestamp="20220705 11:21:43.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.723" endtime="20220705 11:21:43.873"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:43.873" endtime="20220705 11:21:43.873"/>
</return>
<msg timestamp="20220705 11:21:43.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.723" endtime="20220705 11:21:43.873"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:21:43.873" endtime="20220705 11:21:43.873"/>
</return>
<msg timestamp="20220705 11:21:43.874" level="INFO">${LABEL_ID} = 62c41ec78bbb1465012db005</msg>
<status status="PASS" starttime="20220705 11:21:43.873" endtime="20220705 11:21:43.874"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:43.876" level="INFO">${url} = labels/62c41ec78bbb1465012db005</msg>
<status status="PASS" starttime="20220705 11:21:43.875" endtime="20220705 11:21:43.876"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:44.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.876" endtime="20220705 11:21:44.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:44.038" endtime="20220705 11:21:44.038"/>
</return>
<msg timestamp="20220705 11:21:44.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:43.875" endtime="20220705 11:21:44.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:44.039" endtime="20220705 11:21:44.039"/>
</return>
<status status="PASS" starttime="20220705 11:21:43.875" endtime="20220705 11:21:44.039"/>
</kw>
<status status="PASS" starttime="20220705 11:21:43.874" endtime="20220705 11:21:44.039"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:44.041" level="INFO">${url} = labels/62c41ec78bbb1465012db005</msg>
<status status="PASS" starttime="20220705 11:21:44.041" endtime="20220705 11:21:44.041"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:44.133" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:21:44.041" endtime="20220705 11:21:44.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:44.134" endtime="20220705 11:21:44.134"/>
</return>
<msg timestamp="20220705 11:21:44.134" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:21:44.040" endtime="20220705 11:21:44.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:44.134" endtime="20220705 11:21:44.134"/>
</return>
<status status="PASS" starttime="20220705 11:21:44.039" endtime="20220705 11:21:44.135"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:21:43.722" endtime="20220705 11:21:44.135"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:44.138" level="INFO">${url} = boards/62c41ec6d13f7e21b5118ac6</msg>
<status status="PASS" starttime="20220705 11:21:44.138" endtime="20220705 11:21:44.138"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:44.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:44.138" endtime="20220705 11:21:44.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:44.537" endtime="20220705 11:21:44.537"/>
</return>
<msg timestamp="20220705 11:21:44.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:44.137" endtime="20220705 11:21:44.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:44.537" endtime="20220705 11:21:44.537"/>
</return>
<status status="PASS" starttime="20220705 11:21:44.137" endtime="20220705 11:21:44.538"/>
</kw>
<status status="PASS" starttime="20220705 11:21:44.137" endtime="20220705 11:21:44.538"/>
</kw>
<status status="PASS" starttime="20220705 11:21:44.136" endtime="20220705 11:21:44.538"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 11:21:44.538" endtime="20220705 11:21:44.539"/>
</kw>
<status status="PASS" starttime="20220705 11:21:44.136" endtime="20220705 11:21:44.539"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 11:21:42.102" endtime="20220705 11:21:44.539"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:21:44.550" endtime="20220705 11:21:44.551"/>
</kw>
<status status="PASS" starttime="20220705 11:21:44.550" endtime="20220705 11:21:44.551"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:44.552" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:44.552" endtime="20220705 11:21:44.552"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:44.552" endtime="20220705 11:21:44.552"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:44.553" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:21:44.552" endtime="20220705 11:21:44.553"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:44.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:44.553" endtime="20220705 11:21:44.792"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:44.792" endtime="20220705 11:21:44.792"/>
</return>
<msg timestamp="20220705 11:21:44.792" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:44.551" endtime="20220705 11:21:44.792"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:44.792" endtime="20220705 11:21:44.792"/>
</return>
<msg timestamp="20220705 11:21:44.793" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:44.551" endtime="20220705 11:21:44.793"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:21:44.795" level="INFO">${TEST_SUITE_BOARD_ID} = 62c41ec8272cfd6a803651e7</msg>
<status status="PASS" starttime="20220705 11:21:44.794" endtime="20220705 11:21:44.795"/>
</kw>
<status status="PASS" starttime="20220705 11:21:44.793" endtime="20220705 11:21:44.795"/>
</kw>
<status status="PASS" starttime="20220705 11:21:44.551" endtime="20220705 11:21:44.795"/>
</kw>
<status status="PASS" starttime="20220705 11:21:44.550" endtime="20220705 11:21:44.795"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:44.797" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:44.797" endtime="20220705 11:21:44.797"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:44.797" endtime="20220705 11:21:44.797"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:44.798" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 11:21:44.797" endtime="20220705 11:21:44.798"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:44.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:44.798" endtime="20220705 11:21:44.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:44.957" endtime="20220705 11:21:44.958"/>
</return>
<msg timestamp="20220705 11:21:44.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:44.796" endtime="20220705 11:21:44.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:44.958" endtime="20220705 11:21:44.958"/>
</return>
<msg timestamp="20220705 11:21:44.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:44.796" endtime="20220705 11:21:44.958"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:44.959" endtime="20220705 11:21:44.961"/>
</kw>
<status status="PASS" starttime="20220705 11:21:44.958" endtime="20220705 11:21:44.961"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:21:44.795" endtime="20220705 11:21:44.961"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:44.965" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:44.964" endtime="20220705 11:21:44.965"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:44.965" endtime="20220705 11:21:44.965"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:44.966" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 11:21:44.965" endtime="20220705 11:21:44.966"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:45.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:44.966" endtime="20220705 11:21:45.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:45.112" endtime="20220705 11:21:45.112"/>
</return>
<msg timestamp="20220705 11:21:45.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:44.964" endtime="20220705 11:21:45.113"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:45.113" endtime="20220705 11:21:45.113"/>
</return>
<msg timestamp="20220705 11:21:45.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:44.963" endtime="20220705 11:21:45.113"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:45.114" endtime="20220705 11:21:45.116"/>
</kw>
<status status="PASS" starttime="20220705 11:21:45.113" endtime="20220705 11:21:45.116"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:45.118" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:45.118" endtime="20220705 11:21:45.118"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:45.118" endtime="20220705 11:21:45.119"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:45.119" level="INFO">${url} = lists/62c41ec97ed3222be9c611e9</msg>
<status status="PASS" starttime="20220705 11:21:45.119" endtime="20220705 11:21:45.119"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:45.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.119" endtime="20220705 11:21:45.249"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:45.249" endtime="20220705 11:21:45.249"/>
</return>
<msg timestamp="20220705 11:21:45.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.117" endtime="20220705 11:21:45.249"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:45.249" endtime="20220705 11:21:45.249"/>
</return>
<status status="PASS" starttime="20220705 11:21:45.117" endtime="20220705 11:21:45.249"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:45.252" level="INFO">${url} = lists/62c41ec97ed3222be9c611e9</msg>
<status status="PASS" starttime="20220705 11:21:45.251" endtime="20220705 11:21:45.252"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:45.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.252" endtime="20220705 11:21:45.350"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:45.350" endtime="20220705 11:21:45.350"/>
</return>
<msg timestamp="20220705 11:21:45.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.251" endtime="20220705 11:21:45.351"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:45.351" endtime="20220705 11:21:45.351"/>
</return>
<msg timestamp="20220705 11:21:45.351" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.250" endtime="20220705 11:21:45.351"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:21:45.352" endtime="20220705 11:21:45.354"/>
</kw>
<status status="PASS" starttime="20220705 11:21:45.352" endtime="20220705 11:21:45.354"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:21:45.354" endtime="20220705 11:21:45.355"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:21:44.962" endtime="20220705 11:21:45.355"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:45.357" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:45.357" endtime="20220705 11:21:45.357"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:45.358" endtime="20220705 11:21:45.359"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:45.360" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 11:21:45.359" endtime="20220705 11:21:45.360"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:45.514" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.360" endtime="20220705 11:21:45.514"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:45.515" endtime="20220705 11:21:45.515"/>
</return>
<msg timestamp="20220705 11:21:45.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.357" endtime="20220705 11:21:45.515"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:45.515" endtime="20220705 11:21:45.515"/>
</return>
<msg timestamp="20220705 11:21:45.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.356" endtime="20220705 11:21:45.515"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:21:45.518" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:21:45.518" endtime="20220705 11:21:45.518"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:21:45.518" endtime="20220705 11:21:45.518"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:45.519" level="INFO">${url} = lists/62c41ec9da43d68aff572ec7/closed</msg>
<status status="PASS" starttime="20220705 11:21:45.519" endtime="20220705 11:21:45.519"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:21:45.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.519" endtime="20220705 11:21:45.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:45.657" endtime="20220705 11:21:45.657"/>
</return>
<msg timestamp="20220705 11:21:45.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.517" endtime="20220705 11:21:45.658"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:45.658" endtime="20220705 11:21:45.658"/>
</return>
<status status="PASS" starttime="20220705 11:21:45.516" endtime="20220705 11:21:45.658"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:45.662" level="INFO">${url} = lists/62c41ec9da43d68aff572ec7</msg>
<status status="PASS" starttime="20220705 11:21:45.661" endtime="20220705 11:21:45.662"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:21:45.762" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.662" endtime="20220705 11:21:45.762"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:45.762" endtime="20220705 11:21:45.762"/>
</return>
<msg timestamp="20220705 11:21:45.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.660" endtime="20220705 11:21:45.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:45.763" endtime="20220705 11:21:45.763"/>
</return>
<msg timestamp="20220705 11:21:45.763" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.659" endtime="20220705 11:21:45.764"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 11:21:45.764" endtime="20220705 11:21:45.765"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:21:45.356" endtime="20220705 11:21:45.765"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:21:45.769" level="INFO">${url} = boards/62c41ec8272cfd6a803651e7</msg>
<status status="PASS" starttime="20220705 11:21:45.768" endtime="20220705 11:21:45.769"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:21:46.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.769" endtime="20220705 11:21:46.148"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:46.148" endtime="20220705 11:21:46.148"/>
</return>
<msg timestamp="20220705 11:21:46.148" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:21:45.768" endtime="20220705 11:21:46.148"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:21:46.149" endtime="20220705 11:21:46.149"/>
</return>
<status status="PASS" starttime="20220705 11:21:45.767" endtime="20220705 11:21:46.149"/>
</kw>
<status status="PASS" starttime="20220705 11:21:45.767" endtime="20220705 11:21:46.149"/>
</kw>
<status status="PASS" starttime="20220705 11:21:45.767" endtime="20220705 11:21:46.149"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 11:21:46.150" endtime="20220705 11:21:46.151"/>
</kw>
<status status="PASS" starttime="20220705 11:21:45.766" endtime="20220705 11:21:46.151"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 11:21:44.541" endtime="20220705 11:21:46.151"/>
</suite>
<status status="PASS" starttime="20220705 11:21:31.670" endtime="20220705 11:21:46.155"/>
</suite>
<status status="PASS" starttime="20220705 11:21:31.651" endtime="20220705 11:21:46.158"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
