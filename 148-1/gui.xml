<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 11:22:29.930" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Gui" source="/trello/gui">
<suite id="s1-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:22:30.219" endtime="20220705 11:22:30.219"/>
</kw>
<status status="PASS" starttime="20220705 11:22:30.218" endtime="20220705 11:22:30.219"/>
</kw>
<status status="PASS" starttime="20220705 11:22:30.218" endtime="20220705 11:22:30.219"/>
</kw>
<test id="s1-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 11:22:30.222" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 11:22:30.221" endtime="20220705 11:22:32.533"/>
</kw>
<status status="PASS" starttime="20220705 11:22:30.221" endtime="20220705 11:22:32.534"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:22:32.534" endtime="20220705 11:22:32.534"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:22:32.534" endtime="20220705 11:22:32.534"/>
</branch>
<status status="PASS" starttime="20220705 11:22:30.221" endtime="20220705 11:22:32.534"/>
</if>
<status status="PASS" starttime="20220705 11:22:30.221" endtime="20220705 11:22:32.534"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 11:22:32.534" endtime="20220705 11:22:32.668"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:22:32.689" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:22:32.669" endtime="20220705 11:22:32.689"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:22:32.690" endtime="20220705 11:22:32.690"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:22:32.689" endtime="20220705 11:22:32.690"/>
</branch>
<status status="PASS" starttime="20220705 11:22:32.689" endtime="20220705 11:22:32.690"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:32.690" endtime="20220705 11:22:32.755"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:32.756" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 11:22:32.755" endtime="20220705 11:22:32.910"/>
</kw>
<status status="PASS" starttime="20220705 11:22:32.690" endtime="20220705 11:22:32.910"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 11:22:32.910" endtime="20220705 11:22:33.730"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:22:33.747" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:22:33.731" endtime="20220705 11:22:33.747"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:22:33.747" endtime="20220705 11:22:33.821"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:33.821" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 11:22:33.821" endtime="20220705 11:22:35.002"/>
</kw>
<status status="PASS" starttime="20220705 11:22:33.747" endtime="20220705 11:22:35.002"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:22:35.003" endtime="20220705 11:22:35.003"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:22:35.003" endtime="20220705 11:22:35.003"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:22:35.002" endtime="20220705 11:22:35.003"/>
</branch>
<status status="PASS" starttime="20220705 11:22:33.747" endtime="20220705 11:22:35.003"/>
</if>
<status status="PASS" starttime="20220705 11:22:33.731" endtime="20220705 11:22:35.003"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 11:22:35.004" endtime="20220705 11:22:35.025"/>
</kw>
<status status="PASS" starttime="20220705 11:22:35.003" endtime="20220705 11:22:35.025"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:35.026" endtime="20220705 11:22:35.099"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:35.099" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 11:22:35.162" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 11:22:35.245" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 11:22:35.099" endtime="20220705 11:22:35.245"/>
</kw>
<status status="PASS" starttime="20220705 11:22:35.025" endtime="20220705 11:22:35.245"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:22:35.265" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c41e...</msg>
<status status="PASS" starttime="20220705 11:22:35.246" endtime="20220705 11:22:35.265"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:22:35.266" endtime="20220705 11:22:35.266"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:22:35.266" endtime="20220705 11:22:35.266"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:22:35.265" endtime="20220705 11:22:35.266"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:22:35.266" endtime="20220705 11:22:35.352"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:35.352" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 11:22:35.352" endtime="20220705 11:22:35.484"/>
</kw>
<status status="PASS" starttime="20220705 11:22:35.266" endtime="20220705 11:22:35.484"/>
</branch>
<status status="PASS" starttime="20220705 11:22:35.265" endtime="20220705 11:22:35.484"/>
</if>
<status status="PASS" starttime="20220705 11:22:35.245" endtime="20220705 11:22:35.484"/>
</kw>
<status status="PASS" starttime="20220705 11:22:32.668" endtime="20220705 11:22:35.485"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 11:22:35.485" endtime="20220705 11:22:39.564"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:39.565" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220705 11:22:39.564" endtime="20220705 11:22:39.739"/>
</kw>
<status status="PASS" starttime="20220705 11:22:39.564" endtime="20220705 11:22:39.739"/>
</kw>
<status status="PASS" starttime="20220705 11:22:35.485" endtime="20220705 11:22:39.739"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:39.739" endtime="20220705 11:22:40.040"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:40.041" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220705 11:22:40.040" endtime="20220705 11:22:40.201"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:22:40.201" endtime="20220705 11:22:41.247"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:41.247" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220705 11:22:41.247" endtime="20220705 11:22:41.363"/>
</kw>
<status status="PASS" starttime="20220705 11:22:39.739" endtime="20220705 11:22:41.363"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:41.364" endtime="20220705 11:22:42.735"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 11:22:42.736" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220705 11:22:42.735" endtime="20220705 11:22:42.805"/>
</kw>
<status status="PASS" starttime="20220705 11:22:41.364" endtime="20220705 11:22:42.805"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:42.806" endtime="20220705 11:22:42.897"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:42.897" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 11:22:42.897" endtime="20220705 11:22:42.989"/>
</kw>
<status status="PASS" starttime="20220705 11:22:42.806" endtime="20220705 11:22:42.989"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:42.990" endtime="20220705 11:22:43.076"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:43.077" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220705 11:22:43.077" endtime="20220705 11:22:43.344"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:43.344" endtime="20220705 11:22:43.412"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:43.412" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220705 11:22:43.412" endtime="20220705 11:22:43.510"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:43.510" endtime="20220705 11:22:43.596"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:43.597" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220705 11:22:43.597" endtime="20220705 11:22:43.723"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:43.724" endtime="20220705 11:22:44.112"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:44.112" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220705 11:22:44.112" endtime="20220705 11:22:44.207"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:44.208" endtime="20220705 11:22:44.275"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:44.275" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220705 11:22:44.275" endtime="20220705 11:22:44.343"/>
</kw>
<status status="PASS" starttime="20220705 11:22:42.990" endtime="20220705 11:22:44.343"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 11:22:44.343" endtime="20220705 11:22:44.449"/>
</kw>
<status status="PASS" starttime="20220705 11:22:42.805" endtime="20220705 11:22:44.449"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:22:30.220" endtime="20220705 11:22:44.449"/>
</test>
<test id="s1-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:22:44.452" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:22:44.451" endtime="20220705 11:22:44.452"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:22:44.452" endtime="20220705 11:22:44.452"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:22:44.454" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:22:44.452" endtime="20220705 11:22:44.454"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:22:44.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:22:44.454" endtime="20220705 11:22:44.735"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:22:44.735" endtime="20220705 11:22:44.735"/>
</return>
<msg timestamp="20220705 11:22:44.736" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:22:44.451" endtime="20220705 11:22:44.736"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:22:44.736" endtime="20220705 11:22:44.736"/>
</return>
<msg timestamp="20220705 11:22:44.736" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:22:44.450" endtime="20220705 11:22:44.736"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 11:22:44.739" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 11:22:44.738" endtime="20220705 11:22:46.028"/>
</kw>
<status status="PASS" starttime="20220705 11:22:44.737" endtime="20220705 11:22:46.028"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:22:46.028" endtime="20220705 11:22:46.028"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:22:46.028" endtime="20220705 11:22:46.028"/>
</branch>
<status status="PASS" starttime="20220705 11:22:44.737" endtime="20220705 11:22:46.028"/>
</if>
<status status="PASS" starttime="20220705 11:22:44.737" endtime="20220705 11:22:46.028"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 11:22:46.028" endtime="20220705 11:22:46.156"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:22:46.186" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:22:46.156" endtime="20220705 11:22:46.186"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:22:46.187" endtime="20220705 11:22:46.187"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:22:46.186" endtime="20220705 11:22:46.187"/>
</branch>
<status status="PASS" starttime="20220705 11:22:46.186" endtime="20220705 11:22:46.187"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:46.187" endtime="20220705 11:22:46.244"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:46.245" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 11:22:46.244" endtime="20220705 11:22:46.376"/>
</kw>
<status status="PASS" starttime="20220705 11:22:46.187" endtime="20220705 11:22:46.376"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 11:22:46.376" endtime="20220705 11:22:47.154"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:22:47.163" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:22:47.155" endtime="20220705 11:22:47.164"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:22:47.164" endtime="20220705 11:22:47.255"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:47.255" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 11:22:47.255" endtime="20220705 11:22:48.479"/>
</kw>
<status status="PASS" starttime="20220705 11:22:47.164" endtime="20220705 11:22:48.479"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:22:48.480" endtime="20220705 11:22:48.480"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:22:48.480" endtime="20220705 11:22:48.480"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:22:48.479" endtime="20220705 11:22:48.480"/>
</branch>
<status status="PASS" starttime="20220705 11:22:47.164" endtime="20220705 11:22:48.480"/>
</if>
<status status="PASS" starttime="20220705 11:22:47.154" endtime="20220705 11:22:48.480"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 11:22:48.480" endtime="20220705 11:22:48.498"/>
</kw>
<status status="PASS" starttime="20220705 11:22:48.480" endtime="20220705 11:22:48.498"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:48.499" endtime="20220705 11:22:48.563"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:48.564" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 11:22:48.631" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 11:22:48.704" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 11:22:48.564" endtime="20220705 11:22:48.704"/>
</kw>
<status status="PASS" starttime="20220705 11:22:48.499" endtime="20220705 11:22:48.704"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:22:48.716" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c41f...</msg>
<status status="PASS" starttime="20220705 11:22:48.705" endtime="20220705 11:22:48.716"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:22:48.716" endtime="20220705 11:22:48.716"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:22:48.716" endtime="20220705 11:22:48.716"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:22:48.716" endtime="20220705 11:22:48.716"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:22:48.717" endtime="20220705 11:22:48.808"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:48.808" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 11:22:48.808" endtime="20220705 11:22:48.947"/>
</kw>
<status status="PASS" starttime="20220705 11:22:48.716" endtime="20220705 11:22:48.947"/>
</branch>
<status status="PASS" starttime="20220705 11:22:48.716" endtime="20220705 11:22:48.947"/>
</if>
<status status="PASS" starttime="20220705 11:22:48.704" endtime="20220705 11:22:48.947"/>
</kw>
<status status="PASS" starttime="20220705 11:22:46.156" endtime="20220705 11:22:48.947"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:22:48.948" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220705 11:22:48.948" endtime="20220705 11:22:48.948"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:48.948" endtime="20220705 11:22:52.875"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:52.875" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220705 11:22:52.875" endtime="20220705 11:22:53.299"/>
</kw>
<status status="PASS" starttime="20220705 11:22:48.947" endtime="20220705 11:22:53.300"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:53.300" endtime="20220705 11:22:53.946"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 11:22:53.946" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220705 11:22:53.946" endtime="20220705 11:22:54.025"/>
</kw>
<status status="PASS" starttime="20220705 11:22:53.300" endtime="20220705 11:22:54.025"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:54.026" endtime="20220705 11:22:54.076"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:54.077" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 11:22:54.077" endtime="20220705 11:22:54.159"/>
</kw>
<status status="PASS" starttime="20220705 11:22:54.025" endtime="20220705 11:22:54.159"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:54.160" endtime="20220705 11:22:54.227"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:54.228" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220705 11:22:54.227" endtime="20220705 11:22:54.496"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:54.497" endtime="20220705 11:22:54.554"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:54.554" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220705 11:22:54.554" endtime="20220705 11:22:54.654"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:54.654" endtime="20220705 11:22:54.740"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:54.741" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220705 11:22:54.741" endtime="20220705 11:22:54.861"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:54.862" endtime="20220705 11:22:55.220"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:55.221" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220705 11:22:55.220" endtime="20220705 11:22:55.318"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:55.319" endtime="20220705 11:22:55.361"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:55.362" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220705 11:22:55.361" endtime="20220705 11:22:55.447"/>
</kw>
<status status="PASS" starttime="20220705 11:22:54.159" endtime="20220705 11:22:55.447"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 11:22:55.448" endtime="20220705 11:22:55.534"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220705 11:22:55.534" endtime="20220705 11:22:55.535"/>
</kw>
<status status="PASS" starttime="20220705 11:22:55.448" endtime="20220705 11:22:55.535"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:22:44.450" endtime="20220705 11:22:55.535"/>
</test>
<test id="s1-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:22:55.541" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:22:55.541" endtime="20220705 11:22:55.541"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:22:55.541" endtime="20220705 11:22:55.541"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:22:55.543" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:22:55.541" endtime="20220705 11:22:55.543"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:22:55.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:22:55.543" endtime="20220705 11:22:55.777"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:22:55.777" endtime="20220705 11:22:55.778"/>
</return>
<msg timestamp="20220705 11:22:55.778" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:22:55.540" endtime="20220705 11:22:55.778"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:22:55.778" endtime="20220705 11:22:55.778"/>
</return>
<msg timestamp="20220705 11:22:55.779" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:22:55.539" endtime="20220705 11:22:55.779"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 11:22:55.781" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 11:22:55.780" endtime="20220705 11:22:56.916"/>
</kw>
<status status="PASS" starttime="20220705 11:22:55.780" endtime="20220705 11:22:56.916"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:22:56.916" endtime="20220705 11:22:56.916"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:22:56.916" endtime="20220705 11:22:56.916"/>
</branch>
<status status="PASS" starttime="20220705 11:22:55.780" endtime="20220705 11:22:56.916"/>
</if>
<status status="PASS" starttime="20220705 11:22:55.779" endtime="20220705 11:22:56.916"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 11:22:56.916" endtime="20220705 11:22:57.036"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:22:57.053" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:22:57.037" endtime="20220705 11:22:57.053"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:22:57.053" endtime="20220705 11:22:57.053"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:22:57.053" endtime="20220705 11:22:57.053"/>
</branch>
<status status="PASS" starttime="20220705 11:22:57.053" endtime="20220705 11:22:57.053"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:57.054" endtime="20220705 11:22:57.096"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:57.097" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 11:22:57.096" endtime="20220705 11:22:57.224"/>
</kw>
<status status="PASS" starttime="20220705 11:22:57.053" endtime="20220705 11:22:57.224"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 11:22:57.224" endtime="20220705 11:22:57.994"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:22:58.007" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:22:57.995" endtime="20220705 11:22:58.007"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:22:58.007" endtime="20220705 11:22:58.079"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:58.080" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 11:22:58.080" endtime="20220705 11:22:59.081"/>
</kw>
<status status="PASS" starttime="20220705 11:22:58.007" endtime="20220705 11:22:59.081"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:22:59.082" endtime="20220705 11:22:59.082"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:22:59.082" endtime="20220705 11:22:59.082"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:22:59.081" endtime="20220705 11:22:59.082"/>
</branch>
<status status="PASS" starttime="20220705 11:22:58.007" endtime="20220705 11:22:59.082"/>
</if>
<status status="PASS" starttime="20220705 11:22:57.994" endtime="20220705 11:22:59.082"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 11:22:59.083" endtime="20220705 11:22:59.109"/>
</kw>
<status status="PASS" starttime="20220705 11:22:59.082" endtime="20220705 11:22:59.110"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:59.110" endtime="20220705 11:22:59.171"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:59.172" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 11:22:59.234" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 11:22:59.311" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 11:22:59.171" endtime="20220705 11:22:59.311"/>
</kw>
<status status="PASS" starttime="20220705 11:22:59.110" endtime="20220705 11:22:59.312"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:22:59.328" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c41f...</msg>
<status status="PASS" starttime="20220705 11:22:59.312" endtime="20220705 11:22:59.328"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:22:59.328" endtime="20220705 11:22:59.328"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:22:59.329" endtime="20220705 11:22:59.329"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:22:59.328" endtime="20220705 11:22:59.329"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:22:59.329" endtime="20220705 11:22:59.402"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:22:59.403" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 11:22:59.403" endtime="20220705 11:22:59.525"/>
</kw>
<status status="PASS" starttime="20220705 11:22:59.329" endtime="20220705 11:22:59.525"/>
</branch>
<status status="PASS" starttime="20220705 11:22:59.328" endtime="20220705 11:22:59.525"/>
</if>
<status status="PASS" starttime="20220705 11:22:59.312" endtime="20220705 11:22:59.525"/>
</kw>
<status status="PASS" starttime="20220705 11:22:57.036" endtime="20220705 11:22:59.525"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:22:59.526" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220705 11:22:59.526" endtime="20220705 11:22:59.526"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:22:59.526" endtime="20220705 11:23:03.411"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:03.412" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220705 11:23:03.412" endtime="20220705 11:23:03.787"/>
</kw>
<status status="PASS" starttime="20220705 11:22:59.525" endtime="20220705 11:23:03.787"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:03.788" endtime="20220705 11:23:04.394"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 11:23:04.395" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220705 11:23:04.395" endtime="20220705 11:23:04.478"/>
</kw>
<status status="PASS" starttime="20220705 11:23:03.787" endtime="20220705 11:23:04.478"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:04.479" endtime="20220705 11:23:04.529"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:04.530" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 11:23:04.529" endtime="20220705 11:23:04.595"/>
</kw>
<status status="PASS" starttime="20220705 11:23:04.478" endtime="20220705 11:23:04.595"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:04.597" endtime="20220705 11:23:04.645"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:04.645" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220705 11:23:04.645" endtime="20220705 11:23:04.746"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:04.747" endtime="20220705 11:23:04.882"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:04.883" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220705 11:23:04.882" endtime="20220705 11:23:04.967"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:04.967" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220705 11:23:04.967" endtime="20220705 11:23:05.154"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:05.155" endtime="20220705 11:23:05.204"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:05.204" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220705 11:23:05.204" endtime="20220705 11:23:05.315"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:05.316" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220705 11:23:05.315" endtime="20220705 11:23:05.434"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:05.435" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220705 11:23:05.435" endtime="20220705 11:23:05.555"/>
</kw>
<status status="PASS" starttime="20220705 11:23:04.596" endtime="20220705 11:23:05.555"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 11:23:05.556" endtime="20220705 11:23:05.706"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:05.709" level="INFO">${url} = boards/62c41f0f9d855375217c5b57</msg>
<status status="PASS" starttime="20220705 11:23:05.709" endtime="20220705 11:23:05.709"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:23:06.086" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:05.709" endtime="20220705 11:23:06.086"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:06.086" endtime="20220705 11:23:06.086"/>
</return>
<msg timestamp="20220705 11:23:06.086" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:05.708" endtime="20220705 11:23:06.086"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:06.087" endtime="20220705 11:23:06.087"/>
</return>
<status status="PASS" starttime="20220705 11:23:05.707" endtime="20220705 11:23:06.087"/>
</kw>
<status status="PASS" starttime="20220705 11:23:05.706" endtime="20220705 11:23:06.087"/>
</kw>
<status status="PASS" starttime="20220705 11:23:05.556" endtime="20220705 11:23:06.087"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:22:55.537" endtime="20220705 11:23:06.087"/>
</test>
<test id="s1-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:23:06.092" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:23:06.091" endtime="20220705 11:23:06.092"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:23:06.092" endtime="20220705 11:23:06.092"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:06.095" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:23:06.093" endtime="20220705 11:23:06.095"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:23:06.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:06.095" endtime="20220705 11:23:06.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:06.357" endtime="20220705 11:23:06.357"/>
</return>
<msg timestamp="20220705 11:23:06.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:06.090" endtime="20220705 11:23:06.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:06.358" endtime="20220705 11:23:06.358"/>
</return>
<msg timestamp="20220705 11:23:06.358" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:06.090" endtime="20220705 11:23:06.358"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 11:23:06.360" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 11:23:06.360" endtime="20220705 11:23:07.545"/>
</kw>
<status status="PASS" starttime="20220705 11:23:06.359" endtime="20220705 11:23:07.545"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:23:07.546" endtime="20220705 11:23:07.546"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:23:07.545" endtime="20220705 11:23:07.546"/>
</branch>
<status status="PASS" starttime="20220705 11:23:06.359" endtime="20220705 11:23:07.546"/>
</if>
<status status="PASS" starttime="20220705 11:23:06.358" endtime="20220705 11:23:07.546"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 11:23:07.546" endtime="20220705 11:23:07.673"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:23:07.685" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:23:07.674" endtime="20220705 11:23:07.685"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:23:07.685" endtime="20220705 11:23:07.685"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:23:07.685" endtime="20220705 11:23:07.685"/>
</branch>
<status status="PASS" starttime="20220705 11:23:07.685" endtime="20220705 11:23:07.685"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:07.686" endtime="20220705 11:23:07.741"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:07.742" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 11:23:07.742" endtime="20220705 11:23:07.869"/>
</kw>
<status status="PASS" starttime="20220705 11:23:07.686" endtime="20220705 11:23:07.869"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 11:23:07.869" endtime="20220705 11:23:08.605"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:23:08.619" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:23:08.606" endtime="20220705 11:23:08.620"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:23:08.620" endtime="20220705 11:23:08.681"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:08.681" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 11:23:08.681" endtime="20220705 11:23:09.727"/>
</kw>
<status status="PASS" starttime="20220705 11:23:08.620" endtime="20220705 11:23:09.727"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:23:09.727" endtime="20220705 11:23:09.727"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:23:09.727" endtime="20220705 11:23:09.727"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:23:09.727" endtime="20220705 11:23:09.727"/>
</branch>
<status status="PASS" starttime="20220705 11:23:08.620" endtime="20220705 11:23:09.727"/>
</if>
<status status="PASS" starttime="20220705 11:23:08.605" endtime="20220705 11:23:09.727"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 11:23:09.728" endtime="20220705 11:23:09.743"/>
</kw>
<status status="PASS" starttime="20220705 11:23:09.727" endtime="20220705 11:23:09.744"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:09.744" endtime="20220705 11:23:09.787"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:09.788" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 11:23:09.857" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 11:23:09.930" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 11:23:09.788" endtime="20220705 11:23:09.930"/>
</kw>
<status status="PASS" starttime="20220705 11:23:09.744" endtime="20220705 11:23:09.930"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:23:09.942" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c41f...</msg>
<status status="PASS" starttime="20220705 11:23:09.931" endtime="20220705 11:23:09.942"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:23:09.943" endtime="20220705 11:23:09.943"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:23:09.943" endtime="20220705 11:23:09.943"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:23:09.943" endtime="20220705 11:23:09.943"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:23:09.943" endtime="20220705 11:23:09.999"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:10.000" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 11:23:10.000" endtime="20220705 11:23:10.103"/>
</kw>
<status status="PASS" starttime="20220705 11:23:09.943" endtime="20220705 11:23:10.103"/>
</branch>
<status status="PASS" starttime="20220705 11:23:09.942" endtime="20220705 11:23:10.104"/>
</if>
<status status="PASS" starttime="20220705 11:23:09.930" endtime="20220705 11:23:10.104"/>
</kw>
<status status="PASS" starttime="20220705 11:23:07.674" endtime="20220705 11:23:10.104"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:10.105" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220705 11:23:10.105" endtime="20220705 11:23:10.105"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:10.105" endtime="20220705 11:23:14.039"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:14.040" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220705 11:23:14.040" endtime="20220705 11:23:14.424"/>
</kw>
<status status="PASS" starttime="20220705 11:23:10.104" endtime="20220705 11:23:14.424"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:14.425" endtime="20220705 11:23:14.981"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 11:23:14.982" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220705 11:23:14.981" endtime="20220705 11:23:15.119"/>
</kw>
<status status="PASS" starttime="20220705 11:23:14.424" endtime="20220705 11:23:15.119"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:15.120" endtime="20220705 11:23:15.160"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:15.187" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220705 11:23:15.160" endtime="20220705 11:23:15.187"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220705 11:23:15.188" level="INFO">Length is 8</msg>
<msg timestamp="20220705 11:23:15.188" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220705 11:23:15.187" endtime="20220705 11:23:15.188"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:15.188" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220705 11:23:15.188" endtime="20220705 11:23:15.261"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:23:15.262" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 11:23:15.580" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 11:23:15.262" endtime="20220705 11:23:15.599"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220705 11:23:15.600" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:23:15.601" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 11:23:15.902" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 11:23:15.600" endtime="20220705 11:23:15.933"/>
</kw>
<msg timestamp="20220705 11:23:15.933" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:23:15.934" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 11:23:16.226" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 11:23:15.933" endtime="20220705 11:23:16.246"/>
</kw>
<msg timestamp="20220705 11:23:16.246" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:23:16.247" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 11:23:16.541" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 11:23:16.246" endtime="20220705 11:23:16.558"/>
</kw>
<msg timestamp="20220705 11:23:16.558" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:23:16.559" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 11:23:16.843" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 11:23:16.559" endtime="20220705 11:23:16.858"/>
</kw>
<msg timestamp="20220705 11:23:16.858" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:23:16.859" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 11:23:17.143" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 11:23:16.858" endtime="20220705 11:23:17.156"/>
</kw>
<msg timestamp="20220705 11:23:17.156" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:23:17.157" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 11:23:17.441" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 11:23:17.156" endtime="20220705 11:23:17.459"/>
</kw>
<msg timestamp="20220705 11:23:17.459" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:23:17.460" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 11:23:17.745" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 11:23:17.459" endtime="20220705 11:23:17.782"/>
</kw>
<msg timestamp="20220705 11:23:17.782" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:23:17.783" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 11:23:18.068" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 11:23:17.782" endtime="20220705 11:23:18.096"/>
</kw>
<status status="PASS" starttime="20220705 11:23:15.600" endtime="20220705 11:23:18.096"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:23:18.097" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 11:23:18.388" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220705 11:23:18.096" endtime="20220705 11:23:18.461"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:23:18.462" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 11:23:18.754" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 11:23:18.461" endtime="20220705 11:23:18.820"/>
</kw>
<status status="PASS" starttime="20220705 11:23:15.119" endtime="20220705 11:23:18.820"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:18.821" endtime="20220705 11:23:18.861"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 11:23:18.862" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220705 11:23:18.861" endtime="20220705 11:23:18.892"/>
</kw>
<status status="PASS" starttime="20220705 11:23:18.820" endtime="20220705 11:23:18.892"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 11:23:18.893" endtime="20220705 11:23:18.985"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:18.989" level="INFO">${url} = boards/62c41f1a81167f55c00e4ceb</msg>
<status status="PASS" starttime="20220705 11:23:18.989" endtime="20220705 11:23:18.989"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:23:19.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:18.989" endtime="20220705 11:23:19.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:19.378" endtime="20220705 11:23:19.378"/>
</return>
<msg timestamp="20220705 11:23:19.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:18.988" endtime="20220705 11:23:19.379"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:19.379" endtime="20220705 11:23:19.379"/>
</return>
<status status="PASS" starttime="20220705 11:23:18.986" endtime="20220705 11:23:19.379"/>
</kw>
<status status="PASS" starttime="20220705 11:23:18.986" endtime="20220705 11:23:19.379"/>
</kw>
<status status="PASS" starttime="20220705 11:23:18.893" endtime="20220705 11:23:19.379"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:23:06.088" endtime="20220705 11:23:19.380"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 11:23:19.383" endtime="20220705 11:23:19.384"/>
</kw>
<status status="PASS" starttime="20220705 11:23:19.382" endtime="20220705 11:23:19.385"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220705 11:22:29.951" endtime="20220705 11:23:19.385"/>
</suite>
<suite id="s1-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:23:19.404" endtime="20220705 11:23:19.404"/>
</kw>
<status status="PASS" starttime="20220705 11:23:19.404" endtime="20220705 11:23:19.404"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:23:19.406" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:23:19.405" endtime="20220705 11:23:19.406"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:23:19.406" endtime="20220705 11:23:19.406"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:19.407" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:23:19.406" endtime="20220705 11:23:19.407"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:23:19.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:19.408" endtime="20220705 11:23:19.639"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:19.639" endtime="20220705 11:23:19.639"/>
</return>
<msg timestamp="20220705 11:23:19.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:19.405" endtime="20220705 11:23:19.640"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:19.640" endtime="20220705 11:23:19.640"/>
</return>
<msg timestamp="20220705 11:23:19.640" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:19.405" endtime="20220705 11:23:19.640"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:23:19.642" level="INFO">${TEST_SUITE_BOARD_ID} = 62c41f270f705e13afe31faa</msg>
<status status="PASS" starttime="20220705 11:23:19.640" endtime="20220705 11:23:19.642"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 11:23:19.643" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 11:23:19.643" endtime="20220705 11:23:20.897"/>
</kw>
<status status="PASS" starttime="20220705 11:23:19.643" endtime="20220705 11:23:20.897"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:23:20.897" endtime="20220705 11:23:20.897"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:23:20.897" endtime="20220705 11:23:20.897"/>
</branch>
<status status="PASS" starttime="20220705 11:23:19.642" endtime="20220705 11:23:20.897"/>
</if>
<status status="PASS" starttime="20220705 11:23:19.642" endtime="20220705 11:23:20.897"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 11:23:20.898" endtime="20220705 11:23:21.014"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:23:21.026" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:23:21.015" endtime="20220705 11:23:21.026"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:23:21.026" endtime="20220705 11:23:21.026"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:23:21.026" endtime="20220705 11:23:21.026"/>
</branch>
<status status="PASS" starttime="20220705 11:23:21.026" endtime="20220705 11:23:21.026"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:21.027" endtime="20220705 11:23:21.068"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:21.068" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 11:23:21.068" endtime="20220705 11:23:21.196"/>
</kw>
<status status="PASS" starttime="20220705 11:23:21.027" endtime="20220705 11:23:21.197"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 11:23:21.197" endtime="20220705 11:23:21.953"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:23:21.962" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:23:21.955" endtime="20220705 11:23:21.963"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:23:21.963" endtime="20220705 11:23:22.009"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:22.010" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 11:23:22.010" endtime="20220705 11:23:23.211"/>
</kw>
<status status="PASS" starttime="20220705 11:23:21.963" endtime="20220705 11:23:23.211"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:23:23.211" endtime="20220705 11:23:23.211"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:23:23.211" endtime="20220705 11:23:23.211"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:23:23.211" endtime="20220705 11:23:23.211"/>
</branch>
<status status="PASS" starttime="20220705 11:23:21.963" endtime="20220705 11:23:23.211"/>
</if>
<status status="PASS" starttime="20220705 11:23:21.954" endtime="20220705 11:23:23.211"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 11:23:23.212" endtime="20220705 11:23:23.227"/>
</kw>
<status status="PASS" starttime="20220705 11:23:23.211" endtime="20220705 11:23:23.227"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:23.228" endtime="20220705 11:23:23.269"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:23.270" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 11:23:23.332" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 11:23:23.437" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 11:23:23.270" endtime="20220705 11:23:23.438"/>
</kw>
<status status="PASS" starttime="20220705 11:23:23.227" endtime="20220705 11:23:23.438"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:23:23.451" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c41f...</msg>
<status status="PASS" starttime="20220705 11:23:23.438" endtime="20220705 11:23:23.451"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:23:23.451" endtime="20220705 11:23:23.451"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:23:23.451" endtime="20220705 11:23:23.451"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:23:23.451" endtime="20220705 11:23:23.451"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:23:23.452" endtime="20220705 11:23:23.524"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:23.524" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 11:23:23.524" endtime="20220705 11:23:23.636"/>
</kw>
<status status="PASS" starttime="20220705 11:23:23.451" endtime="20220705 11:23:23.636"/>
</branch>
<status status="PASS" starttime="20220705 11:23:23.451" endtime="20220705 11:23:23.636"/>
</if>
<status status="PASS" starttime="20220705 11:23:23.438" endtime="20220705 11:23:23.636"/>
</kw>
<status status="PASS" starttime="20220705 11:23:21.014" endtime="20220705 11:23:23.636"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:23.637" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220705 11:23:23.637" endtime="20220705 11:23:23.637"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:23.637" endtime="20220705 11:23:27.623"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:27.623" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220705 11:23:27.623" endtime="20220705 11:23:28.029"/>
</kw>
<status status="PASS" starttime="20220705 11:23:23.636" endtime="20220705 11:23:28.030"/>
</kw>
<status status="PASS" starttime="20220705 11:23:19.403" endtime="20220705 11:23:28.030"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:28.032" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 11:23:28.031" endtime="20220705 11:23:28.032"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:28.032" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 11:23:28.032" endtime="20220705 11:23:28.032"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:28.033" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 11:23:28.033" endtime="20220705 11:23:28.033"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:28.034" endtime="20220705 11:23:28.652"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:28.653" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 11:23:28.652" endtime="20220705 11:23:28.733"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:28.734" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 11:23:28.733" endtime="20220705 11:23:28.734"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:28.734" endtime="20220705 11:23:28.774"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:28.774" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:28.774" endtime="20220705 11:23:28.889"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 11:23:28.890" endtime="20220705 11:23:28.935"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:28.936" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:28.936" endtime="20220705 11:23:29.133"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:29.134" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 11:23:29.134" endtime="20220705 11:23:29.134"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:29.135" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 11:23:29.135" endtime="20220705 11:23:29.233"/>
</kw>
<status status="PASS" starttime="20220705 11:23:28.032" endtime="20220705 11:23:29.233"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:29.235" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 11:23:29.234" endtime="20220705 11:23:29.235"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 11:23:29.308" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220705 11:23:29.235" endtime="20220705 11:23:29.308"/>
</kw>
<status status="PASS" starttime="20220705 11:23:29.234" endtime="20220705 11:23:29.309"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:29.311" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 11:23:29.310" endtime="20220705 11:23:29.311"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:29.311" endtime="20220705 11:23:29.343"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:29.343" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 11:23:29.343" endtime="20220705 11:23:29.426"/>
</kw>
<status status="PASS" starttime="20220705 11:23:29.309" endtime="20220705 11:23:29.426"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 11:23:29.452" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 11:23:29.427" endtime="20220705 11:23:29.452"/>
</kw>
<msg timestamp="20220705 11:23:29.452" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 11:23:29.427" endtime="20220705 11:23:29.452"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:29.453" endtime="20220705 11:23:29.869"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:29.870" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 11:23:29.870" endtime="20220705 11:23:29.986"/>
</kw>
<status status="PASS" starttime="20220705 11:23:29.453" endtime="20220705 11:23:29.986"/>
</kw>
<status status="PASS" starttime="20220705 11:23:29.452" endtime="20220705 11:23:29.986"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:29.987" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 11:23:29.987" endtime="20220705 11:23:30.107"/>
</kw>
<status status="PASS" starttime="20220705 11:23:29.987" endtime="20220705 11:23:30.107"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:30.108" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 11:23:30.107" endtime="20220705 11:23:30.309"/>
</kw>
<status status="PASS" starttime="20220705 11:23:29.426" endtime="20220705 11:23:30.309"/>
</kw>
<status status="PASS" starttime="20220705 11:23:29.309" endtime="20220705 11:23:30.309"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:23:28.030" endtime="20220705 11:23:30.309"/>
</test>
<test id="s1-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:30.312" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 11:23:30.311" endtime="20220705 11:23:30.312"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:30.312" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 11:23:30.312" endtime="20220705 11:23:30.312"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:30.313" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 11:23:30.313" endtime="20220705 11:23:30.313"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:30.314" endtime="20220705 11:23:30.364"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:30.364" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 11:23:30.364" endtime="20220705 11:23:30.423"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:30.423" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 11:23:30.423" endtime="20220705 11:23:30.424"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:30.424" endtime="20220705 11:23:30.471"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:30.472" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:30.472" endtime="20220705 11:23:30.550"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 11:23:30.550" endtime="20220705 11:23:30.590"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:30.591" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:30.590" endtime="20220705 11:23:30.683"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:30.684" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 11:23:30.683" endtime="20220705 11:23:30.684"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:30.684" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 11:23:30.684" endtime="20220705 11:23:30.772"/>
</kw>
<status status="PASS" starttime="20220705 11:23:30.313" endtime="20220705 11:23:30.773"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:30.773" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220705 11:23:30.773" endtime="20220705 11:23:30.773"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:30.775" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 11:23:30.774" endtime="20220705 11:23:30.775"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:30.775" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220705 11:23:30.775" endtime="20220705 11:23:30.775"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:30.775" endtime="20220705 11:23:30.831"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220705 11:23:30.831" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 11:23:30.831" endtime="20220705 11:23:31.155"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 11:23:31.155" endtime="20220705 11:23:31.173"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:31.173" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220705 11:23:31.173" endtime="20220705 11:23:31.262"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:31.263" endtime="20220705 11:23:31.338"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:31.339" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220705 11:23:31.339" endtime="20220705 11:23:31.411"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 11:23:31.411" endtime="20220705 11:23:31.461"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:31.461" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220705 11:23:31.461" endtime="20220705 11:23:31.563"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:31.564" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220705 11:23:31.563" endtime="20220705 11:23:31.651"/>
</kw>
<status status="PASS" starttime="20220705 11:23:30.773" endtime="20220705 11:23:31.651"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:31.652" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220705 11:23:31.652" endtime="20220705 11:23:31.652"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 11:23:31.720" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220705 11:23:31.652" endtime="20220705 11:23:31.720"/>
</kw>
<status status="PASS" starttime="20220705 11:23:31.651" endtime="20220705 11:23:31.721"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:31.723" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220705 11:23:31.722" endtime="20220705 11:23:31.723"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:31.723" endtime="20220705 11:23:31.758"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:31.758" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220705 11:23:31.758" endtime="20220705 11:23:31.819"/>
</kw>
<status status="PASS" starttime="20220705 11:23:31.721" endtime="20220705 11:23:31.819"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 11:23:32.073" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 11:23:31.820" endtime="20220705 11:23:32.073"/>
</kw>
<msg timestamp="20220705 11:23:32.073" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 11:23:31.820" endtime="20220705 11:23:32.073"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:32.075" endtime="20220705 11:23:32.122"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:32.123" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 11:23:32.123" endtime="20220705 11:23:32.223"/>
</kw>
<status status="PASS" starttime="20220705 11:23:32.074" endtime="20220705 11:23:32.224"/>
</kw>
<status status="PASS" starttime="20220705 11:23:32.074" endtime="20220705 11:23:32.224"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:32.225" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 11:23:32.224" endtime="20220705 11:23:32.292"/>
</kw>
<status status="PASS" starttime="20220705 11:23:32.224" endtime="20220705 11:23:32.292"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:32.292" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 11:23:32.292" endtime="20220705 11:23:32.486"/>
</kw>
<status status="PASS" starttime="20220705 11:23:31.819" endtime="20220705 11:23:32.486"/>
</kw>
<status status="PASS" starttime="20220705 11:23:31.721" endtime="20220705 11:23:32.486"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:23:30.310" endtime="20220705 11:23:32.486"/>
</test>
<test id="s1-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:32.489" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 11:23:32.488" endtime="20220705 11:23:32.489"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:32.489" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 11:23:32.489" endtime="20220705 11:23:32.489"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:32.490" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 11:23:32.490" endtime="20220705 11:23:32.490"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:32.490" endtime="20220705 11:23:32.542"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:32.543" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 11:23:32.542" endtime="20220705 11:23:32.610"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:32.611" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 11:23:32.610" endtime="20220705 11:23:32.611"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:32.611" endtime="20220705 11:23:32.643"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:32.643" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:32.643" endtime="20220705 11:23:32.726"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 11:23:32.726" endtime="20220705 11:23:32.773"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:32.774" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:32.773" endtime="20220705 11:23:32.866"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:32.867" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 11:23:32.867" endtime="20220705 11:23:32.867"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:32.868" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 11:23:32.867" endtime="20220705 11:23:32.983"/>
</kw>
<status status="PASS" starttime="20220705 11:23:32.489" endtime="20220705 11:23:32.983"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:32.984" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 11:23:32.984" endtime="20220705 11:23:32.984"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:32.984" endtime="20220705 11:23:33.083"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:33.084" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 11:23:33.084" endtime="20220705 11:23:33.139"/>
</kw>
<status status="PASS" starttime="20220705 11:23:32.983" endtime="20220705 11:23:33.139"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 11:23:33.476" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 11:23:33.140" endtime="20220705 11:23:33.476"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 11:23:33.476" endtime="20220705 11:23:33.476"/>
</return>
<msg timestamp="20220705 11:23:33.477" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220705 11:23:33.139" endtime="20220705 11:23:33.477"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:33.477" endtime="20220705 11:23:33.539"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:33.540" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220705 11:23:33.539" endtime="20220705 11:23:33.615"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 11:23:33.616" endtime="20220705 11:23:33.670"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:33.671" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220705 11:23:33.670" endtime="20220705 11:23:33.828"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:33.829" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220705 11:23:33.828" endtime="20220705 11:23:33.984"/>
</kw>
<status status="PASS" starttime="20220705 11:23:33.477" endtime="20220705 11:23:33.985"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 11:23:34.009" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220705 11:23:33.985" endtime="20220705 11:23:34.009"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 11:23:34.009" endtime="20220705 11:23:34.009"/>
</return>
<msg timestamp="20220705 11:23:34.009" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220705 11:23:33.985" endtime="20220705 11:23:34.009"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 11:23:34.010" endtime="20220705 11:23:34.011"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 11:23:34.039" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 11:23:34.012" endtime="20220705 11:23:34.039"/>
</kw>
<msg timestamp="20220705 11:23:34.039" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 11:23:34.012" endtime="20220705 11:23:34.039"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:34.040" endtime="20220705 11:23:34.100"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:34.100" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 11:23:34.100" endtime="20220705 11:23:34.216"/>
</kw>
<status status="PASS" starttime="20220705 11:23:34.040" endtime="20220705 11:23:34.216"/>
</kw>
<status status="PASS" starttime="20220705 11:23:34.039" endtime="20220705 11:23:34.216"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:34.217" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 11:23:34.217" endtime="20220705 11:23:34.315"/>
</kw>
<status status="PASS" starttime="20220705 11:23:34.216" endtime="20220705 11:23:34.315"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:34.315" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 11:23:34.315" endtime="20220705 11:23:34.509"/>
</kw>
<status status="PASS" starttime="20220705 11:23:34.011" endtime="20220705 11:23:34.509"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:23:32.487" endtime="20220705 11:23:34.509"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:34.511" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 11:23:34.511" endtime="20220705 11:23:34.511"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:34.512" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 11:23:34.512" endtime="20220705 11:23:34.512"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:34.513" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 11:23:34.512" endtime="20220705 11:23:34.513"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 11:23:34.545" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 11:23:34.513" endtime="20220705 11:23:34.545"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 11:23:34.545" endtime="20220705 11:23:34.545"/>
</return>
<msg timestamp="20220705 11:23:34.545" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220705 11:23:34.512" endtime="20220705 11:23:34.545"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:34.547" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 11:23:34.546" endtime="20220705 11:23:34.547"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:34.547" endtime="20220705 11:23:34.576"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:34.577" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 11:23:34.576" endtime="20220705 11:23:34.654"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:34.655" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 11:23:34.655" endtime="20220705 11:23:34.655"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:34.656" endtime="20220705 11:23:34.696"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:34.696" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:34.696" endtime="20220705 11:23:34.764"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 11:23:34.764" endtime="20220705 11:23:34.801"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:34.802" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:34.802" endtime="20220705 11:23:34.920"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:34.921" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 11:23:34.920" endtime="20220705 11:23:34.921"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:34.921" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 11:23:34.921" endtime="20220705 11:23:35.100"/>
</kw>
<status status="PASS" starttime="20220705 11:23:34.546" endtime="20220705 11:23:35.101"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:35.102" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 11:23:35.101" endtime="20220705 11:23:35.102"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:35.102" endtime="20220705 11:23:35.185"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:35.186" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 11:23:35.185" endtime="20220705 11:23:35.243"/>
</kw>
<status status="PASS" starttime="20220705 11:23:35.101" endtime="20220705 11:23:35.243"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 11:23:35.569" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 11:23:35.244" endtime="20220705 11:23:35.569"/>
</kw>
<msg timestamp="20220705 11:23:35.569" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 11:23:35.244" endtime="20220705 11:23:35.569"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:35.570" endtime="20220705 11:23:35.644"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:35.645" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 11:23:35.645" endtime="20220705 11:23:35.785"/>
</kw>
<status status="PASS" starttime="20220705 11:23:35.570" endtime="20220705 11:23:35.785"/>
</kw>
<status status="PASS" starttime="20220705 11:23:35.569" endtime="20220705 11:23:35.785"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:35.787" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 11:23:35.786" endtime="20220705 11:23:35.921"/>
</kw>
<status status="PASS" starttime="20220705 11:23:35.786" endtime="20220705 11:23:35.922"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:35.922" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 11:23:35.922" endtime="20220705 11:23:36.174"/>
</kw>
<status status="PASS" starttime="20220705 11:23:35.244" endtime="20220705 11:23:36.175"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:36.176" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 11:23:36.175" endtime="20220705 11:23:36.176"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 11:23:36.232" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 11:23:36.176" endtime="20220705 11:23:36.232"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 11:23:36.232" endtime="20220705 11:23:36.232"/>
</return>
<msg timestamp="20220705 11:23:36.233" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220705 11:23:36.175" endtime="20220705 11:23:36.233"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 11:23:36.233" endtime="20220705 11:23:36.233"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:23:34.510" endtime="20220705 11:23:36.233"/>
</test>
<test id="s1-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:36.235" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 11:23:36.235" endtime="20220705 11:23:36.235"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:36.236" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 11:23:36.235" endtime="20220705 11:23:36.236"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:36.237" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 11:23:36.236" endtime="20220705 11:23:36.237"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:36.237" endtime="20220705 11:23:36.271"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:36.272" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 11:23:36.272" endtime="20220705 11:23:36.460"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:36.461" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 11:23:36.461" endtime="20220705 11:23:36.461"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:36.461" endtime="20220705 11:23:36.536"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:36.536" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:36.536" endtime="20220705 11:23:36.698"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 11:23:36.698" endtime="20220705 11:23:36.794"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:36.795" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:36.794" endtime="20220705 11:23:37.132"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:37.133" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 11:23:37.132" endtime="20220705 11:23:37.133"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:37.133" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 11:23:37.133" endtime="20220705 11:23:37.407"/>
</kw>
<status status="PASS" starttime="20220705 11:23:36.236" endtime="20220705 11:23:37.407"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:37.407" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220705 11:23:37.407" endtime="20220705 11:23:37.407"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:37.409" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 11:23:37.408" endtime="20220705 11:23:37.409"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:37.409" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 11:23:37.409" endtime="20220705 11:23:37.409"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:37.410" endtime="20220705 11:23:37.596"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220705 11:23:37.596" endtime="20220705 11:23:38.223"/>
</kw>
<status status="PASS" starttime="20220705 11:23:37.408" endtime="20220705 11:23:38.223"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:38.224" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 11:23:38.224" endtime="20220705 11:23:38.224"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 11:23:38.300" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220705 11:23:38.225" endtime="20220705 11:23:38.300"/>
</kw>
<status status="PASS" starttime="20220705 11:23:38.223" endtime="20220705 11:23:38.300"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:38.302" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 11:23:38.301" endtime="20220705 11:23:38.302"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:38.302" endtime="20220705 11:23:38.331"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:38.332" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 11:23:38.331" endtime="20220705 11:23:38.392"/>
</kw>
<status status="PASS" starttime="20220705 11:23:38.301" endtime="20220705 11:23:38.392"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 11:23:38.738" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 11:23:38.393" endtime="20220705 11:23:38.738"/>
</kw>
<msg timestamp="20220705 11:23:38.738" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 11:23:38.393" endtime="20220705 11:23:38.738"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:38.739" endtime="20220705 11:23:38.814"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:38.814" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 11:23:38.814" endtime="20220705 11:23:38.948"/>
</kw>
<status status="PASS" starttime="20220705 11:23:38.739" endtime="20220705 11:23:38.948"/>
</kw>
<status status="PASS" starttime="20220705 11:23:38.738" endtime="20220705 11:23:38.948"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:38.949" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 11:23:38.949" endtime="20220705 11:23:39.108"/>
</kw>
<status status="PASS" starttime="20220705 11:23:38.948" endtime="20220705 11:23:39.108"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:39.109" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 11:23:39.108" endtime="20220705 11:23:39.399"/>
</kw>
<status status="PASS" starttime="20220705 11:23:38.392" endtime="20220705 11:23:39.400"/>
</kw>
<status status="PASS" starttime="20220705 11:23:38.300" endtime="20220705 11:23:39.400"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:23:36.234" endtime="20220705 11:23:39.400"/>
</test>
<test id="s1-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:23:39.403" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:23:39.403" endtime="20220705 11:23:39.403"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:23:39.403" endtime="20220705 11:23:39.403"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:39.405" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:23:39.403" endtime="20220705 11:23:39.405"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:23:39.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:39.405" endtime="20220705 11:23:39.685"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:39.685" endtime="20220705 11:23:39.685"/>
</return>
<msg timestamp="20220705 11:23:39.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:39.402" endtime="20220705 11:23:39.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:39.686" endtime="20220705 11:23:39.686"/>
</return>
<msg timestamp="20220705 11:23:39.686" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:39.401" endtime="20220705 11:23:39.686"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:23:39.687" endtime="20220705 11:23:39.803"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:39.804" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220705 11:23:39.803" endtime="20220705 11:23:40.176"/>
</kw>
<status status="PASS" starttime="20220705 11:23:39.686" endtime="20220705 11:23:40.176"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:40.177" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220705 11:23:40.177" endtime="20220705 11:23:40.177"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:40.178" endtime="20220705 11:23:40.617"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:40.617" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220705 11:23:40.617" endtime="20220705 11:23:40.801"/>
</kw>
<status status="PASS" starttime="20220705 11:23:40.177" endtime="20220705 11:23:40.801"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:40.802" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 11:23:40.802" endtime="20220705 11:23:40.802"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 11:23:40.802" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220705 11:23:40.802" endtime="20220705 11:23:40.802"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:40.804" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 11:23:40.803" endtime="20220705 11:23:40.804"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:40.804" endtime="20220705 11:23:41.378"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:41.379" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 11:23:41.379" endtime="20220705 11:23:41.438"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:41.439" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 11:23:41.439" endtime="20220705 11:23:41.439"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:41.440" endtime="20220705 11:23:41.496"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:41.496" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:41.496" endtime="20220705 11:23:41.555"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 11:23:41.556" endtime="20220705 11:23:41.609"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:41.610" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:41.610" endtime="20220705 11:23:41.719"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:41.720" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 11:23:41.719" endtime="20220705 11:23:41.720"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:41.720" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 11:23:41.720" endtime="20220705 11:23:41.811"/>
</kw>
<status status="PASS" starttime="20220705 11:23:40.803" endtime="20220705 11:23:41.812"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:41.813" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220705 11:23:41.813" endtime="20220705 11:23:41.813"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:41.813" endtime="20220705 11:23:41.887"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:41.888" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220705 11:23:41.888" endtime="20220705 11:23:41.946"/>
</kw>
<status status="PASS" starttime="20220705 11:23:41.812" endtime="20220705 11:23:41.946"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:41.947" endtime="20220705 11:23:42.250"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:42.250" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220705 11:23:42.250" endtime="20220705 11:23:42.341"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220705 11:23:42.342" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220705 11:23:42.342" endtime="20220705 11:23:42.483"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:23:42.483" endtime="20220705 11:23:42.763"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:42.763" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220705 11:23:42.763" endtime="20220705 11:23:42.926"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 11:23:42.926" endtime="20220705 11:23:42.939"/>
</kw>
<status status="PASS" starttime="20220705 11:23:41.947" endtime="20220705 11:23:42.939"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:42.940" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 11:23:42.940" endtime="20220705 11:23:42.940"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 11:23:42.952" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 11:23:42.941" endtime="20220705 11:23:42.952"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 11:23:42.952" endtime="20220705 11:23:42.952"/>
</return>
<msg timestamp="20220705 11:23:42.952" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220705 11:23:42.939" endtime="20220705 11:23:42.952"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220705 11:23:42.953" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220705 11:23:42.953" endtime="20220705 11:23:42.953"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:23:42.953" endtime="20220705 11:23:42.953"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 11:23:42.954" endtime="20220705 11:23:43.036"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:43.040" level="INFO">${url} = boards/62c41f3be9bc1d26da5e9c96</msg>
<status status="PASS" starttime="20220705 11:23:43.039" endtime="20220705 11:23:43.040"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:23:43.144" level="INFO">${response} = None</msg>
<msg timestamp="20220705 11:23:43.144" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220705 11:23:43.040" endtime="20220705 11:23:43.145"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:43.145" endtime="20220705 11:23:43.145"/>
</return>
<msg timestamp="20220705 11:23:43.146" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220705 11:23:43.039" endtime="20220705 11:23:43.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:43.146" endtime="20220705 11:23:43.146"/>
</return>
<status status="FAIL" starttime="20220705 11:23:43.037" endtime="20220705 11:23:43.146"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:46.152" level="INFO">${url} = boards/62c41f3be9bc1d26da5e9c96</msg>
<status status="PASS" starttime="20220705 11:23:46.152" endtime="20220705 11:23:46.152"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:23:46.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:46.153" endtime="20220705 11:23:46.545"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:46.545" endtime="20220705 11:23:46.545"/>
</return>
<msg timestamp="20220705 11:23:46.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:46.150" endtime="20220705 11:23:46.545"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:46.545" endtime="20220705 11:23:46.545"/>
</return>
<status status="PASS" starttime="20220705 11:23:46.147" endtime="20220705 11:23:46.546"/>
</kw>
<status status="PASS" starttime="20220705 11:23:43.036" endtime="20220705 11:23:46.546"/>
</kw>
<status status="PASS" starttime="20220705 11:23:42.954" endtime="20220705 11:23:46.546"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:23:39.401" endtime="20220705 11:23:46.546"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:46.552" level="INFO">${url} = boards/62c41f270f705e13afe31faa</msg>
<status status="PASS" starttime="20220705 11:23:46.551" endtime="20220705 11:23:46.552"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:23:47.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:46.552" endtime="20220705 11:23:47.230"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:47.230" endtime="20220705 11:23:47.230"/>
</return>
<msg timestamp="20220705 11:23:47.231" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:46.551" endtime="20220705 11:23:47.231"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:47.231" endtime="20220705 11:23:47.231"/>
</return>
<status status="PASS" starttime="20220705 11:23:46.550" endtime="20220705 11:23:47.231"/>
</kw>
<status status="PASS" starttime="20220705 11:23:46.549" endtime="20220705 11:23:47.231"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 11:23:47.232" endtime="20220705 11:23:47.233"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220705 11:23:47.234" endtime="20220705 11:23:47.234"/>
</kw>
<status status="PASS" starttime="20220705 11:23:46.548" endtime="20220705 11:23:47.234"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220705 11:23:19.387" endtime="20220705 11:23:47.234"/>
</suite>
<suite id="s1-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:23:47.257" endtime="20220705 11:23:47.257"/>
</kw>
<status status="PASS" starttime="20220705 11:23:47.256" endtime="20220705 11:23:47.257"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:23:47.259" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:23:47.258" endtime="20220705 11:23:47.259"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:23:47.259" endtime="20220705 11:23:47.259"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:47.260" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:23:47.259" endtime="20220705 11:23:47.260"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:23:47.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:47.260" endtime="20220705 11:23:47.516"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:47.516" endtime="20220705 11:23:47.516"/>
</return>
<msg timestamp="20220705 11:23:47.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:47.258" endtime="20220705 11:23:47.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:23:47.517" endtime="20220705 11:23:47.517"/>
</return>
<msg timestamp="20220705 11:23:47.517" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:23:47.257" endtime="20220705 11:23:47.517"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:23:47.520" level="INFO">${TEST_SUITE_BOARD_ID} = 62c41f43732c0d7bd246233d</msg>
<status status="PASS" starttime="20220705 11:23:47.518" endtime="20220705 11:23:47.521"/>
</kw>
<status status="PASS" starttime="20220705 11:23:47.257" endtime="20220705 11:23:47.521"/>
</kw>
<status status="PASS" starttime="20220705 11:23:47.256" endtime="20220705 11:23:47.521"/>
</kw>
<test id="s1-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 11:23:47.524" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 11:23:47.523" endtime="20220705 11:23:48.712"/>
</kw>
<status status="PASS" starttime="20220705 11:23:47.523" endtime="20220705 11:23:48.712"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:23:48.712" endtime="20220705 11:23:48.712"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:23:48.712" endtime="20220705 11:23:48.712"/>
</branch>
<status status="PASS" starttime="20220705 11:23:47.523" endtime="20220705 11:23:48.712"/>
</if>
<status status="PASS" starttime="20220705 11:23:47.522" endtime="20220705 11:23:48.713"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 11:23:48.713" endtime="20220705 11:23:48.824"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:23:48.838" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:23:48.825" endtime="20220705 11:23:48.838"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:23:48.838" endtime="20220705 11:23:48.838"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:23:48.838" endtime="20220705 11:23:48.838"/>
</branch>
<status status="PASS" starttime="20220705 11:23:48.838" endtime="20220705 11:23:48.838"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:48.839" endtime="20220705 11:23:48.898"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:48.899" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 11:23:48.898" endtime="20220705 11:23:49.032"/>
</kw>
<status status="PASS" starttime="20220705 11:23:48.839" endtime="20220705 11:23:49.033"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 11:23:49.033" endtime="20220705 11:23:49.760"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:23:49.769" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:23:49.761" endtime="20220705 11:23:49.769"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:23:49.769" endtime="20220705 11:23:49.820"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:49.821" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 11:23:49.820" endtime="20220705 11:23:50.871"/>
</kw>
<status status="PASS" starttime="20220705 11:23:49.769" endtime="20220705 11:23:50.871"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:23:50.871" endtime="20220705 11:23:50.871"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:23:50.871" endtime="20220705 11:23:50.871"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:23:50.871" endtime="20220705 11:23:50.872"/>
</branch>
<status status="PASS" starttime="20220705 11:23:49.769" endtime="20220705 11:23:50.872"/>
</if>
<status status="PASS" starttime="20220705 11:23:49.760" endtime="20220705 11:23:50.872"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 11:23:50.872" endtime="20220705 11:23:50.883"/>
</kw>
<status status="PASS" starttime="20220705 11:23:50.872" endtime="20220705 11:23:50.884"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:50.884" endtime="20220705 11:23:50.924"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:50.925" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 11:23:51.018" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 11:23:51.113" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 11:23:50.924" endtime="20220705 11:23:51.113"/>
</kw>
<status status="PASS" starttime="20220705 11:23:50.884" endtime="20220705 11:23:51.113"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:23:51.124" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c41f...</msg>
<status status="PASS" starttime="20220705 11:23:51.114" endtime="20220705 11:23:51.125"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:23:51.125" endtime="20220705 11:23:51.125"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:23:51.125" endtime="20220705 11:23:51.125"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:23:51.125" endtime="20220705 11:23:51.125"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:23:51.125" endtime="20220705 11:23:51.183"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:51.184" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 11:23:51.183" endtime="20220705 11:23:51.303"/>
</kw>
<status status="PASS" starttime="20220705 11:23:51.125" endtime="20220705 11:23:51.303"/>
</branch>
<status status="PASS" starttime="20220705 11:23:51.125" endtime="20220705 11:23:51.303"/>
</if>
<status status="PASS" starttime="20220705 11:23:51.113" endtime="20220705 11:23:51.303"/>
</kw>
<status status="PASS" starttime="20220705 11:23:48.825" endtime="20220705 11:23:51.303"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:51.304" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 11:23:51.304" endtime="20220705 11:23:51.304"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:51.304" endtime="20220705 11:23:55.237"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:55.238" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 11:23:55.237" endtime="20220705 11:23:55.625"/>
</kw>
<status status="PASS" starttime="20220705 11:23:51.303" endtime="20220705 11:23:55.625"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:55.627" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 11:23:55.626" endtime="20220705 11:23:55.627"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:55.627" endtime="20220705 11:23:56.277"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:56.278" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 11:23:56.277" endtime="20220705 11:23:56.378"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:56.379" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 11:23:56.378" endtime="20220705 11:23:56.379"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:56.379" endtime="20220705 11:23:56.448"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:56.448" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:56.448" endtime="20220705 11:23:56.506"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 11:23:56.506" endtime="20220705 11:23:56.558"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:56.559" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:23:56.558" endtime="20220705 11:23:56.678"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:56.679" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 11:23:56.678" endtime="20220705 11:23:56.679"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:23:56.679" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 11:23:56.679" endtime="20220705 11:23:56.798"/>
</kw>
<status status="PASS" starttime="20220705 11:23:55.626" endtime="20220705 11:23:56.798"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:56.799" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 11:23:56.799" endtime="20220705 11:23:56.799"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:23:56.800" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220705 11:23:56.799" endtime="20220705 11:23:56.800"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:23:56.800" endtime="20220705 11:23:56.884"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220705 11:24:01.884" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220705 11:23:56.884" endtime="20220705 11:24:01.884"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220705 11:24:01.885" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220705 11:24:01.885" endtime="20220705 11:24:02.183"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220705 11:24:07.184" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220705 11:24:02.183" endtime="20220705 11:24:07.184"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 11:24:07.184" endtime="20220705 11:24:07.201"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:07.202" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220705 11:24:07.202" endtime="20220705 11:24:07.302"/>
</kw>
<status status="PASS" starttime="20220705 11:23:56.798" endtime="20220705 11:24:07.302"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:07.303" endtime="20220705 11:24:07.385"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:07.385" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220705 11:24:07.385" endtime="20220705 11:24:07.476"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:07.476" endtime="20220705 11:24:07.543"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:07.544" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220705 11:24:07.544" endtime="20220705 11:24:07.613"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:07.614" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220705 11:24:07.613" endtime="20220705 11:24:07.729"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:07.729" endtime="20220705 11:24:07.765"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:24:07.766" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220705 11:24:08.044" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 11:24:08.044" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 11:24:07.765" endtime="20220705 11:24:08.081"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:24:08.082" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220705 11:24:08.082" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220705 11:24:08.082" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220705 11:24:08.081" endtime="20220705 11:24:08.100"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:24:08.101" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220705 11:24:08.101" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220705 11:24:08.101" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220705 11:24:08.100" endtime="20220705 11:24:08.116"/>
</kw>
<status status="PASS" starttime="20220705 11:24:07.302" endtime="20220705 11:24:08.116"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:08.118" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 11:24:08.117" endtime="20220705 11:24:08.118"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:08.118" endtime="20220705 11:24:08.153"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:08.153" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 11:24:08.153" endtime="20220705 11:24:08.246"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:08.246" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 11:24:08.246" endtime="20220705 11:24:08.247"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:08.247" endtime="20220705 11:24:08.325"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:08.325" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:24:08.325" endtime="20220705 11:24:08.381"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 11:24:08.381" endtime="20220705 11:24:08.419"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:08.420" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:24:08.419" endtime="20220705 11:24:08.503"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:08.504" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 11:24:08.503" endtime="20220705 11:24:08.504"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:08.504" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 11:24:08.504" endtime="20220705 11:24:08.583"/>
</kw>
<status status="PASS" starttime="20220705 11:24:08.117" endtime="20220705 11:24:08.583"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:08.584" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 11:24:08.584" endtime="20220705 11:24:08.584"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:08.585" endtime="20220705 11:24:08.644"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:08.644" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 11:24:08.644" endtime="20220705 11:24:08.714"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:08.714" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 11:24:08.714" endtime="20220705 11:24:08.714"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:08.715" endtime="20220705 11:24:08.753"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:08.753" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:24:08.753" endtime="20220705 11:24:08.833"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 11:24:08.833" endtime="20220705 11:24:08.893"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:08.894" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 11:24:08.893" endtime="20220705 11:24:08.984"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:08.985" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 11:24:08.985" endtime="20220705 11:24:08.985"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:08.986" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 11:24:08.985" endtime="20220705 11:24:09.066"/>
</kw>
<status status="PASS" starttime="20220705 11:24:08.584" endtime="20220705 11:24:09.066"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:09.067" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220705 11:24:09.067" endtime="20220705 11:24:09.204"/>
</kw>
<status status="PASS" starttime="20220705 11:24:09.066" endtime="20220705 11:24:09.204"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:09.205" endtime="20220705 11:24:09.547"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:09.547" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220705 11:24:09.547" endtime="20220705 11:24:09.720"/>
</kw>
<status status="PASS" starttime="20220705 11:24:09.204" endtime="20220705 11:24:09.721"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:09.722" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 11:24:09.721" endtime="20220705 11:24:09.722"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 11:24:09.775" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220705 11:24:09.722" endtime="20220705 11:24:09.775"/>
</kw>
<status status="PASS" starttime="20220705 11:24:09.721" endtime="20220705 11:24:09.775"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:09.776" endtime="20220705 11:24:09.808"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:09.809" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220705 11:24:09.809" endtime="20220705 11:24:09.945"/>
</kw>
<status status="PASS" starttime="20220705 11:24:09.776" endtime="20220705 11:24:09.945"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:09.947" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 11:24:09.946" endtime="20220705 11:24:09.947"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 11:24:09.984" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220705 11:24:09.947" endtime="20220705 11:24:09.984"/>
</kw>
<status status="PASS" starttime="20220705 11:24:09.946" endtime="20220705 11:24:09.984"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 11:24:09.985" endtime="20220705 11:24:10.125"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:23:47.521" endtime="20220705 11:24:10.125"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:10.129" level="INFO">${url} = boards/62c41f43732c0d7bd246233d</msg>
<status status="PASS" starttime="20220705 11:24:10.129" endtime="20220705 11:24:10.129"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:24:10.540" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:24:10.130" endtime="20220705 11:24:10.540"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:24:10.540" endtime="20220705 11:24:10.540"/>
</return>
<msg timestamp="20220705 11:24:10.540" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:24:10.129" endtime="20220705 11:24:10.540"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:24:10.540" endtime="20220705 11:24:10.540"/>
</return>
<status status="PASS" starttime="20220705 11:24:10.128" endtime="20220705 11:24:10.541"/>
</kw>
<status status="PASS" starttime="20220705 11:24:10.128" endtime="20220705 11:24:10.541"/>
</kw>
<status status="PASS" starttime="20220705 11:24:10.128" endtime="20220705 11:24:10.541"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 11:24:10.541" endtime="20220705 11:24:10.543"/>
</kw>
<status status="PASS" starttime="20220705 11:24:10.127" endtime="20220705 11:24:10.543"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220705 11:23:47.239" endtime="20220705 11:24:10.543"/>
</suite>
<suite id="s1-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:24:10.562" endtime="20220705 11:24:10.562"/>
</kw>
<status status="PASS" starttime="20220705 11:24:10.561" endtime="20220705 11:24:10.562"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:24:10.563" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:24:10.563" endtime="20220705 11:24:10.563"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:24:10.564" endtime="20220705 11:24:10.564"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:10.565" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:24:10.564" endtime="20220705 11:24:10.565"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:24:10.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:24:10.565" endtime="20220705 11:24:10.804"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:24:10.804" endtime="20220705 11:24:10.804"/>
</return>
<msg timestamp="20220705 11:24:10.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:24:10.563" endtime="20220705 11:24:10.805"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:24:10.805" endtime="20220705 11:24:10.805"/>
</return>
<msg timestamp="20220705 11:24:10.805" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:24:10.563" endtime="20220705 11:24:10.805"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:24:10.808" level="INFO">${TEST_SUITE_BOARD_ID} = 62c41f5ab7235c670c3cc51a</msg>
<status status="PASS" starttime="20220705 11:24:10.806" endtime="20220705 11:24:10.808"/>
</kw>
<status status="PASS" starttime="20220705 11:24:10.562" endtime="20220705 11:24:10.808"/>
</kw>
<status status="PASS" starttime="20220705 11:24:10.561" endtime="20220705 11:24:10.809"/>
</kw>
<test id="s1-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 11:24:10.812" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 11:24:10.811" endtime="20220705 11:24:11.975"/>
</kw>
<status status="PASS" starttime="20220705 11:24:10.811" endtime="20220705 11:24:11.975"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:11.976" endtime="20220705 11:24:11.976"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:11.976" endtime="20220705 11:24:11.976"/>
</branch>
<status status="PASS" starttime="20220705 11:24:10.811" endtime="20220705 11:24:11.976"/>
</if>
<status status="PASS" starttime="20220705 11:24:10.810" endtime="20220705 11:24:11.976"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 11:24:11.976" endtime="20220705 11:24:12.090"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:24:12.104" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:24:12.091" endtime="20220705 11:24:12.104"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:12.104" endtime="20220705 11:24:12.104"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:12.104" endtime="20220705 11:24:12.104"/>
</branch>
<status status="PASS" starttime="20220705 11:24:12.104" endtime="20220705 11:24:12.104"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:12.105" endtime="20220705 11:24:12.142"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:12.143" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 11:24:12.142" endtime="20220705 11:24:12.255"/>
</kw>
<status status="PASS" starttime="20220705 11:24:12.105" endtime="20220705 11:24:12.255"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 11:24:12.255" endtime="20220705 11:24:12.998"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:24:13.006" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:24:12.999" endtime="20220705 11:24:13.006"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:13.007" endtime="20220705 11:24:13.080"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:13.081" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 11:24:13.081" endtime="20220705 11:24:14.168"/>
</kw>
<status status="PASS" starttime="20220705 11:24:13.007" endtime="20220705 11:24:14.168"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:24:14.169" endtime="20220705 11:24:14.169"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:14.169" endtime="20220705 11:24:14.169"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:14.169" endtime="20220705 11:24:14.169"/>
</branch>
<status status="PASS" starttime="20220705 11:24:13.006" endtime="20220705 11:24:14.169"/>
</if>
<status status="PASS" starttime="20220705 11:24:12.999" endtime="20220705 11:24:14.169"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 11:24:14.170" endtime="20220705 11:24:14.178"/>
</kw>
<status status="PASS" starttime="20220705 11:24:14.169" endtime="20220705 11:24:14.178"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:14.179" endtime="20220705 11:24:14.241"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:14.241" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 11:24:14.300" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 11:24:14.377" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 11:24:14.241" endtime="20220705 11:24:14.378"/>
</kw>
<status status="PASS" starttime="20220705 11:24:14.178" endtime="20220705 11:24:14.378"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:24:14.386" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c41f...</msg>
<status status="PASS" starttime="20220705 11:24:14.378" endtime="20220705 11:24:14.386"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:24:14.386" endtime="20220705 11:24:14.386"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:14.386" endtime="20220705 11:24:14.386"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:14.386" endtime="20220705 11:24:14.386"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:14.387" endtime="20220705 11:24:14.434"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:14.435" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 11:24:14.435" endtime="20220705 11:24:14.541"/>
</kw>
<status status="PASS" starttime="20220705 11:24:14.386" endtime="20220705 11:24:14.541"/>
</branch>
<status status="PASS" starttime="20220705 11:24:14.386" endtime="20220705 11:24:14.541"/>
</if>
<status status="PASS" starttime="20220705 11:24:14.378" endtime="20220705 11:24:14.541"/>
</kw>
<status status="PASS" starttime="20220705 11:24:12.090" endtime="20220705 11:24:14.541"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:14.542" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 11:24:14.542" endtime="20220705 11:24:14.542"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:14.543" endtime="20220705 11:24:18.535"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:18.536" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 11:24:18.535" endtime="20220705 11:24:18.953"/>
</kw>
<status status="PASS" starttime="20220705 11:24:14.541" endtime="20220705 11:24:18.954"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 11:24:18.954" endtime="20220705 11:24:19.479"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:19.479" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 11:24:19.479" endtime="20220705 11:24:19.644"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:19.644" endtime="20220705 11:24:19.741"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:19.741" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 11:24:19.741" endtime="20220705 11:24:19.876"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:24:19.876" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 11:24:20.266" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 11:24:20.267" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 11:24:19.876" endtime="20220705 11:24:20.310"/>
</kw>
<status status="PASS" starttime="20220705 11:24:18.954" endtime="20220705 11:24:20.310"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:20.311" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 11:24:20.311" endtime="20220705 11:24:20.311"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:20.311" endtime="20220705 11:24:20.353"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 11:24:20.364" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220705 11:24:20.353" endtime="20220705 11:24:20.364"/>
</kw>
<status status="PASS" starttime="20220705 11:24:20.310" endtime="20220705 11:24:20.364"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:20.365" endtime="20220705 11:24:20.421"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:20.422" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 11:24:20.422" endtime="20220705 11:24:20.510"/>
</kw>
<status status="PASS" starttime="20220705 11:24:20.421" endtime="20220705 11:24:20.510"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:20.510" endtime="20220705 11:24:20.584"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:20.585" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 11:24:20.585" endtime="20220705 11:24:20.662"/>
</kw>
<status status="PASS" starttime="20220705 11:24:20.584" endtime="20220705 11:24:20.663"/>
</kw>
<status status="PASS" starttime="20220705 11:24:20.365" endtime="20220705 11:24:20.663"/>
</kw>
<status status="PASS" starttime="20220705 11:24:20.364" endtime="20220705 11:24:20.663"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 11:24:20.663" endtime="20220705 11:24:20.775"/>
</kw>
<status status="PASS" starttime="20220705 11:24:20.364" endtime="20220705 11:24:20.776"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:24:10.809" endtime="20220705 11:24:20.776"/>
</test>
<test id="s1-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 11:24:20.781" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 11:24:20.780" endtime="20220705 11:24:22.175"/>
</kw>
<status status="PASS" starttime="20220705 11:24:20.780" endtime="20220705 11:24:22.175"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:22.175" endtime="20220705 11:24:22.175"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:22.175" endtime="20220705 11:24:22.175"/>
</branch>
<status status="PASS" starttime="20220705 11:24:20.780" endtime="20220705 11:24:22.175"/>
</if>
<status status="PASS" starttime="20220705 11:24:20.779" endtime="20220705 11:24:22.175"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 11:24:22.175" endtime="20220705 11:24:22.288"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:24:22.298" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:24:22.289" endtime="20220705 11:24:22.298"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:22.298" endtime="20220705 11:24:22.298"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:22.298" endtime="20220705 11:24:22.298"/>
</branch>
<status status="PASS" starttime="20220705 11:24:22.298" endtime="20220705 11:24:22.298"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:22.299" endtime="20220705 11:24:22.336"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:22.336" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 11:24:22.336" endtime="20220705 11:24:22.466"/>
</kw>
<status status="PASS" starttime="20220705 11:24:22.298" endtime="20220705 11:24:22.466"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 11:24:22.467" endtime="20220705 11:24:23.196"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:24:23.207" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:24:23.196" endtime="20220705 11:24:23.208"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:23.208" endtime="20220705 11:24:23.251"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:23.253" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 11:24:23.252" endtime="20220705 11:24:24.336"/>
</kw>
<status status="PASS" starttime="20220705 11:24:23.208" endtime="20220705 11:24:24.336"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:24:24.336" endtime="20220705 11:24:24.336"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:24.336" endtime="20220705 11:24:24.336"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:24.336" endtime="20220705 11:24:24.336"/>
</branch>
<status status="PASS" starttime="20220705 11:24:23.208" endtime="20220705 11:24:24.336"/>
</if>
<status status="PASS" starttime="20220705 11:24:23.196" endtime="20220705 11:24:24.337"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 11:24:24.337" endtime="20220705 11:24:24.372"/>
</kw>
<status status="PASS" starttime="20220705 11:24:24.337" endtime="20220705 11:24:24.372"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:24.372" endtime="20220705 11:24:24.462"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:24.463" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 11:24:24.533" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 11:24:24.605" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 11:24:24.462" endtime="20220705 11:24:24.605"/>
</kw>
<status status="PASS" starttime="20220705 11:24:24.372" endtime="20220705 11:24:24.606"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:24:24.617" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c41f...</msg>
<status status="PASS" starttime="20220705 11:24:24.606" endtime="20220705 11:24:24.617"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:24:24.618" endtime="20220705 11:24:24.618"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:24.618" endtime="20220705 11:24:24.618"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:24.617" endtime="20220705 11:24:24.618"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:24.618" endtime="20220705 11:24:24.680"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:24.681" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 11:24:24.681" endtime="20220705 11:24:24.797"/>
</kw>
<status status="PASS" starttime="20220705 11:24:24.618" endtime="20220705 11:24:24.797"/>
</branch>
<status status="PASS" starttime="20220705 11:24:24.617" endtime="20220705 11:24:24.797"/>
</if>
<status status="PASS" starttime="20220705 11:24:24.606" endtime="20220705 11:24:24.797"/>
</kw>
<status status="PASS" starttime="20220705 11:24:22.288" endtime="20220705 11:24:24.797"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:24.798" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 11:24:24.798" endtime="20220705 11:24:24.798"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:24.799" endtime="20220705 11:24:28.850"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:28.851" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 11:24:28.850" endtime="20220705 11:24:29.213"/>
</kw>
<status status="PASS" starttime="20220705 11:24:24.797" endtime="20220705 11:24:29.213"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 11:24:29.214" endtime="20220705 11:24:29.715"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:29.716" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 11:24:29.716" endtime="20220705 11:24:29.908"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:29.909" endtime="20220705 11:24:29.993"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:29.993" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 11:24:29.993" endtime="20220705 11:24:30.115"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:24:30.116" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 11:24:30.541" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 11:24:30.541" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 11:24:30.115" endtime="20220705 11:24:30.577"/>
</kw>
<status status="PASS" starttime="20220705 11:24:29.213" endtime="20220705 11:24:30.577"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:30.578" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220705 11:24:30.578" endtime="20220705 11:24:30.578"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:30.578" endtime="20220705 11:24:30.637"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:30.638" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220705 11:24:30.637" endtime="20220705 11:24:30.689"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:30.689" endtime="20220705 11:24:30.758"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:24:30.758" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 11:24:31.062" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220705 11:24:31.062" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220705 11:24:30.758" endtime="20220705 11:24:31.090"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:31.091" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220705 11:24:31.090" endtime="20220705 11:24:31.227"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:24:31.228" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220705 11:24:31.228" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220705 11:24:31.228" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 11:24:31.227" endtime="20220705 11:24:31.248"/>
</kw>
<status status="PASS" starttime="20220705 11:24:30.577" endtime="20220705 11:24:31.248"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:31.249" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 11:24:31.249" endtime="20220705 11:24:31.249"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:31.249" endtime="20220705 11:24:31.299"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 11:24:31.310" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220705 11:24:31.299" endtime="20220705 11:24:31.310"/>
</kw>
<status status="PASS" starttime="20220705 11:24:31.248" endtime="20220705 11:24:31.310"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:31.312" endtime="20220705 11:24:31.387"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:31.388" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 11:24:31.388" endtime="20220705 11:24:31.456"/>
</kw>
<status status="PASS" starttime="20220705 11:24:31.387" endtime="20220705 11:24:31.456"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:31.456" endtime="20220705 11:24:31.537"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:31.538" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 11:24:31.538" endtime="20220705 11:24:31.646"/>
</kw>
<status status="PASS" starttime="20220705 11:24:31.537" endtime="20220705 11:24:31.647"/>
</kw>
<status status="PASS" starttime="20220705 11:24:31.312" endtime="20220705 11:24:31.647"/>
</kw>
<status status="PASS" starttime="20220705 11:24:31.311" endtime="20220705 11:24:31.647"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 11:24:31.647" endtime="20220705 11:24:31.754"/>
</kw>
<status status="PASS" starttime="20220705 11:24:31.311" endtime="20220705 11:24:31.754"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:24:20.778" endtime="20220705 11:24:31.754"/>
</test>
<test id="s1-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 11:24:31.757" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 11:24:31.756" endtime="20220705 11:24:32.870"/>
</kw>
<status status="PASS" starttime="20220705 11:24:31.756" endtime="20220705 11:24:32.870"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:32.870" endtime="20220705 11:24:32.870"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:32.870" endtime="20220705 11:24:32.870"/>
</branch>
<status status="PASS" starttime="20220705 11:24:31.756" endtime="20220705 11:24:32.870"/>
</if>
<status status="PASS" starttime="20220705 11:24:31.756" endtime="20220705 11:24:32.870"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 11:24:32.871" endtime="20220705 11:24:32.996"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:24:33.007" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:24:32.997" endtime="20220705 11:24:33.007"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:33.007" endtime="20220705 11:24:33.007"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:33.007" endtime="20220705 11:24:33.007"/>
</branch>
<status status="PASS" starttime="20220705 11:24:33.007" endtime="20220705 11:24:33.007"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:33.008" endtime="20220705 11:24:33.061"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:33.062" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 11:24:33.062" endtime="20220705 11:24:33.181"/>
</kw>
<status status="PASS" starttime="20220705 11:24:33.007" endtime="20220705 11:24:33.181"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 11:24:33.181" endtime="20220705 11:24:33.896"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:24:33.902" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:24:33.896" endtime="20220705 11:24:33.902"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:33.903" endtime="20220705 11:24:33.945"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:33.945" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 11:24:33.945" endtime="20220705 11:24:34.920"/>
</kw>
<status status="PASS" starttime="20220705 11:24:33.903" endtime="20220705 11:24:34.920"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:24:34.920" endtime="20220705 11:24:34.920"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:34.920" endtime="20220705 11:24:34.920"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:34.920" endtime="20220705 11:24:34.920"/>
</branch>
<status status="PASS" starttime="20220705 11:24:33.903" endtime="20220705 11:24:34.920"/>
</if>
<status status="PASS" starttime="20220705 11:24:33.896" endtime="20220705 11:24:34.921"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 11:24:34.921" endtime="20220705 11:24:34.944"/>
</kw>
<status status="PASS" starttime="20220705 11:24:34.921" endtime="20220705 11:24:34.944"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:34.945" endtime="20220705 11:24:35.036"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:35.037" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 11:24:35.095" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 11:24:35.163" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 11:24:35.036" endtime="20220705 11:24:35.163"/>
</kw>
<status status="PASS" starttime="20220705 11:24:34.944" endtime="20220705 11:24:35.163"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:24:35.171" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c41f...</msg>
<status status="PASS" starttime="20220705 11:24:35.164" endtime="20220705 11:24:35.171"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:24:35.171" endtime="20220705 11:24:35.171"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:35.171" endtime="20220705 11:24:35.171"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:35.171" endtime="20220705 11:24:35.171"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:35.172" endtime="20220705 11:24:35.222"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:35.222" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 11:24:35.222" endtime="20220705 11:24:35.309"/>
</kw>
<status status="PASS" starttime="20220705 11:24:35.171" endtime="20220705 11:24:35.309"/>
</branch>
<status status="PASS" starttime="20220705 11:24:35.171" endtime="20220705 11:24:35.309"/>
</if>
<status status="PASS" starttime="20220705 11:24:35.164" endtime="20220705 11:24:35.309"/>
</kw>
<status status="PASS" starttime="20220705 11:24:32.996" endtime="20220705 11:24:35.309"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:35.310" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 11:24:35.310" endtime="20220705 11:24:35.310"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:35.311" endtime="20220705 11:24:39.217"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:39.218" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 11:24:39.218" endtime="20220705 11:24:39.587"/>
</kw>
<status status="PASS" starttime="20220705 11:24:35.309" endtime="20220705 11:24:39.588"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 11:24:39.588" endtime="20220705 11:24:40.216"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:40.217" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 11:24:40.216" endtime="20220705 11:24:40.390"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:40.390" endtime="20220705 11:24:40.442"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:40.442" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 11:24:40.442" endtime="20220705 11:24:40.563"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 11:24:40.564" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 11:24:40.866" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 11:24:40.866" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 11:24:40.563" endtime="20220705 11:24:40.902"/>
</kw>
<status status="PASS" starttime="20220705 11:24:39.588" endtime="20220705 11:24:40.902"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:40.903" endtime="20220705 11:24:40.962"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:40.963" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 11:24:40.963" endtime="20220705 11:24:41.038"/>
</kw>
<status status="PASS" starttime="20220705 11:24:40.963" endtime="20220705 11:24:41.039"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220705 11:24:51.225" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220705 11:24:51.098" endtime="20220705 11:24:51.225"/>
</kw>
<msg timestamp="20220705 11:24:51.226" level="FAIL">Element with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220705 11:24:41.039" endtime="20220705 11:24:51.226"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20220705 11:24:51.227" endtime="20220705 11:24:51.227"/>
</kw>
<status status="FAIL" starttime="20220705 11:24:40.903" endtime="20220705 11:24:51.227"/>
</kw>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:54.229" endtime="20220705 11:24:54.302"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:54.303" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 11:24:54.302" endtime="20220705 11:24:54.354"/>
</kw>
<status status="PASS" starttime="20220705 11:24:54.302" endtime="20220705 11:24:54.354"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:54.354" endtime="20220705 11:24:54.430"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:54.431" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 11:24:54.431" endtime="20220705 11:24:54.509"/>
</kw>
<status status="PASS" starttime="20220705 11:24:54.431" endtime="20220705 11:24:54.509"/>
</kw>
<status status="PASS" starttime="20220705 11:24:54.228" endtime="20220705 11:24:54.509"/>
</kw>
<status status="PASS" starttime="20220705 11:24:40.902" endtime="20220705 11:24:54.510"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:54.510" endtime="20220705 11:24:54.572"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:54.573" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 11:24:54.572" endtime="20220705 11:24:54.685"/>
</kw>
<status status="PASS" starttime="20220705 11:24:54.510" endtime="20220705 11:24:54.685"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:54.686" endtime="20220705 11:24:54.748"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:54.749" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220705 11:24:54.749" endtime="20220705 11:24:54.900"/>
</kw>
<status status="PASS" starttime="20220705 11:24:54.748" endtime="20220705 11:24:54.900"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:54.900" endtime="20220705 11:24:54.948"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:54.949" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220705 11:24:54.949" endtime="20220705 11:24:55.027"/>
</kw>
<status status="PASS" starttime="20220705 11:24:54.949" endtime="20220705 11:24:55.028"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:55.028" endtime="20220705 11:24:55.106"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:55.108" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220705 11:24:55.107" endtime="20220705 11:24:55.175"/>
</kw>
<status status="PASS" starttime="20220705 11:24:55.107" endtime="20220705 11:24:55.175"/>
</kw>
<status status="PASS" starttime="20220705 11:24:54.685" endtime="20220705 11:24:55.175"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:55.176" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220705 11:24:55.176" endtime="20220705 11:24:55.176"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:55.176" endtime="20220705 11:24:55.448"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 11:24:55.459" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220705 11:24:55.448" endtime="20220705 11:24:55.460"/>
</kw>
<status status="PASS" starttime="20220705 11:24:55.175" endtime="20220705 11:24:55.460"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:55.460" endtime="20220705 11:24:55.512"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:55.512" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220705 11:24:55.512" endtime="20220705 11:24:55.628"/>
</kw>
<status status="PASS" starttime="20220705 11:24:55.460" endtime="20220705 11:24:55.628"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 11:24:55.629" endtime="20220705 11:24:55.727"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:24:31.755" endtime="20220705 11:24:55.727"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:24:55.731" level="INFO">${url} = boards/62c41f5ab7235c670c3cc51a</msg>
<status status="PASS" starttime="20220705 11:24:55.730" endtime="20220705 11:24:55.731"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:24:56.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:24:55.731" endtime="20220705 11:24:56.136"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:24:56.136" endtime="20220705 11:24:56.136"/>
</return>
<msg timestamp="20220705 11:24:56.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:24:55.730" endtime="20220705 11:24:56.136"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:24:56.136" endtime="20220705 11:24:56.137"/>
</return>
<status status="PASS" starttime="20220705 11:24:55.729" endtime="20220705 11:24:56.137"/>
</kw>
<status status="PASS" starttime="20220705 11:24:55.729" endtime="20220705 11:24:56.137"/>
</kw>
<status status="PASS" starttime="20220705 11:24:55.729" endtime="20220705 11:24:56.137"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 11:24:56.137" endtime="20220705 11:24:56.139"/>
</kw>
<status status="PASS" starttime="20220705 11:24:55.728" endtime="20220705 11:24:56.139"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220705 11:24:10.546" endtime="20220705 11:24:56.139"/>
</suite>
<suite id="s1-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 11:24:56.150" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 11:24:56.150" endtime="20220705 11:24:57.352"/>
</kw>
<status status="PASS" starttime="20220705 11:24:56.150" endtime="20220705 11:24:57.352"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:57.352" endtime="20220705 11:24:57.353"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:57.352" endtime="20220705 11:24:57.353"/>
</branch>
<status status="PASS" starttime="20220705 11:24:56.150" endtime="20220705 11:24:57.353"/>
</if>
<status status="PASS" starttime="20220705 11:24:56.149" endtime="20220705 11:24:57.353"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:57.353" endtime="20220705 11:24:57.402"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:57.403" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 11:24:57.403" endtime="20220705 11:24:57.523"/>
</kw>
<status status="PASS" starttime="20220705 11:24:57.353" endtime="20220705 11:24:57.523"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 11:24:57.523" endtime="20220705 11:24:58.261"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:24:58.269" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 11:24:58.262" endtime="20220705 11:24:58.269"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:58.269" endtime="20220705 11:24:58.327"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:58.327" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 11:24:58.327" endtime="20220705 11:24:59.334"/>
</kw>
<status status="PASS" starttime="20220705 11:24:58.269" endtime="20220705 11:24:59.334"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:24:59.335" endtime="20220705 11:24:59.335"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:59.335" endtime="20220705 11:24:59.335"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:59.334" endtime="20220705 11:24:59.335"/>
</branch>
<status status="PASS" starttime="20220705 11:24:58.269" endtime="20220705 11:24:59.335"/>
</if>
<status status="PASS" starttime="20220705 11:24:58.261" endtime="20220705 11:24:59.335"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 11:24:59.335" endtime="20220705 11:24:59.349"/>
</kw>
<status status="PASS" starttime="20220705 11:24:59.335" endtime="20220705 11:24:59.349"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:24:59.349" endtime="20220705 11:24:59.397"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:59.397" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 11:24:59.448" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 11:24:59.508" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 11:24:59.397" endtime="20220705 11:24:59.508"/>
</kw>
<status status="PASS" starttime="20220705 11:24:59.349" endtime="20220705 11:24:59.508"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 11:24:59.516" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c41f...</msg>
<status status="PASS" starttime="20220705 11:24:59.508" endtime="20220705 11:24:59.516"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 11:24:59.517" endtime="20220705 11:24:59.517"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 11:24:59.517" endtime="20220705 11:24:59.517"/>
</kw>
<status status="NOT RUN" starttime="20220705 11:24:59.517" endtime="20220705 11:24:59.517"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 11:24:59.517" endtime="20220705 11:24:59.561"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 11:24:59.561" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 11:24:59.561" endtime="20220705 11:24:59.653"/>
</kw>
<status status="PASS" starttime="20220705 11:24:59.517" endtime="20220705 11:24:59.653"/>
</branch>
<status status="PASS" starttime="20220705 11:24:59.516" endtime="20220705 11:24:59.653"/>
</if>
<status status="PASS" starttime="20220705 11:24:59.508" endtime="20220705 11:24:59.653"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 11:24:59.653" endtime="20220705 11:25:03.556"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 11:25:03.556" endtime="20220705 11:25:03.592"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 11:25:03.593" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220705 11:25:03.593" endtime="20220705 11:25:03.649"/>
</kw>
<status status="PASS" starttime="20220705 11:24:59.653" endtime="20220705 11:25:03.649"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 11:25:03.650" endtime="20220705 11:25:03.748"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:24:56.148" endtime="20220705 11:25:03.748"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220705 11:24:56.143" endtime="20220705 11:25:03.751"/>
</suite>
<status status="PASS" starttime="20220705 11:22:29.949" endtime="20220705 11:25:03.753"/>
</suite>
<status status="PASS" starttime="20220705 11:22:29.931" endtime="20220705 11:25:03.756"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.update.description</stat>
<stat pass="1" fail="0" skip="0">board.update.name</stat>
<stat pass="1" fail="0" skip="0">card.comment</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.drag</stat>
<stat pass="1" fail="0" skip="0">card.move</stat>
<stat pass="1" fail="0" skip="0">card.title_board</stat>
<stat pass="15" fail="0" skip="0">gui</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="2" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="4" fail="0" skip="0">regression</stat>
<stat pass="11" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="15" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1" name="Gui">Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="Trello Gui Board">Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s2" name="Trello Gui Cards">Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Trello Gui Labels">Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Gui Lists">Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Trello Gui Login">Trello.Gui.Trello Gui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
