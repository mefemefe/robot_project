<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 23:23:00.740" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:23:00.890" endtime="20220704 23:23:00.891"/>
</kw>
<status status="PASS" starttime="20220704 23:23:00.889" endtime="20220704 23:23:00.891"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:00.893" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:00.893" endtime="20220704 23:23:00.893"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:00.893" endtime="20220704 23:23:00.894"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:00.894" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:23:00.894" endtime="20220704 23:23:00.894"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:01.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:00.895" endtime="20220704 23:23:01.098"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:01.098" endtime="20220704 23:23:01.098"/>
</return>
<msg timestamp="20220704 23:23:01.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:00.892" endtime="20220704 23:23:01.098"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:01.098" endtime="20220704 23:23:01.098"/>
</return>
<msg timestamp="20220704 23:23:01.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:00.892" endtime="20220704 23:23:01.099"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:01.099" endtime="20220704 23:23:01.105"/>
</kw>
<status status="PASS" starttime="20220704 23:23:01.099" endtime="20220704 23:23:01.105"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:01.108" level="INFO">${url} = boards/62c376546cad503290955813</msg>
<status status="PASS" starttime="20220704 23:23:01.108" endtime="20220704 23:23:01.108"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:01.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:01.108" endtime="20220704 23:23:01.443"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:01.443" endtime="20220704 23:23:01.443"/>
</return>
<msg timestamp="20220704 23:23:01.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:01.107" endtime="20220704 23:23:01.443"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:01.443" endtime="20220704 23:23:01.443"/>
</return>
<status status="PASS" starttime="20220704 23:23:01.106" endtime="20220704 23:23:01.444"/>
</kw>
<status status="PASS" starttime="20220704 23:23:01.106" endtime="20220704 23:23:01.444"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:23:00.891" endtime="20220704 23:23:01.444"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:01.447" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:01.446" endtime="20220704 23:23:01.447"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:01.447" endtime="20220704 23:23:01.447"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:01.448" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:23:01.447" endtime="20220704 23:23:01.448"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:01.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:01.448" endtime="20220704 23:23:01.604"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:01.604" endtime="20220704 23:23:01.604"/>
</return>
<msg timestamp="20220704 23:23:01.605" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:01.446" endtime="20220704 23:23:01.605"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:01.605" endtime="20220704 23:23:01.605"/>
</return>
<msg timestamp="20220704 23:23:01.605" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:01.445" endtime="20220704 23:23:01.605"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:01.606" endtime="20220704 23:23:01.610"/>
</kw>
<status status="PASS" starttime="20220704 23:23:01.605" endtime="20220704 23:23:01.610"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:01.612" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:01.612" endtime="20220704 23:23:01.612"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:01.612" endtime="20220704 23:23:01.613"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:01.613" level="INFO">${url} = boards/62c376554cad6f220f49149a</msg>
<status status="PASS" starttime="20220704 23:23:01.613" endtime="20220704 23:23:01.613"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:01.703" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:01.613" endtime="20220704 23:23:01.703"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:01.703" endtime="20220704 23:23:01.703"/>
</return>
<msg timestamp="20220704 23:23:01.703" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:01.611" endtime="20220704 23:23:01.703"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:01.703" endtime="20220704 23:23:01.703"/>
</return>
<status status="PASS" starttime="20220704 23:23:01.610" endtime="20220704 23:23:01.704"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:01.706" level="INFO">${url} = boards/62c376554cad6f220f49149a</msg>
<status status="PASS" starttime="20220704 23:23:01.705" endtime="20220704 23:23:01.706"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:01.758" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:01.706" endtime="20220704 23:23:01.758"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:01.758" endtime="20220704 23:23:01.758"/>
</return>
<msg timestamp="20220704 23:23:01.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:01.705" endtime="20220704 23:23:01.759"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:01.759" endtime="20220704 23:23:01.759"/>
</return>
<msg timestamp="20220704 23:23:01.759" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:01.704" endtime="20220704 23:23:01.759"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:01.760" endtime="20220704 23:23:01.764"/>
</kw>
<status status="PASS" starttime="20220704 23:23:01.759" endtime="20220704 23:23:01.764"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:01.764" endtime="20220704 23:23:01.765"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:01.768" level="INFO">${url} = boards/62c376554cad6f220f49149a</msg>
<status status="PASS" starttime="20220704 23:23:01.767" endtime="20220704 23:23:01.768"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:02.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:01.768" endtime="20220704 23:23:02.061"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:02.061" endtime="20220704 23:23:02.061"/>
</return>
<msg timestamp="20220704 23:23:02.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:01.766" endtime="20220704 23:23:02.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:02.062" endtime="20220704 23:23:02.062"/>
</return>
<status status="PASS" starttime="20220704 23:23:01.766" endtime="20220704 23:23:02.062"/>
</kw>
<status status="PASS" starttime="20220704 23:23:01.765" endtime="20220704 23:23:02.062"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:23:01.444" endtime="20220704 23:23:02.062"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:02.064" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:02.064" endtime="20220704 23:23:02.064"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:02.064" endtime="20220704 23:23:02.065"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:02.066" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:23:02.065" endtime="20220704 23:23:02.066"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:02.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:02.066" endtime="20220704 23:23:02.236"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:02.236" endtime="20220704 23:23:02.236"/>
</return>
<msg timestamp="20220704 23:23:02.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:02.063" endtime="20220704 23:23:02.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:02.237" endtime="20220704 23:23:02.237"/>
</return>
<msg timestamp="20220704 23:23:02.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:02.063" endtime="20220704 23:23:02.237"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:02.239" level="INFO">${url} = boards/62c376560a0cf9863897a5b1</msg>
<status status="PASS" starttime="20220704 23:23:02.239" endtime="20220704 23:23:02.239"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:02.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:02.239" endtime="20220704 23:23:02.542"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:02.542" endtime="20220704 23:23:02.542"/>
</return>
<msg timestamp="20220704 23:23:02.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:02.238" endtime="20220704 23:23:02.542"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:02.542" endtime="20220704 23:23:02.542"/>
</return>
<status status="PASS" starttime="20220704 23:23:02.237" endtime="20220704 23:23:02.542"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:02.545" level="INFO">${url} = boards/62c376560a0cf9863897a5b1</msg>
<status status="PASS" starttime="20220704 23:23:02.544" endtime="20220704 23:23:02.545"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:02.580" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:23:02.545" endtime="20220704 23:23:02.580"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:02.580" endtime="20220704 23:23:02.581"/>
</return>
<msg timestamp="20220704 23:23:02.581" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:23:02.544" endtime="20220704 23:23:02.581"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:02.581" endtime="20220704 23:23:02.581"/>
</return>
<status status="PASS" starttime="20220704 23:23:02.543" endtime="20220704 23:23:02.581"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:23:02.062" endtime="20220704 23:23:02.581"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:02.584" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:02.584" endtime="20220704 23:23:02.584"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:02.584" endtime="20220704 23:23:02.584"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:02.585" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:23:02.584" endtime="20220704 23:23:02.585"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:02.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:02.585" endtime="20220704 23:23:02.755"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:02.755" endtime="20220704 23:23:02.755"/>
</return>
<msg timestamp="20220704 23:23:02.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:02.583" endtime="20220704 23:23:02.755"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:02.755" endtime="20220704 23:23:02.755"/>
</return>
<msg timestamp="20220704 23:23:02.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:02.583" endtime="20220704 23:23:02.756"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:02.756" endtime="20220704 23:23:02.762"/>
</kw>
<status status="PASS" starttime="20220704 23:23:02.756" endtime="20220704 23:23:02.762"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:02.764" level="INFO">${url} = boards/62c37656ad9ed86c53b0ccf7</msg>
<status status="PASS" starttime="20220704 23:23:02.763" endtime="20220704 23:23:02.764"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:02.815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:02.764" endtime="20220704 23:23:02.816"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:02.816" endtime="20220704 23:23:02.816"/>
</return>
<msg timestamp="20220704 23:23:02.816" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:02.763" endtime="20220704 23:23:02.816"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:02.816" endtime="20220704 23:23:02.816"/>
</return>
<msg timestamp="20220704 23:23:02.816" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:02.762" endtime="20220704 23:23:02.816"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:02.817" endtime="20220704 23:23:02.822"/>
</kw>
<status status="PASS" starttime="20220704 23:23:02.817" endtime="20220704 23:23:02.822"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:02.822" endtime="20220704 23:23:02.823"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:02.826" level="INFO">${url} = boards/62c37656ad9ed86c53b0ccf7</msg>
<status status="PASS" starttime="20220704 23:23:02.825" endtime="20220704 23:23:02.826"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:03.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:02.826" endtime="20220704 23:23:03.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.121" endtime="20220704 23:23:03.121"/>
</return>
<msg timestamp="20220704 23:23:03.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:02.825" endtime="20220704 23:23:03.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.121" endtime="20220704 23:23:03.122"/>
</return>
<status status="PASS" starttime="20220704 23:23:02.824" endtime="20220704 23:23:03.122"/>
</kw>
<status status="PASS" starttime="20220704 23:23:02.824" endtime="20220704 23:23:03.122"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:23:02.582" endtime="20220704 23:23:03.122"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:03.125" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:03.124" endtime="20220704 23:23:03.125"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:03.125" endtime="20220704 23:23:03.125"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:03.126" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:23:03.125" endtime="20220704 23:23:03.126"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:03.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.126" endtime="20220704 23:23:03.299"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.299" endtime="20220704 23:23:03.300"/>
</return>
<msg timestamp="20220704 23:23:03.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.124" endtime="20220704 23:23:03.300"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.300" endtime="20220704 23:23:03.300"/>
</return>
<msg timestamp="20220704 23:23:03.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.123" endtime="20220704 23:23:03.300"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:03.301" endtime="20220704 23:23:03.306"/>
</kw>
<status status="PASS" starttime="20220704 23:23:03.300" endtime="20220704 23:23:03.306"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:03.308" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:03.308" endtime="20220704 23:23:03.308"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:03.308" endtime="20220704 23:23:03.308"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:03.309" level="INFO">${url} = boards/62c3765763834032890373c5</msg>
<status status="PASS" starttime="20220704 23:23:03.309" endtime="20220704 23:23:03.309"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:03.421" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.309" endtime="20220704 23:23:03.421"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.421" endtime="20220704 23:23:03.422"/>
</return>
<msg timestamp="20220704 23:23:03.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.307" endtime="20220704 23:23:03.422"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.423" endtime="20220704 23:23:03.423"/>
</return>
<status status="PASS" starttime="20220704 23:23:03.306" endtime="20220704 23:23:03.423"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:03.425" level="INFO">${url} = boards/62c3765763834032890373c5</msg>
<status status="PASS" starttime="20220704 23:23:03.425" endtime="20220704 23:23:03.426"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:03.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.426" endtime="20220704 23:23:03.478"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.478" endtime="20220704 23:23:03.478"/>
</return>
<msg timestamp="20220704 23:23:03.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.425" endtime="20220704 23:23:03.478"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.478" endtime="20220704 23:23:03.478"/>
</return>
<msg timestamp="20220704 23:23:03.479" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.423" endtime="20220704 23:23:03.479"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:03.479" endtime="20220704 23:23:03.480"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:03.483" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:03.482" endtime="20220704 23:23:03.483"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:03.483" endtime="20220704 23:23:03.483"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:03.484" level="INFO">${url} = boards/62c3765763834032890373c5</msg>
<status status="PASS" starttime="20220704 23:23:03.483" endtime="20220704 23:23:03.484"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:03.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.484" endtime="20220704 23:23:03.569"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.569" endtime="20220704 23:23:03.569"/>
</return>
<msg timestamp="20220704 23:23:03.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.481" endtime="20220704 23:23:03.570"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.570" endtime="20220704 23:23:03.570"/>
</return>
<status status="PASS" starttime="20220704 23:23:03.480" endtime="20220704 23:23:03.570"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:03.574" level="INFO">${url} = boards/62c3765763834032890373c5</msg>
<status status="PASS" starttime="20220704 23:23:03.573" endtime="20220704 23:23:03.574"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:03.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.574" endtime="20220704 23:23:03.622"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.622" endtime="20220704 23:23:03.622"/>
</return>
<msg timestamp="20220704 23:23:03.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.572" endtime="20220704 23:23:03.623"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.623" endtime="20220704 23:23:03.623"/>
</return>
<msg timestamp="20220704 23:23:03.623" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.570" endtime="20220704 23:23:03.624"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:03.624" endtime="20220704 23:23:03.625"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:03.630" level="INFO">${url} = boards/62c3765763834032890373c5</msg>
<status status="PASS" starttime="20220704 23:23:03.629" endtime="20220704 23:23:03.630"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:03.936" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.630" endtime="20220704 23:23:03.936"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.936" endtime="20220704 23:23:03.936"/>
</return>
<msg timestamp="20220704 23:23:03.937" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.629" endtime="20220704 23:23:03.937"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:03.937" endtime="20220704 23:23:03.937"/>
</return>
<status status="PASS" starttime="20220704 23:23:03.626" endtime="20220704 23:23:03.938"/>
</kw>
<status status="PASS" starttime="20220704 23:23:03.626" endtime="20220704 23:23:03.938"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:23:03.122" endtime="20220704 23:23:03.938"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 23:23:03.939" endtime="20220704 23:23:03.941"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 23:23:00.763" endtime="20220704 23:23:03.941"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:23:03.954" endtime="20220704 23:23:03.954"/>
</kw>
<status status="PASS" starttime="20220704 23:23:03.954" endtime="20220704 23:23:03.954"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:03.956" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:03.955" endtime="20220704 23:23:03.956"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:03.956" endtime="20220704 23:23:03.956"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:03.957" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:23:03.956" endtime="20220704 23:23:03.957"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:04.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.957" endtime="20220704 23:23:04.169"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.169" endtime="20220704 23:23:04.169"/>
</return>
<msg timestamp="20220704 23:23:04.170" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.955" endtime="20220704 23:23:04.170"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.170" endtime="20220704 23:23:04.170"/>
</return>
<msg timestamp="20220704 23:23:04.170" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:03.955" endtime="20220704 23:23:04.170"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:23:04.171" level="INFO">${TEST_SUITE_BOARD_ID} = 62c37658420494796fe6cda7</msg>
<status status="PASS" starttime="20220704 23:23:04.170" endtime="20220704 23:23:04.171"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:04.173" level="INFO">${url} = boards/62c37658420494796fe6cda7/lists/</msg>
<status status="PASS" starttime="20220704 23:23:04.172" endtime="20220704 23:23:04.173"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:04.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.173" endtime="20220704 23:23:04.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.226" endtime="20220704 23:23:04.226"/>
</return>
<msg timestamp="20220704 23:23:04.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.172" endtime="20220704 23:23:04.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.227" endtime="20220704 23:23:04.227"/>
</return>
<msg timestamp="20220704 23:23:04.227" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.171" endtime="20220704 23:23:04.227"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:23:04.228" level="INFO">${TEST_SUITE_LIST_ID} = 62c37658420494796fe6cdae</msg>
<status status="PASS" starttime="20220704 23:23:04.227" endtime="20220704 23:23:04.228"/>
</kw>
<status status="PASS" starttime="20220704 23:23:03.955" endtime="20220704 23:23:04.228"/>
</kw>
<status status="PASS" starttime="20220704 23:23:03.954" endtime="20220704 23:23:04.228"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:04.232" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:04.232" endtime="20220704 23:23:04.233"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:04.233" endtime="20220704 23:23:04.233"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:04.235" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 23:23:04.233" endtime="20220704 23:23:04.235"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:04.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.235" endtime="20220704 23:23:04.416"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.416" endtime="20220704 23:23:04.416"/>
</return>
<msg timestamp="20220704 23:23:04.416" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.230" endtime="20220704 23:23:04.416"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.416" endtime="20220704 23:23:04.416"/>
</return>
<msg timestamp="20220704 23:23:04.416" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.229" endtime="20220704 23:23:04.416"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:04.417" endtime="20220704 23:23:04.423"/>
</kw>
<status status="PASS" starttime="20220704 23:23:04.417" endtime="20220704 23:23:04.423"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:04.424" endtime="20220704 23:23:04.424"/>
</return>
<msg timestamp="20220704 23:23:04.425" level="INFO">${CARD_ID} = 62c3765824b69746f3227713</msg>
<status status="PASS" starttime="20220704 23:23:04.424" endtime="20220704 23:23:04.425"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:04.426" level="INFO">${url} = cards/62c3765824b69746f3227713</msg>
<status status="PASS" starttime="20220704 23:23:04.426" endtime="20220704 23:23:04.426"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:04.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.426" endtime="20220704 23:23:04.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.486" endtime="20220704 23:23:04.486"/>
</return>
<msg timestamp="20220704 23:23:04.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.425" endtime="20220704 23:23:04.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.486" endtime="20220704 23:23:04.486"/>
</return>
<msg timestamp="20220704 23:23:04.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.425" endtime="20220704 23:23:04.486"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:04.487" endtime="20220704 23:23:04.487"/>
</return>
<msg timestamp="20220704 23:23:04.488" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 23:23:04.487" endtime="20220704 23:23:04.488"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:04.488" endtime="20220704 23:23:04.488"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:04.490" level="INFO">${url} = cards/62c3765824b69746f3227713</msg>
<status status="PASS" starttime="20220704 23:23:04.490" endtime="20220704 23:23:04.490"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:04.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.490" endtime="20220704 23:23:04.639"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.640" endtime="20220704 23:23:04.640"/>
</return>
<msg timestamp="20220704 23:23:04.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.489" endtime="20220704 23:23:04.640"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.640" endtime="20220704 23:23:04.640"/>
</return>
<status status="PASS" starttime="20220704 23:23:04.489" endtime="20220704 23:23:04.640"/>
</kw>
<status status="PASS" starttime="20220704 23:23:04.488" endtime="20220704 23:23:04.640"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:23:04.228" endtime="20220704 23:23:04.640"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:04.643" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:04.643" endtime="20220704 23:23:04.643"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:04.644" endtime="20220704 23:23:04.644"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:04.645" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 23:23:04.644" endtime="20220704 23:23:04.645"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:04.854" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.645" endtime="20220704 23:23:04.854"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.854" endtime="20220704 23:23:04.854"/>
</return>
<msg timestamp="20220704 23:23:04.854" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.642" endtime="20220704 23:23:04.854"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.855" endtime="20220704 23:23:04.855"/>
</return>
<msg timestamp="20220704 23:23:04.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.642" endtime="20220704 23:23:04.855"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:04.855" endtime="20220704 23:23:04.855"/>
</return>
<msg timestamp="20220704 23:23:04.856" level="INFO">${CARD_ID} = 62c376587bc2f9567b963977</msg>
<status status="PASS" starttime="20220704 23:23:04.855" endtime="20220704 23:23:04.856"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:04.859" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:04.858" endtime="20220704 23:23:04.859"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:04.859" endtime="20220704 23:23:04.859"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:04.860" level="INFO">${url} = cards/62c376587bc2f9567b963977</msg>
<status status="PASS" starttime="20220704 23:23:04.860" endtime="20220704 23:23:04.860"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:04.982" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.860" endtime="20220704 23:23:04.982"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.982" endtime="20220704 23:23:04.982"/>
</return>
<msg timestamp="20220704 23:23:04.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.858" endtime="20220704 23:23:04.983"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.983" endtime="20220704 23:23:04.983"/>
</return>
<msg timestamp="20220704 23:23:04.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.857" endtime="20220704 23:23:04.983"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:04.983" endtime="20220704 23:23:04.983"/>
</return>
<status status="PASS" starttime="20220704 23:23:04.856" endtime="20220704 23:23:04.984"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:04.986" level="INFO">${url} = cards/62c376587bc2f9567b963977</msg>
<status status="PASS" starttime="20220704 23:23:04.986" endtime="20220704 23:23:04.986"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:05.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.986" endtime="20220704 23:23:05.047"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.048" endtime="20220704 23:23:05.048"/>
</return>
<msg timestamp="20220704 23:23:05.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.985" endtime="20220704 23:23:05.048"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.048" endtime="20220704 23:23:05.048"/>
</return>
<msg timestamp="20220704 23:23:05.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:04.984" endtime="20220704 23:23:05.048"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:05.049" endtime="20220704 23:23:05.049"/>
</return>
<msg timestamp="20220704 23:23:05.050" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 23:23:05.048" endtime="20220704 23:23:05.050"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 23:23:05.050" endtime="20220704 23:23:05.050"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:05.052" level="INFO">${url} = cards/62c376587bc2f9567b963977</msg>
<status status="PASS" starttime="20220704 23:23:05.052" endtime="20220704 23:23:05.052"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:05.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.052" endtime="20220704 23:23:05.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.185" endtime="20220704 23:23:05.185"/>
</return>
<msg timestamp="20220704 23:23:05.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.051" endtime="20220704 23:23:05.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.185" endtime="20220704 23:23:05.185"/>
</return>
<status status="PASS" starttime="20220704 23:23:05.051" endtime="20220704 23:23:05.186"/>
</kw>
<status status="PASS" starttime="20220704 23:23:05.050" endtime="20220704 23:23:05.186"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:23:04.641" endtime="20220704 23:23:05.186"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:05.189" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:05.189" endtime="20220704 23:23:05.189"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:05.189" endtime="20220704 23:23:05.189"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:05.190" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 23:23:05.190" endtime="20220704 23:23:05.190"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:05.373" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.190" endtime="20220704 23:23:05.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.373" endtime="20220704 23:23:05.373"/>
</return>
<msg timestamp="20220704 23:23:05.373" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.188" endtime="20220704 23:23:05.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.373" endtime="20220704 23:23:05.373"/>
</return>
<msg timestamp="20220704 23:23:05.374" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.187" endtime="20220704 23:23:05.374"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:05.374" endtime="20220704 23:23:05.374"/>
</return>
<msg timestamp="20220704 23:23:05.375" level="INFO">${CARD_ID} = 62c37659c9b7151fc81b723d</msg>
<status status="PASS" starttime="20220704 23:23:05.374" endtime="20220704 23:23:05.375"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:05.377" level="INFO">${url} = cards/62c37659c9b7151fc81b723d</msg>
<status status="PASS" starttime="20220704 23:23:05.376" endtime="20220704 23:23:05.377"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:05.513" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.377" endtime="20220704 23:23:05.513"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.513" endtime="20220704 23:23:05.513"/>
</return>
<msg timestamp="20220704 23:23:05.514" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.376" endtime="20220704 23:23:05.514"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.514" endtime="20220704 23:23:05.514"/>
</return>
<msg timestamp="20220704 23:23:05.514" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.375" endtime="20220704 23:23:05.514"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:05.515" endtime="20220704 23:23:05.517"/>
</kw>
<status status="PASS" starttime="20220704 23:23:05.514" endtime="20220704 23:23:05.517"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:05.519" level="INFO">${url} = cards/62c37659c9b7151fc81b723d</msg>
<status status="PASS" starttime="20220704 23:23:05.518" endtime="20220704 23:23:05.519"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:05.564" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:23:05.519" endtime="20220704 23:23:05.564"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.564" endtime="20220704 23:23:05.564"/>
</return>
<msg timestamp="20220704 23:23:05.564" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:23:05.518" endtime="20220704 23:23:05.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.565" endtime="20220704 23:23:05.565"/>
</return>
<status status="PASS" starttime="20220704 23:23:05.517" endtime="20220704 23:23:05.565"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:23:05.186" endtime="20220704 23:23:05.565"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:05.568" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:05.568" endtime="20220704 23:23:05.568"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:05.568" endtime="20220704 23:23:05.569"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:05.569" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 23:23:05.569" endtime="20220704 23:23:05.569"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:05.724" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.570" endtime="20220704 23:23:05.724"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.725" endtime="20220704 23:23:05.725"/>
</return>
<msg timestamp="20220704 23:23:05.725" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.567" endtime="20220704 23:23:05.725"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.725" endtime="20220704 23:23:05.725"/>
</return>
<msg timestamp="20220704 23:23:05.725" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.567" endtime="20220704 23:23:05.725"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:05.726" endtime="20220704 23:23:05.726"/>
</return>
<msg timestamp="20220704 23:23:05.727" level="INFO">${CARD_ID} = 62c3765915cba818958cfcda</msg>
<status status="PASS" starttime="20220704 23:23:05.725" endtime="20220704 23:23:05.727"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:05.728" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:05.728" endtime="20220704 23:23:05.728"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:05.729" endtime="20220704 23:23:05.729"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:05.729" level="INFO">${url} = cards/62c3765915cba818958cfcda</msg>
<status status="PASS" starttime="20220704 23:23:05.729" endtime="20220704 23:23:05.729"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:05.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.729" endtime="20220704 23:23:05.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.878" endtime="20220704 23:23:05.878"/>
</return>
<msg timestamp="20220704 23:23:05.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.728" endtime="20220704 23:23:05.879"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.879" endtime="20220704 23:23:05.879"/>
</return>
<msg timestamp="20220704 23:23:05.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.727" endtime="20220704 23:23:05.879"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:05.880" endtime="20220704 23:23:05.887"/>
</kw>
<status status="PASS" starttime="20220704 23:23:05.880" endtime="20220704 23:23:05.887"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:05.888" level="INFO">${url} = cards/62c3765915cba818958cfcda</msg>
<status status="PASS" starttime="20220704 23:23:05.888" endtime="20220704 23:23:05.888"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:05.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.889" endtime="20220704 23:23:05.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.951" endtime="20220704 23:23:05.951"/>
</return>
<msg timestamp="20220704 23:23:05.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.888" endtime="20220704 23:23:05.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:05.951" endtime="20220704 23:23:05.951"/>
</return>
<msg timestamp="20220704 23:23:05.952" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.887" endtime="20220704 23:23:05.952"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:05.952" endtime="20220704 23:23:05.952"/>
</return>
<msg timestamp="20220704 23:23:05.953" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 23:23:05.952" endtime="20220704 23:23:05.953"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:05.953" endtime="20220704 23:23:05.954"/>
</return>
<msg timestamp="20220704 23:23:05.954" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 23:23:05.953" endtime="20220704 23:23:05.954"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:05.954" endtime="20220704 23:23:05.955"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:05.955" endtime="20220704 23:23:05.955"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:05.957" level="INFO">${url} = cards/62c3765915cba818958cfcda</msg>
<status status="PASS" starttime="20220704 23:23:05.957" endtime="20220704 23:23:05.957"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:06.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.957" endtime="20220704 23:23:06.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:06.099" endtime="20220704 23:23:06.100"/>
</return>
<msg timestamp="20220704 23:23:06.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:05.956" endtime="20220704 23:23:06.100"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:06.100" endtime="20220704 23:23:06.100"/>
</return>
<status status="PASS" starttime="20220704 23:23:05.956" endtime="20220704 23:23:06.100"/>
</kw>
<status status="PASS" starttime="20220704 23:23:05.955" endtime="20220704 23:23:06.100"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:23:05.566" endtime="20220704 23:23:06.100"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:06.104" level="INFO">${url} = boards/62c37658420494796fe6cda7</msg>
<status status="PASS" starttime="20220704 23:23:06.104" endtime="20220704 23:23:06.104"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:06.397" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.104" endtime="20220704 23:23:06.397"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:06.397" endtime="20220704 23:23:06.397"/>
</return>
<msg timestamp="20220704 23:23:06.398" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.103" endtime="20220704 23:23:06.398"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:06.398" endtime="20220704 23:23:06.398"/>
</return>
<status status="PASS" starttime="20220704 23:23:06.102" endtime="20220704 23:23:06.398"/>
</kw>
<status status="PASS" starttime="20220704 23:23:06.102" endtime="20220704 23:23:06.398"/>
</kw>
<status status="PASS" starttime="20220704 23:23:06.102" endtime="20220704 23:23:06.398"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 23:23:06.399" endtime="20220704 23:23:06.400"/>
</kw>
<status status="PASS" starttime="20220704 23:23:06.101" endtime="20220704 23:23:06.400"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 23:23:03.942" endtime="20220704 23:23:06.400"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:23:06.413" endtime="20220704 23:23:06.414"/>
</kw>
<status status="PASS" starttime="20220704 23:23:06.413" endtime="20220704 23:23:06.414"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:06.415" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:06.415" endtime="20220704 23:23:06.415"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:06.415" endtime="20220704 23:23:06.415"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:06.416" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:23:06.416" endtime="20220704 23:23:06.416"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:06.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.416" endtime="20220704 23:23:06.645"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:06.645" endtime="20220704 23:23:06.645"/>
</return>
<msg timestamp="20220704 23:23:06.646" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.414" endtime="20220704 23:23:06.646"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:06.646" endtime="20220704 23:23:06.646"/>
</return>
<msg timestamp="20220704 23:23:06.646" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.414" endtime="20220704 23:23:06.646"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:23:06.647" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3765a90ef1b2bd934daa2</msg>
<status status="PASS" starttime="20220704 23:23:06.646" endtime="20220704 23:23:06.647"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:06.648" level="INFO">${url} = boards/62c3765a90ef1b2bd934daa2/lists/</msg>
<status status="PASS" starttime="20220704 23:23:06.648" endtime="20220704 23:23:06.648"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:06.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.648" endtime="20220704 23:23:06.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:06.704" endtime="20220704 23:23:06.704"/>
</return>
<msg timestamp="20220704 23:23:06.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.648" endtime="20220704 23:23:06.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:06.704" endtime="20220704 23:23:06.705"/>
</return>
<msg timestamp="20220704 23:23:06.705" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.647" endtime="20220704 23:23:06.705"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:23:06.707" level="INFO">${TEST_SUITE_LIST_ID} = 62c3765a90ef1b2bd934daa9</msg>
<status status="PASS" starttime="20220704 23:23:06.705" endtime="20220704 23:23:06.707"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:06.709" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:06.709" endtime="20220704 23:23:06.709"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:06.710" endtime="20220704 23:23:06.710"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:06.711" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 23:23:06.710" endtime="20220704 23:23:06.711"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:06.874" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.711" endtime="20220704 23:23:06.874"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:06.874" endtime="20220704 23:23:06.874"/>
</return>
<msg timestamp="20220704 23:23:06.874" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.708" endtime="20220704 23:23:06.874"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:06.874" endtime="20220704 23:23:06.874"/>
</return>
<msg timestamp="20220704 23:23:06.874" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.707" endtime="20220704 23:23:06.875"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:23:06.877" level="INFO">${TEST_SUITE_CARD_ID} = 62c3765a479d24473f1845ad</msg>
<status status="PASS" starttime="20220704 23:23:06.876" endtime="20220704 23:23:06.877"/>
</kw>
<status status="PASS" starttime="20220704 23:23:06.414" endtime="20220704 23:23:06.877"/>
</kw>
<status status="PASS" starttime="20220704 23:23:06.412" endtime="20220704 23:23:06.877"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:06.880" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:06.879" endtime="20220704 23:23:06.880"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:06.880" endtime="20220704 23:23:06.880"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:06.881" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 23:23:06.880" endtime="20220704 23:23:06.881"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:06.980" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.881" endtime="20220704 23:23:06.980"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:06.980" endtime="20220704 23:23:06.980"/>
</return>
<msg timestamp="20220704 23:23:06.980" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.879" endtime="20220704 23:23:06.980"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:06.980" endtime="20220704 23:23:06.980"/>
</return>
<msg timestamp="20220704 23:23:06.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.878" endtime="20220704 23:23:06.981"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:06.981" endtime="20220704 23:23:06.981"/>
</return>
<msg timestamp="20220704 23:23:06.982" level="INFO">${checklist_id} = 62c3765a6697db51656f5044</msg>
<status status="PASS" starttime="20220704 23:23:06.981" endtime="20220704 23:23:06.982"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:06.983" level="INFO">${url} = checklists/62c3765a6697db51656f5044</msg>
<status status="PASS" starttime="20220704 23:23:06.983" endtime="20220704 23:23:06.983"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:07.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.984" endtime="20220704 23:23:07.036"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.036" endtime="20220704 23:23:07.036"/>
</return>
<msg timestamp="20220704 23:23:07.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.982" endtime="20220704 23:23:07.037"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.037" endtime="20220704 23:23:07.037"/>
</return>
<msg timestamp="20220704 23:23:07.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:06.982" endtime="20220704 23:23:07.037"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:07.038" endtime="20220704 23:23:07.038"/>
</return>
<msg timestamp="20220704 23:23:07.039" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 23:23:07.037" endtime="20220704 23:23:07.039"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:07.039" endtime="20220704 23:23:07.039"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:07.041" level="INFO">${url} = checklists/62c3765a6697db51656f5044</msg>
<status status="PASS" starttime="20220704 23:23:07.040" endtime="20220704 23:23:07.041"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:07.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.041" endtime="20220704 23:23:07.165"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.165" endtime="20220704 23:23:07.165"/>
</return>
<msg timestamp="20220704 23:23:07.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.040" endtime="20220704 23:23:07.165"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.165" endtime="20220704 23:23:07.165"/>
</return>
<status status="PASS" starttime="20220704 23:23:07.039" endtime="20220704 23:23:07.165"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:23:06.877" endtime="20220704 23:23:07.166"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:07.169" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:07.169" endtime="20220704 23:23:07.169"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:07.170" endtime="20220704 23:23:07.170"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:07.171" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 23:23:07.170" endtime="20220704 23:23:07.171"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:07.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.171" endtime="20220704 23:23:07.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.308" endtime="20220704 23:23:07.308"/>
</return>
<msg timestamp="20220704 23:23:07.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.168" endtime="20220704 23:23:07.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.308" endtime="20220704 23:23:07.308"/>
</return>
<msg timestamp="20220704 23:23:07.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.167" endtime="20220704 23:23:07.309"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:07.309" endtime="20220704 23:23:07.309"/>
</return>
<msg timestamp="20220704 23:23:07.311" level="INFO">${checklist_id} = 62c3765bc2d1c332dc69aa46</msg>
<status status="PASS" starttime="20220704 23:23:07.309" endtime="20220704 23:23:07.311"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:07.312" level="INFO">${url} = checklists/62c3765bc2d1c332dc69aa46</msg>
<status status="PASS" starttime="20220704 23:23:07.312" endtime="20220704 23:23:07.312"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:07.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.312" endtime="20220704 23:23:07.415"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.415" endtime="20220704 23:23:07.415"/>
</return>
<msg timestamp="20220704 23:23:07.416" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.311" endtime="20220704 23:23:07.416"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.416" endtime="20220704 23:23:07.416"/>
</return>
<msg timestamp="20220704 23:23:07.416" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.311" endtime="20220704 23:23:07.416"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:07.417" endtime="20220704 23:23:07.421"/>
</kw>
<status status="PASS" starttime="20220704 23:23:07.417" endtime="20220704 23:23:07.421"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:07.422" level="INFO">${url} = checklists/62c3765bc2d1c332dc69aa46</msg>
<status status="PASS" starttime="20220704 23:23:07.422" endtime="20220704 23:23:07.422"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:07.466" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:23:07.423" endtime="20220704 23:23:07.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.466" endtime="20220704 23:23:07.467"/>
</return>
<msg timestamp="20220704 23:23:07.471" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:23:07.421" endtime="20220704 23:23:07.471"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.471" endtime="20220704 23:23:07.471"/>
</return>
<status status="PASS" starttime="20220704 23:23:07.421" endtime="20220704 23:23:07.471"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:23:07.166" endtime="20220704 23:23:07.472"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:07.478" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:07.476" endtime="20220704 23:23:07.478"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:07.479" endtime="20220704 23:23:07.479"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:07.481" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 23:23:07.480" endtime="20220704 23:23:07.481"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:07.584" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.481" endtime="20220704 23:23:07.584"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.584" endtime="20220704 23:23:07.584"/>
</return>
<msg timestamp="20220704 23:23:07.585" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.475" endtime="20220704 23:23:07.585"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.585" endtime="20220704 23:23:07.585"/>
</return>
<msg timestamp="20220704 23:23:07.585" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.473" endtime="20220704 23:23:07.585"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:07.586" endtime="20220704 23:23:07.586"/>
</return>
<msg timestamp="20220704 23:23:07.586" level="INFO">${checklist_id} = 62c3765bc380c60b241529a9</msg>
<status status="PASS" starttime="20220704 23:23:07.585" endtime="20220704 23:23:07.586"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:07.588" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:07.588" endtime="20220704 23:23:07.588"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:07.588" endtime="20220704 23:23:07.588"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:07.589" level="INFO">${url} = checklists/62c3765bc380c60b241529a9</msg>
<status status="PASS" starttime="20220704 23:23:07.588" endtime="20220704 23:23:07.589"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:07.665" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.589" endtime="20220704 23:23:07.665"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.665" endtime="20220704 23:23:07.665"/>
</return>
<msg timestamp="20220704 23:23:07.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.587" endtime="20220704 23:23:07.666"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.666" endtime="20220704 23:23:07.666"/>
</return>
<msg timestamp="20220704 23:23:07.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.587" endtime="20220704 23:23:07.666"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:07.668" level="INFO">${url} = checklists/62c3765bc380c60b241529a9</msg>
<status status="PASS" starttime="20220704 23:23:07.667" endtime="20220704 23:23:07.668"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:07.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.668" endtime="20220704 23:23:07.719"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.719" endtime="20220704 23:23:07.719"/>
</return>
<msg timestamp="20220704 23:23:07.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.667" endtime="20220704 23:23:07.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.720" endtime="20220704 23:23:07.720"/>
</return>
<msg timestamp="20220704 23:23:07.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.666" endtime="20220704 23:23:07.720"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:07.721" endtime="20220704 23:23:07.721"/>
</return>
<msg timestamp="20220704 23:23:07.722" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 23:23:07.720" endtime="20220704 23:23:07.722"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:07.722" endtime="20220704 23:23:07.723"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:07.739" level="INFO">${url} = checklists/62c3765bc380c60b241529a9</msg>
<status status="PASS" starttime="20220704 23:23:07.738" endtime="20220704 23:23:07.739"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:07.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.739" endtime="20220704 23:23:07.842"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.842" endtime="20220704 23:23:07.842"/>
</return>
<msg timestamp="20220704 23:23:07.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.738" endtime="20220704 23:23:07.842"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:07.842" endtime="20220704 23:23:07.842"/>
</return>
<status status="PASS" starttime="20220704 23:23:07.723" endtime="20220704 23:23:07.842"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:23:07.472" endtime="20220704 23:23:07.842"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:07.846" level="INFO">${url} = boards/62c3765a90ef1b2bd934daa2</msg>
<status status="PASS" starttime="20220704 23:23:07.845" endtime="20220704 23:23:07.846"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:08.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.846" endtime="20220704 23:23:08.181"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.181" endtime="20220704 23:23:08.181"/>
</return>
<msg timestamp="20220704 23:23:08.182" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:07.845" endtime="20220704 23:23:08.182"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.182" endtime="20220704 23:23:08.182"/>
</return>
<status status="PASS" starttime="20220704 23:23:07.844" endtime="20220704 23:23:08.182"/>
</kw>
<status status="PASS" starttime="20220704 23:23:07.844" endtime="20220704 23:23:08.182"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 23:23:08.182" endtime="20220704 23:23:08.184"/>
</kw>
<status status="PASS" starttime="20220704 23:23:07.844" endtime="20220704 23:23:08.184"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 23:23:06.402" endtime="20220704 23:23:08.184"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:23:08.198" endtime="20220704 23:23:08.198"/>
</kw>
<status status="PASS" starttime="20220704 23:23:08.198" endtime="20220704 23:23:08.199"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:08.200" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:08.200" endtime="20220704 23:23:08.200"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:08.200" endtime="20220704 23:23:08.200"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:08.201" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:23:08.200" endtime="20220704 23:23:08.201"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:08.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.201" endtime="20220704 23:23:08.379"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.379" endtime="20220704 23:23:08.379"/>
</return>
<msg timestamp="20220704 23:23:08.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.199" endtime="20220704 23:23:08.379"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.379" endtime="20220704 23:23:08.379"/>
</return>
<msg timestamp="20220704 23:23:08.380" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.199" endtime="20220704 23:23:08.380"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:23:08.381" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3765c67b4131ceefb8719</msg>
<status status="PASS" starttime="20220704 23:23:08.380" endtime="20220704 23:23:08.381"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:08.431" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.381" endtime="20220704 23:23:08.431"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:23:08.434" level="INFO">${TEST_SUITE_LIST_ID} = 62c3765c67b4131ceefb8720</msg>
<status status="PASS" starttime="20220704 23:23:08.432" endtime="20220704 23:23:08.434"/>
</kw>
<status status="PASS" starttime="20220704 23:23:08.199" endtime="20220704 23:23:08.434"/>
</kw>
<status status="PASS" starttime="20220704 23:23:08.198" endtime="20220704 23:23:08.434"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:08.436" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:08.436" endtime="20220704 23:23:08.436"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:08.436" endtime="20220704 23:23:08.437"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:08.437" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 23:23:08.437" endtime="20220704 23:23:08.437"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:08.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.438" endtime="20220704 23:23:08.512"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.512" endtime="20220704 23:23:08.513"/>
</return>
<msg timestamp="20220704 23:23:08.513" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.435" endtime="20220704 23:23:08.513"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.513" endtime="20220704 23:23:08.513"/>
</return>
<msg timestamp="20220704 23:23:08.513" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.435" endtime="20220704 23:23:08.513"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:08.514" endtime="20220704 23:23:08.516"/>
</kw>
<status status="PASS" starttime="20220704 23:23:08.514" endtime="20220704 23:23:08.516"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:08.517" endtime="20220704 23:23:08.517"/>
</return>
<msg timestamp="20220704 23:23:08.518" level="INFO">${LABEL_ID} = 62c3765c33914c45a25ea457</msg>
<status status="PASS" starttime="20220704 23:23:08.517" endtime="20220704 23:23:08.518"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:08.519" level="INFO">${url} = labels/62c3765c33914c45a25ea457</msg>
<status status="PASS" starttime="20220704 23:23:08.519" endtime="20220704 23:23:08.519"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:08.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.519" endtime="20220704 23:23:08.581"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.581" endtime="20220704 23:23:08.581"/>
</return>
<msg timestamp="20220704 23:23:08.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.518" endtime="20220704 23:23:08.582"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.582" endtime="20220704 23:23:08.582"/>
</return>
<msg timestamp="20220704 23:23:08.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.518" endtime="20220704 23:23:08.582"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:08.583" endtime="20220704 23:23:08.583"/>
</return>
<msg timestamp="20220704 23:23:08.585" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 23:23:08.583" endtime="20220704 23:23:08.585"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:08.585" endtime="20220704 23:23:08.585"/>
</return>
<msg timestamp="20220704 23:23:08.586" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 23:23:08.585" endtime="20220704 23:23:08.586"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:08.586" endtime="20220704 23:23:08.587"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:08.587" endtime="20220704 23:23:08.587"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:08.589" level="INFO">${url} = labels/62c3765c33914c45a25ea457</msg>
<status status="PASS" starttime="20220704 23:23:08.588" endtime="20220704 23:23:08.589"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:08.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.589" endtime="20220704 23:23:08.705"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.705" endtime="20220704 23:23:08.705"/>
</return>
<msg timestamp="20220704 23:23:08.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.588" endtime="20220704 23:23:08.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.706" endtime="20220704 23:23:08.706"/>
</return>
<status status="PASS" starttime="20220704 23:23:08.587" endtime="20220704 23:23:08.706"/>
</kw>
<status status="PASS" starttime="20220704 23:23:08.587" endtime="20220704 23:23:08.706"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:23:08.434" endtime="20220704 23:23:08.706"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:08.710" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:08.709" endtime="20220704 23:23:08.710"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:08.710" endtime="20220704 23:23:08.710"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:08.711" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 23:23:08.710" endtime="20220704 23:23:08.711"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:08.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.711" endtime="20220704 23:23:08.798"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.798" endtime="20220704 23:23:08.798"/>
</return>
<msg timestamp="20220704 23:23:08.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.709" endtime="20220704 23:23:08.798"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.799" endtime="20220704 23:23:08.799"/>
</return>
<msg timestamp="20220704 23:23:08.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.708" endtime="20220704 23:23:08.799"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:08.800" endtime="20220704 23:23:08.802"/>
</kw>
<status status="PASS" starttime="20220704 23:23:08.799" endtime="20220704 23:23:08.802"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:08.802" endtime="20220704 23:23:08.802"/>
</return>
<msg timestamp="20220704 23:23:08.803" level="INFO">${LABEL_ID} = 62c3765c9c72248d107b7c85</msg>
<status status="PASS" starttime="20220704 23:23:08.802" endtime="20220704 23:23:08.803"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:08.805" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:08.804" endtime="20220704 23:23:08.805"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:08.805" endtime="20220704 23:23:08.805"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:08.805" level="INFO">${url} = labels/62c3765c9c72248d107b7c85</msg>
<status status="PASS" starttime="20220704 23:23:08.805" endtime="20220704 23:23:08.805"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:08.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.805" endtime="20220704 23:23:08.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.893" endtime="20220704 23:23:08.893"/>
</return>
<msg timestamp="20220704 23:23:08.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.804" endtime="20220704 23:23:08.894"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:08.894" endtime="20220704 23:23:08.894"/>
</return>
<msg timestamp="20220704 23:23:08.894" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.803" endtime="20220704 23:23:08.894"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:08.895" endtime="20220704 23:23:08.895"/>
</return>
<msg timestamp="20220704 23:23:08.897" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 23:23:08.895" endtime="20220704 23:23:08.897"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:08.898" endtime="20220704 23:23:08.898"/>
</return>
<msg timestamp="20220704 23:23:08.899" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 23:23:08.897" endtime="20220704 23:23:08.899"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:08.899" endtime="20220704 23:23:08.900"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:08.900" endtime="20220704 23:23:08.900"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:08.903" level="INFO">${url} = labels/62c3765c9c72248d107b7c85</msg>
<status status="PASS" starttime="20220704 23:23:08.902" endtime="20220704 23:23:08.903"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:09.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.903" endtime="20220704 23:23:09.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.024" endtime="20220704 23:23:09.024"/>
</return>
<msg timestamp="20220704 23:23:09.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:08.901" endtime="20220704 23:23:09.025"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.025" endtime="20220704 23:23:09.025"/>
</return>
<status status="PASS" starttime="20220704 23:23:08.901" endtime="20220704 23:23:09.025"/>
</kw>
<status status="PASS" starttime="20220704 23:23:08.900" endtime="20220704 23:23:09.025"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:23:08.707" endtime="20220704 23:23:09.025"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:09.030" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:09.029" endtime="20220704 23:23:09.030"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:09.030" endtime="20220704 23:23:09.030"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:09.032" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 23:23:09.030" endtime="20220704 23:23:09.032"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:09.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.032" endtime="20220704 23:23:09.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.112" endtime="20220704 23:23:09.112"/>
</return>
<msg timestamp="20220704 23:23:09.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.028" endtime="20220704 23:23:09.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.113" endtime="20220704 23:23:09.113"/>
</return>
<msg timestamp="20220704 23:23:09.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.027" endtime="20220704 23:23:09.113"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:23:09.114" endtime="20220704 23:23:09.114"/>
</return>
<msg timestamp="20220704 23:23:09.114" level="INFO">${LABEL_ID} = 62c3765d411e258d85920aae</msg>
<status status="PASS" starttime="20220704 23:23:09.113" endtime="20220704 23:23:09.114"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:09.116" level="INFO">${url} = labels/62c3765d411e258d85920aae</msg>
<status status="PASS" starttime="20220704 23:23:09.116" endtime="20220704 23:23:09.117"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:09.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.117" endtime="20220704 23:23:09.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.248" endtime="20220704 23:23:09.249"/>
</return>
<msg timestamp="20220704 23:23:09.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.116" endtime="20220704 23:23:09.249"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.249" endtime="20220704 23:23:09.249"/>
</return>
<status status="PASS" starttime="20220704 23:23:09.115" endtime="20220704 23:23:09.249"/>
</kw>
<status status="PASS" starttime="20220704 23:23:09.115" endtime="20220704 23:23:09.250"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:09.252" level="INFO">${url} = labels/62c3765d411e258d85920aae</msg>
<status status="PASS" starttime="20220704 23:23:09.251" endtime="20220704 23:23:09.252"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:09.291" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:23:09.252" endtime="20220704 23:23:09.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.291" endtime="20220704 23:23:09.291"/>
</return>
<msg timestamp="20220704 23:23:09.292" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:23:09.250" endtime="20220704 23:23:09.292"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.292" endtime="20220704 23:23:09.292"/>
</return>
<status status="PASS" starttime="20220704 23:23:09.250" endtime="20220704 23:23:09.292"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:23:09.026" endtime="20220704 23:23:09.292"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:09.296" level="INFO">${url} = boards/62c3765c67b4131ceefb8719</msg>
<status status="PASS" starttime="20220704 23:23:09.296" endtime="20220704 23:23:09.296"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:09.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.297" endtime="20220704 23:23:09.619"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.619" endtime="20220704 23:23:09.619"/>
</return>
<msg timestamp="20220704 23:23:09.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.295" endtime="20220704 23:23:09.620"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.620" endtime="20220704 23:23:09.620"/>
</return>
<status status="PASS" starttime="20220704 23:23:09.295" endtime="20220704 23:23:09.620"/>
</kw>
<status status="PASS" starttime="20220704 23:23:09.294" endtime="20220704 23:23:09.620"/>
</kw>
<status status="PASS" starttime="20220704 23:23:09.294" endtime="20220704 23:23:09.620"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 23:23:09.621" endtime="20220704 23:23:09.622"/>
</kw>
<status status="PASS" starttime="20220704 23:23:09.294" endtime="20220704 23:23:09.622"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 23:23:08.186" endtime="20220704 23:23:09.622"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:23:09.636" endtime="20220704 23:23:09.637"/>
</kw>
<status status="PASS" starttime="20220704 23:23:09.636" endtime="20220704 23:23:09.637"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:09.638" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:09.638" endtime="20220704 23:23:09.638"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:09.638" endtime="20220704 23:23:09.638"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:09.639" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:23:09.639" endtime="20220704 23:23:09.639"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:09.820" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.639" endtime="20220704 23:23:09.820"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.820" endtime="20220704 23:23:09.821"/>
</return>
<msg timestamp="20220704 23:23:09.821" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.637" endtime="20220704 23:23:09.821"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.821" endtime="20220704 23:23:09.821"/>
</return>
<msg timestamp="20220704 23:23:09.821" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.637" endtime="20220704 23:23:09.821"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:23:09.823" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3765d5e2773466a9ef15e</msg>
<status status="PASS" starttime="20220704 23:23:09.822" endtime="20220704 23:23:09.823"/>
</kw>
<status status="PASS" starttime="20220704 23:23:09.821" endtime="20220704 23:23:09.823"/>
</kw>
<status status="PASS" starttime="20220704 23:23:09.637" endtime="20220704 23:23:09.823"/>
</kw>
<status status="PASS" starttime="20220704 23:23:09.636" endtime="20220704 23:23:09.823"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:09.826" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:09.826" endtime="20220704 23:23:09.826"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:09.826" endtime="20220704 23:23:09.827"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:09.828" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 23:23:09.827" endtime="20220704 23:23:09.828"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:09.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.829" endtime="20220704 23:23:09.940"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.940" endtime="20220704 23:23:09.940"/>
</return>
<msg timestamp="20220704 23:23:09.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.825" endtime="20220704 23:23:09.941"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:09.941" endtime="20220704 23:23:09.941"/>
</return>
<msg timestamp="20220704 23:23:09.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.824" endtime="20220704 23:23:09.941"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:09.942" endtime="20220704 23:23:09.945"/>
</kw>
<status status="PASS" starttime="20220704 23:23:09.941" endtime="20220704 23:23:09.945"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:23:09.823" endtime="20220704 23:23:09.945"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:09.948" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:09.948" endtime="20220704 23:23:09.948"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:09.948" endtime="20220704 23:23:09.948"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:09.949" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 23:23:09.948" endtime="20220704 23:23:09.949"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:10.066" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.949" endtime="20220704 23:23:10.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.067" endtime="20220704 23:23:10.067"/>
</return>
<msg timestamp="20220704 23:23:10.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.947" endtime="20220704 23:23:10.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.067" endtime="20220704 23:23:10.067"/>
</return>
<msg timestamp="20220704 23:23:10.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:09.947" endtime="20220704 23:23:10.067"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:10.068" endtime="20220704 23:23:10.070"/>
</kw>
<status status="PASS" starttime="20220704 23:23:10.067" endtime="20220704 23:23:10.070"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:10.072" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:10.072" endtime="20220704 23:23:10.072"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:10.073" endtime="20220704 23:23:10.073"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:10.073" level="INFO">${url} = lists/62c3765e3831d35fd1be7137</msg>
<status status="PASS" starttime="20220704 23:23:10.073" endtime="20220704 23:23:10.073"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:10.154" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.073" endtime="20220704 23:23:10.154"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.154" endtime="20220704 23:23:10.154"/>
</return>
<msg timestamp="20220704 23:23:10.154" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.071" endtime="20220704 23:23:10.154"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.154" endtime="20220704 23:23:10.154"/>
</return>
<status status="PASS" starttime="20220704 23:23:10.070" endtime="20220704 23:23:10.155"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:10.157" level="INFO">${url} = lists/62c3765e3831d35fd1be7137</msg>
<status status="PASS" starttime="20220704 23:23:10.157" endtime="20220704 23:23:10.157"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:10.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.157" endtime="20220704 23:23:10.203"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.203" endtime="20220704 23:23:10.204"/>
</return>
<msg timestamp="20220704 23:23:10.204" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.156" endtime="20220704 23:23:10.204"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.204" endtime="20220704 23:23:10.204"/>
</return>
<msg timestamp="20220704 23:23:10.204" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.155" endtime="20220704 23:23:10.204"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:23:10.205" endtime="20220704 23:23:10.207"/>
</kw>
<status status="PASS" starttime="20220704 23:23:10.204" endtime="20220704 23:23:10.207"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:23:10.207" endtime="20220704 23:23:10.208"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:23:09.946" endtime="20220704 23:23:10.208"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:10.212" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:10.212" endtime="20220704 23:23:10.212"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:10.212" endtime="20220704 23:23:10.213"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:10.213" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 23:23:10.213" endtime="20220704 23:23:10.213"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:10.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.214" endtime="20220704 23:23:10.312"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.312" endtime="20220704 23:23:10.312"/>
</return>
<msg timestamp="20220704 23:23:10.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.211" endtime="20220704 23:23:10.312"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.312" endtime="20220704 23:23:10.312"/>
</return>
<msg timestamp="20220704 23:23:10.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.209" endtime="20220704 23:23:10.313"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:23:10.316" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:23:10.316" endtime="20220704 23:23:10.316"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:23:10.316" endtime="20220704 23:23:10.316"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:10.317" level="INFO">${url} = lists/62c3765e70f9dc2c80781bc0/closed</msg>
<status status="PASS" starttime="20220704 23:23:10.317" endtime="20220704 23:23:10.317"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:23:10.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.317" endtime="20220704 23:23:10.399"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.399" endtime="20220704 23:23:10.400"/>
</return>
<msg timestamp="20220704 23:23:10.400" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.314" endtime="20220704 23:23:10.400"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.400" endtime="20220704 23:23:10.400"/>
</return>
<status status="PASS" starttime="20220704 23:23:10.313" endtime="20220704 23:23:10.400"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:10.403" level="INFO">${url} = lists/62c3765e70f9dc2c80781bc0</msg>
<status status="PASS" starttime="20220704 23:23:10.402" endtime="20220704 23:23:10.403"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:23:10.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.403" endtime="20220704 23:23:10.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.448" endtime="20220704 23:23:10.449"/>
</return>
<msg timestamp="20220704 23:23:10.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.402" endtime="20220704 23:23:10.449"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.449" endtime="20220704 23:23:10.449"/>
</return>
<msg timestamp="20220704 23:23:10.449" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.401" endtime="20220704 23:23:10.449"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 23:23:10.449" endtime="20220704 23:23:10.450"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:23:10.209" endtime="20220704 23:23:10.450"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:23:10.454" level="INFO">${url} = boards/62c3765d5e2773466a9ef15e</msg>
<status status="PASS" starttime="20220704 23:23:10.454" endtime="20220704 23:23:10.454"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:23:10.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.454" endtime="20220704 23:23:10.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.812" endtime="20220704 23:23:10.812"/>
</return>
<msg timestamp="20220704 23:23:10.813" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:23:10.453" endtime="20220704 23:23:10.813"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:23:10.813" endtime="20220704 23:23:10.813"/>
</return>
<status status="PASS" starttime="20220704 23:23:10.453" endtime="20220704 23:23:10.813"/>
</kw>
<status status="PASS" starttime="20220704 23:23:10.453" endtime="20220704 23:23:10.813"/>
</kw>
<status status="PASS" starttime="20220704 23:23:10.452" endtime="20220704 23:23:10.813"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 23:23:10.813" endtime="20220704 23:23:10.815"/>
</kw>
<status status="PASS" starttime="20220704 23:23:10.451" endtime="20220704 23:23:10.815"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 23:23:09.626" endtime="20220704 23:23:10.815"/>
</suite>
<status status="PASS" starttime="20220704 23:23:00.762" endtime="20220704 23:23:10.818"/>
</suite>
<status status="PASS" starttime="20220704 23:23:00.741" endtime="20220704 23:23:10.821"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
