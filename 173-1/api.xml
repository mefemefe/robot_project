<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220708 03:58:19.790" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:58:19.937" endtime="20220708 03:58:19.937"/>
</kw>
<status status="PASS" starttime="20220708 03:58:19.935" endtime="20220708 03:58:19.937"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:19.940" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:19.939" endtime="20220708 03:58:19.940"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:19.940" endtime="20220708 03:58:19.940"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:19.941" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:58:19.940" endtime="20220708 03:58:19.941"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:20.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:19.941" endtime="20220708 03:58:20.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:20.311" endtime="20220708 03:58:20.311"/>
</return>
<msg timestamp="20220708 03:58:20.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:19.939" endtime="20220708 03:58:20.312"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:20.312" endtime="20220708 03:58:20.312"/>
</return>
<msg timestamp="20220708 03:58:20.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:19.939" endtime="20220708 03:58:20.312"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:20.313" endtime="20220708 03:58:20.318"/>
</kw>
<status status="PASS" starttime="20220708 03:58:20.312" endtime="20220708 03:58:20.318"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:20.321" level="INFO">${url} = boards/62c7ab5c3df371043880a390</msg>
<status status="PASS" starttime="20220708 03:58:20.320" endtime="20220708 03:58:20.321"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:20.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:20.321" endtime="20220708 03:58:20.745"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:20.745" endtime="20220708 03:58:20.745"/>
</return>
<msg timestamp="20220708 03:58:20.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:20.320" endtime="20220708 03:58:20.745"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:20.745" endtime="20220708 03:58:20.745"/>
</return>
<status status="PASS" starttime="20220708 03:58:20.319" endtime="20220708 03:58:20.745"/>
</kw>
<status status="PASS" starttime="20220708 03:58:20.318" endtime="20220708 03:58:20.745"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:58:19.938" endtime="20220708 03:58:20.745"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:20.748" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:20.748" endtime="20220708 03:58:20.748"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:20.748" endtime="20220708 03:58:20.748"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:20.749" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:58:20.749" endtime="20220708 03:58:20.749"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:21.033" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:20.750" endtime="20220708 03:58:21.033"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:21.033" endtime="20220708 03:58:21.033"/>
</return>
<msg timestamp="20220708 03:58:21.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:20.747" endtime="20220708 03:58:21.034"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:21.034" endtime="20220708 03:58:21.034"/>
</return>
<msg timestamp="20220708 03:58:21.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:20.746" endtime="20220708 03:58:21.034"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:21.035" endtime="20220708 03:58:21.040"/>
</kw>
<status status="PASS" starttime="20220708 03:58:21.034" endtime="20220708 03:58:21.040"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:21.042" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:21.042" endtime="20220708 03:58:21.042"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:21.043" endtime="20220708 03:58:21.043"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:21.043" level="INFO">${url} = boards/62c7ab5cce423c16bb6ff662</msg>
<status status="PASS" starttime="20220708 03:58:21.043" endtime="20220708 03:58:21.043"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:21.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:21.043" endtime="20220708 03:58:21.232"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:21.232" endtime="20220708 03:58:21.232"/>
</return>
<msg timestamp="20220708 03:58:21.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:21.042" endtime="20220708 03:58:21.232"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:21.232" endtime="20220708 03:58:21.232"/>
</return>
<status status="PASS" starttime="20220708 03:58:21.041" endtime="20220708 03:58:21.233"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:21.235" level="INFO">${url} = boards/62c7ab5cce423c16bb6ff662</msg>
<status status="PASS" starttime="20220708 03:58:21.235" endtime="20220708 03:58:21.235"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:21.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:21.235" endtime="20220708 03:58:21.372"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:21.372" endtime="20220708 03:58:21.372"/>
</return>
<msg timestamp="20220708 03:58:21.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:21.234" endtime="20220708 03:58:21.372"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:21.372" endtime="20220708 03:58:21.373"/>
</return>
<msg timestamp="20220708 03:58:21.373" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:21.233" endtime="20220708 03:58:21.373"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:21.373" endtime="20220708 03:58:21.379"/>
</kw>
<status status="PASS" starttime="20220708 03:58:21.373" endtime="20220708 03:58:21.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:21.379" endtime="20220708 03:58:21.380"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:21.382" level="INFO">${url} = boards/62c7ab5cce423c16bb6ff662</msg>
<status status="PASS" starttime="20220708 03:58:21.382" endtime="20220708 03:58:21.382"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:21.757" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:21.383" endtime="20220708 03:58:21.757"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:21.757" endtime="20220708 03:58:21.758"/>
</return>
<msg timestamp="20220708 03:58:21.758" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:21.381" endtime="20220708 03:58:21.758"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:21.758" endtime="20220708 03:58:21.758"/>
</return>
<status status="PASS" starttime="20220708 03:58:21.380" endtime="20220708 03:58:21.758"/>
</kw>
<status status="PASS" starttime="20220708 03:58:21.380" endtime="20220708 03:58:21.758"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:58:20.746" endtime="20220708 03:58:21.758"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:21.760" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:21.760" endtime="20220708 03:58:21.760"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:21.760" endtime="20220708 03:58:21.761"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:21.762" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:58:21.761" endtime="20220708 03:58:21.762"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:22.035" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:21.762" endtime="20220708 03:58:22.035"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:22.035" endtime="20220708 03:58:22.036"/>
</return>
<msg timestamp="20220708 03:58:22.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:21.760" endtime="20220708 03:58:22.036"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:22.036" endtime="20220708 03:58:22.036"/>
</return>
<msg timestamp="20220708 03:58:22.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:21.759" endtime="20220708 03:58:22.036"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:22.039" level="INFO">${url} = boards/62c7ab5de7c20862b0cb2d4c</msg>
<status status="PASS" starttime="20220708 03:58:22.038" endtime="20220708 03:58:22.039"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:22.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:22.039" endtime="20220708 03:58:22.432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:22.432" endtime="20220708 03:58:22.432"/>
</return>
<msg timestamp="20220708 03:58:22.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:22.038" endtime="20220708 03:58:22.432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:22.432" endtime="20220708 03:58:22.432"/>
</return>
<status status="PASS" starttime="20220708 03:58:22.036" endtime="20220708 03:58:22.433"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:22.435" level="INFO">${url} = boards/62c7ab5de7c20862b0cb2d4c</msg>
<status status="PASS" starttime="20220708 03:58:22.434" endtime="20220708 03:58:22.435"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:22.562" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:58:22.435" endtime="20220708 03:58:22.562"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:22.562" endtime="20220708 03:58:22.562"/>
</return>
<msg timestamp="20220708 03:58:22.562" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:58:22.434" endtime="20220708 03:58:22.562"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:22.562" endtime="20220708 03:58:22.562"/>
</return>
<status status="PASS" starttime="20220708 03:58:22.433" endtime="20220708 03:58:22.563"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:58:21.759" endtime="20220708 03:58:22.563"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:22.565" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:22.565" endtime="20220708 03:58:22.565"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:22.565" endtime="20220708 03:58:22.566"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:22.566" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:58:22.566" endtime="20220708 03:58:22.566"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:22.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:22.567" endtime="20220708 03:58:22.825"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:22.825" endtime="20220708 03:58:22.825"/>
</return>
<msg timestamp="20220708 03:58:22.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:22.564" endtime="20220708 03:58:22.826"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:22.826" endtime="20220708 03:58:22.826"/>
</return>
<msg timestamp="20220708 03:58:22.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:22.564" endtime="20220708 03:58:22.826"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:22.827" endtime="20220708 03:58:22.831"/>
</kw>
<status status="PASS" starttime="20220708 03:58:22.826" endtime="20220708 03:58:22.831"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:22.833" level="INFO">${url} = boards/62c7ab5e2b4543355af91d7a</msg>
<status status="PASS" starttime="20220708 03:58:22.833" endtime="20220708 03:58:22.833"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:22.966" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:22.833" endtime="20220708 03:58:22.966"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:22.966" endtime="20220708 03:58:22.966"/>
</return>
<msg timestamp="20220708 03:58:22.966" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:22.832" endtime="20220708 03:58:22.967"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:22.967" endtime="20220708 03:58:22.967"/>
</return>
<msg timestamp="20220708 03:58:22.967" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:22.831" endtime="20220708 03:58:22.967"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:22.967" endtime="20220708 03:58:22.973"/>
</kw>
<status status="PASS" starttime="20220708 03:58:22.967" endtime="20220708 03:58:22.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:22.973" endtime="20220708 03:58:22.974"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:22.977" level="INFO">${url} = boards/62c7ab5e2b4543355af91d7a</msg>
<status status="PASS" starttime="20220708 03:58:22.976" endtime="20220708 03:58:22.977"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:23.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:22.977" endtime="20220708 03:58:23.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:23.439" endtime="20220708 03:58:23.439"/>
</return>
<msg timestamp="20220708 03:58:23.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:22.976" endtime="20220708 03:58:23.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:23.439" endtime="20220708 03:58:23.439"/>
</return>
<status status="PASS" starttime="20220708 03:58:22.975" endtime="20220708 03:58:23.440"/>
</kw>
<status status="PASS" starttime="20220708 03:58:22.974" endtime="20220708 03:58:23.440"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:58:22.563" endtime="20220708 03:58:23.440"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:23.442" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:23.442" endtime="20220708 03:58:23.442"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:23.442" endtime="20220708 03:58:23.442"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:23.443" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:58:23.443" endtime="20220708 03:58:23.443"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:23.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:23.443" endtime="20220708 03:58:23.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:23.733" endtime="20220708 03:58:23.733"/>
</return>
<msg timestamp="20220708 03:58:23.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:23.441" endtime="20220708 03:58:23.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:23.734" endtime="20220708 03:58:23.734"/>
</return>
<msg timestamp="20220708 03:58:23.734" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:23.441" endtime="20220708 03:58:23.734"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:23.734" endtime="20220708 03:58:23.739"/>
</kw>
<status status="PASS" starttime="20220708 03:58:23.734" endtime="20220708 03:58:23.739"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:23.741" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:23.741" endtime="20220708 03:58:23.741"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:23.741" endtime="20220708 03:58:23.741"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:23.742" level="INFO">${url} = boards/62c7ab5f2b642c88b0970933</msg>
<status status="PASS" starttime="20220708 03:58:23.742" endtime="20220708 03:58:23.742"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:23.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:23.742" endtime="20220708 03:58:23.917"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:23.917" endtime="20220708 03:58:23.917"/>
</return>
<msg timestamp="20220708 03:58:23.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:23.740" endtime="20220708 03:58:23.917"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:23.917" endtime="20220708 03:58:23.917"/>
</return>
<status status="PASS" starttime="20220708 03:58:23.739" endtime="20220708 03:58:23.917"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:23.919" level="INFO">${url} = boards/62c7ab5f2b642c88b0970933</msg>
<status status="PASS" starttime="20220708 03:58:23.919" endtime="20220708 03:58:23.919"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:24.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:23.920" endtime="20220708 03:58:24.059"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:24.059" endtime="20220708 03:58:24.059"/>
</return>
<msg timestamp="20220708 03:58:24.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:23.918" endtime="20220708 03:58:24.060"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:24.060" endtime="20220708 03:58:24.060"/>
</return>
<msg timestamp="20220708 03:58:24.060" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:23.917" endtime="20220708 03:58:24.060"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:24.061" endtime="20220708 03:58:24.062"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:24.064" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:24.064" endtime="20220708 03:58:24.065"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:24.065" endtime="20220708 03:58:24.065"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:24.065" level="INFO">${url} = boards/62c7ab5f2b642c88b0970933</msg>
<status status="PASS" starttime="20220708 03:58:24.065" endtime="20220708 03:58:24.066"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:24.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:24.066" endtime="20220708 03:58:24.250"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:24.250" endtime="20220708 03:58:24.250"/>
</return>
<msg timestamp="20220708 03:58:24.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:24.063" endtime="20220708 03:58:24.251"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:24.251" endtime="20220708 03:58:24.251"/>
</return>
<status status="PASS" starttime="20220708 03:58:24.062" endtime="20220708 03:58:24.251"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:24.253" level="INFO">${url} = boards/62c7ab5f2b642c88b0970933</msg>
<status status="PASS" starttime="20220708 03:58:24.253" endtime="20220708 03:58:24.254"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:24.394" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:24.254" endtime="20220708 03:58:24.394"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:24.394" endtime="20220708 03:58:24.394"/>
</return>
<msg timestamp="20220708 03:58:24.394" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:24.252" endtime="20220708 03:58:24.394"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:24.394" endtime="20220708 03:58:24.394"/>
</return>
<msg timestamp="20220708 03:58:24.394" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:24.251" endtime="20220708 03:58:24.394"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:24.395" endtime="20220708 03:58:24.396"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:24.398" level="INFO">${url} = boards/62c7ab5f2b642c88b0970933</msg>
<status status="PASS" starttime="20220708 03:58:24.398" endtime="20220708 03:58:24.398"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:24.854" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:24.398" endtime="20220708 03:58:24.854"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:24.854" endtime="20220708 03:58:24.855"/>
</return>
<msg timestamp="20220708 03:58:24.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:24.397" endtime="20220708 03:58:24.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:24.855" endtime="20220708 03:58:24.855"/>
</return>
<status status="PASS" starttime="20220708 03:58:24.396" endtime="20220708 03:58:24.855"/>
</kw>
<status status="PASS" starttime="20220708 03:58:24.396" endtime="20220708 03:58:24.855"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:58:23.440" endtime="20220708 03:58:24.855"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220708 03:58:24.856" endtime="20220708 03:58:24.858"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220708 03:58:19.813" endtime="20220708 03:58:24.858"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:58:24.871" endtime="20220708 03:58:24.872"/>
</kw>
<status status="PASS" starttime="20220708 03:58:24.871" endtime="20220708 03:58:24.872"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:24.873" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:24.873" endtime="20220708 03:58:24.873"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:24.873" endtime="20220708 03:58:24.873"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:24.874" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:58:24.873" endtime="20220708 03:58:24.874"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:25.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:24.874" endtime="20220708 03:58:25.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:25.256" endtime="20220708 03:58:25.257"/>
</return>
<msg timestamp="20220708 03:58:25.257" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:24.872" endtime="20220708 03:58:25.257"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:25.257" endtime="20220708 03:58:25.257"/>
</return>
<msg timestamp="20220708 03:58:25.257" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:24.872" endtime="20220708 03:58:25.257"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:58:25.258" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7ab6137d11b3d12b1cd9c</msg>
<status status="PASS" starttime="20220708 03:58:25.257" endtime="20220708 03:58:25.258"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:25.260" level="INFO">${url} = boards/62c7ab6137d11b3d12b1cd9c/lists/</msg>
<status status="PASS" starttime="20220708 03:58:25.259" endtime="20220708 03:58:25.260"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:25.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:25.260" endtime="20220708 03:58:25.406"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:25.406" endtime="20220708 03:58:25.406"/>
</return>
<msg timestamp="20220708 03:58:25.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:25.259" endtime="20220708 03:58:25.406"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:25.406" endtime="20220708 03:58:25.406"/>
</return>
<msg timestamp="20220708 03:58:25.406" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:25.259" endtime="20220708 03:58:25.406"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:58:25.407" level="INFO">${TEST_SUITE_LIST_ID} = 62c7ab6137d11b3d12b1cda3</msg>
<status status="PASS" starttime="20220708 03:58:25.407" endtime="20220708 03:58:25.408"/>
</kw>
<status status="PASS" starttime="20220708 03:58:24.872" endtime="20220708 03:58:25.408"/>
</kw>
<status status="PASS" starttime="20220708 03:58:24.870" endtime="20220708 03:58:25.408"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:25.410" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:25.410" endtime="20220708 03:58:25.410"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:25.410" endtime="20220708 03:58:25.411"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:25.412" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 03:58:25.411" endtime="20220708 03:58:25.412"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:25.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:25.412" endtime="20220708 03:58:25.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:25.654" endtime="20220708 03:58:25.654"/>
</return>
<msg timestamp="20220708 03:58:25.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:25.409" endtime="20220708 03:58:25.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:25.654" endtime="20220708 03:58:25.654"/>
</return>
<msg timestamp="20220708 03:58:25.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:25.409" endtime="20220708 03:58:25.654"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:25.655" endtime="20220708 03:58:25.661"/>
</kw>
<status status="PASS" starttime="20220708 03:58:25.654" endtime="20220708 03:58:25.661"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:25.661" endtime="20220708 03:58:25.661"/>
</return>
<msg timestamp="20220708 03:58:25.662" level="INFO">${CARD_ID} = 62c7ab61cc05e56062daa995</msg>
<status status="PASS" starttime="20220708 03:58:25.661" endtime="20220708 03:58:25.662"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:25.664" level="INFO">${url} = cards/62c7ab61cc05e56062daa995</msg>
<status status="PASS" starttime="20220708 03:58:25.663" endtime="20220708 03:58:25.664"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:25.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:25.664" endtime="20220708 03:58:25.809"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:25.809" endtime="20220708 03:58:25.809"/>
</return>
<msg timestamp="20220708 03:58:25.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:25.663" endtime="20220708 03:58:25.810"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:25.810" endtime="20220708 03:58:25.810"/>
</return>
<msg timestamp="20220708 03:58:25.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:25.662" endtime="20220708 03:58:25.810"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:25.811" endtime="20220708 03:58:25.811"/>
</return>
<msg timestamp="20220708 03:58:25.812" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220708 03:58:25.810" endtime="20220708 03:58:25.812"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:25.812" endtime="20220708 03:58:25.812"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:25.814" level="INFO">${url} = cards/62c7ab61cc05e56062daa995</msg>
<status status="PASS" starttime="20220708 03:58:25.814" endtime="20220708 03:58:25.814"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:26.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:25.815" endtime="20220708 03:58:26.060"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:26.061" endtime="20220708 03:58:26.061"/>
</return>
<msg timestamp="20220708 03:58:26.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:25.813" endtime="20220708 03:58:26.061"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:26.061" endtime="20220708 03:58:26.061"/>
</return>
<status status="PASS" starttime="20220708 03:58:25.813" endtime="20220708 03:58:26.061"/>
</kw>
<status status="PASS" starttime="20220708 03:58:25.812" endtime="20220708 03:58:26.061"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:58:25.408" endtime="20220708 03:58:26.061"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:26.064" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:26.064" endtime="20220708 03:58:26.065"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:26.065" endtime="20220708 03:58:26.065"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:26.066" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 03:58:26.065" endtime="20220708 03:58:26.066"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:26.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.066" endtime="20220708 03:58:26.296"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:26.296" endtime="20220708 03:58:26.296"/>
</return>
<msg timestamp="20220708 03:58:26.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.063" endtime="20220708 03:58:26.296"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:26.297" endtime="20220708 03:58:26.297"/>
</return>
<msg timestamp="20220708 03:58:26.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.063" endtime="20220708 03:58:26.297"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:26.297" endtime="20220708 03:58:26.297"/>
</return>
<msg timestamp="20220708 03:58:26.298" level="INFO">${CARD_ID} = 62c7ab6213053760b9846d17</msg>
<status status="PASS" starttime="20220708 03:58:26.297" endtime="20220708 03:58:26.298"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:26.301" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:26.301" endtime="20220708 03:58:26.301"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:26.301" endtime="20220708 03:58:26.302"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:26.302" level="INFO">${url} = cards/62c7ab6213053760b9846d17</msg>
<status status="PASS" starttime="20220708 03:58:26.302" endtime="20220708 03:58:26.302"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:26.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.302" endtime="20220708 03:58:26.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:26.506" endtime="20220708 03:58:26.506"/>
</return>
<msg timestamp="20220708 03:58:26.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.300" endtime="20220708 03:58:26.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:26.506" endtime="20220708 03:58:26.506"/>
</return>
<msg timestamp="20220708 03:58:26.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.299" endtime="20220708 03:58:26.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:26.507" endtime="20220708 03:58:26.507"/>
</return>
<status status="PASS" starttime="20220708 03:58:26.298" endtime="20220708 03:58:26.507"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:26.508" level="INFO">${url} = cards/62c7ab6213053760b9846d17</msg>
<status status="PASS" starttime="20220708 03:58:26.508" endtime="20220708 03:58:26.508"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:26.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.508" endtime="20220708 03:58:26.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:26.648" endtime="20220708 03:58:26.648"/>
</return>
<msg timestamp="20220708 03:58:26.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.507" endtime="20220708 03:58:26.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:26.649" endtime="20220708 03:58:26.649"/>
</return>
<msg timestamp="20220708 03:58:26.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.507" endtime="20220708 03:58:26.649"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:26.649" endtime="20220708 03:58:26.649"/>
</return>
<msg timestamp="20220708 03:58:26.651" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220708 03:58:26.649" endtime="20220708 03:58:26.651"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220708 03:58:26.651" endtime="20220708 03:58:26.651"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:26.653" level="INFO">${url} = cards/62c7ab6213053760b9846d17</msg>
<status status="PASS" starttime="20220708 03:58:26.653" endtime="20220708 03:58:26.653"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:26.880" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.653" endtime="20220708 03:58:26.880"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:26.881" endtime="20220708 03:58:26.881"/>
</return>
<msg timestamp="20220708 03:58:26.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.652" endtime="20220708 03:58:26.881"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:26.881" endtime="20220708 03:58:26.881"/>
</return>
<status status="PASS" starttime="20220708 03:58:26.652" endtime="20220708 03:58:26.881"/>
</kw>
<status status="PASS" starttime="20220708 03:58:26.651" endtime="20220708 03:58:26.881"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:58:26.062" endtime="20220708 03:58:26.881"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:26.884" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:26.884" endtime="20220708 03:58:26.884"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:26.884" endtime="20220708 03:58:26.884"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:26.885" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 03:58:26.884" endtime="20220708 03:58:26.885"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:27.122" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.886" endtime="20220708 03:58:27.122"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:27.122" endtime="20220708 03:58:27.122"/>
</return>
<msg timestamp="20220708 03:58:27.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.883" endtime="20220708 03:58:27.123"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:27.123" endtime="20220708 03:58:27.123"/>
</return>
<msg timestamp="20220708 03:58:27.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:26.882" endtime="20220708 03:58:27.123"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:27.124" endtime="20220708 03:58:27.124"/>
</return>
<msg timestamp="20220708 03:58:27.124" level="INFO">${CARD_ID} = 62c7ab62e5c56139dcb40a9f</msg>
<status status="PASS" starttime="20220708 03:58:27.123" endtime="20220708 03:58:27.124"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:27.126" level="INFO">${url} = cards/62c7ab62e5c56139dcb40a9f</msg>
<status status="PASS" starttime="20220708 03:58:27.126" endtime="20220708 03:58:27.126"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:27.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:27.126" endtime="20220708 03:58:27.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:27.356" endtime="20220708 03:58:27.356"/>
</return>
<msg timestamp="20220708 03:58:27.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:27.125" endtime="20220708 03:58:27.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:27.357" endtime="20220708 03:58:27.357"/>
</return>
<msg timestamp="20220708 03:58:27.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:27.125" endtime="20220708 03:58:27.357"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:27.358" endtime="20220708 03:58:27.360"/>
</kw>
<status status="PASS" starttime="20220708 03:58:27.357" endtime="20220708 03:58:27.360"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:27.362" level="INFO">${url} = cards/62c7ab62e5c56139dcb40a9f</msg>
<status status="PASS" starttime="20220708 03:58:27.362" endtime="20220708 03:58:27.362"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:27.491" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:58:27.362" endtime="20220708 03:58:27.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:27.491" endtime="20220708 03:58:27.491"/>
</return>
<msg timestamp="20220708 03:58:27.492" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:58:27.361" endtime="20220708 03:58:27.492"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:27.492" endtime="20220708 03:58:27.492"/>
</return>
<status status="PASS" starttime="20220708 03:58:27.360" endtime="20220708 03:58:27.492"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:58:26.882" endtime="20220708 03:58:27.492"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:27.495" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:27.495" endtime="20220708 03:58:27.495"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:27.495" endtime="20220708 03:58:27.496"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:27.497" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 03:58:27.496" endtime="20220708 03:58:27.497"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:27.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:27.497" endtime="20220708 03:58:27.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:27.743" endtime="20220708 03:58:27.743"/>
</return>
<msg timestamp="20220708 03:58:27.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:27.494" endtime="20220708 03:58:27.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:27.743" endtime="20220708 03:58:27.743"/>
</return>
<msg timestamp="20220708 03:58:27.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:27.494" endtime="20220708 03:58:27.744"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:27.744" endtime="20220708 03:58:27.744"/>
</return>
<msg timestamp="20220708 03:58:27.745" level="INFO">${CARD_ID} = 62c7ab63ea952246bf9a89a1</msg>
<status status="PASS" starttime="20220708 03:58:27.744" endtime="20220708 03:58:27.745"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:27.746" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:27.746" endtime="20220708 03:58:27.746"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:27.747" endtime="20220708 03:58:27.747"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:27.747" level="INFO">${url} = cards/62c7ab63ea952246bf9a89a1</msg>
<status status="PASS" starttime="20220708 03:58:27.747" endtime="20220708 03:58:27.747"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:27.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:27.747" endtime="20220708 03:58:27.993"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:27.994" endtime="20220708 03:58:27.994"/>
</return>
<msg timestamp="20220708 03:58:27.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:27.746" endtime="20220708 03:58:27.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:27.994" endtime="20220708 03:58:27.994"/>
</return>
<msg timestamp="20220708 03:58:27.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:27.745" endtime="20220708 03:58:27.994"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:27.995" endtime="20220708 03:58:28.004"/>
</kw>
<status status="PASS" starttime="20220708 03:58:27.994" endtime="20220708 03:58:28.004"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:28.005" level="INFO">${url} = cards/62c7ab63ea952246bf9a89a1</msg>
<status status="PASS" starttime="20220708 03:58:28.005" endtime="20220708 03:58:28.005"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:28.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:28.005" endtime="20220708 03:58:28.150"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:28.150" endtime="20220708 03:58:28.150"/>
</return>
<msg timestamp="20220708 03:58:28.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:28.004" endtime="20220708 03:58:28.150"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:28.151" endtime="20220708 03:58:28.151"/>
</return>
<msg timestamp="20220708 03:58:28.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:28.004" endtime="20220708 03:58:28.151"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:28.151" endtime="20220708 03:58:28.151"/>
</return>
<msg timestamp="20220708 03:58:28.152" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220708 03:58:28.151" endtime="20220708 03:58:28.152"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:28.153" endtime="20220708 03:58:28.153"/>
</return>
<msg timestamp="20220708 03:58:28.154" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220708 03:58:28.153" endtime="20220708 03:58:28.154"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:28.154" endtime="20220708 03:58:28.154"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:28.155" endtime="20220708 03:58:28.155"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:28.157" level="INFO">${url} = cards/62c7ab63ea952246bf9a89a1</msg>
<status status="PASS" starttime="20220708 03:58:28.156" endtime="20220708 03:58:28.157"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:28.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:28.157" endtime="20220708 03:58:28.399"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:28.399" endtime="20220708 03:58:28.399"/>
</return>
<msg timestamp="20220708 03:58:28.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:28.156" endtime="20220708 03:58:28.399"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:28.399" endtime="20220708 03:58:28.399"/>
</return>
<status status="PASS" starttime="20220708 03:58:28.155" endtime="20220708 03:58:28.399"/>
</kw>
<status status="PASS" starttime="20220708 03:58:28.155" endtime="20220708 03:58:28.399"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:58:27.492" endtime="20220708 03:58:28.399"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:28.403" level="INFO">${url} = boards/62c7ab6137d11b3d12b1cd9c</msg>
<status status="PASS" starttime="20220708 03:58:28.403" endtime="20220708 03:58:28.403"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:30.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:28.403" endtime="20220708 03:58:30.249"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:30.249" endtime="20220708 03:58:30.249"/>
</return>
<msg timestamp="20220708 03:58:30.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:28.402" endtime="20220708 03:58:30.250"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:30.250" endtime="20220708 03:58:30.250"/>
</return>
<status status="PASS" starttime="20220708 03:58:28.401" endtime="20220708 03:58:30.250"/>
</kw>
<status status="PASS" starttime="20220708 03:58:28.401" endtime="20220708 03:58:30.250"/>
</kw>
<status status="PASS" starttime="20220708 03:58:28.401" endtime="20220708 03:58:30.250"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 03:58:30.250" endtime="20220708 03:58:30.252"/>
</kw>
<status status="PASS" starttime="20220708 03:58:28.400" endtime="20220708 03:58:30.252"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220708 03:58:24.860" endtime="20220708 03:58:30.252"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:58:30.263" endtime="20220708 03:58:30.264"/>
</kw>
<status status="PASS" starttime="20220708 03:58:30.263" endtime="20220708 03:58:30.264"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:30.265" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:30.265" endtime="20220708 03:58:30.265"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:30.265" endtime="20220708 03:58:30.265"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:30.266" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:58:30.266" endtime="20220708 03:58:30.266"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:30.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:30.266" endtime="20220708 03:58:30.666"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:30.667" endtime="20220708 03:58:30.667"/>
</return>
<msg timestamp="20220708 03:58:30.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:30.264" endtime="20220708 03:58:30.667"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:30.667" endtime="20220708 03:58:30.667"/>
</return>
<msg timestamp="20220708 03:58:30.667" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:30.264" endtime="20220708 03:58:30.667"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:58:30.669" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7ab668f12fb0bfc731581</msg>
<status status="PASS" starttime="20220708 03:58:30.668" endtime="20220708 03:58:30.669"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:30.670" level="INFO">${url} = boards/62c7ab668f12fb0bfc731581/lists/</msg>
<status status="PASS" starttime="20220708 03:58:30.670" endtime="20220708 03:58:30.670"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:30.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:30.670" endtime="20220708 03:58:30.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:30.802" endtime="20220708 03:58:30.802"/>
</return>
<msg timestamp="20220708 03:58:30.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:30.669" endtime="20220708 03:58:30.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:30.802" endtime="20220708 03:58:30.802"/>
</return>
<msg timestamp="20220708 03:58:30.803" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:30.669" endtime="20220708 03:58:30.803"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:58:30.804" level="INFO">${TEST_SUITE_LIST_ID} = 62c7ab668f12fb0bfc731588</msg>
<status status="PASS" starttime="20220708 03:58:30.803" endtime="20220708 03:58:30.804"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:30.806" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:30.806" endtime="20220708 03:58:30.806"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:30.806" endtime="20220708 03:58:30.806"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:30.807" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 03:58:30.806" endtime="20220708 03:58:30.807"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:31.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:30.807" endtime="20220708 03:58:31.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:31.039" endtime="20220708 03:58:31.039"/>
</return>
<msg timestamp="20220708 03:58:31.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:30.805" endtime="20220708 03:58:31.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:31.040" endtime="20220708 03:58:31.040"/>
</return>
<msg timestamp="20220708 03:58:31.040" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:30.804" endtime="20220708 03:58:31.040"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:58:31.041" level="INFO">${TEST_SUITE_CARD_ID} = 62c7ab6626da6811e4c39bcb</msg>
<status status="PASS" starttime="20220708 03:58:31.040" endtime="20220708 03:58:31.041"/>
</kw>
<status status="PASS" starttime="20220708 03:58:30.264" endtime="20220708 03:58:31.041"/>
</kw>
<status status="PASS" starttime="20220708 03:58:30.263" endtime="20220708 03:58:31.041"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:31.044" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:31.044" endtime="20220708 03:58:31.044"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:31.044" endtime="20220708 03:58:31.045"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:31.046" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 03:58:31.045" endtime="20220708 03:58:31.046"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:31.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.046" endtime="20220708 03:58:31.232"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:31.232" endtime="20220708 03:58:31.232"/>
</return>
<msg timestamp="20220708 03:58:31.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.043" endtime="20220708 03:58:31.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:31.233" endtime="20220708 03:58:31.233"/>
</return>
<msg timestamp="20220708 03:58:31.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.042" endtime="20220708 03:58:31.233"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:31.233" endtime="20220708 03:58:31.233"/>
</return>
<msg timestamp="20220708 03:58:31.234" level="INFO">${checklist_id} = 62c7ab677e86b4843aea2548</msg>
<status status="PASS" starttime="20220708 03:58:31.233" endtime="20220708 03:58:31.234"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:31.236" level="INFO">${url} = checklists/62c7ab677e86b4843aea2548</msg>
<status status="PASS" starttime="20220708 03:58:31.236" endtime="20220708 03:58:31.236"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:31.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.236" endtime="20220708 03:58:31.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:31.378" endtime="20220708 03:58:31.378"/>
</return>
<msg timestamp="20220708 03:58:31.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.235" endtime="20220708 03:58:31.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:31.378" endtime="20220708 03:58:31.378"/>
</return>
<msg timestamp="20220708 03:58:31.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.234" endtime="20220708 03:58:31.379"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:31.379" endtime="20220708 03:58:31.379"/>
</return>
<msg timestamp="20220708 03:58:31.380" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220708 03:58:31.379" endtime="20220708 03:58:31.380"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:31.380" endtime="20220708 03:58:31.381"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:31.382" level="INFO">${url} = checklists/62c7ab677e86b4843aea2548</msg>
<status status="PASS" starttime="20220708 03:58:31.382" endtime="20220708 03:58:31.382"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:31.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.382" endtime="20220708 03:58:31.587"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:31.587" endtime="20220708 03:58:31.587"/>
</return>
<msg timestamp="20220708 03:58:31.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.381" endtime="20220708 03:58:31.588"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:31.588" endtime="20220708 03:58:31.588"/>
</return>
<status status="PASS" starttime="20220708 03:58:31.381" endtime="20220708 03:58:31.588"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:58:31.042" endtime="20220708 03:58:31.588"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:31.592" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:31.591" endtime="20220708 03:58:31.592"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:31.592" endtime="20220708 03:58:31.592"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:31.593" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 03:58:31.592" endtime="20220708 03:58:31.593"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:31.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.593" endtime="20220708 03:58:31.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:31.787" endtime="20220708 03:58:31.787"/>
</return>
<msg timestamp="20220708 03:58:31.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.591" endtime="20220708 03:58:31.788"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:31.788" endtime="20220708 03:58:31.788"/>
</return>
<msg timestamp="20220708 03:58:31.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.590" endtime="20220708 03:58:31.788"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:31.788" endtime="20220708 03:58:31.789"/>
</return>
<msg timestamp="20220708 03:58:31.790" level="INFO">${checklist_id} = 62c7ab67f2e7e35d903a3df4</msg>
<status status="PASS" starttime="20220708 03:58:31.788" endtime="20220708 03:58:31.790"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:31.791" level="INFO">${url} = checklists/62c7ab67f2e7e35d903a3df4</msg>
<status status="PASS" starttime="20220708 03:58:31.791" endtime="20220708 03:58:31.791"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:31.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.791" endtime="20220708 03:58:31.988"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:31.988" endtime="20220708 03:58:31.988"/>
</return>
<msg timestamp="20220708 03:58:31.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.790" endtime="20220708 03:58:31.988"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:31.988" endtime="20220708 03:58:31.988"/>
</return>
<msg timestamp="20220708 03:58:31.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:31.790" endtime="20220708 03:58:31.989"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:31.989" endtime="20220708 03:58:31.991"/>
</kw>
<status status="PASS" starttime="20220708 03:58:31.989" endtime="20220708 03:58:31.991"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:31.993" level="INFO">${url} = checklists/62c7ab67f2e7e35d903a3df4</msg>
<status status="PASS" starttime="20220708 03:58:31.992" endtime="20220708 03:58:31.993"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:32.115" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:58:31.993" endtime="20220708 03:58:32.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:32.115" endtime="20220708 03:58:32.115"/>
</return>
<msg timestamp="20220708 03:58:32.115" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:58:31.992" endtime="20220708 03:58:32.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:32.115" endtime="20220708 03:58:32.115"/>
</return>
<status status="PASS" starttime="20220708 03:58:31.991" endtime="20220708 03:58:32.116"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:58:31.589" endtime="20220708 03:58:32.116"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:32.121" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:32.119" endtime="20220708 03:58:32.121"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:32.121" endtime="20220708 03:58:32.122"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:32.122" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 03:58:32.122" endtime="20220708 03:58:32.122"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:32.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:32.123" endtime="20220708 03:58:32.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:32.308" endtime="20220708 03:58:32.308"/>
</return>
<msg timestamp="20220708 03:58:32.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:32.119" endtime="20220708 03:58:32.309"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:32.309" endtime="20220708 03:58:32.309"/>
</return>
<msg timestamp="20220708 03:58:32.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:32.118" endtime="20220708 03:58:32.309"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:32.310" endtime="20220708 03:58:32.310"/>
</return>
<msg timestamp="20220708 03:58:32.311" level="INFO">${checklist_id} = 62c7ab680cbcf5888d581363</msg>
<status status="PASS" starttime="20220708 03:58:32.309" endtime="20220708 03:58:32.311"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:32.312" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:32.312" endtime="20220708 03:58:32.312"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:32.312" endtime="20220708 03:58:32.313"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:32.313" level="INFO">${url} = checklists/62c7ab680cbcf5888d581363</msg>
<status status="PASS" starttime="20220708 03:58:32.313" endtime="20220708 03:58:32.313"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:32.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:32.313" endtime="20220708 03:58:32.483"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:32.484" endtime="20220708 03:58:32.484"/>
</return>
<msg timestamp="20220708 03:58:32.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:32.311" endtime="20220708 03:58:32.484"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:32.484" endtime="20220708 03:58:32.484"/>
</return>
<msg timestamp="20220708 03:58:32.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:32.311" endtime="20220708 03:58:32.484"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:32.486" level="INFO">${url} = checklists/62c7ab680cbcf5888d581363</msg>
<status status="PASS" starttime="20220708 03:58:32.485" endtime="20220708 03:58:32.486"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:32.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:32.486" endtime="20220708 03:58:32.634"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:32.634" endtime="20220708 03:58:32.634"/>
</return>
<msg timestamp="20220708 03:58:32.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:32.485" endtime="20220708 03:58:32.634"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:32.634" endtime="20220708 03:58:32.634"/>
</return>
<msg timestamp="20220708 03:58:32.635" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:32.485" endtime="20220708 03:58:32.635"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:32.635" endtime="20220708 03:58:32.635"/>
</return>
<msg timestamp="20220708 03:58:32.636" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220708 03:58:32.635" endtime="20220708 03:58:32.636"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:32.636" endtime="20220708 03:58:32.637"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:32.651" level="INFO">${url} = checklists/62c7ab680cbcf5888d581363</msg>
<status status="PASS" starttime="20220708 03:58:32.651" endtime="20220708 03:58:32.651"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:32.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:32.652" endtime="20220708 03:58:32.841"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:32.841" endtime="20220708 03:58:32.841"/>
</return>
<msg timestamp="20220708 03:58:32.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:32.650" endtime="20220708 03:58:32.841"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:32.841" endtime="20220708 03:58:32.841"/>
</return>
<status status="PASS" starttime="20220708 03:58:32.637" endtime="20220708 03:58:32.842"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:58:32.116" endtime="20220708 03:58:32.842"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:32.846" level="INFO">${url} = boards/62c7ab668f12fb0bfc731581</msg>
<status status="PASS" starttime="20220708 03:58:32.844" endtime="20220708 03:58:32.846"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:33.430" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:32.846" endtime="20220708 03:58:33.430"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:33.430" endtime="20220708 03:58:33.430"/>
</return>
<msg timestamp="20220708 03:58:33.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:32.844" endtime="20220708 03:58:33.431"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:33.431" endtime="20220708 03:58:33.431"/>
</return>
<status status="PASS" starttime="20220708 03:58:32.843" endtime="20220708 03:58:33.431"/>
</kw>
<status status="PASS" starttime="20220708 03:58:32.843" endtime="20220708 03:58:33.431"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 03:58:33.431" endtime="20220708 03:58:33.432"/>
</kw>
<status status="PASS" starttime="20220708 03:58:32.843" endtime="20220708 03:58:33.433"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220708 03:58:30.253" endtime="20220708 03:58:33.433"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:58:33.444" endtime="20220708 03:58:33.445"/>
</kw>
<status status="PASS" starttime="20220708 03:58:33.444" endtime="20220708 03:58:33.445"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:33.446" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:33.446" endtime="20220708 03:58:33.446"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:33.446" endtime="20220708 03:58:33.446"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:33.447" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:58:33.446" endtime="20220708 03:58:33.447"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:33.813" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:33.447" endtime="20220708 03:58:33.813"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:33.813" endtime="20220708 03:58:33.813"/>
</return>
<msg timestamp="20220708 03:58:33.814" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:33.445" endtime="20220708 03:58:33.814"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:33.814" endtime="20220708 03:58:33.814"/>
</return>
<msg timestamp="20220708 03:58:33.814" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:33.445" endtime="20220708 03:58:33.814"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:58:33.815" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7ab69632724098882bb20</msg>
<status status="PASS" starttime="20220708 03:58:33.814" endtime="20220708 03:58:33.815"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:33.945" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:33.816" endtime="20220708 03:58:33.945"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:58:33.947" level="INFO">${TEST_SUITE_LIST_ID} = 62c7ab69632724098882bb27</msg>
<status status="PASS" starttime="20220708 03:58:33.945" endtime="20220708 03:58:33.947"/>
</kw>
<status status="PASS" starttime="20220708 03:58:33.445" endtime="20220708 03:58:33.947"/>
</kw>
<status status="PASS" starttime="20220708 03:58:33.444" endtime="20220708 03:58:33.947"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:33.950" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:33.950" endtime="20220708 03:58:33.950"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:33.950" endtime="20220708 03:58:33.950"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:33.951" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 03:58:33.950" endtime="20220708 03:58:33.951"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:34.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:33.951" endtime="20220708 03:58:34.130"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:34.130" endtime="20220708 03:58:34.130"/>
</return>
<msg timestamp="20220708 03:58:34.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:33.949" endtime="20220708 03:58:34.131"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:34.131" endtime="20220708 03:58:34.131"/>
</return>
<msg timestamp="20220708 03:58:34.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:33.948" endtime="20220708 03:58:34.131"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:34.132" endtime="20220708 03:58:34.134"/>
</kw>
<status status="PASS" starttime="20220708 03:58:34.131" endtime="20220708 03:58:34.134"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:34.135" endtime="20220708 03:58:34.135"/>
</return>
<msg timestamp="20220708 03:58:34.136" level="INFO">${LABEL_ID} = 62c7ab6a962ec94512a94c82</msg>
<status status="PASS" starttime="20220708 03:58:34.135" endtime="20220708 03:58:34.136"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:34.137" level="INFO">${url} = labels/62c7ab6a962ec94512a94c82</msg>
<status status="PASS" starttime="20220708 03:58:34.137" endtime="20220708 03:58:34.137"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:34.275" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:34.137" endtime="20220708 03:58:34.275"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:34.276" endtime="20220708 03:58:34.276"/>
</return>
<msg timestamp="20220708 03:58:34.276" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:34.136" endtime="20220708 03:58:34.276"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:34.276" endtime="20220708 03:58:34.276"/>
</return>
<msg timestamp="20220708 03:58:34.276" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:34.136" endtime="20220708 03:58:34.276"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:34.277" endtime="20220708 03:58:34.277"/>
</return>
<msg timestamp="20220708 03:58:34.278" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220708 03:58:34.277" endtime="20220708 03:58:34.278"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:34.278" endtime="20220708 03:58:34.278"/>
</return>
<msg timestamp="20220708 03:58:34.279" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220708 03:58:34.278" endtime="20220708 03:58:34.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:34.279" endtime="20220708 03:58:34.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:34.280" endtime="20220708 03:58:34.280"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:34.282" level="INFO">${url} = labels/62c7ab6a962ec94512a94c82</msg>
<status status="PASS" starttime="20220708 03:58:34.282" endtime="20220708 03:58:34.282"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:34.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:34.282" endtime="20220708 03:58:34.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:34.475" endtime="20220708 03:58:34.475"/>
</return>
<msg timestamp="20220708 03:58:34.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:34.281" endtime="20220708 03:58:34.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:34.476" endtime="20220708 03:58:34.476"/>
</return>
<status status="PASS" starttime="20220708 03:58:34.281" endtime="20220708 03:58:34.476"/>
</kw>
<status status="PASS" starttime="20220708 03:58:34.281" endtime="20220708 03:58:34.476"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:58:33.947" endtime="20220708 03:58:34.476"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:34.478" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:34.478" endtime="20220708 03:58:34.478"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:34.478" endtime="20220708 03:58:34.479"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:34.479" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 03:58:34.479" endtime="20220708 03:58:34.479"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:34.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:34.480" endtime="20220708 03:58:34.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:34.657" endtime="20220708 03:58:34.657"/>
</return>
<msg timestamp="20220708 03:58:34.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:34.477" endtime="20220708 03:58:34.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:34.657" endtime="20220708 03:58:34.657"/>
</return>
<msg timestamp="20220708 03:58:34.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:34.477" endtime="20220708 03:58:34.658"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:34.658" endtime="20220708 03:58:34.661"/>
</kw>
<status status="PASS" starttime="20220708 03:58:34.658" endtime="20220708 03:58:34.661"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:34.661" endtime="20220708 03:58:34.661"/>
</return>
<msg timestamp="20220708 03:58:34.662" level="INFO">${LABEL_ID} = 62c7ab6af7048f5a2d56df7e</msg>
<status status="PASS" starttime="20220708 03:58:34.661" endtime="20220708 03:58:34.662"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:34.663" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:34.663" endtime="20220708 03:58:34.663"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:34.663" endtime="20220708 03:58:34.664"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:34.664" level="INFO">${url} = labels/62c7ab6af7048f5a2d56df7e</msg>
<status status="PASS" starttime="20220708 03:58:34.664" endtime="20220708 03:58:34.664"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:34.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:34.664" endtime="20220708 03:58:34.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:34.868" endtime="20220708 03:58:34.868"/>
</return>
<msg timestamp="20220708 03:58:34.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:34.663" endtime="20220708 03:58:34.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:34.868" endtime="20220708 03:58:34.868"/>
</return>
<msg timestamp="20220708 03:58:34.869" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:34.662" endtime="20220708 03:58:34.869"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:34.869" endtime="20220708 03:58:34.869"/>
</return>
<msg timestamp="20220708 03:58:34.870" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220708 03:58:34.869" endtime="20220708 03:58:34.870"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:34.871" endtime="20220708 03:58:34.871"/>
</return>
<msg timestamp="20220708 03:58:34.872" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220708 03:58:34.870" endtime="20220708 03:58:34.872"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:34.872" endtime="20220708 03:58:34.872"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:34.872" endtime="20220708 03:58:34.873"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:34.875" level="INFO">${url} = labels/62c7ab6af7048f5a2d56df7e</msg>
<status status="PASS" starttime="20220708 03:58:34.874" endtime="20220708 03:58:34.875"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:35.069" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:34.875" endtime="20220708 03:58:35.069"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:35.069" endtime="20220708 03:58:35.069"/>
</return>
<msg timestamp="20220708 03:58:35.069" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:34.874" endtime="20220708 03:58:35.069"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:35.069" endtime="20220708 03:58:35.069"/>
</return>
<status status="PASS" starttime="20220708 03:58:34.873" endtime="20220708 03:58:35.070"/>
</kw>
<status status="PASS" starttime="20220708 03:58:34.873" endtime="20220708 03:58:35.070"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:58:34.476" endtime="20220708 03:58:35.070"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:35.074" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:35.074" endtime="20220708 03:58:35.074"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:35.074" endtime="20220708 03:58:35.074"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:35.075" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 03:58:35.075" endtime="20220708 03:58:35.075"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:35.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:35.076" endtime="20220708 03:58:35.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:35.269" endtime="20220708 03:58:35.270"/>
</return>
<msg timestamp="20220708 03:58:35.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:35.073" endtime="20220708 03:58:35.270"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:35.270" endtime="20220708 03:58:35.270"/>
</return>
<msg timestamp="20220708 03:58:35.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:35.072" endtime="20220708 03:58:35.270"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:58:35.271" endtime="20220708 03:58:35.271"/>
</return>
<msg timestamp="20220708 03:58:35.272" level="INFO">${LABEL_ID} = 62c7ab6be1bdd979e752ba27</msg>
<status status="PASS" starttime="20220708 03:58:35.270" endtime="20220708 03:58:35.272"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:35.275" level="INFO">${url} = labels/62c7ab6be1bdd979e752ba27</msg>
<status status="PASS" starttime="20220708 03:58:35.274" endtime="20220708 03:58:35.275"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:35.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:35.275" endtime="20220708 03:58:35.487"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:35.487" endtime="20220708 03:58:35.487"/>
</return>
<msg timestamp="20220708 03:58:35.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:35.274" endtime="20220708 03:58:35.487"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:35.487" endtime="20220708 03:58:35.487"/>
</return>
<status status="PASS" starttime="20220708 03:58:35.272" endtime="20220708 03:58:35.487"/>
</kw>
<status status="PASS" starttime="20220708 03:58:35.272" endtime="20220708 03:58:35.487"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:35.489" level="INFO">${url} = labels/62c7ab6be1bdd979e752ba27</msg>
<status status="PASS" starttime="20220708 03:58:35.489" endtime="20220708 03:58:35.489"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:35.611" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:58:35.489" endtime="20220708 03:58:35.612"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:35.612" endtime="20220708 03:58:35.612"/>
</return>
<msg timestamp="20220708 03:58:35.612" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:58:35.488" endtime="20220708 03:58:35.612"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:35.612" endtime="20220708 03:58:35.612"/>
</return>
<status status="PASS" starttime="20220708 03:58:35.488" endtime="20220708 03:58:35.612"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:58:35.070" endtime="20220708 03:58:35.613"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:35.615" level="INFO">${url} = boards/62c7ab69632724098882bb20</msg>
<status status="PASS" starttime="20220708 03:58:35.615" endtime="20220708 03:58:35.615"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:36.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:35.616" endtime="20220708 03:58:36.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:36.026" endtime="20220708 03:58:36.026"/>
</return>
<msg timestamp="20220708 03:58:36.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:35.615" endtime="20220708 03:58:36.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:36.026" endtime="20220708 03:58:36.026"/>
</return>
<status status="PASS" starttime="20220708 03:58:35.614" endtime="20220708 03:58:36.026"/>
</kw>
<status status="PASS" starttime="20220708 03:58:35.614" endtime="20220708 03:58:36.026"/>
</kw>
<status status="PASS" starttime="20220708 03:58:35.614" endtime="20220708 03:58:36.027"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 03:58:36.027" endtime="20220708 03:58:36.028"/>
</kw>
<status status="PASS" starttime="20220708 03:58:35.613" endtime="20220708 03:58:36.028"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220708 03:58:33.434" endtime="20220708 03:58:36.028"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:58:36.041" endtime="20220708 03:58:36.041"/>
</kw>
<status status="PASS" starttime="20220708 03:58:36.040" endtime="20220708 03:58:36.041"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:36.043" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:36.042" endtime="20220708 03:58:36.043"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:36.043" endtime="20220708 03:58:36.043"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:36.044" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:58:36.043" endtime="20220708 03:58:36.044"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:36.442" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:36.044" endtime="20220708 03:58:36.442"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:36.443" endtime="20220708 03:58:36.443"/>
</return>
<msg timestamp="20220708 03:58:36.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:36.042" endtime="20220708 03:58:36.443"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:36.443" endtime="20220708 03:58:36.443"/>
</return>
<msg timestamp="20220708 03:58:36.443" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:36.041" endtime="20220708 03:58:36.443"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:58:36.445" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7ab6c43004645d50ddeb3</msg>
<status status="PASS" starttime="20220708 03:58:36.444" endtime="20220708 03:58:36.445"/>
</kw>
<status status="PASS" starttime="20220708 03:58:36.443" endtime="20220708 03:58:36.445"/>
</kw>
<status status="PASS" starttime="20220708 03:58:36.041" endtime="20220708 03:58:36.445"/>
</kw>
<status status="PASS" starttime="20220708 03:58:36.040" endtime="20220708 03:58:36.445"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:36.447" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:36.447" endtime="20220708 03:58:36.447"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:36.447" endtime="20220708 03:58:36.448"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:36.449" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 03:58:36.448" endtime="20220708 03:58:36.449"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:36.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:36.449" endtime="20220708 03:58:36.642"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:36.642" endtime="20220708 03:58:36.642"/>
</return>
<msg timestamp="20220708 03:58:36.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:36.446" endtime="20220708 03:58:36.643"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:36.643" endtime="20220708 03:58:36.643"/>
</return>
<msg timestamp="20220708 03:58:36.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:36.446" endtime="20220708 03:58:36.643"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:36.644" endtime="20220708 03:58:36.646"/>
</kw>
<status status="PASS" starttime="20220708 03:58:36.643" endtime="20220708 03:58:36.646"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:58:36.445" endtime="20220708 03:58:36.646"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:36.649" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:36.649" endtime="20220708 03:58:36.649"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:36.649" endtime="20220708 03:58:36.649"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:36.650" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 03:58:36.649" endtime="20220708 03:58:36.650"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:36.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:36.650" endtime="20220708 03:58:36.829"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:36.829" endtime="20220708 03:58:36.829"/>
</return>
<msg timestamp="20220708 03:58:36.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:36.648" endtime="20220708 03:58:36.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:36.830" endtime="20220708 03:58:36.830"/>
</return>
<msg timestamp="20220708 03:58:36.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:36.647" endtime="20220708 03:58:36.830"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:36.831" endtime="20220708 03:58:36.833"/>
</kw>
<status status="PASS" starttime="20220708 03:58:36.830" endtime="20220708 03:58:36.833"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:36.835" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:36.834" endtime="20220708 03:58:36.835"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:36.835" endtime="20220708 03:58:36.835"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:36.835" level="INFO">${url} = lists/62c7ab6c6e6e5689e2cb14c8</msg>
<status status="PASS" starttime="20220708 03:58:36.835" endtime="20220708 03:58:36.835"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:37.033" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:36.836" endtime="20220708 03:58:37.034"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:37.034" endtime="20220708 03:58:37.034"/>
</return>
<msg timestamp="20220708 03:58:37.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:36.834" endtime="20220708 03:58:37.034"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:37.034" endtime="20220708 03:58:37.034"/>
</return>
<status status="PASS" starttime="20220708 03:58:36.833" endtime="20220708 03:58:37.035"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:37.037" level="INFO">${url} = lists/62c7ab6c6e6e5689e2cb14c8</msg>
<status status="PASS" starttime="20220708 03:58:37.036" endtime="20220708 03:58:37.037"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:37.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:37.037" endtime="20220708 03:58:37.169"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:37.169" endtime="20220708 03:58:37.169"/>
</return>
<msg timestamp="20220708 03:58:37.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:37.036" endtime="20220708 03:58:37.169"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:37.169" endtime="20220708 03:58:37.169"/>
</return>
<msg timestamp="20220708 03:58:37.169" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:37.035" endtime="20220708 03:58:37.169"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:58:37.170" endtime="20220708 03:58:37.172"/>
</kw>
<status status="PASS" starttime="20220708 03:58:37.170" endtime="20220708 03:58:37.172"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:58:37.172" endtime="20220708 03:58:37.173"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:58:36.647" endtime="20220708 03:58:37.173"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:37.176" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:37.176" endtime="20220708 03:58:37.176"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:37.176" endtime="20220708 03:58:37.178"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:37.179" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 03:58:37.178" endtime="20220708 03:58:37.179"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:37.369" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:37.179" endtime="20220708 03:58:37.369"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:37.369" endtime="20220708 03:58:37.370"/>
</return>
<msg timestamp="20220708 03:58:37.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:37.176" endtime="20220708 03:58:37.370"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:37.370" endtime="20220708 03:58:37.370"/>
</return>
<msg timestamp="20220708 03:58:37.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:37.175" endtime="20220708 03:58:37.370"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:58:37.373" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:58:37.372" endtime="20220708 03:58:37.373"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:58:37.373" endtime="20220708 03:58:37.373"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:37.374" level="INFO">${url} = lists/62c7ab6d4a263b2bc75e6d84/closed</msg>
<status status="PASS" starttime="20220708 03:58:37.373" endtime="20220708 03:58:37.374"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:58:37.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:37.374" endtime="20220708 03:58:37.559"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:37.559" endtime="20220708 03:58:37.559"/>
</return>
<msg timestamp="20220708 03:58:37.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:37.371" endtime="20220708 03:58:37.559"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:37.559" endtime="20220708 03:58:37.560"/>
</return>
<status status="PASS" starttime="20220708 03:58:37.370" endtime="20220708 03:58:37.560"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:37.562" level="INFO">${url} = lists/62c7ab6d4a263b2bc75e6d84</msg>
<status status="PASS" starttime="20220708 03:58:37.562" endtime="20220708 03:58:37.562"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:58:37.702" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:37.562" endtime="20220708 03:58:37.702"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:37.703" endtime="20220708 03:58:37.703"/>
</return>
<msg timestamp="20220708 03:58:37.703" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:37.561" endtime="20220708 03:58:37.703"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:37.703" endtime="20220708 03:58:37.703"/>
</return>
<msg timestamp="20220708 03:58:37.703" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:37.560" endtime="20220708 03:58:37.703"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220708 03:58:37.703" endtime="20220708 03:58:37.704"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:58:37.174" endtime="20220708 03:58:37.705"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:58:37.708" level="INFO">${url} = boards/62c7ab6c43004645d50ddeb3</msg>
<status status="PASS" starttime="20220708 03:58:37.707" endtime="20220708 03:58:37.708"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:58:38.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:37.708" endtime="20220708 03:58:38.147"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:38.147" endtime="20220708 03:58:38.147"/>
</return>
<msg timestamp="20220708 03:58:38.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:58:37.707" endtime="20220708 03:58:38.147"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:58:38.147" endtime="20220708 03:58:38.147"/>
</return>
<status status="PASS" starttime="20220708 03:58:37.706" endtime="20220708 03:58:38.148"/>
</kw>
<status status="PASS" starttime="20220708 03:58:37.706" endtime="20220708 03:58:38.148"/>
</kw>
<status status="PASS" starttime="20220708 03:58:37.706" endtime="20220708 03:58:38.148"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 03:58:38.148" endtime="20220708 03:58:38.149"/>
</kw>
<status status="PASS" starttime="20220708 03:58:37.705" endtime="20220708 03:58:38.149"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220708 03:58:36.030" endtime="20220708 03:58:38.149"/>
</suite>
<status status="PASS" starttime="20220708 03:58:19.811" endtime="20220708 03:58:38.154"/>
</suite>
<status status="PASS" starttime="20220708 03:58:19.791" endtime="20220708 03:58:38.156"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
