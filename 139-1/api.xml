<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 06:51:32.520" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:51:32.645" endtime="20220705 06:51:32.645"/>
</kw>
<status status="PASS" starttime="20220705 06:51:32.643" endtime="20220705 06:51:32.645"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:32.647" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:32.647" endtime="20220705 06:51:32.647"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:32.647" endtime="20220705 06:51:32.647"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:32.648" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:51:32.647" endtime="20220705 06:51:32.648"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:32.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:32.648" endtime="20220705 06:51:32.955"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:32.955" endtime="20220705 06:51:32.955"/>
</return>
<msg timestamp="20220705 06:51:32.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:32.646" endtime="20220705 06:51:32.956"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:32.956" endtime="20220705 06:51:32.956"/>
</return>
<msg timestamp="20220705 06:51:32.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:32.646" endtime="20220705 06:51:32.956"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:32.956" endtime="20220705 06:51:32.961"/>
</kw>
<status status="PASS" starttime="20220705 06:51:32.956" endtime="20220705 06:51:32.961"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:32.963" level="INFO">${url} = boards/62c3df7461876747955437f8</msg>
<status status="PASS" starttime="20220705 06:51:32.963" endtime="20220705 06:51:32.963"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:33.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:32.963" endtime="20220705 06:51:33.386"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:33.386" endtime="20220705 06:51:33.386"/>
</return>
<msg timestamp="20220705 06:51:33.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:32.962" endtime="20220705 06:51:33.386"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:33.386" endtime="20220705 06:51:33.386"/>
</return>
<status status="PASS" starttime="20220705 06:51:32.961" endtime="20220705 06:51:33.386"/>
</kw>
<status status="PASS" starttime="20220705 06:51:32.961" endtime="20220705 06:51:33.386"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:51:32.645" endtime="20220705 06:51:33.387"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:33.389" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:33.389" endtime="20220705 06:51:33.389"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:33.389" endtime="20220705 06:51:33.389"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:33.390" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:51:33.389" endtime="20220705 06:51:33.390"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:33.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:33.390" endtime="20220705 06:51:33.642"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:33.642" endtime="20220705 06:51:33.642"/>
</return>
<msg timestamp="20220705 06:51:33.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:33.388" endtime="20220705 06:51:33.642"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:33.642" endtime="20220705 06:51:33.642"/>
</return>
<msg timestamp="20220705 06:51:33.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:33.388" endtime="20220705 06:51:33.642"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:33.643" endtime="20220705 06:51:33.647"/>
</kw>
<status status="PASS" starttime="20220705 06:51:33.643" endtime="20220705 06:51:33.647"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:33.648" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:33.648" endtime="20220705 06:51:33.648"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:33.648" endtime="20220705 06:51:33.649"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:33.649" level="INFO">${url} = boards/62c3df7513f2d58f317a13ee</msg>
<status status="PASS" starttime="20220705 06:51:33.649" endtime="20220705 06:51:33.649"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:33.806" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:33.649" endtime="20220705 06:51:33.806"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:33.806" endtime="20220705 06:51:33.806"/>
</return>
<msg timestamp="20220705 06:51:33.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:33.648" endtime="20220705 06:51:33.807"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:33.807" endtime="20220705 06:51:33.807"/>
</return>
<status status="PASS" starttime="20220705 06:51:33.647" endtime="20220705 06:51:33.807"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:33.809" level="INFO">${url} = boards/62c3df7513f2d58f317a13ee</msg>
<status status="PASS" starttime="20220705 06:51:33.808" endtime="20220705 06:51:33.809"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:33.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:33.809" endtime="20220705 06:51:33.934"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:33.934" endtime="20220705 06:51:33.934"/>
</return>
<msg timestamp="20220705 06:51:33.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:33.808" endtime="20220705 06:51:33.935"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:33.935" endtime="20220705 06:51:33.935"/>
</return>
<msg timestamp="20220705 06:51:33.935" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:33.807" endtime="20220705 06:51:33.935"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:33.935" endtime="20220705 06:51:33.939"/>
</kw>
<status status="PASS" starttime="20220705 06:51:33.935" endtime="20220705 06:51:33.940"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:33.940" endtime="20220705 06:51:33.940"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:33.943" level="INFO">${url} = boards/62c3df7513f2d58f317a13ee</msg>
<status status="PASS" starttime="20220705 06:51:33.942" endtime="20220705 06:51:33.943"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:34.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:33.943" endtime="20220705 06:51:34.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:34.331" endtime="20220705 06:51:34.331"/>
</return>
<msg timestamp="20220705 06:51:34.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:33.942" endtime="20220705 06:51:34.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:34.331" endtime="20220705 06:51:34.331"/>
</return>
<status status="PASS" starttime="20220705 06:51:33.941" endtime="20220705 06:51:34.331"/>
</kw>
<status status="PASS" starttime="20220705 06:51:33.941" endtime="20220705 06:51:34.331"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:51:33.387" endtime="20220705 06:51:34.331"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:34.333" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:34.333" endtime="20220705 06:51:34.333"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:34.334" endtime="20220705 06:51:34.334"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:34.334" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:51:34.334" endtime="20220705 06:51:34.334"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:34.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:34.335" endtime="20220705 06:51:34.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:34.583" endtime="20220705 06:51:34.583"/>
</return>
<msg timestamp="20220705 06:51:34.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:34.333" endtime="20220705 06:51:34.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:34.583" endtime="20220705 06:51:34.583"/>
</return>
<msg timestamp="20220705 06:51:34.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:34.332" endtime="20220705 06:51:34.583"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:34.585" level="INFO">${url} = boards/62c3df76a29a392d1c4c60d1</msg>
<status status="PASS" starttime="20220705 06:51:34.585" endtime="20220705 06:51:34.585"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:35.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:34.585" endtime="20220705 06:51:35.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:35.029" endtime="20220705 06:51:35.029"/>
</return>
<msg timestamp="20220705 06:51:35.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:34.584" endtime="20220705 06:51:35.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:35.029" endtime="20220705 06:51:35.029"/>
</return>
<status status="PASS" starttime="20220705 06:51:34.583" endtime="20220705 06:51:35.029"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:35.031" level="INFO">${url} = boards/62c3df76a29a392d1c4c60d1</msg>
<status status="PASS" starttime="20220705 06:51:35.031" endtime="20220705 06:51:35.031"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:35.136" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:51:35.031" endtime="20220705 06:51:35.136"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:35.136" endtime="20220705 06:51:35.136"/>
</return>
<msg timestamp="20220705 06:51:35.137" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:51:35.030" endtime="20220705 06:51:35.137"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:35.137" endtime="20220705 06:51:35.137"/>
</return>
<status status="PASS" starttime="20220705 06:51:35.029" endtime="20220705 06:51:35.137"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:51:34.332" endtime="20220705 06:51:35.137"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:35.139" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:35.139" endtime="20220705 06:51:35.139"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:35.139" endtime="20220705 06:51:35.140"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:35.140" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:51:35.140" endtime="20220705 06:51:35.140"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:35.391" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:35.140" endtime="20220705 06:51:35.391"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:35.392" endtime="20220705 06:51:35.392"/>
</return>
<msg timestamp="20220705 06:51:35.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:35.139" endtime="20220705 06:51:35.392"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:35.392" endtime="20220705 06:51:35.392"/>
</return>
<msg timestamp="20220705 06:51:35.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:35.138" endtime="20220705 06:51:35.392"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:35.393" endtime="20220705 06:51:35.397"/>
</kw>
<status status="PASS" starttime="20220705 06:51:35.392" endtime="20220705 06:51:35.397"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:35.399" level="INFO">${url} = boards/62c3df771cec925ddadb675c</msg>
<status status="PASS" starttime="20220705 06:51:35.398" endtime="20220705 06:51:35.399"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:35.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:35.399" endtime="20220705 06:51:35.515"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:35.515" endtime="20220705 06:51:35.515"/>
</return>
<msg timestamp="20220705 06:51:35.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:35.398" endtime="20220705 06:51:35.515"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:35.515" endtime="20220705 06:51:35.515"/>
</return>
<msg timestamp="20220705 06:51:35.516" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:35.397" endtime="20220705 06:51:35.516"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:35.516" endtime="20220705 06:51:35.520"/>
</kw>
<status status="PASS" starttime="20220705 06:51:35.516" endtime="20220705 06:51:35.520"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:35.520" endtime="20220705 06:51:35.521"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:35.523" level="INFO">${url} = boards/62c3df771cec925ddadb675c</msg>
<status status="PASS" starttime="20220705 06:51:35.522" endtime="20220705 06:51:35.523"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:35.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:35.523" endtime="20220705 06:51:35.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:35.908" endtime="20220705 06:51:35.908"/>
</return>
<msg timestamp="20220705 06:51:35.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:35.522" endtime="20220705 06:51:35.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:35.908" endtime="20220705 06:51:35.908"/>
</return>
<status status="PASS" starttime="20220705 06:51:35.521" endtime="20220705 06:51:35.909"/>
</kw>
<status status="PASS" starttime="20220705 06:51:35.521" endtime="20220705 06:51:35.909"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:51:35.138" endtime="20220705 06:51:35.909"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:35.911" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:35.911" endtime="20220705 06:51:35.911"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:35.911" endtime="20220705 06:51:35.911"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:35.912" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:51:35.911" endtime="20220705 06:51:35.912"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:36.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:35.912" endtime="20220705 06:51:36.152"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:36.152" endtime="20220705 06:51:36.152"/>
</return>
<msg timestamp="20220705 06:51:36.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:35.910" endtime="20220705 06:51:36.153"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:36.153" endtime="20220705 06:51:36.153"/>
</return>
<msg timestamp="20220705 06:51:36.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:35.910" endtime="20220705 06:51:36.153"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:36.153" endtime="20220705 06:51:36.157"/>
</kw>
<status status="PASS" starttime="20220705 06:51:36.153" endtime="20220705 06:51:36.157"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:36.159" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:36.159" endtime="20220705 06:51:36.159"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:36.159" endtime="20220705 06:51:36.159"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:36.160" level="INFO">${url} = boards/62c3df777485e878ee3d9267</msg>
<status status="PASS" starttime="20220705 06:51:36.159" endtime="20220705 06:51:36.160"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:36.330" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:36.160" endtime="20220705 06:51:36.330"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:36.330" endtime="20220705 06:51:36.331"/>
</return>
<msg timestamp="20220705 06:51:36.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:36.158" endtime="20220705 06:51:36.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:36.331" endtime="20220705 06:51:36.331"/>
</return>
<status status="PASS" starttime="20220705 06:51:36.158" endtime="20220705 06:51:36.331"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:36.333" level="INFO">${url} = boards/62c3df777485e878ee3d9267</msg>
<status status="PASS" starttime="20220705 06:51:36.332" endtime="20220705 06:51:36.333"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:36.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:36.333" endtime="20220705 06:51:36.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:36.446" endtime="20220705 06:51:36.446"/>
</return>
<msg timestamp="20220705 06:51:36.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:36.332" endtime="20220705 06:51:36.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:36.447" endtime="20220705 06:51:36.447"/>
</return>
<msg timestamp="20220705 06:51:36.447" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:36.331" endtime="20220705 06:51:36.447"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:36.447" endtime="20220705 06:51:36.448"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:36.450" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:36.449" endtime="20220705 06:51:36.450"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:36.450" endtime="20220705 06:51:36.450"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:36.450" level="INFO">${url} = boards/62c3df777485e878ee3d9267</msg>
<status status="PASS" starttime="20220705 06:51:36.450" endtime="20220705 06:51:36.450"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:36.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:36.450" endtime="20220705 06:51:36.620"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:36.620" endtime="20220705 06:51:36.620"/>
</return>
<msg timestamp="20220705 06:51:36.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:36.449" endtime="20220705 06:51:36.620"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:36.620" endtime="20220705 06:51:36.620"/>
</return>
<status status="PASS" starttime="20220705 06:51:36.448" endtime="20220705 06:51:36.620"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:36.622" level="INFO">${url} = boards/62c3df777485e878ee3d9267</msg>
<status status="PASS" starttime="20220705 06:51:36.622" endtime="20220705 06:51:36.622"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:36.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:36.622" endtime="20220705 06:51:36.738"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:36.738" endtime="20220705 06:51:36.738"/>
</return>
<msg timestamp="20220705 06:51:36.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:36.621" endtime="20220705 06:51:36.738"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:36.739" endtime="20220705 06:51:36.739"/>
</return>
<msg timestamp="20220705 06:51:36.739" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:36.620" endtime="20220705 06:51:36.739"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:36.739" endtime="20220705 06:51:36.740"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:36.742" level="INFO">${url} = boards/62c3df777485e878ee3d9267</msg>
<status status="PASS" starttime="20220705 06:51:36.741" endtime="20220705 06:51:36.742"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:37.317" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:36.742" endtime="20220705 06:51:37.317"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:37.317" endtime="20220705 06:51:37.317"/>
</return>
<msg timestamp="20220705 06:51:37.317" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:36.741" endtime="20220705 06:51:37.317"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:37.317" endtime="20220705 06:51:37.317"/>
</return>
<status status="PASS" starttime="20220705 06:51:36.740" endtime="20220705 06:51:37.318"/>
</kw>
<status status="PASS" starttime="20220705 06:51:36.740" endtime="20220705 06:51:37.318"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:51:35.909" endtime="20220705 06:51:37.318"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 06:51:37.319" endtime="20220705 06:51:37.319"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 06:51:32.539" endtime="20220705 06:51:37.320"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:51:37.330" endtime="20220705 06:51:37.330"/>
</kw>
<status status="PASS" starttime="20220705 06:51:37.330" endtime="20220705 06:51:37.330"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:37.331" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:37.331" endtime="20220705 06:51:37.331"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:37.331" endtime="20220705 06:51:37.332"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:37.332" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:51:37.332" endtime="20220705 06:51:37.332"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:37.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:37.332" endtime="20220705 06:51:37.609"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:37.609" endtime="20220705 06:51:37.609"/>
</return>
<msg timestamp="20220705 06:51:37.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:37.331" endtime="20220705 06:51:37.609"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:37.609" endtime="20220705 06:51:37.609"/>
</return>
<msg timestamp="20220705 06:51:37.610" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:37.331" endtime="20220705 06:51:37.610"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:51:37.610" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3df793048076f78b6c97e</msg>
<status status="PASS" starttime="20220705 06:51:37.610" endtime="20220705 06:51:37.610"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:37.611" level="INFO">${url} = boards/62c3df793048076f78b6c97e/lists/</msg>
<status status="PASS" starttime="20220705 06:51:37.611" endtime="20220705 06:51:37.611"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:37.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:37.612" endtime="20220705 06:51:37.729"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:37.729" endtime="20220705 06:51:37.730"/>
</return>
<msg timestamp="20220705 06:51:37.730" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:37.611" endtime="20220705 06:51:37.730"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:37.730" endtime="20220705 06:51:37.730"/>
</return>
<msg timestamp="20220705 06:51:37.730" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:37.611" endtime="20220705 06:51:37.730"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:51:37.731" level="INFO">${TEST_SUITE_LIST_ID} = 62c3df793048076f78b6c985</msg>
<status status="PASS" starttime="20220705 06:51:37.730" endtime="20220705 06:51:37.731"/>
</kw>
<status status="PASS" starttime="20220705 06:51:37.330" endtime="20220705 06:51:37.731"/>
</kw>
<status status="PASS" starttime="20220705 06:51:37.330" endtime="20220705 06:51:37.731"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:37.733" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:37.733" endtime="20220705 06:51:37.733"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:37.733" endtime="20220705 06:51:37.733"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:37.734" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 06:51:37.733" endtime="20220705 06:51:37.734"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:37.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:37.734" endtime="20220705 06:51:37.987"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:37.987" endtime="20220705 06:51:37.987"/>
</return>
<msg timestamp="20220705 06:51:37.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:37.732" endtime="20220705 06:51:37.987"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:37.987" endtime="20220705 06:51:37.987"/>
</return>
<msg timestamp="20220705 06:51:37.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:37.732" endtime="20220705 06:51:37.987"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:37.988" endtime="20220705 06:51:37.992"/>
</kw>
<status status="PASS" starttime="20220705 06:51:37.987" endtime="20220705 06:51:37.993"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:37.993" endtime="20220705 06:51:37.993"/>
</return>
<msg timestamp="20220705 06:51:37.994" level="INFO">${CARD_ID} = 62c3df79aa1fd356d097e5d6</msg>
<status status="PASS" starttime="20220705 06:51:37.993" endtime="20220705 06:51:37.994"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:37.995" level="INFO">${url} = cards/62c3df79aa1fd356d097e5d6</msg>
<status status="PASS" starttime="20220705 06:51:37.994" endtime="20220705 06:51:37.995"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:38.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:37.995" endtime="20220705 06:51:38.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:38.245" endtime="20220705 06:51:38.245"/>
</return>
<msg timestamp="20220705 06:51:38.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:37.994" endtime="20220705 06:51:38.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:38.245" endtime="20220705 06:51:38.245"/>
</return>
<msg timestamp="20220705 06:51:38.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:37.994" endtime="20220705 06:51:38.245"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:38.246" endtime="20220705 06:51:38.246"/>
</return>
<msg timestamp="20220705 06:51:38.247" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 06:51:38.246" endtime="20220705 06:51:38.247"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:38.247" endtime="20220705 06:51:38.247"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:38.248" level="INFO">${url} = cards/62c3df79aa1fd356d097e5d6</msg>
<status status="PASS" starttime="20220705 06:51:38.248" endtime="20220705 06:51:38.248"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:38.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:38.249" endtime="20220705 06:51:38.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:38.469" endtime="20220705 06:51:38.469"/>
</return>
<msg timestamp="20220705 06:51:38.470" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:38.248" endtime="20220705 06:51:38.470"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:38.470" endtime="20220705 06:51:38.470"/>
</return>
<status status="PASS" starttime="20220705 06:51:38.247" endtime="20220705 06:51:38.470"/>
</kw>
<status status="PASS" starttime="20220705 06:51:38.247" endtime="20220705 06:51:38.470"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:51:37.731" endtime="20220705 06:51:38.470"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:38.472" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:38.472" endtime="20220705 06:51:38.472"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:38.472" endtime="20220705 06:51:38.473"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:38.473" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 06:51:38.473" endtime="20220705 06:51:38.473"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:38.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:38.473" endtime="20220705 06:51:38.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:38.686" endtime="20220705 06:51:38.686"/>
</return>
<msg timestamp="20220705 06:51:38.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:38.471" endtime="20220705 06:51:38.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:38.686" endtime="20220705 06:51:38.686"/>
</return>
<msg timestamp="20220705 06:51:38.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:38.471" endtime="20220705 06:51:38.686"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:38.687" endtime="20220705 06:51:38.687"/>
</return>
<msg timestamp="20220705 06:51:38.687" level="INFO">${CARD_ID} = 62c3df7a321d147032bdc1b6</msg>
<status status="PASS" starttime="20220705 06:51:38.686" endtime="20220705 06:51:38.687"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:38.689" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:38.689" endtime="20220705 06:51:38.689"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:38.689" endtime="20220705 06:51:38.690"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:38.690" level="INFO">${url} = cards/62c3df7a321d147032bdc1b6</msg>
<status status="PASS" starttime="20220705 06:51:38.690" endtime="20220705 06:51:38.690"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:38.889" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:38.690" endtime="20220705 06:51:38.889"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:38.889" endtime="20220705 06:51:38.889"/>
</return>
<msg timestamp="20220705 06:51:38.889" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:38.689" endtime="20220705 06:51:38.889"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:38.889" endtime="20220705 06:51:38.889"/>
</return>
<msg timestamp="20220705 06:51:38.889" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:38.688" endtime="20220705 06:51:38.889"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:38.889" endtime="20220705 06:51:38.889"/>
</return>
<status status="PASS" starttime="20220705 06:51:38.687" endtime="20220705 06:51:38.890"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:38.891" level="INFO">${url} = cards/62c3df7a321d147032bdc1b6</msg>
<status status="PASS" starttime="20220705 06:51:38.890" endtime="20220705 06:51:38.891"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:39.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:38.891" endtime="20220705 06:51:39.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:39.014" endtime="20220705 06:51:39.014"/>
</return>
<msg timestamp="20220705 06:51:39.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:38.890" endtime="20220705 06:51:39.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:39.014" endtime="20220705 06:51:39.014"/>
</return>
<msg timestamp="20220705 06:51:39.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:38.890" endtime="20220705 06:51:39.014"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:39.015" endtime="20220705 06:51:39.015"/>
</return>
<msg timestamp="20220705 06:51:39.016" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 06:51:39.015" endtime="20220705 06:51:39.016"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 06:51:39.016" endtime="20220705 06:51:39.016"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:39.018" level="INFO">${url} = cards/62c3df7a321d147032bdc1b6</msg>
<status status="PASS" starttime="20220705 06:51:39.017" endtime="20220705 06:51:39.018"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:39.247" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:39.018" endtime="20220705 06:51:39.247"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:39.247" endtime="20220705 06:51:39.247"/>
</return>
<msg timestamp="20220705 06:51:39.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:39.017" endtime="20220705 06:51:39.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:39.248" endtime="20220705 06:51:39.248"/>
</return>
<status status="PASS" starttime="20220705 06:51:39.017" endtime="20220705 06:51:39.248"/>
</kw>
<status status="PASS" starttime="20220705 06:51:39.016" endtime="20220705 06:51:39.248"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:51:38.470" endtime="20220705 06:51:39.248"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:39.250" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:39.250" endtime="20220705 06:51:39.250"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:39.251" endtime="20220705 06:51:39.251"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:39.251" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 06:51:39.251" endtime="20220705 06:51:39.251"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:39.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:39.252" endtime="20220705 06:51:39.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:39.457" endtime="20220705 06:51:39.457"/>
</return>
<msg timestamp="20220705 06:51:39.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:39.249" endtime="20220705 06:51:39.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:39.457" endtime="20220705 06:51:39.457"/>
</return>
<msg timestamp="20220705 06:51:39.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:39.249" endtime="20220705 06:51:39.457"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:39.458" endtime="20220705 06:51:39.458"/>
</return>
<msg timestamp="20220705 06:51:39.458" level="INFO">${CARD_ID} = 62c3df7b5d2f7554fe07097b</msg>
<status status="PASS" starttime="20220705 06:51:39.457" endtime="20220705 06:51:39.458"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:39.460" level="INFO">${url} = cards/62c3df7b5d2f7554fe07097b</msg>
<status status="PASS" starttime="20220705 06:51:39.459" endtime="20220705 06:51:39.460"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:39.722" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:39.460" endtime="20220705 06:51:39.722"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:39.722" endtime="20220705 06:51:39.722"/>
</return>
<msg timestamp="20220705 06:51:39.722" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:39.459" endtime="20220705 06:51:39.722"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:39.722" endtime="20220705 06:51:39.722"/>
</return>
<msg timestamp="20220705 06:51:39.722" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:39.459" endtime="20220705 06:51:39.722"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:39.723" endtime="20220705 06:51:39.724"/>
</kw>
<status status="PASS" starttime="20220705 06:51:39.722" endtime="20220705 06:51:39.725"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:39.726" level="INFO">${url} = cards/62c3df7b5d2f7554fe07097b</msg>
<status status="PASS" starttime="20220705 06:51:39.726" endtime="20220705 06:51:39.726"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:39.826" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:51:39.726" endtime="20220705 06:51:39.826"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:39.826" endtime="20220705 06:51:39.826"/>
</return>
<msg timestamp="20220705 06:51:39.826" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:51:39.725" endtime="20220705 06:51:39.826"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:39.826" endtime="20220705 06:51:39.826"/>
</return>
<status status="PASS" starttime="20220705 06:51:39.725" endtime="20220705 06:51:39.826"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:51:39.248" endtime="20220705 06:51:39.826"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:39.828" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:39.828" endtime="20220705 06:51:39.828"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:39.828" endtime="20220705 06:51:39.829"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:39.829" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 06:51:39.829" endtime="20220705 06:51:39.829"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:40.074" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:39.830" endtime="20220705 06:51:40.074"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:40.074" endtime="20220705 06:51:40.074"/>
</return>
<msg timestamp="20220705 06:51:40.074" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:39.828" endtime="20220705 06:51:40.074"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:40.074" endtime="20220705 06:51:40.074"/>
</return>
<msg timestamp="20220705 06:51:40.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:39.827" endtime="20220705 06:51:40.075"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:40.075" endtime="20220705 06:51:40.075"/>
</return>
<msg timestamp="20220705 06:51:40.076" level="INFO">${CARD_ID} = 62c3df7b224f6b893594590b</msg>
<status status="PASS" starttime="20220705 06:51:40.075" endtime="20220705 06:51:40.076"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:40.077" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:40.077" endtime="20220705 06:51:40.077"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:40.077" endtime="20220705 06:51:40.077"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:40.078" level="INFO">${url} = cards/62c3df7b224f6b893594590b</msg>
<status status="PASS" starttime="20220705 06:51:40.077" endtime="20220705 06:51:40.078"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:40.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:40.078" endtime="20220705 06:51:40.303"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:40.303" endtime="20220705 06:51:40.303"/>
</return>
<msg timestamp="20220705 06:51:40.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:40.076" endtime="20220705 06:51:40.304"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:40.304" endtime="20220705 06:51:40.304"/>
</return>
<msg timestamp="20220705 06:51:40.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:40.076" endtime="20220705 06:51:40.304"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:40.304" endtime="20220705 06:51:40.309"/>
</kw>
<status status="PASS" starttime="20220705 06:51:40.304" endtime="20220705 06:51:40.310"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:40.311" level="INFO">${url} = cards/62c3df7b224f6b893594590b</msg>
<status status="PASS" starttime="20220705 06:51:40.310" endtime="20220705 06:51:40.311"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:40.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:40.311" endtime="20220705 06:51:40.441"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:40.441" endtime="20220705 06:51:40.441"/>
</return>
<msg timestamp="20220705 06:51:40.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:40.310" endtime="20220705 06:51:40.441"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:40.441" endtime="20220705 06:51:40.442"/>
</return>
<msg timestamp="20220705 06:51:40.442" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:40.310" endtime="20220705 06:51:40.442"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:40.442" endtime="20220705 06:51:40.442"/>
</return>
<msg timestamp="20220705 06:51:40.443" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 06:51:40.442" endtime="20220705 06:51:40.443"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:40.443" endtime="20220705 06:51:40.443"/>
</return>
<msg timestamp="20220705 06:51:40.444" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 06:51:40.443" endtime="20220705 06:51:40.444"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:40.444" endtime="20220705 06:51:40.444"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:40.444" endtime="20220705 06:51:40.445"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:40.446" level="INFO">${url} = cards/62c3df7b224f6b893594590b</msg>
<status status="PASS" starttime="20220705 06:51:40.446" endtime="20220705 06:51:40.446"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:40.665" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:40.446" endtime="20220705 06:51:40.665"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:40.665" endtime="20220705 06:51:40.665"/>
</return>
<msg timestamp="20220705 06:51:40.665" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:40.445" endtime="20220705 06:51:40.665"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:40.665" endtime="20220705 06:51:40.665"/>
</return>
<status status="PASS" starttime="20220705 06:51:40.445" endtime="20220705 06:51:40.665"/>
</kw>
<status status="PASS" starttime="20220705 06:51:40.445" endtime="20220705 06:51:40.665"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:51:39.827" endtime="20220705 06:51:40.665"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:40.668" level="INFO">${url} = boards/62c3df793048076f78b6c97e</msg>
<status status="PASS" starttime="20220705 06:51:40.667" endtime="20220705 06:51:40.668"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:41.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:40.668" endtime="20220705 06:51:41.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:41.077" endtime="20220705 06:51:41.077"/>
</return>
<msg timestamp="20220705 06:51:41.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:40.667" endtime="20220705 06:51:41.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:41.078" endtime="20220705 06:51:41.078"/>
</return>
<status status="PASS" starttime="20220705 06:51:40.666" endtime="20220705 06:51:41.078"/>
</kw>
<status status="PASS" starttime="20220705 06:51:40.666" endtime="20220705 06:51:41.078"/>
</kw>
<status status="PASS" starttime="20220705 06:51:40.666" endtime="20220705 06:51:41.078"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:51:41.078" endtime="20220705 06:51:41.079"/>
</kw>
<status status="PASS" starttime="20220705 06:51:40.666" endtime="20220705 06:51:41.079"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 06:51:37.321" endtime="20220705 06:51:41.079"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:51:41.089" endtime="20220705 06:51:41.089"/>
</kw>
<status status="PASS" starttime="20220705 06:51:41.089" endtime="20220705 06:51:41.089"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:41.090" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:41.090" endtime="20220705 06:51:41.090"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:41.090" endtime="20220705 06:51:41.091"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:41.091" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:51:41.091" endtime="20220705 06:51:41.091"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:41.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.091" endtime="20220705 06:51:41.370"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:41.370" endtime="20220705 06:51:41.370"/>
</return>
<msg timestamp="20220705 06:51:41.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.090" endtime="20220705 06:51:41.370"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:41.370" endtime="20220705 06:51:41.370"/>
</return>
<msg timestamp="20220705 06:51:41.370" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.090" endtime="20220705 06:51:41.370"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:51:41.371" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3df7d9cb19251ac725a5e</msg>
<status status="PASS" starttime="20220705 06:51:41.371" endtime="20220705 06:51:41.371"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:41.372" level="INFO">${url} = boards/62c3df7d9cb19251ac725a5e/lists/</msg>
<status status="PASS" starttime="20220705 06:51:41.372" endtime="20220705 06:51:41.372"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:41.496" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.373" endtime="20220705 06:51:41.496"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:41.497" endtime="20220705 06:51:41.497"/>
</return>
<msg timestamp="20220705 06:51:41.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.372" endtime="20220705 06:51:41.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:41.497" endtime="20220705 06:51:41.497"/>
</return>
<msg timestamp="20220705 06:51:41.497" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.371" endtime="20220705 06:51:41.497"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:51:41.498" level="INFO">${TEST_SUITE_LIST_ID} = 62c3df7d9cb19251ac725a65</msg>
<status status="PASS" starttime="20220705 06:51:41.497" endtime="20220705 06:51:41.498"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:41.499" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:41.499" endtime="20220705 06:51:41.500"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:41.500" endtime="20220705 06:51:41.500"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:41.500" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 06:51:41.500" endtime="20220705 06:51:41.500"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:41.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.501" endtime="20220705 06:51:41.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:41.733" endtime="20220705 06:51:41.733"/>
</return>
<msg timestamp="20220705 06:51:41.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.499" endtime="20220705 06:51:41.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:41.733" endtime="20220705 06:51:41.733"/>
</return>
<msg timestamp="20220705 06:51:41.734" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.498" endtime="20220705 06:51:41.734"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:51:41.735" level="INFO">${TEST_SUITE_CARD_ID} = 62c3df7d7532230bbfcd1e3f</msg>
<status status="PASS" starttime="20220705 06:51:41.734" endtime="20220705 06:51:41.735"/>
</kw>
<status status="PASS" starttime="20220705 06:51:41.089" endtime="20220705 06:51:41.735"/>
</kw>
<status status="PASS" starttime="20220705 06:51:41.088" endtime="20220705 06:51:41.735"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:41.737" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:41.736" endtime="20220705 06:51:41.737"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:41.737" endtime="20220705 06:51:41.737"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:41.738" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 06:51:41.737" endtime="20220705 06:51:41.738"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:41.933" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.738" endtime="20220705 06:51:41.933"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:41.933" endtime="20220705 06:51:41.933"/>
</return>
<msg timestamp="20220705 06:51:41.933" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.736" endtime="20220705 06:51:41.933"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:41.933" endtime="20220705 06:51:41.933"/>
</return>
<msg timestamp="20220705 06:51:41.933" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.735" endtime="20220705 06:51:41.933"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:41.934" endtime="20220705 06:51:41.934"/>
</return>
<msg timestamp="20220705 06:51:41.935" level="INFO">${checklist_id} = 62c3df7d9f2efd2d646499d6</msg>
<status status="PASS" starttime="20220705 06:51:41.934" endtime="20220705 06:51:41.935"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:41.936" level="INFO">${url} = checklists/62c3df7d9f2efd2d646499d6</msg>
<status status="PASS" starttime="20220705 06:51:41.935" endtime="20220705 06:51:41.936"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:42.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.936" endtime="20220705 06:51:42.054"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:42.054" endtime="20220705 06:51:42.054"/>
</return>
<msg timestamp="20220705 06:51:42.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.935" endtime="20220705 06:51:42.054"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:42.054" endtime="20220705 06:51:42.055"/>
</return>
<msg timestamp="20220705 06:51:42.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:41.935" endtime="20220705 06:51:42.055"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:42.055" endtime="20220705 06:51:42.055"/>
</return>
<msg timestamp="20220705 06:51:42.056" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 06:51:42.055" endtime="20220705 06:51:42.056"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:42.056" endtime="20220705 06:51:42.056"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:42.058" level="INFO">${url} = checklists/62c3df7d9f2efd2d646499d6</msg>
<status status="PASS" starttime="20220705 06:51:42.057" endtime="20220705 06:51:42.058"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:42.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.058" endtime="20220705 06:51:42.255"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:42.255" endtime="20220705 06:51:42.255"/>
</return>
<msg timestamp="20220705 06:51:42.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.057" endtime="20220705 06:51:42.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:42.256" endtime="20220705 06:51:42.256"/>
</return>
<status status="PASS" starttime="20220705 06:51:42.056" endtime="20220705 06:51:42.256"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:51:41.735" endtime="20220705 06:51:42.256"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:42.259" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:42.258" endtime="20220705 06:51:42.259"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:42.259" endtime="20220705 06:51:42.259"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:42.260" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 06:51:42.259" endtime="20220705 06:51:42.260"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:42.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.260" endtime="20220705 06:51:42.433"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:42.434" endtime="20220705 06:51:42.434"/>
</return>
<msg timestamp="20220705 06:51:42.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.258" endtime="20220705 06:51:42.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:42.434" endtime="20220705 06:51:42.434"/>
</return>
<msg timestamp="20220705 06:51:42.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.257" endtime="20220705 06:51:42.434"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:42.435" endtime="20220705 06:51:42.435"/>
</return>
<msg timestamp="20220705 06:51:42.436" level="INFO">${checklist_id} = 62c3df7ebec93130c7878320</msg>
<status status="PASS" starttime="20220705 06:51:42.434" endtime="20220705 06:51:42.436"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:42.437" level="INFO">${url} = checklists/62c3df7ebec93130c7878320</msg>
<status status="PASS" starttime="20220705 06:51:42.437" endtime="20220705 06:51:42.437"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:42.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.437" endtime="20220705 06:51:42.616"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:42.616" endtime="20220705 06:51:42.616"/>
</return>
<msg timestamp="20220705 06:51:42.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.436" endtime="20220705 06:51:42.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:42.617" endtime="20220705 06:51:42.617"/>
</return>
<msg timestamp="20220705 06:51:42.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.436" endtime="20220705 06:51:42.617"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:42.618" endtime="20220705 06:51:42.619"/>
</kw>
<status status="PASS" starttime="20220705 06:51:42.617" endtime="20220705 06:51:42.619"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:42.620" level="INFO">${url} = checklists/62c3df7ebec93130c7878320</msg>
<status status="PASS" starttime="20220705 06:51:42.620" endtime="20220705 06:51:42.621"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:42.730" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:51:42.621" endtime="20220705 06:51:42.730"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:42.730" endtime="20220705 06:51:42.730"/>
</return>
<msg timestamp="20220705 06:51:42.730" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:51:42.620" endtime="20220705 06:51:42.730"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:42.730" endtime="20220705 06:51:42.730"/>
</return>
<status status="PASS" starttime="20220705 06:51:42.619" endtime="20220705 06:51:42.730"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:51:42.256" endtime="20220705 06:51:42.730"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:42.733" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:42.732" endtime="20220705 06:51:42.734"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:42.734" endtime="20220705 06:51:42.734"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:42.735" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 06:51:42.734" endtime="20220705 06:51:42.735"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:42.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.735" endtime="20220705 06:51:42.919"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:42.919" endtime="20220705 06:51:42.919"/>
</return>
<msg timestamp="20220705 06:51:42.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.732" endtime="20220705 06:51:42.919"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:42.919" endtime="20220705 06:51:42.919"/>
</return>
<msg timestamp="20220705 06:51:42.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.731" endtime="20220705 06:51:42.919"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:42.920" endtime="20220705 06:51:42.920"/>
</return>
<msg timestamp="20220705 06:51:42.920" level="INFO">${checklist_id} = 62c3df7e6277bb86c8dbae84</msg>
<status status="PASS" starttime="20220705 06:51:42.919" endtime="20220705 06:51:42.920"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:42.922" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:42.921" endtime="20220705 06:51:42.922"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:42.922" endtime="20220705 06:51:42.922"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:42.922" level="INFO">${url} = checklists/62c3df7e6277bb86c8dbae84</msg>
<status status="PASS" starttime="20220705 06:51:42.922" endtime="20220705 06:51:42.922"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:43.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.922" endtime="20220705 06:51:43.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:43.078" endtime="20220705 06:51:43.078"/>
</return>
<msg timestamp="20220705 06:51:43.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.921" endtime="20220705 06:51:43.079"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:43.079" endtime="20220705 06:51:43.079"/>
</return>
<msg timestamp="20220705 06:51:43.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:42.921" endtime="20220705 06:51:43.079"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:43.080" level="INFO">${url} = checklists/62c3df7e6277bb86c8dbae84</msg>
<status status="PASS" starttime="20220705 06:51:43.080" endtime="20220705 06:51:43.080"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:43.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:43.080" endtime="20220705 06:51:43.202"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:43.202" endtime="20220705 06:51:43.202"/>
</return>
<msg timestamp="20220705 06:51:43.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:43.079" endtime="20220705 06:51:43.202"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:43.202" endtime="20220705 06:51:43.202"/>
</return>
<msg timestamp="20220705 06:51:43.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:43.079" endtime="20220705 06:51:43.202"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:43.203" endtime="20220705 06:51:43.203"/>
</return>
<msg timestamp="20220705 06:51:43.204" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 06:51:43.203" endtime="20220705 06:51:43.204"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:43.204" endtime="20220705 06:51:43.204"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:43.214" level="INFO">${url} = checklists/62c3df7e6277bb86c8dbae84</msg>
<status status="PASS" starttime="20220705 06:51:43.214" endtime="20220705 06:51:43.214"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:43.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:43.214" endtime="20220705 06:51:43.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:43.390" endtime="20220705 06:51:43.390"/>
</return>
<msg timestamp="20220705 06:51:43.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:43.213" endtime="20220705 06:51:43.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:43.390" endtime="20220705 06:51:43.390"/>
</return>
<status status="PASS" starttime="20220705 06:51:43.204" endtime="20220705 06:51:43.390"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:51:42.731" endtime="20220705 06:51:43.391"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:43.392" level="INFO">${url} = boards/62c3df7d9cb19251ac725a5e</msg>
<status status="PASS" starttime="20220705 06:51:43.392" endtime="20220705 06:51:43.393"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:43.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:43.393" endtime="20220705 06:51:43.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:43.878" endtime="20220705 06:51:43.878"/>
</return>
<msg timestamp="20220705 06:51:43.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:43.392" endtime="20220705 06:51:43.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:43.878" endtime="20220705 06:51:43.878"/>
</return>
<status status="PASS" starttime="20220705 06:51:43.392" endtime="20220705 06:51:43.879"/>
</kw>
<status status="PASS" starttime="20220705 06:51:43.391" endtime="20220705 06:51:43.879"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:51:43.879" endtime="20220705 06:51:43.880"/>
</kw>
<status status="PASS" starttime="20220705 06:51:43.391" endtime="20220705 06:51:43.880"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 06:51:41.080" endtime="20220705 06:51:43.880"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:51:43.890" endtime="20220705 06:51:43.890"/>
</kw>
<status status="PASS" starttime="20220705 06:51:43.890" endtime="20220705 06:51:43.891"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:43.891" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:43.891" endtime="20220705 06:51:43.891"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:43.892" endtime="20220705 06:51:43.892"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:43.892" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:51:43.892" endtime="20220705 06:51:43.892"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:44.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:43.893" endtime="20220705 06:51:44.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:44.164" endtime="20220705 06:51:44.164"/>
</return>
<msg timestamp="20220705 06:51:44.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:43.891" endtime="20220705 06:51:44.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:44.164" endtime="20220705 06:51:44.164"/>
</return>
<msg timestamp="20220705 06:51:44.164" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:43.891" endtime="20220705 06:51:44.164"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:51:44.165" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3df8033a1c96a53a52f5b</msg>
<status status="PASS" starttime="20220705 06:51:44.165" endtime="20220705 06:51:44.165"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:44.864" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:44.166" endtime="20220705 06:51:44.864"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:51:44.865" level="INFO">${TEST_SUITE_LIST_ID} = 62c3df8033a1c96a53a52f62</msg>
<status status="PASS" starttime="20220705 06:51:44.865" endtime="20220705 06:51:44.866"/>
</kw>
<status status="PASS" starttime="20220705 06:51:43.891" endtime="20220705 06:51:44.866"/>
</kw>
<status status="PASS" starttime="20220705 06:51:43.889" endtime="20220705 06:51:44.866"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:44.868" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:44.868" endtime="20220705 06:51:44.868"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:44.868" endtime="20220705 06:51:44.868"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:44.869" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 06:51:44.868" endtime="20220705 06:51:44.869"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:45.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:44.869" endtime="20220705 06:51:45.023"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:45.023" endtime="20220705 06:51:45.023"/>
</return>
<msg timestamp="20220705 06:51:45.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:44.867" endtime="20220705 06:51:45.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:45.024" endtime="20220705 06:51:45.024"/>
</return>
<msg timestamp="20220705 06:51:45.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:44.866" endtime="20220705 06:51:45.024"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:45.024" endtime="20220705 06:51:45.026"/>
</kw>
<status status="PASS" starttime="20220705 06:51:45.024" endtime="20220705 06:51:45.026"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:45.027" endtime="20220705 06:51:45.027"/>
</return>
<msg timestamp="20220705 06:51:45.027" level="INFO">${LABEL_ID} = 62c3df80c371492c5d79bd7a</msg>
<status status="PASS" starttime="20220705 06:51:45.026" endtime="20220705 06:51:45.027"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:45.028" level="INFO">${url} = labels/62c3df80c371492c5d79bd7a</msg>
<status status="PASS" starttime="20220705 06:51:45.028" endtime="20220705 06:51:45.028"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:45.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.028" endtime="20220705 06:51:45.145"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:45.145" endtime="20220705 06:51:45.145"/>
</return>
<msg timestamp="20220705 06:51:45.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.028" endtime="20220705 06:51:45.145"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:45.145" endtime="20220705 06:51:45.145"/>
</return>
<msg timestamp="20220705 06:51:45.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.027" endtime="20220705 06:51:45.146"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:45.146" endtime="20220705 06:51:45.146"/>
</return>
<msg timestamp="20220705 06:51:45.147" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 06:51:45.146" endtime="20220705 06:51:45.147"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:45.147" endtime="20220705 06:51:45.147"/>
</return>
<msg timestamp="20220705 06:51:45.148" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 06:51:45.147" endtime="20220705 06:51:45.148"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:45.148" endtime="20220705 06:51:45.148"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:45.148" endtime="20220705 06:51:45.149"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:45.150" level="INFO">${url} = labels/62c3df80c371492c5d79bd7a</msg>
<status status="PASS" starttime="20220705 06:51:45.150" endtime="20220705 06:51:45.150"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:45.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.150" endtime="20220705 06:51:45.343"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:45.343" endtime="20220705 06:51:45.343"/>
</return>
<msg timestamp="20220705 06:51:45.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.149" endtime="20220705 06:51:45.344"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:45.344" endtime="20220705 06:51:45.344"/>
</return>
<status status="PASS" starttime="20220705 06:51:45.149" endtime="20220705 06:51:45.344"/>
</kw>
<status status="PASS" starttime="20220705 06:51:45.149" endtime="20220705 06:51:45.344"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:51:44.866" endtime="20220705 06:51:45.344"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:45.346" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:45.346" endtime="20220705 06:51:45.346"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:45.346" endtime="20220705 06:51:45.346"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:45.347" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 06:51:45.346" endtime="20220705 06:51:45.347"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:45.526" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.347" endtime="20220705 06:51:45.526"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:45.527" endtime="20220705 06:51:45.527"/>
</return>
<msg timestamp="20220705 06:51:45.527" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.345" endtime="20220705 06:51:45.527"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:45.527" endtime="20220705 06:51:45.527"/>
</return>
<msg timestamp="20220705 06:51:45.527" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.345" endtime="20220705 06:51:45.527"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:45.528" endtime="20220705 06:51:45.530"/>
</kw>
<status status="PASS" starttime="20220705 06:51:45.527" endtime="20220705 06:51:45.530"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:45.530" endtime="20220705 06:51:45.530"/>
</return>
<msg timestamp="20220705 06:51:45.531" level="INFO">${LABEL_ID} = 62c3df811ba0985544d0d77f</msg>
<status status="PASS" starttime="20220705 06:51:45.530" endtime="20220705 06:51:45.531"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:45.532" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:45.532" endtime="20220705 06:51:45.532"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:45.532" endtime="20220705 06:51:45.532"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:45.532" level="INFO">${url} = labels/62c3df811ba0985544d0d77f</msg>
<status status="PASS" starttime="20220705 06:51:45.532" endtime="20220705 06:51:45.532"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:45.703" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.532" endtime="20220705 06:51:45.703"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:45.704" endtime="20220705 06:51:45.704"/>
</return>
<msg timestamp="20220705 06:51:45.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.531" endtime="20220705 06:51:45.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:45.704" endtime="20220705 06:51:45.704"/>
</return>
<msg timestamp="20220705 06:51:45.704" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.531" endtime="20220705 06:51:45.704"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:45.705" endtime="20220705 06:51:45.705"/>
</return>
<msg timestamp="20220705 06:51:45.705" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 06:51:45.704" endtime="20220705 06:51:45.705"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:45.706" endtime="20220705 06:51:45.706"/>
</return>
<msg timestamp="20220705 06:51:45.706" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 06:51:45.705" endtime="20220705 06:51:45.706"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:45.706" endtime="20220705 06:51:45.707"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:45.707" endtime="20220705 06:51:45.707"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:45.708" level="INFO">${url} = labels/62c3df811ba0985544d0d77f</msg>
<status status="PASS" starttime="20220705 06:51:45.708" endtime="20220705 06:51:45.709"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:45.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.709" endtime="20220705 06:51:45.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:45.883" endtime="20220705 06:51:45.883"/>
</return>
<msg timestamp="20220705 06:51:45.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.708" endtime="20220705 06:51:45.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:45.884" endtime="20220705 06:51:45.884"/>
</return>
<status status="PASS" starttime="20220705 06:51:45.707" endtime="20220705 06:51:45.884"/>
</kw>
<status status="PASS" starttime="20220705 06:51:45.707" endtime="20220705 06:51:45.884"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:51:45.344" endtime="20220705 06:51:45.884"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:45.886" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:45.886" endtime="20220705 06:51:45.886"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:45.886" endtime="20220705 06:51:45.886"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:45.887" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 06:51:45.886" endtime="20220705 06:51:45.887"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:46.044" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.887" endtime="20220705 06:51:46.044"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:46.044" endtime="20220705 06:51:46.044"/>
</return>
<msg timestamp="20220705 06:51:46.044" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.885" endtime="20220705 06:51:46.044"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:46.044" endtime="20220705 06:51:46.045"/>
</return>
<msg timestamp="20220705 06:51:46.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:45.885" endtime="20220705 06:51:46.045"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:51:46.045" endtime="20220705 06:51:46.045"/>
</return>
<msg timestamp="20220705 06:51:46.046" level="INFO">${LABEL_ID} = 62c3df81ce21ad7d93039bb0</msg>
<status status="PASS" starttime="20220705 06:51:46.045" endtime="20220705 06:51:46.046"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:46.047" level="INFO">${url} = labels/62c3df81ce21ad7d93039bb0</msg>
<status status="PASS" starttime="20220705 06:51:46.047" endtime="20220705 06:51:46.047"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:46.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:46.047" endtime="20220705 06:51:46.224"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:46.224" endtime="20220705 06:51:46.224"/>
</return>
<msg timestamp="20220705 06:51:46.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:46.047" endtime="20220705 06:51:46.224"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:46.224" endtime="20220705 06:51:46.224"/>
</return>
<status status="PASS" starttime="20220705 06:51:46.046" endtime="20220705 06:51:46.224"/>
</kw>
<status status="PASS" starttime="20220705 06:51:46.046" endtime="20220705 06:51:46.224"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:46.225" level="INFO">${url} = labels/62c3df81ce21ad7d93039bb0</msg>
<status status="PASS" starttime="20220705 06:51:46.225" endtime="20220705 06:51:46.225"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:46.333" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:51:46.226" endtime="20220705 06:51:46.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:46.334" endtime="20220705 06:51:46.334"/>
</return>
<msg timestamp="20220705 06:51:46.334" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:51:46.225" endtime="20220705 06:51:46.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:46.334" endtime="20220705 06:51:46.334"/>
</return>
<status status="PASS" starttime="20220705 06:51:46.224" endtime="20220705 06:51:46.334"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:51:45.884" endtime="20220705 06:51:46.334"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:46.336" level="INFO">${url} = boards/62c3df8033a1c96a53a52f5b</msg>
<status status="PASS" starttime="20220705 06:51:46.336" endtime="20220705 06:51:46.336"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:46.762" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:46.336" endtime="20220705 06:51:46.762"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:46.763" endtime="20220705 06:51:46.763"/>
</return>
<msg timestamp="20220705 06:51:46.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:46.336" endtime="20220705 06:51:46.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:46.763" endtime="20220705 06:51:46.763"/>
</return>
<status status="PASS" starttime="20220705 06:51:46.335" endtime="20220705 06:51:46.763"/>
</kw>
<status status="PASS" starttime="20220705 06:51:46.335" endtime="20220705 06:51:46.763"/>
</kw>
<status status="PASS" starttime="20220705 06:51:46.335" endtime="20220705 06:51:46.763"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:51:46.763" endtime="20220705 06:51:46.764"/>
</kw>
<status status="PASS" starttime="20220705 06:51:46.335" endtime="20220705 06:51:46.764"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 06:51:43.881" endtime="20220705 06:51:46.764"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:51:46.774" endtime="20220705 06:51:46.774"/>
</kw>
<status status="PASS" starttime="20220705 06:51:46.774" endtime="20220705 06:51:46.774"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:46.775" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:46.775" endtime="20220705 06:51:46.775"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:46.775" endtime="20220705 06:51:46.776"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:46.776" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:51:46.776" endtime="20220705 06:51:46.776"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:47.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:46.776" endtime="20220705 06:51:47.064"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:47.064" endtime="20220705 06:51:47.064"/>
</return>
<msg timestamp="20220705 06:51:47.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:46.775" endtime="20220705 06:51:47.064"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:47.064" endtime="20220705 06:51:47.064"/>
</return>
<msg timestamp="20220705 06:51:47.064" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:46.774" endtime="20220705 06:51:47.064"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:51:47.065" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3df82025dc026d8ea11b6</msg>
<status status="PASS" starttime="20220705 06:51:47.065" endtime="20220705 06:51:47.065"/>
</kw>
<status status="PASS" starttime="20220705 06:51:47.064" endtime="20220705 06:51:47.065"/>
</kw>
<status status="PASS" starttime="20220705 06:51:46.774" endtime="20220705 06:51:47.066"/>
</kw>
<status status="PASS" starttime="20220705 06:51:46.773" endtime="20220705 06:51:47.066"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:47.067" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:47.067" endtime="20220705 06:51:47.067"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:47.067" endtime="20220705 06:51:47.068"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:47.068" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 06:51:47.068" endtime="20220705 06:51:47.068"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:47.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.068" endtime="20220705 06:51:47.236"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:47.236" endtime="20220705 06:51:47.237"/>
</return>
<msg timestamp="20220705 06:51:47.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.067" endtime="20220705 06:51:47.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:47.237" endtime="20220705 06:51:47.237"/>
</return>
<msg timestamp="20220705 06:51:47.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.066" endtime="20220705 06:51:47.237"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:47.238" endtime="20220705 06:51:47.239"/>
</kw>
<status status="PASS" starttime="20220705 06:51:47.237" endtime="20220705 06:51:47.240"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:51:47.066" endtime="20220705 06:51:47.240"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:47.241" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:47.241" endtime="20220705 06:51:47.241"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:47.242" endtime="20220705 06:51:47.242"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:47.242" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 06:51:47.242" endtime="20220705 06:51:47.243"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:47.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.243" endtime="20220705 06:51:47.428"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:47.428" endtime="20220705 06:51:47.428"/>
</return>
<msg timestamp="20220705 06:51:47.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.241" endtime="20220705 06:51:47.428"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:47.428" endtime="20220705 06:51:47.428"/>
</return>
<msg timestamp="20220705 06:51:47.429" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.240" endtime="20220705 06:51:47.429"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:47.429" endtime="20220705 06:51:47.431"/>
</kw>
<status status="PASS" starttime="20220705 06:51:47.429" endtime="20220705 06:51:47.431"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:47.432" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:47.432" endtime="20220705 06:51:47.432"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:47.433" endtime="20220705 06:51:47.433"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:47.433" level="INFO">${url} = lists/62c3df83a0942a699e962ed1</msg>
<status status="PASS" starttime="20220705 06:51:47.433" endtime="20220705 06:51:47.433"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:47.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.433" endtime="20220705 06:51:47.570"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:47.570" endtime="20220705 06:51:47.570"/>
</return>
<msg timestamp="20220705 06:51:47.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.432" endtime="20220705 06:51:47.570"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:47.570" endtime="20220705 06:51:47.570"/>
</return>
<status status="PASS" starttime="20220705 06:51:47.431" endtime="20220705 06:51:47.570"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:47.572" level="INFO">${url} = lists/62c3df83a0942a699e962ed1</msg>
<status status="PASS" starttime="20220705 06:51:47.572" endtime="20220705 06:51:47.572"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:47.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.572" endtime="20220705 06:51:47.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:47.681" endtime="20220705 06:51:47.681"/>
</return>
<msg timestamp="20220705 06:51:47.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.571" endtime="20220705 06:51:47.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:47.682" endtime="20220705 06:51:47.682"/>
</return>
<msg timestamp="20220705 06:51:47.682" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.570" endtime="20220705 06:51:47.682"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:51:47.682" endtime="20220705 06:51:47.684"/>
</kw>
<status status="PASS" starttime="20220705 06:51:47.682" endtime="20220705 06:51:47.684"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:51:47.684" endtime="20220705 06:51:47.685"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:51:47.240" endtime="20220705 06:51:47.685"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:47.687" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:47.687" endtime="20220705 06:51:47.687"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:47.687" endtime="20220705 06:51:47.688"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:47.689" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 06:51:47.688" endtime="20220705 06:51:47.689"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:47.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.689" endtime="20220705 06:51:47.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:47.853" endtime="20220705 06:51:47.853"/>
</return>
<msg timestamp="20220705 06:51:47.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.686" endtime="20220705 06:51:47.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:47.853" endtime="20220705 06:51:47.853"/>
</return>
<msg timestamp="20220705 06:51:47.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.686" endtime="20220705 06:51:47.853"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:51:47.855" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:51:47.855" endtime="20220705 06:51:47.855"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:51:47.855" endtime="20220705 06:51:47.855"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:47.856" level="INFO">${url} = lists/62c3df83688e8e6deab392b4/closed</msg>
<status status="PASS" starttime="20220705 06:51:47.855" endtime="20220705 06:51:47.856"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:51:48.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.856" endtime="20220705 06:51:48.009"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:48.009" endtime="20220705 06:51:48.009"/>
</return>
<msg timestamp="20220705 06:51:48.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:47.854" endtime="20220705 06:51:48.009"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:48.009" endtime="20220705 06:51:48.009"/>
</return>
<status status="PASS" starttime="20220705 06:51:47.853" endtime="20220705 06:51:48.009"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:48.011" level="INFO">${url} = lists/62c3df83688e8e6deab392b4</msg>
<status status="PASS" starttime="20220705 06:51:48.011" endtime="20220705 06:51:48.011"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:51:48.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:48.011" endtime="20220705 06:51:48.125"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:48.125" endtime="20220705 06:51:48.125"/>
</return>
<msg timestamp="20220705 06:51:48.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:48.010" endtime="20220705 06:51:48.125"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:48.125" endtime="20220705 06:51:48.125"/>
</return>
<msg timestamp="20220705 06:51:48.125" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:48.010" endtime="20220705 06:51:48.126"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 06:51:48.126" endtime="20220705 06:51:48.126"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:51:47.685" endtime="20220705 06:51:48.126"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:51:48.129" level="INFO">${url} = boards/62c3df82025dc026d8ea11b6</msg>
<status status="PASS" starttime="20220705 06:51:48.128" endtime="20220705 06:51:48.129"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:51:48.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:48.129" endtime="20220705 06:51:48.558"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:48.558" endtime="20220705 06:51:48.558"/>
</return>
<msg timestamp="20220705 06:51:48.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:51:48.128" endtime="20220705 06:51:48.558"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:51:48.558" endtime="20220705 06:51:48.558"/>
</return>
<status status="PASS" starttime="20220705 06:51:48.127" endtime="20220705 06:51:48.558"/>
</kw>
<status status="PASS" starttime="20220705 06:51:48.127" endtime="20220705 06:51:48.559"/>
</kw>
<status status="PASS" starttime="20220705 06:51:48.127" endtime="20220705 06:51:48.559"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:51:48.559" endtime="20220705 06:51:48.560"/>
</kw>
<status status="PASS" starttime="20220705 06:51:48.127" endtime="20220705 06:51:48.560"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 06:51:46.766" endtime="20220705 06:51:48.560"/>
</suite>
<status status="PASS" starttime="20220705 06:51:32.538" endtime="20220705 06:51:48.561"/>
</suite>
<status status="PASS" starttime="20220705 06:51:32.521" endtime="20220705 06:51:48.564"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
