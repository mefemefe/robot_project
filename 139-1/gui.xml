<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 06:52:29.563" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Gui" source="/trello/gui">
<suite id="s1-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:52:29.824" endtime="20220705 06:52:29.824"/>
</kw>
<status status="PASS" starttime="20220705 06:52:29.824" endtime="20220705 06:52:29.824"/>
</kw>
<status status="PASS" starttime="20220705 06:52:29.823" endtime="20220705 06:52:29.824"/>
</kw>
<test id="s1-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:52:29.826" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:52:29.826" endtime="20220705 06:52:31.786"/>
</kw>
<status status="PASS" starttime="20220705 06:52:29.826" endtime="20220705 06:52:31.786"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:52:31.786" endtime="20220705 06:52:31.786"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:52:31.786" endtime="20220705 06:52:31.786"/>
</branch>
<status status="PASS" starttime="20220705 06:52:29.826" endtime="20220705 06:52:31.786"/>
</if>
<status status="PASS" starttime="20220705 06:52:29.825" endtime="20220705 06:52:31.786"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:52:31.786" endtime="20220705 06:52:31.907"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:52:31.926" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:52:31.907" endtime="20220705 06:52:31.926"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:52:31.926" endtime="20220705 06:52:31.927"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:52:31.926" endtime="20220705 06:52:31.927"/>
</branch>
<status status="PASS" starttime="20220705 06:52:31.926" endtime="20220705 06:52:31.927"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:31.927" endtime="20220705 06:52:31.985"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:31.986" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:52:31.985" endtime="20220705 06:52:32.109"/>
</kw>
<status status="PASS" starttime="20220705 06:52:31.927" endtime="20220705 06:52:32.109"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:52:32.109" endtime="20220705 06:52:32.897"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:52:32.911" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:52:32.897" endtime="20220705 06:52:32.911"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:52:32.912" endtime="20220705 06:52:32.988"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:32.988" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:52:32.988" endtime="20220705 06:52:34.285"/>
</kw>
<status status="PASS" starttime="20220705 06:52:32.911" endtime="20220705 06:52:34.285"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:52:34.285" endtime="20220705 06:52:34.285"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:52:34.285" endtime="20220705 06:52:34.285"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:52:34.285" endtime="20220705 06:52:34.286"/>
</branch>
<status status="PASS" starttime="20220705 06:52:32.911" endtime="20220705 06:52:34.286"/>
</if>
<status status="PASS" starttime="20220705 06:52:32.897" endtime="20220705 06:52:34.286"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:52:34.286" endtime="20220705 06:52:34.321"/>
</kw>
<status status="PASS" starttime="20220705 06:52:34.286" endtime="20220705 06:52:34.321"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:34.322" endtime="20220705 06:52:34.382"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:34.383" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:52:34.444" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:52:34.518" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:52:34.383" endtime="20220705 06:52:34.518"/>
</kw>
<status status="PASS" starttime="20220705 06:52:34.321" endtime="20220705 06:52:34.518"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:52:34.540" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3df...</msg>
<status status="PASS" starttime="20220705 06:52:34.518" endtime="20220705 06:52:34.540"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:52:34.540" endtime="20220705 06:52:34.540"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:52:34.541" endtime="20220705 06:52:34.541"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:52:34.540" endtime="20220705 06:52:34.541"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:52:34.541" endtime="20220705 06:52:34.605"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:34.605" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:52:34.605" endtime="20220705 06:52:34.710"/>
</kw>
<status status="PASS" starttime="20220705 06:52:34.541" endtime="20220705 06:52:34.710"/>
</branch>
<status status="PASS" starttime="20220705 06:52:34.540" endtime="20220705 06:52:34.710"/>
</if>
<status status="PASS" starttime="20220705 06:52:34.518" endtime="20220705 06:52:34.710"/>
</kw>
<status status="PASS" starttime="20220705 06:52:31.907" endtime="20220705 06:52:34.710"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:52:34.710" endtime="20220705 06:52:38.686"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:38.687" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220705 06:52:38.687" endtime="20220705 06:52:38.863"/>
</kw>
<status status="PASS" starttime="20220705 06:52:38.686" endtime="20220705 06:52:38.863"/>
</kw>
<status status="PASS" starttime="20220705 06:52:34.710" endtime="20220705 06:52:38.863"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:38.863" endtime="20220705 06:52:38.971"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:38.972" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220705 06:52:38.972" endtime="20220705 06:52:39.184"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:52:39.184" endtime="20220705 06:52:39.503"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:39.504" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220705 06:52:39.504" endtime="20220705 06:52:39.586"/>
</kw>
<status status="PASS" starttime="20220705 06:52:38.863" endtime="20220705 06:52:39.586"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:39.586" endtime="20220705 06:52:40.783"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 06:52:40.784" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220705 06:52:40.783" endtime="20220705 06:52:40.835"/>
</kw>
<status status="PASS" starttime="20220705 06:52:39.586" endtime="20220705 06:52:40.835"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:40.836" endtime="20220705 06:52:40.889"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:40.889" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 06:52:40.889" endtime="20220705 06:52:40.971"/>
</kw>
<status status="PASS" starttime="20220705 06:52:40.836" endtime="20220705 06:52:40.972"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:40.972" endtime="20220705 06:52:41.031"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:41.031" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220705 06:52:41.031" endtime="20220705 06:52:41.174"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:41.174" endtime="20220705 06:52:41.268"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:41.269" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220705 06:52:41.269" endtime="20220705 06:52:41.349"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:41.349" endtime="20220705 06:52:41.446"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:41.447" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220705 06:52:41.447" endtime="20220705 06:52:41.563"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:41.563" endtime="20220705 06:52:42.116"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:42.117" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220705 06:52:42.117" endtime="20220705 06:52:42.184"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:42.184" endtime="20220705 06:52:42.218"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:42.219" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220705 06:52:42.218" endtime="20220705 06:52:42.275"/>
</kw>
<status status="PASS" starttime="20220705 06:52:40.972" endtime="20220705 06:52:42.275"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:52:42.275" endtime="20220705 06:52:42.381"/>
</kw>
<status status="PASS" starttime="20220705 06:52:40.835" endtime="20220705 06:52:42.381"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:52:29.825" endtime="20220705 06:52:42.381"/>
</test>
<test id="s1-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:52:42.384" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:52:42.384" endtime="20220705 06:52:42.384"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:52:42.384" endtime="20220705 06:52:42.384"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:52:42.385" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:52:42.384" endtime="20220705 06:52:42.385"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:52:42.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:52:42.386" endtime="20220705 06:52:42.676"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:52:42.676" endtime="20220705 06:52:42.676"/>
</return>
<msg timestamp="20220705 06:52:42.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:52:42.383" endtime="20220705 06:52:42.676"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:52:42.676" endtime="20220705 06:52:42.676"/>
</return>
<msg timestamp="20220705 06:52:42.676" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:52:42.383" endtime="20220705 06:52:42.676"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:52:42.677" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:52:42.677" endtime="20220705 06:52:43.841"/>
</kw>
<status status="PASS" starttime="20220705 06:52:42.677" endtime="20220705 06:52:43.841"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:52:43.841" endtime="20220705 06:52:43.841"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:52:43.841" endtime="20220705 06:52:43.841"/>
</branch>
<status status="PASS" starttime="20220705 06:52:42.677" endtime="20220705 06:52:43.841"/>
</if>
<status status="PASS" starttime="20220705 06:52:42.676" endtime="20220705 06:52:43.842"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:52:43.842" endtime="20220705 06:52:43.960"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:52:43.970" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:52:43.960" endtime="20220705 06:52:43.970"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:52:43.970" endtime="20220705 06:52:43.970"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:52:43.970" endtime="20220705 06:52:43.970"/>
</branch>
<status status="PASS" starttime="20220705 06:52:43.970" endtime="20220705 06:52:43.970"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:43.971" endtime="20220705 06:52:44.014"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:44.015" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:52:44.014" endtime="20220705 06:52:44.121"/>
</kw>
<status status="PASS" starttime="20220705 06:52:43.970" endtime="20220705 06:52:44.121"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:52:44.122" endtime="20220705 06:52:44.863"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:52:44.877" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:52:44.863" endtime="20220705 06:52:44.877"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:52:44.877" endtime="20220705 06:52:44.935"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:44.935" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:52:44.935" endtime="20220705 06:52:46.442"/>
</kw>
<status status="PASS" starttime="20220705 06:52:44.877" endtime="20220705 06:52:46.442"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:52:46.442" endtime="20220705 06:52:46.443"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:52:46.443" endtime="20220705 06:52:46.443"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:52:46.442" endtime="20220705 06:52:46.443"/>
</branch>
<status status="PASS" starttime="20220705 06:52:44.877" endtime="20220705 06:52:46.443"/>
</if>
<status status="PASS" starttime="20220705 06:52:44.863" endtime="20220705 06:52:46.443"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:52:46.443" endtime="20220705 06:52:46.454"/>
</kw>
<status status="PASS" starttime="20220705 06:52:46.443" endtime="20220705 06:52:46.454"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:46.454" endtime="20220705 06:52:46.494"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:46.495" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:52:46.552" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:52:46.635" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:52:46.495" endtime="20220705 06:52:46.635"/>
</kw>
<status status="PASS" starttime="20220705 06:52:46.454" endtime="20220705 06:52:46.635"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:52:46.646" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3df...</msg>
<status status="PASS" starttime="20220705 06:52:46.636" endtime="20220705 06:52:46.646"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:52:46.646" endtime="20220705 06:52:46.646"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:52:46.646" endtime="20220705 06:52:46.647"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:52:46.646" endtime="20220705 06:52:46.647"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:52:46.647" endtime="20220705 06:52:46.704"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:46.704" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:52:46.704" endtime="20220705 06:52:46.803"/>
</kw>
<status status="PASS" starttime="20220705 06:52:46.647" endtime="20220705 06:52:46.803"/>
</branch>
<status status="PASS" starttime="20220705 06:52:46.646" endtime="20220705 06:52:46.803"/>
</if>
<status status="PASS" starttime="20220705 06:52:46.636" endtime="20220705 06:52:46.803"/>
</kw>
<status status="PASS" starttime="20220705 06:52:43.960" endtime="20220705 06:52:46.804"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:52:46.804" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220705 06:52:46.804" endtime="20220705 06:52:46.804"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:46.805" endtime="20220705 06:52:50.763"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:50.764" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220705 06:52:50.763" endtime="20220705 06:52:51.082"/>
</kw>
<status status="PASS" starttime="20220705 06:52:46.804" endtime="20220705 06:52:51.082"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:51.082" endtime="20220705 06:52:51.647"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 06:52:51.647" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220705 06:52:51.647" endtime="20220705 06:52:51.700"/>
</kw>
<status status="PASS" starttime="20220705 06:52:51.082" endtime="20220705 06:52:51.700"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:51.701" endtime="20220705 06:52:51.746"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:51.746" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 06:52:51.746" endtime="20220705 06:52:51.843"/>
</kw>
<status status="PASS" starttime="20220705 06:52:51.701" endtime="20220705 06:52:51.843"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:51.844" endtime="20220705 06:52:51.892"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:51.892" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220705 06:52:51.892" endtime="20220705 06:52:52.011"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:52.011" endtime="20220705 06:52:52.107"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:52.107" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220705 06:52:52.107" endtime="20220705 06:52:52.216"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:52.216" endtime="20220705 06:52:52.261"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:52.261" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220705 06:52:52.261" endtime="20220705 06:52:52.367"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:52.367" endtime="20220705 06:52:52.906"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:52.907" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220705 06:52:52.906" endtime="20220705 06:52:52.998"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:52.998" endtime="20220705 06:52:53.040"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:53.041" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220705 06:52:53.040" endtime="20220705 06:52:53.102"/>
</kw>
<status status="PASS" starttime="20220705 06:52:51.844" endtime="20220705 06:52:53.102"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:52:53.103" endtime="20220705 06:52:53.202"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220705 06:52:53.202" endtime="20220705 06:52:53.202"/>
</kw>
<status status="PASS" starttime="20220705 06:52:53.103" endtime="20220705 06:52:53.202"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:52:42.382" endtime="20220705 06:52:53.202"/>
</test>
<test id="s1-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:52:53.205" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:52:53.205" endtime="20220705 06:52:53.205"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:52:53.205" endtime="20220705 06:52:53.205"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:52:53.207" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:52:53.206" endtime="20220705 06:52:53.207"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:52:53.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:52:53.207" endtime="20220705 06:52:53.449"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:52:53.449" endtime="20220705 06:52:53.449"/>
</return>
<msg timestamp="20220705 06:52:53.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:52:53.204" endtime="20220705 06:52:53.449"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:52:53.449" endtime="20220705 06:52:53.449"/>
</return>
<msg timestamp="20220705 06:52:53.449" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:52:53.204" endtime="20220705 06:52:53.449"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:52:53.450" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:52:53.450" endtime="20220705 06:52:54.605"/>
</kw>
<status status="PASS" starttime="20220705 06:52:53.450" endtime="20220705 06:52:54.605"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:52:54.605" endtime="20220705 06:52:54.605"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:52:54.605" endtime="20220705 06:52:54.605"/>
</branch>
<status status="PASS" starttime="20220705 06:52:53.450" endtime="20220705 06:52:54.605"/>
</if>
<status status="PASS" starttime="20220705 06:52:53.449" endtime="20220705 06:52:54.606"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:52:54.606" endtime="20220705 06:52:54.719"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:52:54.736" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:52:54.720" endtime="20220705 06:52:54.736"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:52:54.736" endtime="20220705 06:52:54.736"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:52:54.736" endtime="20220705 06:52:54.736"/>
</branch>
<status status="PASS" starttime="20220705 06:52:54.736" endtime="20220705 06:52:54.736"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:54.737" endtime="20220705 06:52:54.771"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:54.771" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:52:54.771" endtime="20220705 06:52:54.898"/>
</kw>
<status status="PASS" starttime="20220705 06:52:54.736" endtime="20220705 06:52:54.898"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:52:54.898" endtime="20220705 06:52:55.624"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:52:55.636" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:52:55.624" endtime="20220705 06:52:55.636"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:52:55.636" endtime="20220705 06:52:55.708"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:55.708" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:52:55.708" endtime="20220705 06:52:56.796"/>
</kw>
<status status="PASS" starttime="20220705 06:52:55.636" endtime="20220705 06:52:56.796"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:52:56.796" endtime="20220705 06:52:56.796"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:52:56.796" endtime="20220705 06:52:56.796"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:52:56.796" endtime="20220705 06:52:56.796"/>
</branch>
<status status="PASS" starttime="20220705 06:52:55.636" endtime="20220705 06:52:56.796"/>
</if>
<status status="PASS" starttime="20220705 06:52:55.624" endtime="20220705 06:52:56.797"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:52:56.797" endtime="20220705 06:52:56.817"/>
</kw>
<status status="PASS" starttime="20220705 06:52:56.797" endtime="20220705 06:52:56.817"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:56.818" endtime="20220705 06:52:56.862"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:56.863" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:52:56.926" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:52:56.983" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:52:56.862" endtime="20220705 06:52:56.983"/>
</kw>
<status status="PASS" starttime="20220705 06:52:56.817" endtime="20220705 06:52:56.983"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:52:56.994" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3df...</msg>
<status status="PASS" starttime="20220705 06:52:56.984" endtime="20220705 06:52:56.994"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:52:56.995" endtime="20220705 06:52:56.995"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:52:56.995" endtime="20220705 06:52:56.995"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:52:56.994" endtime="20220705 06:52:56.995"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:52:56.995" endtime="20220705 06:52:57.052"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:52:57.053" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:52:57.052" endtime="20220705 06:52:57.162"/>
</kw>
<status status="PASS" starttime="20220705 06:52:56.995" endtime="20220705 06:52:57.162"/>
</branch>
<status status="PASS" starttime="20220705 06:52:56.994" endtime="20220705 06:52:57.162"/>
</if>
<status status="PASS" starttime="20220705 06:52:56.983" endtime="20220705 06:52:57.162"/>
</kw>
<status status="PASS" starttime="20220705 06:52:54.720" endtime="20220705 06:52:57.163"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:52:57.163" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220705 06:52:57.163" endtime="20220705 06:52:57.163"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:52:57.164" endtime="20220705 06:53:00.983"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:00.983" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220705 06:53:00.983" endtime="20220705 06:53:01.307"/>
</kw>
<status status="PASS" starttime="20220705 06:52:57.163" endtime="20220705 06:53:01.307"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:01.308" endtime="20220705 06:53:01.891"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 06:53:01.892" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220705 06:53:01.891" endtime="20220705 06:53:01.967"/>
</kw>
<status status="PASS" starttime="20220705 06:53:01.307" endtime="20220705 06:53:01.967"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:01.967" endtime="20220705 06:53:02.013"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:02.014" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 06:53:02.013" endtime="20220705 06:53:02.074"/>
</kw>
<status status="PASS" starttime="20220705 06:53:01.967" endtime="20220705 06:53:02.074"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:02.075" endtime="20220705 06:53:02.128"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:02.128" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220705 06:53:02.128" endtime="20220705 06:53:02.216"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:02.216" endtime="20220705 06:53:02.351"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:02.352" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220705 06:53:02.351" endtime="20220705 06:53:02.434"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:02.434" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220705 06:53:02.434" endtime="20220705 06:53:02.570"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:02.570" endtime="20220705 06:53:02.611"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:02.611" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220705 06:53:02.611" endtime="20220705 06:53:02.705"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:02.705" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220705 06:53:02.705" endtime="20220705 06:53:02.780"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:02.780" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220705 06:53:02.780" endtime="20220705 06:53:02.846"/>
</kw>
<status status="PASS" starttime="20220705 06:53:02.074" endtime="20220705 06:53:02.846"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:53:02.847" endtime="20220705 06:53:02.936"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:02.939" level="INFO">${url} = boards/62c3dfc5255cea5e781dab21</msg>
<status status="PASS" starttime="20220705 06:53:02.939" endtime="20220705 06:53:02.939"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:53:03.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:02.939" endtime="20220705 06:53:03.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:03.332" endtime="20220705 06:53:03.332"/>
</return>
<msg timestamp="20220705 06:53:03.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:02.938" endtime="20220705 06:53:03.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:03.333" endtime="20220705 06:53:03.333"/>
</return>
<status status="PASS" starttime="20220705 06:53:02.936" endtime="20220705 06:53:03.333"/>
</kw>
<status status="PASS" starttime="20220705 06:53:02.936" endtime="20220705 06:53:03.333"/>
</kw>
<status status="PASS" starttime="20220705 06:53:02.846" endtime="20220705 06:53:03.333"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:52:53.203" endtime="20220705 06:53:03.333"/>
</test>
<test id="s1-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:53:03.335" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:53:03.335" endtime="20220705 06:53:03.335"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:53:03.335" endtime="20220705 06:53:03.335"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:03.337" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:53:03.335" endtime="20220705 06:53:03.337"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:53:03.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:03.337" endtime="20220705 06:53:03.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:03.683" endtime="20220705 06:53:03.683"/>
</return>
<msg timestamp="20220705 06:53:03.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:03.334" endtime="20220705 06:53:03.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:03.683" endtime="20220705 06:53:03.683"/>
</return>
<msg timestamp="20220705 06:53:03.683" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:03.334" endtime="20220705 06:53:03.683"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:53:03.685" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:53:03.684" endtime="20220705 06:53:04.829"/>
</kw>
<status status="PASS" starttime="20220705 06:53:03.684" endtime="20220705 06:53:04.829"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:53:04.829" endtime="20220705 06:53:04.829"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:53:04.829" endtime="20220705 06:53:04.829"/>
</branch>
<status status="PASS" starttime="20220705 06:53:03.684" endtime="20220705 06:53:04.829"/>
</if>
<status status="PASS" starttime="20220705 06:53:03.683" endtime="20220705 06:53:04.829"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:53:04.829" endtime="20220705 06:53:04.942"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:53:04.955" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:53:04.942" endtime="20220705 06:53:04.955"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:53:04.956" endtime="20220705 06:53:04.956"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:53:04.956" endtime="20220705 06:53:04.956"/>
</branch>
<status status="PASS" starttime="20220705 06:53:04.956" endtime="20220705 06:53:04.956"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:04.956" endtime="20220705 06:53:04.997"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:04.998" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:53:04.998" endtime="20220705 06:53:05.107"/>
</kw>
<status status="PASS" starttime="20220705 06:53:04.956" endtime="20220705 06:53:05.107"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:53:05.107" endtime="20220705 06:53:05.823"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:53:05.829" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:53:05.823" endtime="20220705 06:53:05.829"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:53:05.830" endtime="20220705 06:53:05.878"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:05.878" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:53:05.878" endtime="20220705 06:53:07.043"/>
</kw>
<status status="PASS" starttime="20220705 06:53:05.830" endtime="20220705 06:53:07.043"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:53:07.043" endtime="20220705 06:53:07.043"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:53:07.044" endtime="20220705 06:53:07.044"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:53:07.043" endtime="20220705 06:53:07.044"/>
</branch>
<status status="PASS" starttime="20220705 06:53:05.830" endtime="20220705 06:53:07.044"/>
</if>
<status status="PASS" starttime="20220705 06:53:05.823" endtime="20220705 06:53:07.044"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:53:07.044" endtime="20220705 06:53:07.059"/>
</kw>
<status status="PASS" starttime="20220705 06:53:07.044" endtime="20220705 06:53:07.059"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:07.060" endtime="20220705 06:53:07.100"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:07.100" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:53:07.145" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:53:07.211" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:53:07.100" endtime="20220705 06:53:07.211"/>
</kw>
<status status="PASS" starttime="20220705 06:53:07.060" endtime="20220705 06:53:07.211"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:53:07.239" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3df...</msg>
<status status="PASS" starttime="20220705 06:53:07.211" endtime="20220705 06:53:07.239"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:53:07.239" endtime="20220705 06:53:07.239"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:53:07.239" endtime="20220705 06:53:07.239"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:53:07.239" endtime="20220705 06:53:07.239"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:53:07.240" endtime="20220705 06:53:07.283"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:07.283" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:53:07.283" endtime="20220705 06:53:07.375"/>
</kw>
<status status="PASS" starttime="20220705 06:53:07.240" endtime="20220705 06:53:07.375"/>
</branch>
<status status="PASS" starttime="20220705 06:53:07.239" endtime="20220705 06:53:07.375"/>
</if>
<status status="PASS" starttime="20220705 06:53:07.211" endtime="20220705 06:53:07.375"/>
</kw>
<status status="PASS" starttime="20220705 06:53:04.942" endtime="20220705 06:53:07.376"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:07.376" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220705 06:53:07.376" endtime="20220705 06:53:07.376"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:07.377" endtime="20220705 06:53:11.574"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:11.574" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220705 06:53:11.574" endtime="20220705 06:53:11.909"/>
</kw>
<status status="PASS" starttime="20220705 06:53:07.376" endtime="20220705 06:53:11.909"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:11.910" endtime="20220705 06:53:12.443"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 06:53:12.444" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220705 06:53:12.443" endtime="20220705 06:53:12.493"/>
</kw>
<status status="PASS" starttime="20220705 06:53:11.909" endtime="20220705 06:53:12.493"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:12.494" endtime="20220705 06:53:12.526"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:12.564" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220705 06:53:12.526" endtime="20220705 06:53:12.564"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220705 06:53:12.565" level="INFO">Length is 8</msg>
<msg timestamp="20220705 06:53:12.565" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220705 06:53:12.564" endtime="20220705 06:53:12.565"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:12.565" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220705 06:53:12.565" endtime="20220705 06:53:12.622"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:53:12.623" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:53:12.965" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:53:12.622" endtime="20220705 06:53:12.993"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220705 06:53:12.994" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:53:12.994" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:53:13.292" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:53:12.994" endtime="20220705 06:53:13.304"/>
</kw>
<msg timestamp="20220705 06:53:13.304" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:53:13.304" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:53:13.591" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:53:13.304" endtime="20220705 06:53:13.620"/>
</kw>
<msg timestamp="20220705 06:53:13.621" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:53:13.621" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:53:13.921" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:53:13.621" endtime="20220705 06:53:13.953"/>
</kw>
<msg timestamp="20220705 06:53:13.953" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:53:13.954" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:53:14.233" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:53:13.953" endtime="20220705 06:53:14.246"/>
</kw>
<msg timestamp="20220705 06:53:14.246" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:53:14.247" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:53:14.525" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:53:14.246" endtime="20220705 06:53:14.537"/>
</kw>
<msg timestamp="20220705 06:53:14.537" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:53:14.538" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:53:14.814" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:53:14.537" endtime="20220705 06:53:14.834"/>
</kw>
<msg timestamp="20220705 06:53:14.834" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:53:14.835" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:53:15.108" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:53:14.834" endtime="20220705 06:53:15.124"/>
</kw>
<msg timestamp="20220705 06:53:15.124" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:53:15.125" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:53:15.404" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:53:15.124" endtime="20220705 06:53:15.416"/>
</kw>
<status status="PASS" starttime="20220705 06:53:12.993" endtime="20220705 06:53:15.416"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:53:15.417" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:53:15.695" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220705 06:53:15.416" endtime="20220705 06:53:15.777"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:53:15.778" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:53:16.089" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:53:15.777" endtime="20220705 06:53:16.183"/>
</kw>
<status status="PASS" starttime="20220705 06:53:12.493" endtime="20220705 06:53:16.183"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:16.184" endtime="20220705 06:53:16.231"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 06:53:16.232" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220705 06:53:16.231" endtime="20220705 06:53:16.258"/>
</kw>
<status status="PASS" starttime="20220705 06:53:16.183" endtime="20220705 06:53:16.258"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:53:16.258" endtime="20220705 06:53:16.340"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:16.343" level="INFO">${url} = boards/62c3dfcf1e36cb0782ad8ba3</msg>
<status status="PASS" starttime="20220705 06:53:16.343" endtime="20220705 06:53:16.343"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:53:16.754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:16.343" endtime="20220705 06:53:16.754"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:16.754" endtime="20220705 06:53:16.754"/>
</return>
<msg timestamp="20220705 06:53:16.754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:16.343" endtime="20220705 06:53:16.754"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:16.754" endtime="20220705 06:53:16.754"/>
</return>
<status status="PASS" starttime="20220705 06:53:16.341" endtime="20220705 06:53:16.755"/>
</kw>
<status status="PASS" starttime="20220705 06:53:16.341" endtime="20220705 06:53:16.755"/>
</kw>
<status status="PASS" starttime="20220705 06:53:16.258" endtime="20220705 06:53:16.755"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:53:03.333" endtime="20220705 06:53:16.755"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:53:16.756" endtime="20220705 06:53:16.757"/>
</kw>
<status status="PASS" starttime="20220705 06:53:16.756" endtime="20220705 06:53:16.757"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220705 06:52:29.583" endtime="20220705 06:53:16.757"/>
</suite>
<suite id="s1-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:53:16.772" endtime="20220705 06:53:16.773"/>
</kw>
<status status="PASS" starttime="20220705 06:53:16.772" endtime="20220705 06:53:16.773"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:53:16.774" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:53:16.774" endtime="20220705 06:53:16.774"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:53:16.774" endtime="20220705 06:53:16.774"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:16.775" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:53:16.774" endtime="20220705 06:53:16.775"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:53:17.243" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:16.775" endtime="20220705 06:53:17.243"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:17.243" endtime="20220705 06:53:17.243"/>
</return>
<msg timestamp="20220705 06:53:17.243" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:16.773" endtime="20220705 06:53:17.243"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:17.243" endtime="20220705 06:53:17.243"/>
</return>
<msg timestamp="20220705 06:53:17.243" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:16.773" endtime="20220705 06:53:17.244"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:53:17.245" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3dfddacac59263fa72892</msg>
<status status="PASS" starttime="20220705 06:53:17.244" endtime="20220705 06:53:17.245"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:53:17.246" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:53:17.246" endtime="20220705 06:53:18.428"/>
</kw>
<status status="PASS" starttime="20220705 06:53:17.246" endtime="20220705 06:53:18.428"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:53:18.428" endtime="20220705 06:53:18.428"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:53:18.428" endtime="20220705 06:53:18.428"/>
</branch>
<status status="PASS" starttime="20220705 06:53:17.246" endtime="20220705 06:53:18.428"/>
</if>
<status status="PASS" starttime="20220705 06:53:17.245" endtime="20220705 06:53:18.428"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:53:18.428" endtime="20220705 06:53:18.538"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:53:18.550" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:53:18.538" endtime="20220705 06:53:18.550"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:53:18.550" endtime="20220705 06:53:18.550"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:53:18.550" endtime="20220705 06:53:18.550"/>
</branch>
<status status="PASS" starttime="20220705 06:53:18.550" endtime="20220705 06:53:18.550"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:18.551" endtime="20220705 06:53:18.586"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:18.587" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:53:18.586" endtime="20220705 06:53:18.684"/>
</kw>
<status status="PASS" starttime="20220705 06:53:18.550" endtime="20220705 06:53:18.685"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:53:18.685" endtime="20220705 06:53:19.402"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:53:19.432" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:53:19.403" endtime="20220705 06:53:19.433"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:53:19.433" endtime="20220705 06:53:19.491"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:19.492" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:53:19.491" endtime="20220705 06:53:20.761"/>
</kw>
<status status="PASS" starttime="20220705 06:53:19.433" endtime="20220705 06:53:20.761"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:53:20.761" endtime="20220705 06:53:20.761"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:53:20.761" endtime="20220705 06:53:20.761"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:53:20.761" endtime="20220705 06:53:20.761"/>
</branch>
<status status="PASS" starttime="20220705 06:53:19.433" endtime="20220705 06:53:20.762"/>
</if>
<status status="PASS" starttime="20220705 06:53:19.402" endtime="20220705 06:53:20.762"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:53:20.762" endtime="20220705 06:53:20.773"/>
</kw>
<status status="PASS" starttime="20220705 06:53:20.762" endtime="20220705 06:53:20.774"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:20.774" endtime="20220705 06:53:20.815"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:20.816" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:53:20.861" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:53:20.935" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:53:20.815" endtime="20220705 06:53:20.935"/>
</kw>
<status status="PASS" starttime="20220705 06:53:20.774" endtime="20220705 06:53:20.935"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:53:20.945" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3df...</msg>
<status status="PASS" starttime="20220705 06:53:20.935" endtime="20220705 06:53:20.945"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:53:20.945" endtime="20220705 06:53:20.945"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:53:20.946" endtime="20220705 06:53:20.946"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:53:20.945" endtime="20220705 06:53:20.946"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:53:20.946" endtime="20220705 06:53:20.996"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:20.997" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:53:20.996" endtime="20220705 06:53:21.087"/>
</kw>
<status status="PASS" starttime="20220705 06:53:20.946" endtime="20220705 06:53:21.087"/>
</branch>
<status status="PASS" starttime="20220705 06:53:20.945" endtime="20220705 06:53:21.087"/>
</if>
<status status="PASS" starttime="20220705 06:53:20.935" endtime="20220705 06:53:21.087"/>
</kw>
<status status="PASS" starttime="20220705 06:53:18.538" endtime="20220705 06:53:21.087"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:21.088" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220705 06:53:21.088" endtime="20220705 06:53:21.088"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:21.088" endtime="20220705 06:53:25.163"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:25.164" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220705 06:53:25.164" endtime="20220705 06:53:25.486"/>
</kw>
<status status="PASS" starttime="20220705 06:53:21.087" endtime="20220705 06:53:25.486"/>
</kw>
<status status="PASS" starttime="20220705 06:53:16.772" endtime="20220705 06:53:25.486"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:25.487" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 06:53:25.487" endtime="20220705 06:53:25.487"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:25.488" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 06:53:25.487" endtime="20220705 06:53:25.488"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:25.489" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:53:25.488" endtime="20220705 06:53:25.489"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:25.489" endtime="20220705 06:53:26.000"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:26.000" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:53:26.000" endtime="20220705 06:53:26.131"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:26.131" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:53:26.131" endtime="20220705 06:53:26.131"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:26.132" endtime="20220705 06:53:26.166"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:26.166" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:26.166" endtime="20220705 06:53:26.215"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:53:26.216" endtime="20220705 06:53:26.246"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:26.247" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:26.246" endtime="20220705 06:53:26.330"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:26.330" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:53:26.330" endtime="20220705 06:53:26.330"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:26.331" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:53:26.330" endtime="20220705 06:53:26.402"/>
</kw>
<status status="PASS" starttime="20220705 06:53:25.488" endtime="20220705 06:53:26.402"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:26.404" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:53:26.403" endtime="20220705 06:53:26.404"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 06:53:26.464" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220705 06:53:26.404" endtime="20220705 06:53:26.464"/>
</kw>
<status status="PASS" starttime="20220705 06:53:26.403" endtime="20220705 06:53:26.464"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:26.466" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:53:26.466" endtime="20220705 06:53:26.466"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:26.466" endtime="20220705 06:53:26.499"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:26.499" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 06:53:26.499" endtime="20220705 06:53:26.576"/>
</kw>
<status status="PASS" starttime="20220705 06:53:26.465" endtime="20220705 06:53:26.576"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 06:53:26.596" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 06:53:26.577" endtime="20220705 06:53:26.596"/>
</kw>
<msg timestamp="20220705 06:53:26.596" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 06:53:26.577" endtime="20220705 06:53:26.596"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:26.597" endtime="20220705 06:53:27.124"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:27.125" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 06:53:27.125" endtime="20220705 06:53:27.291"/>
</kw>
<status status="PASS" starttime="20220705 06:53:26.597" endtime="20220705 06:53:27.291"/>
</kw>
<status status="PASS" starttime="20220705 06:53:26.597" endtime="20220705 06:53:27.291"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:27.292" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:53:27.292" endtime="20220705 06:53:27.378"/>
</kw>
<status status="PASS" starttime="20220705 06:53:27.292" endtime="20220705 06:53:27.378"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:27.378" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:53:27.378" endtime="20220705 06:53:27.562"/>
</kw>
<status status="PASS" starttime="20220705 06:53:26.576" endtime="20220705 06:53:27.562"/>
</kw>
<status status="PASS" starttime="20220705 06:53:26.465" endtime="20220705 06:53:27.562"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:53:25.486" endtime="20220705 06:53:27.562"/>
</test>
<test id="s1-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:27.564" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 06:53:27.564" endtime="20220705 06:53:27.565"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:27.565" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 06:53:27.565" endtime="20220705 06:53:27.565"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:27.566" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:53:27.565" endtime="20220705 06:53:27.566"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:27.566" endtime="20220705 06:53:27.608"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:27.608" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:53:27.608" endtime="20220705 06:53:27.659"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:27.660" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:53:27.660" endtime="20220705 06:53:27.660"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:27.660" endtime="20220705 06:53:27.689"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:27.690" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:27.689" endtime="20220705 06:53:27.775"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:53:27.775" endtime="20220705 06:53:27.813"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:27.813" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:27.813" endtime="20220705 06:53:27.892"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:27.893" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:53:27.893" endtime="20220705 06:53:27.893"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:27.893" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:53:27.893" endtime="20220705 06:53:27.979"/>
</kw>
<status status="PASS" starttime="20220705 06:53:27.565" endtime="20220705 06:53:27.980"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:27.980" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220705 06:53:27.980" endtime="20220705 06:53:27.980"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:27.981" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:53:27.981" endtime="20220705 06:53:27.981"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:27.982" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220705 06:53:27.981" endtime="20220705 06:53:27.982"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:27.982" endtime="20220705 06:53:28.023"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220705 06:53:28.024" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 06:53:28.024" endtime="20220705 06:53:28.303"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 06:53:28.303" endtime="20220705 06:53:28.316"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:28.317" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220705 06:53:28.317" endtime="20220705 06:53:28.388"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:28.388" endtime="20220705 06:53:28.420"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:28.421" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220705 06:53:28.420" endtime="20220705 06:53:28.478"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:53:28.478" endtime="20220705 06:53:28.549"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:28.550" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220705 06:53:28.550" endtime="20220705 06:53:28.660"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:28.661" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220705 06:53:28.661" endtime="20220705 06:53:28.735"/>
</kw>
<status status="PASS" starttime="20220705 06:53:27.980" endtime="20220705 06:53:28.735"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:28.736" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220705 06:53:28.736" endtime="20220705 06:53:28.736"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 06:53:28.765" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220705 06:53:28.736" endtime="20220705 06:53:28.765"/>
</kw>
<status status="PASS" starttime="20220705 06:53:28.735" endtime="20220705 06:53:28.766"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:28.767" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220705 06:53:28.767" endtime="20220705 06:53:28.767"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:28.767" endtime="20220705 06:53:28.795"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:28.795" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220705 06:53:28.795" endtime="20220705 06:53:28.854"/>
</kw>
<status status="PASS" starttime="20220705 06:53:28.766" endtime="20220705 06:53:28.855"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 06:53:29.080" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 06:53:28.855" endtime="20220705 06:53:29.080"/>
</kw>
<msg timestamp="20220705 06:53:29.080" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 06:53:28.855" endtime="20220705 06:53:29.080"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:29.081" endtime="20220705 06:53:29.120"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:29.121" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 06:53:29.120" endtime="20220705 06:53:29.206"/>
</kw>
<status status="PASS" starttime="20220705 06:53:29.081" endtime="20220705 06:53:29.206"/>
</kw>
<status status="PASS" starttime="20220705 06:53:29.080" endtime="20220705 06:53:29.206"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:29.207" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:53:29.207" endtime="20220705 06:53:29.263"/>
</kw>
<status status="PASS" starttime="20220705 06:53:29.207" endtime="20220705 06:53:29.263"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:29.264" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:53:29.264" endtime="20220705 06:53:29.423"/>
</kw>
<status status="PASS" starttime="20220705 06:53:28.855" endtime="20220705 06:53:29.423"/>
</kw>
<status status="PASS" starttime="20220705 06:53:28.766" endtime="20220705 06:53:29.423"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:53:27.563" endtime="20220705 06:53:29.423"/>
</test>
<test id="s1-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:29.425" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 06:53:29.424" endtime="20220705 06:53:29.425"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:29.425" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 06:53:29.425" endtime="20220705 06:53:29.425"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:29.426" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:53:29.426" endtime="20220705 06:53:29.426"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:29.426" endtime="20220705 06:53:29.470"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:29.471" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:53:29.470" endtime="20220705 06:53:29.523"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:29.524" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:53:29.524" endtime="20220705 06:53:29.524"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:29.524" endtime="20220705 06:53:29.556"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:29.556" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:29.556" endtime="20220705 06:53:29.618"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:53:29.619" endtime="20220705 06:53:29.691"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:29.692" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:29.691" endtime="20220705 06:53:29.787"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:29.788" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:53:29.787" endtime="20220705 06:53:29.788"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:29.788" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:53:29.788" endtime="20220705 06:53:29.850"/>
</kw>
<status status="PASS" starttime="20220705 06:53:29.425" endtime="20220705 06:53:29.850"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:29.851" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:53:29.850" endtime="20220705 06:53:29.851"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:29.851" endtime="20220705 06:53:29.898"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:29.898" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 06:53:29.898" endtime="20220705 06:53:29.944"/>
</kw>
<status status="PASS" starttime="20220705 06:53:29.850" endtime="20220705 06:53:29.944"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 06:53:30.035" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 06:53:29.944" endtime="20220705 06:53:30.035"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 06:53:30.035" endtime="20220705 06:53:30.035"/>
</return>
<msg timestamp="20220705 06:53:30.035" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220705 06:53:29.944" endtime="20220705 06:53:30.035"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:30.036" endtime="20220705 06:53:30.066"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:30.066" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220705 06:53:30.066" endtime="20220705 06:53:30.268"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:53:30.268" endtime="20220705 06:53:30.314"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:30.315" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220705 06:53:30.314" endtime="20220705 06:53:30.457"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:30.458" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220705 06:53:30.457" endtime="20220705 06:53:30.616"/>
</kw>
<status status="PASS" starttime="20220705 06:53:30.035" endtime="20220705 06:53:30.616"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 06:53:30.638" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220705 06:53:30.617" endtime="20220705 06:53:30.638"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 06:53:30.638" endtime="20220705 06:53:30.638"/>
</return>
<msg timestamp="20220705 06:53:30.638" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220705 06:53:30.616" endtime="20220705 06:53:30.639"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 06:53:30.639" endtime="20220705 06:53:30.640"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 06:53:30.654" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 06:53:30.641" endtime="20220705 06:53:30.654"/>
</kw>
<msg timestamp="20220705 06:53:30.654" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 06:53:30.640" endtime="20220705 06:53:30.654"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:30.655" endtime="20220705 06:53:30.718"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:30.718" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 06:53:30.718" endtime="20220705 06:53:30.807"/>
</kw>
<status status="PASS" starttime="20220705 06:53:30.654" endtime="20220705 06:53:30.807"/>
</kw>
<status status="PASS" starttime="20220705 06:53:30.654" endtime="20220705 06:53:30.807"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:30.808" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:53:30.807" endtime="20220705 06:53:30.878"/>
</kw>
<status status="PASS" starttime="20220705 06:53:30.807" endtime="20220705 06:53:30.878"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:30.878" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:53:30.878" endtime="20220705 06:53:31.067"/>
</kw>
<status status="PASS" starttime="20220705 06:53:30.640" endtime="20220705 06:53:31.067"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:53:29.424" endtime="20220705 06:53:31.067"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:31.069" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 06:53:31.069" endtime="20220705 06:53:31.069"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:31.070" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 06:53:31.070" endtime="20220705 06:53:31.070"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:31.071" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 06:53:31.070" endtime="20220705 06:53:31.071"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 06:53:31.118" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 06:53:31.071" endtime="20220705 06:53:31.118"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 06:53:31.118" endtime="20220705 06:53:31.118"/>
</return>
<msg timestamp="20220705 06:53:31.118" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220705 06:53:31.070" endtime="20220705 06:53:31.118"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:31.119" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:53:31.119" endtime="20220705 06:53:31.119"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:31.119" endtime="20220705 06:53:31.143"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:31.144" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:53:31.144" endtime="20220705 06:53:31.191"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:31.192" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:53:31.191" endtime="20220705 06:53:31.192"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:31.192" endtime="20220705 06:53:31.218"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:31.219" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:31.218" endtime="20220705 06:53:31.291"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:53:31.291" endtime="20220705 06:53:31.319"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:31.320" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:31.319" endtime="20220705 06:53:31.393"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:31.394" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:53:31.393" endtime="20220705 06:53:31.394"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:31.394" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:53:31.394" endtime="20220705 06:53:31.448"/>
</kw>
<status status="PASS" starttime="20220705 06:53:31.118" endtime="20220705 06:53:31.448"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:31.449" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:53:31.449" endtime="20220705 06:53:31.449"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:31.450" endtime="20220705 06:53:31.494"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:31.495" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 06:53:31.494" endtime="20220705 06:53:31.550"/>
</kw>
<status status="PASS" starttime="20220705 06:53:31.448" endtime="20220705 06:53:31.550"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 06:53:31.623" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 06:53:31.551" endtime="20220705 06:53:31.623"/>
</kw>
<msg timestamp="20220705 06:53:31.624" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 06:53:31.551" endtime="20220705 06:53:31.624"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:31.624" endtime="20220705 06:53:31.665"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:31.666" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 06:53:31.665" endtime="20220705 06:53:31.880"/>
</kw>
<status status="PASS" starttime="20220705 06:53:31.624" endtime="20220705 06:53:31.880"/>
</kw>
<status status="PASS" starttime="20220705 06:53:31.624" endtime="20220705 06:53:31.880"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:31.881" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:53:31.881" endtime="20220705 06:53:31.948"/>
</kw>
<status status="PASS" starttime="20220705 06:53:31.880" endtime="20220705 06:53:31.948"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:31.948" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:53:31.948" endtime="20220705 06:53:32.099"/>
</kw>
<status status="PASS" starttime="20220705 06:53:31.551" endtime="20220705 06:53:32.100"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:32.101" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 06:53:32.100" endtime="20220705 06:53:32.101"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 06:53:32.134" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 06:53:32.101" endtime="20220705 06:53:32.134"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 06:53:32.134" endtime="20220705 06:53:32.134"/>
</return>
<msg timestamp="20220705 06:53:32.135" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220705 06:53:32.100" endtime="20220705 06:53:32.135"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 06:53:32.135" endtime="20220705 06:53:32.135"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:53:31.068" endtime="20220705 06:53:32.135"/>
</test>
<test id="s1-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:32.137" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 06:53:32.137" endtime="20220705 06:53:32.137"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:32.138" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 06:53:32.137" endtime="20220705 06:53:32.138"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:32.138" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:53:32.138" endtime="20220705 06:53:32.139"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:32.139" endtime="20220705 06:53:32.171"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:32.171" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:53:32.171" endtime="20220705 06:53:32.220"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:32.220" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:53:32.220" endtime="20220705 06:53:32.220"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:32.220" endtime="20220705 06:53:32.246"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:32.246" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:32.246" endtime="20220705 06:53:32.292"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:53:32.292" endtime="20220705 06:53:32.344"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:32.344" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:32.344" endtime="20220705 06:53:32.508"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:32.509" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:53:32.509" endtime="20220705 06:53:32.509"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:32.509" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:53:32.509" endtime="20220705 06:53:32.578"/>
</kw>
<status status="PASS" starttime="20220705 06:53:32.138" endtime="20220705 06:53:32.578"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:32.578" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220705 06:53:32.578" endtime="20220705 06:53:32.578"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:32.579" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:53:32.579" endtime="20220705 06:53:32.579"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:32.580" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 06:53:32.580" endtime="20220705 06:53:32.580"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:32.580" endtime="20220705 06:53:32.632"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220705 06:53:32.632" endtime="20220705 06:53:33.203"/>
</kw>
<status status="PASS" starttime="20220705 06:53:32.578" endtime="20220705 06:53:33.203"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:33.204" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:53:33.204" endtime="20220705 06:53:33.204"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 06:53:33.274" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220705 06:53:33.204" endtime="20220705 06:53:33.274"/>
</kw>
<status status="PASS" starttime="20220705 06:53:33.203" endtime="20220705 06:53:33.274"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:33.276" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:53:33.276" endtime="20220705 06:53:33.276"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:33.276" endtime="20220705 06:53:33.331"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:33.331" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 06:53:33.331" endtime="20220705 06:53:33.383"/>
</kw>
<status status="PASS" starttime="20220705 06:53:33.275" endtime="20220705 06:53:33.383"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 06:53:33.614" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 06:53:33.384" endtime="20220705 06:53:33.614"/>
</kw>
<msg timestamp="20220705 06:53:33.614" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 06:53:33.384" endtime="20220705 06:53:33.614"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:33.615" endtime="20220705 06:53:33.645"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:33.646" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 06:53:33.646" endtime="20220705 06:53:33.732"/>
</kw>
<status status="PASS" starttime="20220705 06:53:33.615" endtime="20220705 06:53:33.732"/>
</kw>
<status status="PASS" starttime="20220705 06:53:33.614" endtime="20220705 06:53:33.732"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:33.733" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:53:33.733" endtime="20220705 06:53:33.793"/>
</kw>
<status status="PASS" starttime="20220705 06:53:33.733" endtime="20220705 06:53:33.793"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:33.793" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:53:33.793" endtime="20220705 06:53:33.928"/>
</kw>
<status status="PASS" starttime="20220705 06:53:33.383" endtime="20220705 06:53:33.929"/>
</kw>
<status status="PASS" starttime="20220705 06:53:33.275" endtime="20220705 06:53:33.929"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:53:32.136" endtime="20220705 06:53:33.929"/>
</test>
<test id="s1-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:53:33.931" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:53:33.931" endtime="20220705 06:53:33.931"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:53:33.931" endtime="20220705 06:53:33.932"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:33.933" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:53:33.932" endtime="20220705 06:53:33.933"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:53:34.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:33.933" endtime="20220705 06:53:34.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:34.175" endtime="20220705 06:53:34.175"/>
</return>
<msg timestamp="20220705 06:53:34.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:33.931" endtime="20220705 06:53:34.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:34.175" endtime="20220705 06:53:34.175"/>
</return>
<msg timestamp="20220705 06:53:34.175" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:33.930" endtime="20220705 06:53:34.175"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:53:34.176" endtime="20220705 06:53:34.251"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:34.251" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220705 06:53:34.251" endtime="20220705 06:53:34.433"/>
</kw>
<status status="PASS" starttime="20220705 06:53:34.175" endtime="20220705 06:53:34.433"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:34.434" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220705 06:53:34.434" endtime="20220705 06:53:34.434"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:34.434" endtime="20220705 06:53:34.601"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:34.601" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220705 06:53:34.601" endtime="20220705 06:53:34.754"/>
</kw>
<status status="PASS" starttime="20220705 06:53:34.433" endtime="20220705 06:53:34.754"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:34.754" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 06:53:34.754" endtime="20220705 06:53:34.754"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:53:34.755" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220705 06:53:34.755" endtime="20220705 06:53:34.755"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:34.756" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:53:34.755" endtime="20220705 06:53:34.756"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:34.756" endtime="20220705 06:53:35.242"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:35.243" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:53:35.242" endtime="20220705 06:53:35.296"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:35.297" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:53:35.297" endtime="20220705 06:53:35.297"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:35.297" endtime="20220705 06:53:35.341"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:35.341" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:35.341" endtime="20220705 06:53:35.396"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:53:35.396" endtime="20220705 06:53:35.433"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:35.434" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:35.433" endtime="20220705 06:53:35.512"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:35.513" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:53:35.512" endtime="20220705 06:53:35.513"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:35.513" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:53:35.513" endtime="20220705 06:53:35.579"/>
</kw>
<status status="PASS" starttime="20220705 06:53:34.755" endtime="20220705 06:53:35.580"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:35.581" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220705 06:53:35.580" endtime="20220705 06:53:35.581"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:35.581" endtime="20220705 06:53:35.644"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:35.644" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220705 06:53:35.644" endtime="20220705 06:53:35.697"/>
</kw>
<status status="PASS" starttime="20220705 06:53:35.580" endtime="20220705 06:53:35.697"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:35.698" endtime="20220705 06:53:35.931"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:35.931" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220705 06:53:35.931" endtime="20220705 06:53:36.031"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220705 06:53:36.032" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220705 06:53:36.032" endtime="20220705 06:53:36.128"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:53:36.128" endtime="20220705 06:53:36.406"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:36.406" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220705 06:53:36.406" endtime="20220705 06:53:36.528"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:53:36.528" endtime="20220705 06:53:36.541"/>
</kw>
<status status="PASS" starttime="20220705 06:53:35.697" endtime="20220705 06:53:36.541"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:36.542" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 06:53:36.542" endtime="20220705 06:53:36.542"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 06:53:36.550" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 06:53:36.542" endtime="20220705 06:53:36.550"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 06:53:36.550" endtime="20220705 06:53:36.550"/>
</return>
<msg timestamp="20220705 06:53:36.550" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220705 06:53:36.541" endtime="20220705 06:53:36.550"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220705 06:53:36.551" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220705 06:53:36.551" endtime="20220705 06:53:36.551"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:53:36.551" endtime="20220705 06:53:36.551"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:53:36.552" endtime="20220705 06:53:36.634"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:36.637" level="INFO">${url} = boards/62c3dfee4f00f41d5e48948e</msg>
<status status="PASS" starttime="20220705 06:53:36.637" endtime="20220705 06:53:36.637"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:53:36.752" level="INFO">${response} = None</msg>
<msg timestamp="20220705 06:53:36.752" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220705 06:53:36.637" endtime="20220705 06:53:36.752"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:36.752" endtime="20220705 06:53:36.752"/>
</return>
<msg timestamp="20220705 06:53:36.753" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220705 06:53:36.636" endtime="20220705 06:53:36.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:36.753" endtime="20220705 06:53:36.753"/>
</return>
<status status="FAIL" starttime="20220705 06:53:36.635" endtime="20220705 06:53:36.753"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:39.756" level="INFO">${url} = boards/62c3dfee4f00f41d5e48948e</msg>
<status status="PASS" starttime="20220705 06:53:39.756" endtime="20220705 06:53:39.756"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:53:40.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:39.756" endtime="20220705 06:53:40.144"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:40.144" endtime="20220705 06:53:40.144"/>
</return>
<msg timestamp="20220705 06:53:40.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:39.755" endtime="20220705 06:53:40.144"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:40.144" endtime="20220705 06:53:40.144"/>
</return>
<status status="PASS" starttime="20220705 06:53:39.753" endtime="20220705 06:53:40.145"/>
</kw>
<status status="PASS" starttime="20220705 06:53:36.634" endtime="20220705 06:53:40.145"/>
</kw>
<status status="PASS" starttime="20220705 06:53:36.551" endtime="20220705 06:53:40.145"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:53:33.929" endtime="20220705 06:53:40.145"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:40.148" level="INFO">${url} = boards/62c3dfddacac59263fa72892</msg>
<status status="PASS" starttime="20220705 06:53:40.147" endtime="20220705 06:53:40.148"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:53:40.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:40.148" endtime="20220705 06:53:40.616"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:40.616" endtime="20220705 06:53:40.616"/>
</return>
<msg timestamp="20220705 06:53:40.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:40.147" endtime="20220705 06:53:40.616"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:40.616" endtime="20220705 06:53:40.616"/>
</return>
<status status="PASS" starttime="20220705 06:53:40.147" endtime="20220705 06:53:40.617"/>
</kw>
<status status="PASS" starttime="20220705 06:53:40.146" endtime="20220705 06:53:40.617"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:53:40.617" endtime="20220705 06:53:40.618"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220705 06:53:40.618" endtime="20220705 06:53:40.618"/>
</kw>
<status status="PASS" starttime="20220705 06:53:40.146" endtime="20220705 06:53:40.618"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220705 06:53:16.759" endtime="20220705 06:53:40.618"/>
</suite>
<suite id="s1-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:53:40.636" endtime="20220705 06:53:40.636"/>
</kw>
<status status="PASS" starttime="20220705 06:53:40.636" endtime="20220705 06:53:40.636"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:53:40.637" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:53:40.637" endtime="20220705 06:53:40.637"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:53:40.637" endtime="20220705 06:53:40.638"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:40.639" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:53:40.638" endtime="20220705 06:53:40.639"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:53:40.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:40.639" endtime="20220705 06:53:40.919"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:40.919" endtime="20220705 06:53:40.919"/>
</return>
<msg timestamp="20220705 06:53:40.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:40.637" endtime="20220705 06:53:40.920"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:53:40.920" endtime="20220705 06:53:40.920"/>
</return>
<msg timestamp="20220705 06:53:40.920" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:53:40.636" endtime="20220705 06:53:40.920"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:53:40.922" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3dff4a562928635d82c58</msg>
<status status="PASS" starttime="20220705 06:53:40.921" endtime="20220705 06:53:40.922"/>
</kw>
<status status="PASS" starttime="20220705 06:53:40.636" endtime="20220705 06:53:40.922"/>
</kw>
<status status="PASS" starttime="20220705 06:53:40.635" endtime="20220705 06:53:40.922"/>
</kw>
<test id="s1-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:53:40.924" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:53:40.923" endtime="20220705 06:53:42.108"/>
</kw>
<status status="PASS" starttime="20220705 06:53:40.923" endtime="20220705 06:53:42.108"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:53:42.108" endtime="20220705 06:53:42.108"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:53:42.108" endtime="20220705 06:53:42.108"/>
</branch>
<status status="PASS" starttime="20220705 06:53:40.923" endtime="20220705 06:53:42.108"/>
</if>
<status status="PASS" starttime="20220705 06:53:40.923" endtime="20220705 06:53:42.109"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:53:42.109" endtime="20220705 06:53:42.221"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:53:42.249" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:53:42.222" endtime="20220705 06:53:42.249"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:53:42.250" endtime="20220705 06:53:42.250"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:53:42.250" endtime="20220705 06:53:42.250"/>
</branch>
<status status="PASS" starttime="20220705 06:53:42.249" endtime="20220705 06:53:42.250"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:42.250" endtime="20220705 06:53:42.283"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:42.283" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:53:42.283" endtime="20220705 06:53:42.383"/>
</kw>
<status status="PASS" starttime="20220705 06:53:42.250" endtime="20220705 06:53:42.384"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:53:42.384" endtime="20220705 06:53:43.078"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:53:43.084" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:53:43.078" endtime="20220705 06:53:43.084"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:53:43.084" endtime="20220705 06:53:43.142"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:43.143" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:53:43.143" endtime="20220705 06:53:44.292"/>
</kw>
<status status="PASS" starttime="20220705 06:53:43.084" endtime="20220705 06:53:44.292"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:53:44.293" endtime="20220705 06:53:44.293"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:53:44.293" endtime="20220705 06:53:44.293"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:53:44.292" endtime="20220705 06:53:44.293"/>
</branch>
<status status="PASS" starttime="20220705 06:53:43.084" endtime="20220705 06:53:44.293"/>
</if>
<status status="PASS" starttime="20220705 06:53:43.078" endtime="20220705 06:53:44.293"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:53:44.293" endtime="20220705 06:53:44.324"/>
</kw>
<status status="PASS" starttime="20220705 06:53:44.293" endtime="20220705 06:53:44.325"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:44.325" endtime="20220705 06:53:44.375"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:44.375" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:53:44.427" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:53:44.482" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:53:44.375" endtime="20220705 06:53:44.482"/>
</kw>
<status status="PASS" starttime="20220705 06:53:44.325" endtime="20220705 06:53:44.482"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:53:44.493" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3df...</msg>
<status status="PASS" starttime="20220705 06:53:44.483" endtime="20220705 06:53:44.493"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:53:44.494" endtime="20220705 06:53:44.494"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:53:44.494" endtime="20220705 06:53:44.494"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:53:44.493" endtime="20220705 06:53:44.494"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:53:44.494" endtime="20220705 06:53:44.542"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:44.543" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:53:44.543" endtime="20220705 06:53:44.643"/>
</kw>
<status status="PASS" starttime="20220705 06:53:44.494" endtime="20220705 06:53:44.643"/>
</branch>
<status status="PASS" starttime="20220705 06:53:44.493" endtime="20220705 06:53:44.643"/>
</if>
<status status="PASS" starttime="20220705 06:53:44.483" endtime="20220705 06:53:44.643"/>
</kw>
<status status="PASS" starttime="20220705 06:53:42.222" endtime="20220705 06:53:44.644"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:44.644" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 06:53:44.644" endtime="20220705 06:53:44.644"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:44.644" endtime="20220705 06:53:48.724"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:48.725" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 06:53:48.724" endtime="20220705 06:53:49.044"/>
</kw>
<status status="PASS" starttime="20220705 06:53:44.644" endtime="20220705 06:53:49.045"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:49.046" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:53:49.045" endtime="20220705 06:53:49.046"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:49.046" endtime="20220705 06:53:49.518"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:49.518" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:53:49.518" endtime="20220705 06:53:49.664"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:49.665" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:53:49.664" endtime="20220705 06:53:49.665"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:49.665" endtime="20220705 06:53:49.703"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:49.703" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:49.703" endtime="20220705 06:53:49.748"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:53:49.748" endtime="20220705 06:53:49.785"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:49.786" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:53:49.786" endtime="20220705 06:53:49.850"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:49.851" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:53:49.850" endtime="20220705 06:53:49.851"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:53:49.851" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:53:49.851" endtime="20220705 06:53:49.910"/>
</kw>
<status status="PASS" starttime="20220705 06:53:49.045" endtime="20220705 06:53:49.911"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:49.912" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 06:53:49.911" endtime="20220705 06:53:49.912"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:53:49.912" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220705 06:53:49.912" endtime="20220705 06:53:49.912"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:53:49.912" endtime="20220705 06:53:49.961"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220705 06:53:54.961" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220705 06:53:49.961" endtime="20220705 06:53:54.961"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220705 06:53:54.962" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220705 06:53:54.961" endtime="20220705 06:53:55.256"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220705 06:54:00.256" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220705 06:53:55.256" endtime="20220705 06:54:00.256"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 06:54:00.256" endtime="20220705 06:54:00.270"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:00.271" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220705 06:54:00.270" endtime="20220705 06:54:00.346"/>
</kw>
<status status="PASS" starttime="20220705 06:53:49.911" endtime="20220705 06:54:00.346"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:00.346" endtime="20220705 06:54:00.407"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:00.408" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220705 06:54:00.407" endtime="20220705 06:54:00.495"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:00.495" endtime="20220705 06:54:00.546"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:00.546" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220705 06:54:00.546" endtime="20220705 06:54:00.626"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:00.626" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220705 06:54:00.626" endtime="20220705 06:54:00.707"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:00.708" endtime="20220705 06:54:00.741"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:54:00.742" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220705 06:54:01.014" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 06:54:01.015" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 06:54:00.741" endtime="20220705 06:54:01.046"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:54:01.046" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220705 06:54:01.047" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220705 06:54:01.047" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220705 06:54:01.046" endtime="20220705 06:54:01.059"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:54:01.060" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220705 06:54:01.060" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220705 06:54:01.060" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220705 06:54:01.060" endtime="20220705 06:54:01.076"/>
</kw>
<status status="PASS" starttime="20220705 06:54:00.346" endtime="20220705 06:54:01.076"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:01.077" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:54:01.077" endtime="20220705 06:54:01.077"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:01.078" endtime="20220705 06:54:01.111"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:01.111" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:54:01.111" endtime="20220705 06:54:01.180"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:01.180" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:54:01.180" endtime="20220705 06:54:01.180"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:01.181" endtime="20220705 06:54:01.224"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:01.224" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:54:01.224" endtime="20220705 06:54:01.284"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:54:01.284" endtime="20220705 06:54:01.313"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:01.313" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:54:01.313" endtime="20220705 06:54:01.382"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:01.383" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:54:01.383" endtime="20220705 06:54:01.383"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:01.384" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:54:01.383" endtime="20220705 06:54:01.455"/>
</kw>
<status status="PASS" starttime="20220705 06:54:01.077" endtime="20220705 06:54:01.455"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:01.456" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:54:01.456" endtime="20220705 06:54:01.456"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:01.456" endtime="20220705 06:54:01.499"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:01.500" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:54:01.500" endtime="20220705 06:54:01.547"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:01.547" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:54:01.547" endtime="20220705 06:54:01.547"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:01.547" endtime="20220705 06:54:01.585"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:01.586" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:54:01.586" endtime="20220705 06:54:01.636"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:54:01.636" endtime="20220705 06:54:01.703"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:01.704" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:54:01.703" endtime="20220705 06:54:01.778"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:01.779" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:54:01.778" endtime="20220705 06:54:01.779"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:01.779" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:54:01.779" endtime="20220705 06:54:01.868"/>
</kw>
<status status="PASS" starttime="20220705 06:54:01.455" endtime="20220705 06:54:01.868"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:01.869" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220705 06:54:01.869" endtime="20220705 06:54:01.959"/>
</kw>
<status status="PASS" starttime="20220705 06:54:01.868" endtime="20220705 06:54:01.960"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:01.960" endtime="20220705 06:54:02.259"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:02.259" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220705 06:54:02.259" endtime="20220705 06:54:02.444"/>
</kw>
<status status="PASS" starttime="20220705 06:54:01.960" endtime="20220705 06:54:02.444"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:02.445" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 06:54:02.445" endtime="20220705 06:54:02.445"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 06:54:02.520" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220705 06:54:02.445" endtime="20220705 06:54:02.520"/>
</kw>
<status status="PASS" starttime="20220705 06:54:02.444" endtime="20220705 06:54:02.520"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:02.520" endtime="20220705 06:54:02.558"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:02.559" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220705 06:54:02.558" endtime="20220705 06:54:02.697"/>
</kw>
<status status="PASS" starttime="20220705 06:54:02.520" endtime="20220705 06:54:02.697"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:02.698" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 06:54:02.697" endtime="20220705 06:54:02.698"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 06:54:02.756" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220705 06:54:02.698" endtime="20220705 06:54:02.756"/>
</kw>
<status status="PASS" starttime="20220705 06:54:02.697" endtime="20220705 06:54:02.757"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:54:02.757" endtime="20220705 06:54:02.846"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:53:40.922" endtime="20220705 06:54:02.846"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:02.850" level="INFO">${url} = boards/62c3dff4a562928635d82c58</msg>
<status status="PASS" starttime="20220705 06:54:02.850" endtime="20220705 06:54:02.850"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:54:03.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:54:02.850" endtime="20220705 06:54:03.268"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:54:03.268" endtime="20220705 06:54:03.269"/>
</return>
<msg timestamp="20220705 06:54:03.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:54:02.849" endtime="20220705 06:54:03.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:54:03.269" endtime="20220705 06:54:03.269"/>
</return>
<status status="PASS" starttime="20220705 06:54:02.848" endtime="20220705 06:54:03.269"/>
</kw>
<status status="PASS" starttime="20220705 06:54:02.848" endtime="20220705 06:54:03.269"/>
</kw>
<status status="PASS" starttime="20220705 06:54:02.848" endtime="20220705 06:54:03.269"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:54:03.269" endtime="20220705 06:54:03.270"/>
</kw>
<status status="PASS" starttime="20220705 06:54:02.848" endtime="20220705 06:54:03.270"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220705 06:53:40.620" endtime="20220705 06:54:03.270"/>
</suite>
<suite id="s1-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:54:03.283" endtime="20220705 06:54:03.284"/>
</kw>
<status status="PASS" starttime="20220705 06:54:03.283" endtime="20220705 06:54:03.284"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:54:03.285" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:54:03.285" endtime="20220705 06:54:03.285"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:54:03.285" endtime="20220705 06:54:03.285"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:03.286" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:54:03.285" endtime="20220705 06:54:03.286"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:54:03.601" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:54:03.286" endtime="20220705 06:54:03.601"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:54:03.601" endtime="20220705 06:54:03.601"/>
</return>
<msg timestamp="20220705 06:54:03.601" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:54:03.284" endtime="20220705 06:54:03.601"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:54:03.601" endtime="20220705 06:54:03.601"/>
</return>
<msg timestamp="20220705 06:54:03.601" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:54:03.284" endtime="20220705 06:54:03.601"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:54:03.603" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3e00be04d5047cbbdb7b4</msg>
<status status="PASS" starttime="20220705 06:54:03.601" endtime="20220705 06:54:03.603"/>
</kw>
<status status="PASS" starttime="20220705 06:54:03.284" endtime="20220705 06:54:03.603"/>
</kw>
<status status="PASS" starttime="20220705 06:54:03.283" endtime="20220705 06:54:03.603"/>
</kw>
<test id="s1-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:54:03.605" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:54:03.604" endtime="20220705 06:54:04.802"/>
</kw>
<status status="PASS" starttime="20220705 06:54:03.604" endtime="20220705 06:54:04.803"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:54:04.803" endtime="20220705 06:54:04.803"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:54:04.803" endtime="20220705 06:54:04.803"/>
</branch>
<status status="PASS" starttime="20220705 06:54:03.604" endtime="20220705 06:54:04.803"/>
</if>
<status status="PASS" starttime="20220705 06:54:03.604" endtime="20220705 06:54:04.803"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:54:04.803" endtime="20220705 06:54:04.910"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:54:04.917" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:54:04.911" endtime="20220705 06:54:04.918"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:54:04.918" endtime="20220705 06:54:04.918"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:54:04.918" endtime="20220705 06:54:04.918"/>
</branch>
<status status="PASS" starttime="20220705 06:54:04.918" endtime="20220705 06:54:04.918"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:04.918" endtime="20220705 06:54:04.950"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:04.950" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:54:04.950" endtime="20220705 06:54:05.040"/>
</kw>
<status status="PASS" starttime="20220705 06:54:04.918" endtime="20220705 06:54:05.040"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:54:05.041" endtime="20220705 06:54:05.740"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:54:05.746" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:54:05.741" endtime="20220705 06:54:05.746"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:05.747" endtime="20220705 06:54:05.799"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:05.800" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:54:05.799" endtime="20220705 06:54:06.914"/>
</kw>
<status status="PASS" starttime="20220705 06:54:05.747" endtime="20220705 06:54:06.914"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:54:06.914" endtime="20220705 06:54:06.915"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:54:06.915" endtime="20220705 06:54:06.915"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:54:06.914" endtime="20220705 06:54:06.915"/>
</branch>
<status status="PASS" starttime="20220705 06:54:05.746" endtime="20220705 06:54:06.915"/>
</if>
<status status="PASS" starttime="20220705 06:54:05.741" endtime="20220705 06:54:06.915"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:54:06.915" endtime="20220705 06:54:06.935"/>
</kw>
<status status="PASS" starttime="20220705 06:54:06.915" endtime="20220705 06:54:06.935"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:06.936" endtime="20220705 06:54:06.969"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:06.970" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:54:07.014" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:54:07.075" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:54:06.969" endtime="20220705 06:54:07.075"/>
</kw>
<status status="PASS" starttime="20220705 06:54:06.936" endtime="20220705 06:54:07.075"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:54:07.082" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3e0...</msg>
<status status="PASS" starttime="20220705 06:54:07.076" endtime="20220705 06:54:07.082"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:54:07.082" endtime="20220705 06:54:07.082"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:54:07.083" endtime="20220705 06:54:07.083"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:54:07.082" endtime="20220705 06:54:07.083"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:07.083" endtime="20220705 06:54:07.136"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:07.137" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:54:07.137" endtime="20220705 06:54:07.210"/>
</kw>
<status status="PASS" starttime="20220705 06:54:07.083" endtime="20220705 06:54:07.210"/>
</branch>
<status status="PASS" starttime="20220705 06:54:07.082" endtime="20220705 06:54:07.210"/>
</if>
<status status="PASS" starttime="20220705 06:54:07.075" endtime="20220705 06:54:07.210"/>
</kw>
<status status="PASS" starttime="20220705 06:54:04.911" endtime="20220705 06:54:07.210"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:07.211" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 06:54:07.210" endtime="20220705 06:54:07.211"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:07.211" endtime="20220705 06:54:11.055"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:11.056" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 06:54:11.055" endtime="20220705 06:54:11.356"/>
</kw>
<status status="PASS" starttime="20220705 06:54:07.210" endtime="20220705 06:54:11.356"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 06:54:11.357" endtime="20220705 06:54:11.801"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:11.801" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 06:54:11.801" endtime="20220705 06:54:11.932"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:11.932" endtime="20220705 06:54:12.017"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:12.018" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 06:54:12.018" endtime="20220705 06:54:12.113"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:54:12.114" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 06:54:12.461" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 06:54:12.461" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 06:54:12.114" endtime="20220705 06:54:12.491"/>
</kw>
<status status="PASS" starttime="20220705 06:54:11.357" endtime="20220705 06:54:12.491"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:12.492" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 06:54:12.491" endtime="20220705 06:54:12.492"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:12.492" endtime="20220705 06:54:12.538"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 06:54:12.553" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220705 06:54:12.538" endtime="20220705 06:54:12.554"/>
</kw>
<status status="PASS" starttime="20220705 06:54:12.491" endtime="20220705 06:54:12.554"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:12.555" endtime="20220705 06:54:12.601"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:12.602" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 06:54:12.602" endtime="20220705 06:54:12.649"/>
</kw>
<status status="PASS" starttime="20220705 06:54:12.602" endtime="20220705 06:54:12.649"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220705 06:54:22.901" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220705 06:54:22.788" endtime="20220705 06:54:22.901"/>
</kw>
<msg timestamp="20220705 06:54:22.901" level="FAIL">Element with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220705 06:54:12.650" endtime="20220705 06:54:22.902"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:22.903" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220705 06:54:23.019" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220705 06:54:22.913" endtime="20220705 06:54:23.019"/>
</kw>
<msg timestamp="20220705 06:54:23.019" level="FAIL">Link with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220705 06:54:22.902" endtime="20220705 06:54:23.020"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:26.021" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220705 06:54:26.150" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220705 06:54:26.030" endtime="20220705 06:54:26.151"/>
</kw>
<msg timestamp="20220705 06:54:26.151" level="FAIL">Link with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220705 06:54:26.020" endtime="20220705 06:54:26.151"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:29.152" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220705 06:54:29.286" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220705 06:54:29.163" endtime="20220705 06:54:29.286"/>
</kw>
<msg timestamp="20220705 06:54:29.286" level="FAIL">Link with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220705 06:54:29.151" endtime="20220705 06:54:29.286"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:32.287" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220705 06:54:32.416" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-5.png"&gt;&lt;img src="selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220705 06:54:32.301" endtime="20220705 06:54:32.416"/>
</kw>
<msg timestamp="20220705 06:54:32.416" level="FAIL">Link with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220705 06:54:32.287" endtime="20220705 06:54:32.416"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:35.417" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220705 06:54:35.533" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-6.png"&gt;&lt;img src="selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220705 06:54:35.426" endtime="20220705 06:54:35.533"/>
</kw>
<msg timestamp="20220705 06:54:35.533" level="FAIL">Link with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220705 06:54:35.417" endtime="20220705 06:54:35.533"/>
</kw>
<msg timestamp="20220705 06:54:35.533" level="FAIL">Keyword 'Click Link' failed after retrying for 10 seconds. The last error was: Link with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220705 06:54:22.902" endtime="20220705 06:54:35.535"/>
</kw>
<status status="FAIL" starttime="20220705 06:54:12.555" endtime="20220705 06:54:35.535"/>
</kw>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:38.536" endtime="20220705 06:54:38.589"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:38.590" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 06:54:38.590" endtime="20220705 06:54:38.642"/>
</kw>
<status status="PASS" starttime="20220705 06:54:38.590" endtime="20220705 06:54:38.642"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:38.643" endtime="20220705 06:54:38.711"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:38.712" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 06:54:38.712" endtime="20220705 06:54:38.788"/>
</kw>
<status status="PASS" starttime="20220705 06:54:38.711" endtime="20220705 06:54:38.788"/>
</kw>
<status status="PASS" starttime="20220705 06:54:38.535" endtime="20220705 06:54:38.788"/>
</kw>
<status status="PASS" starttime="20220705 06:54:12.554" endtime="20220705 06:54:38.788"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:54:38.788" endtime="20220705 06:54:38.883"/>
</kw>
<status status="PASS" starttime="20220705 06:54:12.554" endtime="20220705 06:54:38.884"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:54:03.603" endtime="20220705 06:54:38.884"/>
</test>
<test id="s1-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:54:38.887" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:54:38.887" endtime="20220705 06:54:40.030"/>
</kw>
<status status="PASS" starttime="20220705 06:54:38.887" endtime="20220705 06:54:40.030"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:54:40.030" endtime="20220705 06:54:40.031"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:54:40.030" endtime="20220705 06:54:40.031"/>
</branch>
<status status="PASS" starttime="20220705 06:54:38.886" endtime="20220705 06:54:40.031"/>
</if>
<status status="PASS" starttime="20220705 06:54:38.886" endtime="20220705 06:54:40.031"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:54:40.031" endtime="20220705 06:54:40.143"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:54:40.163" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:54:40.144" endtime="20220705 06:54:40.163"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:54:40.164" endtime="20220705 06:54:40.164"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:54:40.164" endtime="20220705 06:54:40.164"/>
</branch>
<status status="PASS" starttime="20220705 06:54:40.164" endtime="20220705 06:54:40.164"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:40.165" endtime="20220705 06:54:40.196"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:40.197" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:54:40.196" endtime="20220705 06:54:40.303"/>
</kw>
<status status="PASS" starttime="20220705 06:54:40.164" endtime="20220705 06:54:40.303"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:54:40.303" endtime="20220705 06:54:41.020"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:54:41.026" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:54:41.021" endtime="20220705 06:54:41.026"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:41.027" endtime="20220705 06:54:41.065"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:41.065" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:54:41.065" endtime="20220705 06:54:42.240"/>
</kw>
<status status="PASS" starttime="20220705 06:54:41.027" endtime="20220705 06:54:42.240"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:54:42.240" endtime="20220705 06:54:42.240"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:54:42.241" endtime="20220705 06:54:42.241"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:54:42.240" endtime="20220705 06:54:42.241"/>
</branch>
<status status="PASS" starttime="20220705 06:54:41.026" endtime="20220705 06:54:42.241"/>
</if>
<status status="PASS" starttime="20220705 06:54:41.020" endtime="20220705 06:54:42.241"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:54:42.241" endtime="20220705 06:54:42.255"/>
</kw>
<status status="PASS" starttime="20220705 06:54:42.241" endtime="20220705 06:54:42.255"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:42.255" endtime="20220705 06:54:42.310"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:42.310" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:54:42.358" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:54:42.434" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:54:42.310" endtime="20220705 06:54:42.434"/>
</kw>
<status status="PASS" starttime="20220705 06:54:42.255" endtime="20220705 06:54:42.434"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:54:42.450" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3e0...</msg>
<status status="PASS" starttime="20220705 06:54:42.435" endtime="20220705 06:54:42.450"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:54:42.450" endtime="20220705 06:54:42.450"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:54:42.450" endtime="20220705 06:54:42.450"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:54:42.450" endtime="20220705 06:54:42.451"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:42.451" endtime="20220705 06:54:42.494"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:42.494" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:54:42.494" endtime="20220705 06:54:42.571"/>
</kw>
<status status="PASS" starttime="20220705 06:54:42.451" endtime="20220705 06:54:42.571"/>
</branch>
<status status="PASS" starttime="20220705 06:54:42.450" endtime="20220705 06:54:42.571"/>
</if>
<status status="PASS" starttime="20220705 06:54:42.435" endtime="20220705 06:54:42.571"/>
</kw>
<status status="PASS" starttime="20220705 06:54:40.143" endtime="20220705 06:54:42.571"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:42.572" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 06:54:42.572" endtime="20220705 06:54:42.572"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:42.572" endtime="20220705 06:54:46.305"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:46.305" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 06:54:46.305" endtime="20220705 06:54:46.626"/>
</kw>
<status status="PASS" starttime="20220705 06:54:42.571" endtime="20220705 06:54:46.626"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 06:54:46.626" endtime="20220705 06:54:47.085"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:47.085" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 06:54:47.085" endtime="20220705 06:54:47.231"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:47.231" endtime="20220705 06:54:47.318"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:47.318" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 06:54:47.318" endtime="20220705 06:54:47.458"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:54:47.458" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 06:54:47.764" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 06:54:47.764" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 06:54:47.458" endtime="20220705 06:54:47.791"/>
</kw>
<status status="PASS" starttime="20220705 06:54:46.626" endtime="20220705 06:54:47.791"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:47.792" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220705 06:54:47.791" endtime="20220705 06:54:47.792"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:47.792" endtime="20220705 06:54:47.841"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:47.842" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220705 06:54:47.841" endtime="20220705 06:54:47.889"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:47.890" endtime="20220705 06:54:47.922"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:54:47.923" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 06:54:48.245" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220705 06:54:48.246" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220705 06:54:47.923" endtime="20220705 06:54:48.263"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:48.264" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220705 06:54:48.263" endtime="20220705 06:54:48.366"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:54:48.366" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220705 06:54:48.366" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220705 06:54:48.367" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 06:54:48.366" endtime="20220705 06:54:48.394"/>
</kw>
<status status="PASS" starttime="20220705 06:54:47.791" endtime="20220705 06:54:48.394"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:48.395" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 06:54:48.394" endtime="20220705 06:54:48.395"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:48.395" endtime="20220705 06:54:48.425"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 06:54:48.436" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220705 06:54:48.425" endtime="20220705 06:54:48.436"/>
</kw>
<status status="PASS" starttime="20220705 06:54:48.394" endtime="20220705 06:54:48.436"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:48.438" endtime="20220705 06:54:48.476"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:48.477" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 06:54:48.476" endtime="20220705 06:54:48.551"/>
</kw>
<status status="PASS" starttime="20220705 06:54:48.476" endtime="20220705 06:54:48.552"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:48.552" endtime="20220705 06:54:48.617"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:48.618" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 06:54:48.618" endtime="20220705 06:54:48.675"/>
</kw>
<status status="PASS" starttime="20220705 06:54:48.617" endtime="20220705 06:54:48.675"/>
</kw>
<status status="PASS" starttime="20220705 06:54:48.437" endtime="20220705 06:54:48.675"/>
</kw>
<status status="PASS" starttime="20220705 06:54:48.437" endtime="20220705 06:54:48.675"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:54:48.675" endtime="20220705 06:54:48.754"/>
</kw>
<status status="PASS" starttime="20220705 06:54:48.437" endtime="20220705 06:54:48.754"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:54:38.885" endtime="20220705 06:54:48.754"/>
</test>
<test id="s1-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:54:48.757" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:54:48.757" endtime="20220705 06:54:49.861"/>
</kw>
<status status="PASS" starttime="20220705 06:54:48.757" endtime="20220705 06:54:49.861"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:54:49.861" endtime="20220705 06:54:49.861"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:54:49.861" endtime="20220705 06:54:49.861"/>
</branch>
<status status="PASS" starttime="20220705 06:54:48.756" endtime="20220705 06:54:49.861"/>
</if>
<status status="PASS" starttime="20220705 06:54:48.756" endtime="20220705 06:54:49.861"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:54:49.862" endtime="20220705 06:54:49.970"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:54:49.982" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:54:49.970" endtime="20220705 06:54:49.982"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:54:49.982" endtime="20220705 06:54:49.982"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:54:49.982" endtime="20220705 06:54:49.982"/>
</branch>
<status status="PASS" starttime="20220705 06:54:49.982" endtime="20220705 06:54:49.982"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:49.983" endtime="20220705 06:54:50.019"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:50.019" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:54:50.019" endtime="20220705 06:54:50.115"/>
</kw>
<status status="PASS" starttime="20220705 06:54:49.982" endtime="20220705 06:54:50.115"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:54:50.116" endtime="20220705 06:54:50.817"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:54:50.822" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:54:50.817" endtime="20220705 06:54:50.822"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:50.823" endtime="20220705 06:54:50.870"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:50.871" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:54:50.871" endtime="20220705 06:54:52.233"/>
</kw>
<status status="PASS" starttime="20220705 06:54:50.822" endtime="20220705 06:54:52.233"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:54:52.233" endtime="20220705 06:54:52.233"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:54:52.233" endtime="20220705 06:54:52.233"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:54:52.233" endtime="20220705 06:54:52.233"/>
</branch>
<status status="PASS" starttime="20220705 06:54:50.822" endtime="20220705 06:54:52.233"/>
</if>
<status status="PASS" starttime="20220705 06:54:50.817" endtime="20220705 06:54:52.233"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:54:52.234" endtime="20220705 06:54:52.248"/>
</kw>
<status status="PASS" starttime="20220705 06:54:52.233" endtime="20220705 06:54:52.248"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:52.248" endtime="20220705 06:54:52.298"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:52.298" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:54:52.343" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:54:52.404" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:54:52.298" endtime="20220705 06:54:52.404"/>
</kw>
<status status="PASS" starttime="20220705 06:54:52.248" endtime="20220705 06:54:52.404"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:54:52.414" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3e0...</msg>
<status status="PASS" starttime="20220705 06:54:52.405" endtime="20220705 06:54:52.414"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:54:52.414" endtime="20220705 06:54:52.414"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:54:52.414" endtime="20220705 06:54:52.414"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:54:52.414" endtime="20220705 06:54:52.414"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:52.414" endtime="20220705 06:54:52.467"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:52.468" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:54:52.468" endtime="20220705 06:54:52.582"/>
</kw>
<status status="PASS" starttime="20220705 06:54:52.414" endtime="20220705 06:54:52.582"/>
</branch>
<status status="PASS" starttime="20220705 06:54:52.414" endtime="20220705 06:54:52.582"/>
</if>
<status status="PASS" starttime="20220705 06:54:52.405" endtime="20220705 06:54:52.582"/>
</kw>
<status status="PASS" starttime="20220705 06:54:49.970" endtime="20220705 06:54:52.583"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:54:52.583" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 06:54:52.583" endtime="20220705 06:54:52.583"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:54:52.584" endtime="20220705 06:54:56.459"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:56.459" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 06:54:56.459" endtime="20220705 06:54:56.787"/>
</kw>
<status status="PASS" starttime="20220705 06:54:52.583" endtime="20220705 06:54:56.787"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 06:54:56.788" endtime="20220705 06:54:57.251"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:57.251" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 06:54:57.251" endtime="20220705 06:54:57.411"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:57.411" endtime="20220705 06:54:57.459"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:57.459" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 06:54:57.459" endtime="20220705 06:54:57.552"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:54:57.553" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 06:54:57.845" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 06:54:57.845" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 06:54:57.552" endtime="20220705 06:54:57.878"/>
</kw>
<status status="PASS" starttime="20220705 06:54:56.788" endtime="20220705 06:54:57.878"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:54:57.879" endtime="20220705 06:54:57.929"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:54:57.930" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 06:54:57.930" endtime="20220705 06:54:57.993"/>
</kw>
<status status="PASS" starttime="20220705 06:54:57.929" endtime="20220705 06:54:57.993"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<msg timestamp="20220705 06:54:58.101" level="INFO">Suppressing StaleElementReferenceException from Selenium.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220705 06:55:08.282" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220705 06:55:08.170" endtime="20220705 06:55:08.282"/>
</kw>
<msg timestamp="20220705 06:55:08.283" level="FAIL">Element with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220705 06:54:57.994" endtime="20220705 06:55:08.283"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20220705 06:55:08.283" endtime="20220705 06:55:08.283"/>
</kw>
<status status="FAIL" starttime="20220705 06:54:57.879" endtime="20220705 06:55:08.284"/>
</kw>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:55:11.284" endtime="20220705 06:55:11.323"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:55:11.323" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 06:55:11.323" endtime="20220705 06:55:11.377"/>
</kw>
<status status="PASS" starttime="20220705 06:55:11.323" endtime="20220705 06:55:11.377"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:55:11.377" endtime="20220705 06:55:11.437"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:55:11.438" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 06:55:11.438" endtime="20220705 06:55:11.505"/>
</kw>
<status status="PASS" starttime="20220705 06:55:11.438" endtime="20220705 06:55:11.505"/>
</kw>
<status status="PASS" starttime="20220705 06:55:11.284" endtime="20220705 06:55:11.505"/>
</kw>
<status status="PASS" starttime="20220705 06:54:57.878" endtime="20220705 06:55:11.505"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:55:11.506" endtime="20220705 06:55:11.547"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:55:11.548" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 06:55:11.547" endtime="20220705 06:55:11.617"/>
</kw>
<status status="PASS" starttime="20220705 06:55:11.505" endtime="20220705 06:55:11.617"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:55:11.617" endtime="20220705 06:55:11.750"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:55:11.751" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220705 06:55:11.751" endtime="20220705 06:55:11.855"/>
</kw>
<status status="PASS" starttime="20220705 06:55:11.750" endtime="20220705 06:55:11.855"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:55:11.855" endtime="20220705 06:55:11.895"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:55:11.896" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220705 06:55:11.896" endtime="20220705 06:55:11.975"/>
</kw>
<status status="PASS" starttime="20220705 06:55:11.895" endtime="20220705 06:55:11.975"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:55:11.976" endtime="20220705 06:55:12.021"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:55:12.022" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220705 06:55:12.022" endtime="20220705 06:55:12.112"/>
</kw>
<status status="PASS" starttime="20220705 06:55:12.021" endtime="20220705 06:55:12.112"/>
</kw>
<status status="PASS" starttime="20220705 06:55:11.617" endtime="20220705 06:55:12.112"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:55:12.114" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220705 06:55:12.113" endtime="20220705 06:55:12.114"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:55:12.114" endtime="20220705 06:55:12.366"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 06:55:12.385" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220705 06:55:12.367" endtime="20220705 06:55:12.386"/>
</kw>
<status status="PASS" starttime="20220705 06:55:12.113" endtime="20220705 06:55:12.386"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:55:12.386" endtime="20220705 06:55:12.429"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:55:12.429" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220705 06:55:12.429" endtime="20220705 06:55:12.484"/>
</kw>
<status status="PASS" starttime="20220705 06:55:12.386" endtime="20220705 06:55:12.484"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:55:12.484" endtime="20220705 06:55:12.627"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:54:48.755" endtime="20220705 06:55:12.627"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:55:12.634" level="INFO">${url} = boards/62c3e00be04d5047cbbdb7b4</msg>
<status status="PASS" starttime="20220705 06:55:12.634" endtime="20220705 06:55:12.635"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:55:13.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:55:12.635" endtime="20220705 06:55:13.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:55:13.024" endtime="20220705 06:55:13.024"/>
</return>
<msg timestamp="20220705 06:55:13.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:55:12.633" endtime="20220705 06:55:13.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:55:13.024" endtime="20220705 06:55:13.025"/>
</return>
<status status="PASS" starttime="20220705 06:55:12.632" endtime="20220705 06:55:13.025"/>
</kw>
<status status="PASS" starttime="20220705 06:55:12.632" endtime="20220705 06:55:13.025"/>
</kw>
<status status="PASS" starttime="20220705 06:55:12.632" endtime="20220705 06:55:13.025"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:55:13.025" endtime="20220705 06:55:13.026"/>
</kw>
<status status="PASS" starttime="20220705 06:55:12.632" endtime="20220705 06:55:13.026"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220705 06:54:03.272" endtime="20220705 06:55:13.026"/>
</suite>
<suite id="s1-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:55:13.034" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:55:13.033" endtime="20220705 06:55:14.150"/>
</kw>
<status status="PASS" starttime="20220705 06:55:13.033" endtime="20220705 06:55:14.151"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:55:14.151" endtime="20220705 06:55:14.151"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:55:14.151" endtime="20220705 06:55:14.151"/>
</branch>
<status status="PASS" starttime="20220705 06:55:13.033" endtime="20220705 06:55:14.151"/>
</if>
<status status="PASS" starttime="20220705 06:55:13.033" endtime="20220705 06:55:14.151"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:55:14.151" endtime="20220705 06:55:14.193"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:55:14.194" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:55:14.194" endtime="20220705 06:55:14.292"/>
</kw>
<status status="PASS" starttime="20220705 06:55:14.151" endtime="20220705 06:55:14.292"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:55:14.292" endtime="20220705 06:55:15.007"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:55:15.014" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:55:15.008" endtime="20220705 06:55:15.014"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:55:15.014" endtime="20220705 06:55:15.060"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:55:15.061" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:55:15.061" endtime="20220705 06:55:16.227"/>
</kw>
<status status="PASS" starttime="20220705 06:55:15.014" endtime="20220705 06:55:16.227"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:55:16.227" endtime="20220705 06:55:16.227"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:55:16.227" endtime="20220705 06:55:16.227"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:55:16.227" endtime="20220705 06:55:16.228"/>
</branch>
<status status="PASS" starttime="20220705 06:55:15.014" endtime="20220705 06:55:16.228"/>
</if>
<status status="PASS" starttime="20220705 06:55:15.007" endtime="20220705 06:55:16.228"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:55:16.228" endtime="20220705 06:55:16.238"/>
</kw>
<status status="PASS" starttime="20220705 06:55:16.228" endtime="20220705 06:55:16.238"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:55:16.238" endtime="20220705 06:55:16.268"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:55:16.268" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:55:16.309" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:55:16.385" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:55:16.268" endtime="20220705 06:55:16.385"/>
</kw>
<status status="PASS" starttime="20220705 06:55:16.238" endtime="20220705 06:55:16.386"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:55:16.391" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3e0...</msg>
<status status="PASS" starttime="20220705 06:55:16.386" endtime="20220705 06:55:16.391"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:55:16.392" endtime="20220705 06:55:16.392"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:55:16.392" endtime="20220705 06:55:16.392"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:55:16.392" endtime="20220705 06:55:16.392"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:55:16.392" endtime="20220705 06:55:16.432"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:55:16.432" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:55:16.432" endtime="20220705 06:55:16.526"/>
</kw>
<status status="PASS" starttime="20220705 06:55:16.392" endtime="20220705 06:55:16.526"/>
</branch>
<status status="PASS" starttime="20220705 06:55:16.391" endtime="20220705 06:55:16.526"/>
</if>
<status status="PASS" starttime="20220705 06:55:16.386" endtime="20220705 06:55:16.526"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:55:16.527" endtime="20220705 06:55:20.474"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:55:20.475" endtime="20220705 06:55:20.506"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 06:55:20.506" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220705 06:55:20.506" endtime="20220705 06:55:20.544"/>
</kw>
<status status="PASS" starttime="20220705 06:55:16.526" endtime="20220705 06:55:20.545"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:55:20.545" endtime="20220705 06:55:20.632"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:55:13.032" endtime="20220705 06:55:20.632"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220705 06:55:13.028" endtime="20220705 06:55:20.634"/>
</suite>
<status status="PASS" starttime="20220705 06:52:29.581" endtime="20220705 06:55:20.636"/>
</suite>
<status status="PASS" starttime="20220705 06:52:29.564" endtime="20220705 06:55:20.639"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.update.description</stat>
<stat pass="1" fail="0" skip="0">board.update.name</stat>
<stat pass="1" fail="0" skip="0">card.comment</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.drag</stat>
<stat pass="1" fail="0" skip="0">card.move</stat>
<stat pass="1" fail="0" skip="0">card.title_board</stat>
<stat pass="15" fail="0" skip="0">gui</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="2" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="4" fail="0" skip="0">regression</stat>
<stat pass="11" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="15" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1" name="Gui">Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="Trello Gui Board">Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s2" name="Trello Gui Cards">Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Trello Gui Labels">Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Gui Lists">Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Trello Gui Login">Trello.Gui.Trello Gui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
