<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 16:38:49.542" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 16:38:49.666" endtime="20220705 16:38:49.666"/>
</kw>
<status status="PASS" starttime="20220705 16:38:49.665" endtime="20220705 16:38:49.666"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:49.668" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:49.668" endtime="20220705 16:38:49.668"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:49.668" endtime="20220705 16:38:49.668"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:49.669" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 16:38:49.668" endtime="20220705 16:38:49.669"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:49.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:49.669" endtime="20220705 16:38:49.891"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:49.891" endtime="20220705 16:38:49.892"/>
</return>
<msg timestamp="20220705 16:38:49.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:49.667" endtime="20220705 16:38:49.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:49.892" endtime="20220705 16:38:49.892"/>
</return>
<msg timestamp="20220705 16:38:49.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:49.667" endtime="20220705 16:38:49.892"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:49.893" endtime="20220705 16:38:49.897"/>
</kw>
<status status="PASS" starttime="20220705 16:38:49.892" endtime="20220705 16:38:49.897"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:49.899" level="INFO">${url} = boards/62c469190372c814b2f27a1c</msg>
<status status="PASS" starttime="20220705 16:38:49.899" endtime="20220705 16:38:49.899"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:50.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:49.899" endtime="20220705 16:38:50.259"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:50.259" endtime="20220705 16:38:50.259"/>
</return>
<msg timestamp="20220705 16:38:50.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:49.898" endtime="20220705 16:38:50.259"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:50.259" endtime="20220705 16:38:50.259"/>
</return>
<status status="PASS" starttime="20220705 16:38:49.897" endtime="20220705 16:38:50.260"/>
</kw>
<status status="PASS" starttime="20220705 16:38:49.897" endtime="20220705 16:38:50.260"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 16:38:49.666" endtime="20220705 16:38:50.260"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:50.262" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:50.261" endtime="20220705 16:38:50.262"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:50.262" endtime="20220705 16:38:50.262"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:50.263" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 16:38:50.262" endtime="20220705 16:38:50.263"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:50.450" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:50.263" endtime="20220705 16:38:50.451"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:50.451" endtime="20220705 16:38:50.451"/>
</return>
<msg timestamp="20220705 16:38:50.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:50.261" endtime="20220705 16:38:50.451"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:50.451" endtime="20220705 16:38:50.451"/>
</return>
<msg timestamp="20220705 16:38:50.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:50.261" endtime="20220705 16:38:50.451"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:50.452" endtime="20220705 16:38:50.455"/>
</kw>
<status status="PASS" starttime="20220705 16:38:50.451" endtime="20220705 16:38:50.455"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:50.457" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:50.457" endtime="20220705 16:38:50.457"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:50.457" endtime="20220705 16:38:50.457"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:50.458" level="INFO">${url} = boards/62c4691a203921167e8bd79e</msg>
<status status="PASS" starttime="20220705 16:38:50.457" endtime="20220705 16:38:50.458"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:50.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:50.458" endtime="20220705 16:38:50.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:50.549" endtime="20220705 16:38:50.549"/>
</return>
<msg timestamp="20220705 16:38:50.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:50.456" endtime="20220705 16:38:50.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:50.550" endtime="20220705 16:38:50.550"/>
</return>
<status status="PASS" starttime="20220705 16:38:50.456" endtime="20220705 16:38:50.550"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:50.551" level="INFO">${url} = boards/62c4691a203921167e8bd79e</msg>
<status status="PASS" starttime="20220705 16:38:50.551" endtime="20220705 16:38:50.551"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:50.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:50.552" endtime="20220705 16:38:50.614"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:50.614" endtime="20220705 16:38:50.614"/>
</return>
<msg timestamp="20220705 16:38:50.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:50.551" endtime="20220705 16:38:50.614"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:50.614" endtime="20220705 16:38:50.614"/>
</return>
<msg timestamp="20220705 16:38:50.614" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:50.550" endtime="20220705 16:38:50.614"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:50.615" endtime="20220705 16:38:50.618"/>
</kw>
<status status="PASS" starttime="20220705 16:38:50.614" endtime="20220705 16:38:50.619"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:38:50.619" endtime="20220705 16:38:50.619"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:50.622" level="INFO">${url} = boards/62c4691a203921167e8bd79e</msg>
<status status="PASS" starttime="20220705 16:38:50.621" endtime="20220705 16:38:50.622"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:50.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:50.622" endtime="20220705 16:38:50.947"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:50.947" endtime="20220705 16:38:50.947"/>
</return>
<msg timestamp="20220705 16:38:50.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:50.621" endtime="20220705 16:38:50.947"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:50.947" endtime="20220705 16:38:50.947"/>
</return>
<status status="PASS" starttime="20220705 16:38:50.620" endtime="20220705 16:38:50.947"/>
</kw>
<status status="PASS" starttime="20220705 16:38:50.620" endtime="20220705 16:38:50.947"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 16:38:50.260" endtime="20220705 16:38:50.948"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:50.950" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:50.950" endtime="20220705 16:38:50.950"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:50.950" endtime="20220705 16:38:50.950"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:50.951" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 16:38:50.950" endtime="20220705 16:38:50.951"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:51.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:50.951" endtime="20220705 16:38:51.116"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:51.116" endtime="20220705 16:38:51.116"/>
</return>
<msg timestamp="20220705 16:38:51.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:50.949" endtime="20220705 16:38:51.116"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:51.116" endtime="20220705 16:38:51.116"/>
</return>
<msg timestamp="20220705 16:38:51.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:50.949" endtime="20220705 16:38:51.116"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:51.118" level="INFO">${url} = boards/62c4691a292ac98da260a5f7</msg>
<status status="PASS" starttime="20220705 16:38:51.118" endtime="20220705 16:38:51.118"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:51.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:51.118" endtime="20220705 16:38:51.508"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:51.508" endtime="20220705 16:38:51.508"/>
</return>
<msg timestamp="20220705 16:38:51.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:51.117" endtime="20220705 16:38:51.509"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:51.509" endtime="20220705 16:38:51.509"/>
</return>
<status status="PASS" starttime="20220705 16:38:51.116" endtime="20220705 16:38:51.509"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:51.511" level="INFO">${url} = boards/62c4691a292ac98da260a5f7</msg>
<status status="PASS" starttime="20220705 16:38:51.510" endtime="20220705 16:38:51.511"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:51.548" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 16:38:51.511" endtime="20220705 16:38:51.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:51.549" endtime="20220705 16:38:51.549"/>
</return>
<msg timestamp="20220705 16:38:51.549" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 16:38:51.510" endtime="20220705 16:38:51.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:51.549" endtime="20220705 16:38:51.549"/>
</return>
<status status="PASS" starttime="20220705 16:38:51.509" endtime="20220705 16:38:51.549"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 16:38:50.948" endtime="20220705 16:38:51.549"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:51.551" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:51.551" endtime="20220705 16:38:51.551"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:51.551" endtime="20220705 16:38:51.552"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:51.552" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 16:38:51.552" endtime="20220705 16:38:51.552"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:51.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:51.552" endtime="20220705 16:38:51.988"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:51.988" endtime="20220705 16:38:51.989"/>
</return>
<msg timestamp="20220705 16:38:51.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:51.551" endtime="20220705 16:38:51.989"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:51.989" endtime="20220705 16:38:51.989"/>
</return>
<msg timestamp="20220705 16:38:51.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:51.550" endtime="20220705 16:38:51.989"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:51.990" endtime="20220705 16:38:51.993"/>
</kw>
<status status="PASS" starttime="20220705 16:38:51.989" endtime="20220705 16:38:51.993"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:51.995" level="INFO">${url} = boards/62c4691b2330f922e0dab9d2</msg>
<status status="PASS" starttime="20220705 16:38:51.995" endtime="20220705 16:38:51.995"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:52.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:51.995" endtime="20220705 16:38:52.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.046" endtime="20220705 16:38:52.046"/>
</return>
<msg timestamp="20220705 16:38:52.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:51.994" endtime="20220705 16:38:52.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.046" endtime="20220705 16:38:52.046"/>
</return>
<msg timestamp="20220705 16:38:52.046" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:51.994" endtime="20220705 16:38:52.046"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:52.047" endtime="20220705 16:38:52.050"/>
</kw>
<status status="PASS" starttime="20220705 16:38:52.046" endtime="20220705 16:38:52.051"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:38:52.051" endtime="20220705 16:38:52.051"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:52.053" level="INFO">${url} = boards/62c4691b2330f922e0dab9d2</msg>
<status status="PASS" starttime="20220705 16:38:52.053" endtime="20220705 16:38:52.053"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:52.389" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.054" endtime="20220705 16:38:52.389"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.389" endtime="20220705 16:38:52.389"/>
</return>
<msg timestamp="20220705 16:38:52.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.052" endtime="20220705 16:38:52.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.390" endtime="20220705 16:38:52.390"/>
</return>
<status status="PASS" starttime="20220705 16:38:52.052" endtime="20220705 16:38:52.390"/>
</kw>
<status status="PASS" starttime="20220705 16:38:52.052" endtime="20220705 16:38:52.390"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 16:38:51.550" endtime="20220705 16:38:52.390"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:52.392" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:52.392" endtime="20220705 16:38:52.392"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:52.392" endtime="20220705 16:38:52.393"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:52.393" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 16:38:52.393" endtime="20220705 16:38:52.393"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:52.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.393" endtime="20220705 16:38:52.558"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.558" endtime="20220705 16:38:52.558"/>
</return>
<msg timestamp="20220705 16:38:52.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.392" endtime="20220705 16:38:52.558"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.558" endtime="20220705 16:38:52.558"/>
</return>
<msg timestamp="20220705 16:38:52.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.391" endtime="20220705 16:38:52.558"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:52.559" endtime="20220705 16:38:52.563"/>
</kw>
<status status="PASS" starttime="20220705 16:38:52.558" endtime="20220705 16:38:52.563"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:52.564" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:52.564" endtime="20220705 16:38:52.564"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:52.564" endtime="20220705 16:38:52.565"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:52.565" level="INFO">${url} = boards/62c4691c75ee683f77f89104</msg>
<status status="PASS" starttime="20220705 16:38:52.565" endtime="20220705 16:38:52.565"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:52.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.565" endtime="20220705 16:38:52.667"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.667" endtime="20220705 16:38:52.667"/>
</return>
<msg timestamp="20220705 16:38:52.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.564" endtime="20220705 16:38:52.667"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.667" endtime="20220705 16:38:52.667"/>
</return>
<status status="PASS" starttime="20220705 16:38:52.563" endtime="20220705 16:38:52.667"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:52.669" level="INFO">${url} = boards/62c4691c75ee683f77f89104</msg>
<status status="PASS" starttime="20220705 16:38:52.669" endtime="20220705 16:38:52.669"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:52.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.669" endtime="20220705 16:38:52.717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.717" endtime="20220705 16:38:52.717"/>
</return>
<msg timestamp="20220705 16:38:52.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.668" endtime="20220705 16:38:52.717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.717" endtime="20220705 16:38:52.718"/>
</return>
<msg timestamp="20220705 16:38:52.718" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.667" endtime="20220705 16:38:52.718"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:38:52.718" endtime="20220705 16:38:52.719"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:52.720" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:52.720" endtime="20220705 16:38:52.720"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:52.720" endtime="20220705 16:38:52.721"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:52.721" level="INFO">${url} = boards/62c4691c75ee683f77f89104</msg>
<status status="PASS" starttime="20220705 16:38:52.721" endtime="20220705 16:38:52.721"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:52.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.721" endtime="20220705 16:38:52.832"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.832" endtime="20220705 16:38:52.832"/>
</return>
<msg timestamp="20220705 16:38:52.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.719" endtime="20220705 16:38:52.832"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.832" endtime="20220705 16:38:52.832"/>
</return>
<status status="PASS" starttime="20220705 16:38:52.719" endtime="20220705 16:38:52.833"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:52.834" level="INFO">${url} = boards/62c4691c75ee683f77f89104</msg>
<status status="PASS" starttime="20220705 16:38:52.834" endtime="20220705 16:38:52.834"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:52.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.834" endtime="20220705 16:38:52.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.884" endtime="20220705 16:38:52.884"/>
</return>
<msg timestamp="20220705 16:38:52.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.834" endtime="20220705 16:38:52.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:52.884" endtime="20220705 16:38:52.884"/>
</return>
<msg timestamp="20220705 16:38:52.885" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.833" endtime="20220705 16:38:52.885"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:38:52.885" endtime="20220705 16:38:52.885"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:52.887" level="INFO">${url} = boards/62c4691c75ee683f77f89104</msg>
<status status="PASS" starttime="20220705 16:38:52.887" endtime="20220705 16:38:52.887"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:53.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.887" endtime="20220705 16:38:53.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:53.226" endtime="20220705 16:38:53.226"/>
</return>
<msg timestamp="20220705 16:38:53.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:52.887" endtime="20220705 16:38:53.227"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:53.227" endtime="20220705 16:38:53.227"/>
</return>
<status status="PASS" starttime="20220705 16:38:52.886" endtime="20220705 16:38:53.227"/>
</kw>
<status status="PASS" starttime="20220705 16:38:52.886" endtime="20220705 16:38:53.227"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 16:38:52.390" endtime="20220705 16:38:53.227"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 16:38:53.228" endtime="20220705 16:38:53.229"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 16:38:49.561" endtime="20220705 16:38:53.229"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 16:38:53.239" endtime="20220705 16:38:53.239"/>
</kw>
<status status="PASS" starttime="20220705 16:38:53.239" endtime="20220705 16:38:53.240"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:53.241" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:53.240" endtime="20220705 16:38:53.241"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:53.241" endtime="20220705 16:38:53.241"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:53.242" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 16:38:53.241" endtime="20220705 16:38:53.242"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:53.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.242" endtime="20220705 16:38:53.433"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:53.433" endtime="20220705 16:38:53.434"/>
</return>
<msg timestamp="20220705 16:38:53.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.240" endtime="20220705 16:38:53.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:53.434" endtime="20220705 16:38:53.434"/>
</return>
<msg timestamp="20220705 16:38:53.434" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.240" endtime="20220705 16:38:53.434"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 16:38:53.435" level="INFO">${TEST_SUITE_BOARD_ID} = 62c4691d99e1c23241c8d3a4</msg>
<status status="PASS" starttime="20220705 16:38:53.434" endtime="20220705 16:38:53.435"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:53.436" level="INFO">${url} = boards/62c4691d99e1c23241c8d3a4/lists/</msg>
<status status="PASS" starttime="20220705 16:38:53.436" endtime="20220705 16:38:53.436"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:53.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.436" endtime="20220705 16:38:53.487"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:53.487" endtime="20220705 16:38:53.487"/>
</return>
<msg timestamp="20220705 16:38:53.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.435" endtime="20220705 16:38:53.487"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:53.487" endtime="20220705 16:38:53.487"/>
</return>
<msg timestamp="20220705 16:38:53.488" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.435" endtime="20220705 16:38:53.488"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 16:38:53.489" level="INFO">${TEST_SUITE_LIST_ID} = 62c4691d99e1c23241c8d3ab</msg>
<status status="PASS" starttime="20220705 16:38:53.488" endtime="20220705 16:38:53.489"/>
</kw>
<status status="PASS" starttime="20220705 16:38:53.240" endtime="20220705 16:38:53.489"/>
</kw>
<status status="PASS" starttime="20220705 16:38:53.239" endtime="20220705 16:38:53.489"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:53.490" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:53.490" endtime="20220705 16:38:53.491"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:53.491" endtime="20220705 16:38:53.491"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:53.491" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 16:38:53.491" endtime="20220705 16:38:53.492"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:53.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.492" endtime="20220705 16:38:53.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:53.709" endtime="20220705 16:38:53.709"/>
</return>
<msg timestamp="20220705 16:38:53.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.490" endtime="20220705 16:38:53.710"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:53.710" endtime="20220705 16:38:53.710"/>
</return>
<msg timestamp="20220705 16:38:53.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.489" endtime="20220705 16:38:53.710"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:53.710" endtime="20220705 16:38:53.715"/>
</kw>
<status status="PASS" starttime="20220705 16:38:53.710" endtime="20220705 16:38:53.715"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:53.716" endtime="20220705 16:38:53.716"/>
</return>
<msg timestamp="20220705 16:38:53.716" level="INFO">${CARD_ID} = 62c4691d3c40a185a07574bd</msg>
<status status="PASS" starttime="20220705 16:38:53.715" endtime="20220705 16:38:53.716"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:53.718" level="INFO">${url} = cards/62c4691d3c40a185a07574bd</msg>
<status status="PASS" starttime="20220705 16:38:53.717" endtime="20220705 16:38:53.718"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:53.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.718" endtime="20220705 16:38:53.775"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:53.775" endtime="20220705 16:38:53.775"/>
</return>
<msg timestamp="20220705 16:38:53.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.717" endtime="20220705 16:38:53.775"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:53.775" endtime="20220705 16:38:53.775"/>
</return>
<msg timestamp="20220705 16:38:53.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.717" endtime="20220705 16:38:53.776"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:53.776" endtime="20220705 16:38:53.776"/>
</return>
<msg timestamp="20220705 16:38:53.777" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 16:38:53.776" endtime="20220705 16:38:53.777"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:38:53.777" endtime="20220705 16:38:53.777"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:53.779" level="INFO">${url} = cards/62c4691d3c40a185a07574bd</msg>
<status status="PASS" starttime="20220705 16:38:53.778" endtime="20220705 16:38:53.779"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:53.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.779" endtime="20220705 16:38:53.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:53.942" endtime="20220705 16:38:53.942"/>
</return>
<msg timestamp="20220705 16:38:53.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.778" endtime="20220705 16:38:53.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:53.942" endtime="20220705 16:38:53.942"/>
</return>
<status status="PASS" starttime="20220705 16:38:53.778" endtime="20220705 16:38:53.942"/>
</kw>
<status status="PASS" starttime="20220705 16:38:53.777" endtime="20220705 16:38:53.942"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 16:38:53.489" endtime="20220705 16:38:53.942"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:53.945" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:53.945" endtime="20220705 16:38:53.945"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:53.945" endtime="20220705 16:38:53.945"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:53.946" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 16:38:53.945" endtime="20220705 16:38:53.946"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:54.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.946" endtime="20220705 16:38:54.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.128" endtime="20220705 16:38:54.128"/>
</return>
<msg timestamp="20220705 16:38:54.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.944" endtime="20220705 16:38:54.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.128" endtime="20220705 16:38:54.128"/>
</return>
<msg timestamp="20220705 16:38:54.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:53.944" endtime="20220705 16:38:54.129"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:54.129" endtime="20220705 16:38:54.129"/>
</return>
<msg timestamp="20220705 16:38:54.130" level="INFO">${CARD_ID} = 62c4691e3b4932065fac3fac</msg>
<status status="PASS" starttime="20220705 16:38:54.129" endtime="20220705 16:38:54.130"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:54.132" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:54.131" endtime="20220705 16:38:54.132"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:54.132" endtime="20220705 16:38:54.132"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:54.132" level="INFO">${url} = cards/62c4691e3b4932065fac3fac</msg>
<status status="PASS" starttime="20220705 16:38:54.132" endtime="20220705 16:38:54.132"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:54.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.132" endtime="20220705 16:38:54.250"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.250" endtime="20220705 16:38:54.250"/>
</return>
<msg timestamp="20220705 16:38:54.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.131" endtime="20220705 16:38:54.250"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.251" endtime="20220705 16:38:54.251"/>
</return>
<msg timestamp="20220705 16:38:54.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.130" endtime="20220705 16:38:54.251"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.251" endtime="20220705 16:38:54.251"/>
</return>
<status status="PASS" starttime="20220705 16:38:54.130" endtime="20220705 16:38:54.251"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:54.252" level="INFO">${url} = cards/62c4691e3b4932065fac3fac</msg>
<status status="PASS" starttime="20220705 16:38:54.252" endtime="20220705 16:38:54.252"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:54.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.252" endtime="20220705 16:38:54.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.307" endtime="20220705 16:38:54.307"/>
</return>
<msg timestamp="20220705 16:38:54.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.251" endtime="20220705 16:38:54.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.307" endtime="20220705 16:38:54.307"/>
</return>
<msg timestamp="20220705 16:38:54.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.251" endtime="20220705 16:38:54.307"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:54.308" endtime="20220705 16:38:54.308"/>
</return>
<msg timestamp="20220705 16:38:54.308" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 16:38:54.307" endtime="20220705 16:38:54.308"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 16:38:54.308" endtime="20220705 16:38:54.309"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:54.310" level="INFO">${url} = cards/62c4691e3b4932065fac3fac</msg>
<status status="PASS" starttime="20220705 16:38:54.310" endtime="20220705 16:38:54.310"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:54.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.310" endtime="20220705 16:38:54.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.456" endtime="20220705 16:38:54.456"/>
</return>
<msg timestamp="20220705 16:38:54.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.309" endtime="20220705 16:38:54.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.456" endtime="20220705 16:38:54.456"/>
</return>
<status status="PASS" starttime="20220705 16:38:54.309" endtime="20220705 16:38:54.456"/>
</kw>
<status status="PASS" starttime="20220705 16:38:54.309" endtime="20220705 16:38:54.456"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 16:38:53.943" endtime="20220705 16:38:54.456"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:54.459" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:54.459" endtime="20220705 16:38:54.459"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:54.459" endtime="20220705 16:38:54.460"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:54.460" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 16:38:54.460" endtime="20220705 16:38:54.460"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:54.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.460" endtime="20220705 16:38:54.621"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.621" endtime="20220705 16:38:54.621"/>
</return>
<msg timestamp="20220705 16:38:54.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.458" endtime="20220705 16:38:54.621"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.621" endtime="20220705 16:38:54.621"/>
</return>
<msg timestamp="20220705 16:38:54.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.458" endtime="20220705 16:38:54.622"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:54.622" endtime="20220705 16:38:54.622"/>
</return>
<msg timestamp="20220705 16:38:54.623" level="INFO">${CARD_ID} = 62c4691e5c08f06a35b92374</msg>
<status status="PASS" starttime="20220705 16:38:54.622" endtime="20220705 16:38:54.623"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:54.624" level="INFO">${url} = cards/62c4691e5c08f06a35b92374</msg>
<status status="PASS" starttime="20220705 16:38:54.624" endtime="20220705 16:38:54.624"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:54.780" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.624" endtime="20220705 16:38:54.780"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.780" endtime="20220705 16:38:54.780"/>
</return>
<msg timestamp="20220705 16:38:54.780" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.623" endtime="20220705 16:38:54.780"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.780" endtime="20220705 16:38:54.780"/>
</return>
<msg timestamp="20220705 16:38:54.781" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.623" endtime="20220705 16:38:54.781"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:54.781" endtime="20220705 16:38:54.783"/>
</kw>
<status status="PASS" starttime="20220705 16:38:54.781" endtime="20220705 16:38:54.783"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:54.784" level="INFO">${url} = cards/62c4691e5c08f06a35b92374</msg>
<status status="PASS" starttime="20220705 16:38:54.784" endtime="20220705 16:38:54.784"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:54.824" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 16:38:54.784" endtime="20220705 16:38:54.825"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.825" endtime="20220705 16:38:54.825"/>
</return>
<msg timestamp="20220705 16:38:54.825" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 16:38:54.783" endtime="20220705 16:38:54.825"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:54.825" endtime="20220705 16:38:54.825"/>
</return>
<status status="PASS" starttime="20220705 16:38:54.783" endtime="20220705 16:38:54.825"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 16:38:54.457" endtime="20220705 16:38:54.825"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:54.828" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:54.828" endtime="20220705 16:38:54.828"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:54.828" endtime="20220705 16:38:54.828"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:54.829" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 16:38:54.828" endtime="20220705 16:38:54.829"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:55.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.829" endtime="20220705 16:38:55.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:55.015" endtime="20220705 16:38:55.015"/>
</return>
<msg timestamp="20220705 16:38:55.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.827" endtime="20220705 16:38:55.016"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:55.016" endtime="20220705 16:38:55.016"/>
</return>
<msg timestamp="20220705 16:38:55.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:54.827" endtime="20220705 16:38:55.016"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:55.016" endtime="20220705 16:38:55.016"/>
</return>
<msg timestamp="20220705 16:38:55.017" level="INFO">${CARD_ID} = 62c4691ec2952e46a246428a</msg>
<status status="PASS" starttime="20220705 16:38:55.016" endtime="20220705 16:38:55.017"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:55.018" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:55.018" endtime="20220705 16:38:55.018"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:55.018" endtime="20220705 16:38:55.019"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:55.019" level="INFO">${url} = cards/62c4691ec2952e46a246428a</msg>
<status status="PASS" starttime="20220705 16:38:55.019" endtime="20220705 16:38:55.019"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:55.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:55.019" endtime="20220705 16:38:55.177"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:55.177" endtime="20220705 16:38:55.177"/>
</return>
<msg timestamp="20220705 16:38:55.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:55.018" endtime="20220705 16:38:55.177"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:55.177" endtime="20220705 16:38:55.177"/>
</return>
<msg timestamp="20220705 16:38:55.178" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:55.017" endtime="20220705 16:38:55.178"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:55.178" endtime="20220705 16:38:55.183"/>
</kw>
<status status="PASS" starttime="20220705 16:38:55.178" endtime="20220705 16:38:55.183"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:55.184" level="INFO">${url} = cards/62c4691ec2952e46a246428a</msg>
<status status="PASS" starttime="20220705 16:38:55.184" endtime="20220705 16:38:55.184"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:55.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:55.184" endtime="20220705 16:38:55.249"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:55.249" endtime="20220705 16:38:55.249"/>
</return>
<msg timestamp="20220705 16:38:55.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:55.184" endtime="20220705 16:38:55.249"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:55.249" endtime="20220705 16:38:55.249"/>
</return>
<msg timestamp="20220705 16:38:55.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:55.183" endtime="20220705 16:38:55.250"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:55.250" endtime="20220705 16:38:55.250"/>
</return>
<msg timestamp="20220705 16:38:55.251" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 16:38:55.250" endtime="20220705 16:38:55.251"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:55.251" endtime="20220705 16:38:55.251"/>
</return>
<msg timestamp="20220705 16:38:55.252" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 16:38:55.251" endtime="20220705 16:38:55.252"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:38:55.252" endtime="20220705 16:38:55.252"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:38:55.252" endtime="20220705 16:38:55.252"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:55.254" level="INFO">${url} = cards/62c4691ec2952e46a246428a</msg>
<status status="PASS" starttime="20220705 16:38:55.254" endtime="20220705 16:38:55.254"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:55.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:55.254" endtime="20220705 16:38:55.739"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:55.740" endtime="20220705 16:38:55.740"/>
</return>
<msg timestamp="20220705 16:38:55.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:55.253" endtime="20220705 16:38:55.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:55.740" endtime="20220705 16:38:55.740"/>
</return>
<status status="PASS" starttime="20220705 16:38:55.253" endtime="20220705 16:38:55.740"/>
</kw>
<status status="PASS" starttime="20220705 16:38:55.253" endtime="20220705 16:38:55.740"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 16:38:54.825" endtime="20220705 16:38:55.740"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:55.743" level="INFO">${url} = boards/62c4691d99e1c23241c8d3a4</msg>
<status status="PASS" starttime="20220705 16:38:55.742" endtime="20220705 16:38:55.743"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:56.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:55.743" endtime="20220705 16:38:56.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.103" endtime="20220705 16:38:56.103"/>
</return>
<msg timestamp="20220705 16:38:56.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:55.742" endtime="20220705 16:38:56.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.103" endtime="20220705 16:38:56.103"/>
</return>
<status status="PASS" starttime="20220705 16:38:55.742" endtime="20220705 16:38:56.103"/>
</kw>
<status status="PASS" starttime="20220705 16:38:55.741" endtime="20220705 16:38:56.103"/>
</kw>
<status status="PASS" starttime="20220705 16:38:55.741" endtime="20220705 16:38:56.103"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 16:38:56.104" endtime="20220705 16:38:56.104"/>
</kw>
<status status="PASS" starttime="20220705 16:38:55.741" endtime="20220705 16:38:56.104"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 16:38:53.230" endtime="20220705 16:38:56.104"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 16:38:56.114" endtime="20220705 16:38:56.114"/>
</kw>
<status status="PASS" starttime="20220705 16:38:56.114" endtime="20220705 16:38:56.115"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:56.116" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:56.115" endtime="20220705 16:38:56.116"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:56.116" endtime="20220705 16:38:56.116"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:56.117" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 16:38:56.116" endtime="20220705 16:38:56.117"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:56.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.117" endtime="20220705 16:38:56.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.331" endtime="20220705 16:38:56.331"/>
</return>
<msg timestamp="20220705 16:38:56.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.115" endtime="20220705 16:38:56.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.331" endtime="20220705 16:38:56.331"/>
</return>
<msg timestamp="20220705 16:38:56.331" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.115" endtime="20220705 16:38:56.331"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 16:38:56.332" level="INFO">${TEST_SUITE_BOARD_ID} = 62c4692056528e69dbae64b9</msg>
<status status="PASS" starttime="20220705 16:38:56.332" endtime="20220705 16:38:56.332"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:56.333" level="INFO">${url} = boards/62c4692056528e69dbae64b9/lists/</msg>
<status status="PASS" starttime="20220705 16:38:56.333" endtime="20220705 16:38:56.333"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:56.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.333" endtime="20220705 16:38:56.388"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.388" endtime="20220705 16:38:56.388"/>
</return>
<msg timestamp="20220705 16:38:56.389" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.333" endtime="20220705 16:38:56.389"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.389" endtime="20220705 16:38:56.389"/>
</return>
<msg timestamp="20220705 16:38:56.389" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.332" endtime="20220705 16:38:56.389"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 16:38:56.390" level="INFO">${TEST_SUITE_LIST_ID} = 62c4692056528e69dbae64c0</msg>
<status status="PASS" starttime="20220705 16:38:56.389" endtime="20220705 16:38:56.390"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:56.391" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:56.391" endtime="20220705 16:38:56.391"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:56.391" endtime="20220705 16:38:56.392"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:56.392" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 16:38:56.392" endtime="20220705 16:38:56.392"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:56.562" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.392" endtime="20220705 16:38:56.562"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.562" endtime="20220705 16:38:56.562"/>
</return>
<msg timestamp="20220705 16:38:56.562" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.391" endtime="20220705 16:38:56.562"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.562" endtime="20220705 16:38:56.562"/>
</return>
<msg timestamp="20220705 16:38:56.562" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.390" endtime="20220705 16:38:56.562"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 16:38:56.563" level="INFO">${TEST_SUITE_CARD_ID} = 62c4692031d9720f678d4f0c</msg>
<status status="PASS" starttime="20220705 16:38:56.562" endtime="20220705 16:38:56.563"/>
</kw>
<status status="PASS" starttime="20220705 16:38:56.115" endtime="20220705 16:38:56.563"/>
</kw>
<status status="PASS" starttime="20220705 16:38:56.114" endtime="20220705 16:38:56.563"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:56.565" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:56.565" endtime="20220705 16:38:56.565"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:56.565" endtime="20220705 16:38:56.566"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:56.566" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 16:38:56.566" endtime="20220705 16:38:56.566"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:56.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.566" endtime="20220705 16:38:56.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.682" endtime="20220705 16:38:56.682"/>
</return>
<msg timestamp="20220705 16:38:56.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.565" endtime="20220705 16:38:56.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.683" endtime="20220705 16:38:56.683"/>
</return>
<msg timestamp="20220705 16:38:56.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.564" endtime="20220705 16:38:56.683"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:56.683" endtime="20220705 16:38:56.683"/>
</return>
<msg timestamp="20220705 16:38:56.684" level="INFO">${checklist_id} = 62c46920e453008b74025974</msg>
<status status="PASS" starttime="20220705 16:38:56.683" endtime="20220705 16:38:56.684"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:56.685" level="INFO">${url} = checklists/62c46920e453008b74025974</msg>
<status status="PASS" starttime="20220705 16:38:56.685" endtime="20220705 16:38:56.685"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:56.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.685" endtime="20220705 16:38:56.807"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.807" endtime="20220705 16:38:56.807"/>
</return>
<msg timestamp="20220705 16:38:56.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.685" endtime="20220705 16:38:56.807"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.807" endtime="20220705 16:38:56.807"/>
</return>
<msg timestamp="20220705 16:38:56.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.684" endtime="20220705 16:38:56.808"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:56.808" endtime="20220705 16:38:56.808"/>
</return>
<msg timestamp="20220705 16:38:56.809" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 16:38:56.808" endtime="20220705 16:38:56.809"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:38:56.809" endtime="20220705 16:38:56.809"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:56.810" level="INFO">${url} = checklists/62c46920e453008b74025974</msg>
<status status="PASS" starttime="20220705 16:38:56.810" endtime="20220705 16:38:56.811"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:56.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.811" endtime="20220705 16:38:56.917"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.917" endtime="20220705 16:38:56.917"/>
</return>
<msg timestamp="20220705 16:38:56.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.810" endtime="20220705 16:38:56.917"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:56.918" endtime="20220705 16:38:56.918"/>
</return>
<status status="PASS" starttime="20220705 16:38:56.809" endtime="20220705 16:38:56.918"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 16:38:56.564" endtime="20220705 16:38:56.918"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:56.920" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:56.920" endtime="20220705 16:38:56.920"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:56.920" endtime="20220705 16:38:56.920"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:56.921" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 16:38:56.921" endtime="20220705 16:38:56.921"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:57.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.921" endtime="20220705 16:38:57.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.038" endtime="20220705 16:38:57.038"/>
</return>
<msg timestamp="20220705 16:38:57.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.919" endtime="20220705 16:38:57.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.039" endtime="20220705 16:38:57.039"/>
</return>
<msg timestamp="20220705 16:38:57.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:56.919" endtime="20220705 16:38:57.039"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:57.039" endtime="20220705 16:38:57.039"/>
</return>
<msg timestamp="20220705 16:38:57.040" level="INFO">${checklist_id} = 62c4692057d9063b77411c35</msg>
<status status="PASS" starttime="20220705 16:38:57.039" endtime="20220705 16:38:57.040"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:57.041" level="INFO">${url} = checklists/62c4692057d9063b77411c35</msg>
<status status="PASS" starttime="20220705 16:38:57.041" endtime="20220705 16:38:57.041"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:57.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.042" endtime="20220705 16:38:57.171"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.171" endtime="20220705 16:38:57.171"/>
</return>
<msg timestamp="20220705 16:38:57.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.041" endtime="20220705 16:38:57.171"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.171" endtime="20220705 16:38:57.171"/>
</return>
<msg timestamp="20220705 16:38:57.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.040" endtime="20220705 16:38:57.171"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:57.172" endtime="20220705 16:38:57.174"/>
</kw>
<status status="PASS" starttime="20220705 16:38:57.172" endtime="20220705 16:38:57.174"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:57.175" level="INFO">${url} = checklists/62c4692057d9063b77411c35</msg>
<status status="PASS" starttime="20220705 16:38:57.175" endtime="20220705 16:38:57.175"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:57.222" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 16:38:57.175" endtime="20220705 16:38:57.222"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.222" endtime="20220705 16:38:57.222"/>
</return>
<msg timestamp="20220705 16:38:57.223" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 16:38:57.174" endtime="20220705 16:38:57.223"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.223" endtime="20220705 16:38:57.223"/>
</return>
<status status="PASS" starttime="20220705 16:38:57.174" endtime="20220705 16:38:57.223"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 16:38:56.918" endtime="20220705 16:38:57.223"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:57.227" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:57.225" endtime="20220705 16:38:57.227"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:57.227" endtime="20220705 16:38:57.227"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:57.228" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 16:38:57.227" endtime="20220705 16:38:57.228"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:57.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.228" endtime="20220705 16:38:57.341"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.341" endtime="20220705 16:38:57.341"/>
</return>
<msg timestamp="20220705 16:38:57.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.225" endtime="20220705 16:38:57.341"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.341" endtime="20220705 16:38:57.341"/>
</return>
<msg timestamp="20220705 16:38:57.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.224" endtime="20220705 16:38:57.342"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:57.342" endtime="20220705 16:38:57.342"/>
</return>
<msg timestamp="20220705 16:38:57.343" level="INFO">${checklist_id} = 62c46921b954b523823cd6f0</msg>
<status status="PASS" starttime="20220705 16:38:57.342" endtime="20220705 16:38:57.343"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:57.344" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:57.344" endtime="20220705 16:38:57.344"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:57.344" endtime="20220705 16:38:57.344"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:57.345" level="INFO">${url} = checklists/62c46921b954b523823cd6f0</msg>
<status status="PASS" starttime="20220705 16:38:57.344" endtime="20220705 16:38:57.345"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:57.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.345" endtime="20220705 16:38:57.432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.432" endtime="20220705 16:38:57.432"/>
</return>
<msg timestamp="20220705 16:38:57.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.343" endtime="20220705 16:38:57.432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.432" endtime="20220705 16:38:57.432"/>
</return>
<msg timestamp="20220705 16:38:57.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.343" endtime="20220705 16:38:57.432"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:57.434" level="INFO">${url} = checklists/62c46921b954b523823cd6f0</msg>
<status status="PASS" starttime="20220705 16:38:57.433" endtime="20220705 16:38:57.434"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:57.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.434" endtime="20220705 16:38:57.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.491" endtime="20220705 16:38:57.491"/>
</return>
<msg timestamp="20220705 16:38:57.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.433" endtime="20220705 16:38:57.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.491" endtime="20220705 16:38:57.491"/>
</return>
<msg timestamp="20220705 16:38:57.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.433" endtime="20220705 16:38:57.491"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:57.492" endtime="20220705 16:38:57.492"/>
</return>
<msg timestamp="20220705 16:38:57.493" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 16:38:57.491" endtime="20220705 16:38:57.493"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:38:57.493" endtime="20220705 16:38:57.493"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:57.503" level="INFO">${url} = checklists/62c46921b954b523823cd6f0</msg>
<status status="PASS" starttime="20220705 16:38:57.503" endtime="20220705 16:38:57.503"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:57.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.503" endtime="20220705 16:38:57.612"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.612" endtime="20220705 16:38:57.613"/>
</return>
<msg timestamp="20220705 16:38:57.613" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.502" endtime="20220705 16:38:57.613"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.613" endtime="20220705 16:38:57.613"/>
</return>
<status status="PASS" starttime="20220705 16:38:57.493" endtime="20220705 16:38:57.613"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 16:38:57.223" endtime="20220705 16:38:57.613"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:57.615" level="INFO">${url} = boards/62c4692056528e69dbae64b9</msg>
<status status="PASS" starttime="20220705 16:38:57.615" endtime="20220705 16:38:57.615"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:57.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.615" endtime="20220705 16:38:57.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.942" endtime="20220705 16:38:57.942"/>
</return>
<msg timestamp="20220705 16:38:57.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.614" endtime="20220705 16:38:57.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:57.943" endtime="20220705 16:38:57.943"/>
</return>
<status status="PASS" starttime="20220705 16:38:57.614" endtime="20220705 16:38:57.943"/>
</kw>
<status status="PASS" starttime="20220705 16:38:57.614" endtime="20220705 16:38:57.943"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 16:38:57.943" endtime="20220705 16:38:57.944"/>
</kw>
<status status="PASS" starttime="20220705 16:38:57.614" endtime="20220705 16:38:57.944"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 16:38:56.106" endtime="20220705 16:38:57.944"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 16:38:57.953" endtime="20220705 16:38:57.954"/>
</kw>
<status status="PASS" starttime="20220705 16:38:57.953" endtime="20220705 16:38:57.954"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:57.955" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:57.955" endtime="20220705 16:38:57.955"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:57.955" endtime="20220705 16:38:57.955"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:57.956" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 16:38:57.955" endtime="20220705 16:38:57.956"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:58.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.956" endtime="20220705 16:38:58.152"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.152" endtime="20220705 16:38:58.152"/>
</return>
<msg timestamp="20220705 16:38:58.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.954" endtime="20220705 16:38:58.152"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.152" endtime="20220705 16:38:58.152"/>
</return>
<msg timestamp="20220705 16:38:58.152" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:57.954" endtime="20220705 16:38:58.152"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 16:38:58.153" level="INFO">${TEST_SUITE_BOARD_ID} = 62c46922fcc53726cca7cbd8</msg>
<status status="PASS" starttime="20220705 16:38:58.152" endtime="20220705 16:38:58.153"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:58.210" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.153" endtime="20220705 16:38:58.210"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 16:38:58.211" level="INFO">${TEST_SUITE_LIST_ID} = 62c46922fcc53726cca7cbdf</msg>
<status status="PASS" starttime="20220705 16:38:58.210" endtime="20220705 16:38:58.211"/>
</kw>
<status status="PASS" starttime="20220705 16:38:57.954" endtime="20220705 16:38:58.212"/>
</kw>
<status status="PASS" starttime="20220705 16:38:57.953" endtime="20220705 16:38:58.212"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:58.213" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:58.213" endtime="20220705 16:38:58.213"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:58.213" endtime="20220705 16:38:58.214"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:58.214" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 16:38:58.214" endtime="20220705 16:38:58.214"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:58.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.214" endtime="20220705 16:38:58.299"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.299" endtime="20220705 16:38:58.299"/>
</return>
<msg timestamp="20220705 16:38:58.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.213" endtime="20220705 16:38:58.299"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.300" endtime="20220705 16:38:58.300"/>
</return>
<msg timestamp="20220705 16:38:58.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.212" endtime="20220705 16:38:58.300"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:58.300" endtime="20220705 16:38:58.302"/>
</kw>
<status status="PASS" starttime="20220705 16:38:58.300" endtime="20220705 16:38:58.302"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:58.302" endtime="20220705 16:38:58.303"/>
</return>
<msg timestamp="20220705 16:38:58.303" level="INFO">${LABEL_ID} = 62c46922d4c9467529c9974b</msg>
<status status="PASS" starttime="20220705 16:38:58.302" endtime="20220705 16:38:58.303"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:58.304" level="INFO">${url} = labels/62c46922d4c9467529c9974b</msg>
<status status="PASS" starttime="20220705 16:38:58.304" endtime="20220705 16:38:58.304"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:58.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.304" endtime="20220705 16:38:58.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.357" endtime="20220705 16:38:58.357"/>
</return>
<msg timestamp="20220705 16:38:58.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.304" endtime="20220705 16:38:58.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.357" endtime="20220705 16:38:58.357"/>
</return>
<msg timestamp="20220705 16:38:58.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.303" endtime="20220705 16:38:58.357"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:58.358" endtime="20220705 16:38:58.358"/>
</return>
<msg timestamp="20220705 16:38:58.358" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 16:38:58.357" endtime="20220705 16:38:58.358"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:58.359" endtime="20220705 16:38:58.359"/>
</return>
<msg timestamp="20220705 16:38:58.359" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 16:38:58.359" endtime="20220705 16:38:58.359"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:38:58.360" endtime="20220705 16:38:58.360"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:38:58.360" endtime="20220705 16:38:58.360"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:58.361" level="INFO">${url} = labels/62c46922d4c9467529c9974b</msg>
<status status="PASS" starttime="20220705 16:38:58.361" endtime="20220705 16:38:58.362"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:58.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.362" endtime="20220705 16:38:58.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.505" endtime="20220705 16:38:58.505"/>
</return>
<msg timestamp="20220705 16:38:58.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.361" endtime="20220705 16:38:58.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.505" endtime="20220705 16:38:58.505"/>
</return>
<status status="PASS" starttime="20220705 16:38:58.360" endtime="20220705 16:38:58.505"/>
</kw>
<status status="PASS" starttime="20220705 16:38:58.360" endtime="20220705 16:38:58.506"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 16:38:58.212" endtime="20220705 16:38:58.506"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:58.508" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:58.507" endtime="20220705 16:38:58.508"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:58.508" endtime="20220705 16:38:58.508"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:58.509" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 16:38:58.508" endtime="20220705 16:38:58.509"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:58.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.509" endtime="20220705 16:38:58.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.617" endtime="20220705 16:38:58.617"/>
</return>
<msg timestamp="20220705 16:38:58.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.507" endtime="20220705 16:38:58.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.617" endtime="20220705 16:38:58.618"/>
</return>
<msg timestamp="20220705 16:38:58.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.507" endtime="20220705 16:38:58.618"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:58.618" endtime="20220705 16:38:58.620"/>
</kw>
<status status="PASS" starttime="20220705 16:38:58.618" endtime="20220705 16:38:58.620"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:58.620" endtime="20220705 16:38:58.620"/>
</return>
<msg timestamp="20220705 16:38:58.621" level="INFO">${LABEL_ID} = 62c469223359e645ebade1d2</msg>
<status status="PASS" starttime="20220705 16:38:58.620" endtime="20220705 16:38:58.621"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:58.622" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:58.622" endtime="20220705 16:38:58.622"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:58.622" endtime="20220705 16:38:58.622"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:58.623" level="INFO">${url} = labels/62c469223359e645ebade1d2</msg>
<status status="PASS" starttime="20220705 16:38:58.622" endtime="20220705 16:38:58.623"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:58.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.623" endtime="20220705 16:38:58.726"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.726" endtime="20220705 16:38:58.726"/>
</return>
<msg timestamp="20220705 16:38:58.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.621" endtime="20220705 16:38:58.726"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.726" endtime="20220705 16:38:58.726"/>
</return>
<msg timestamp="20220705 16:38:58.726" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.621" endtime="20220705 16:38:58.726"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:58.727" endtime="20220705 16:38:58.727"/>
</return>
<msg timestamp="20220705 16:38:58.727" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 16:38:58.726" endtime="20220705 16:38:58.727"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:58.728" endtime="20220705 16:38:58.728"/>
</return>
<msg timestamp="20220705 16:38:58.728" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 16:38:58.727" endtime="20220705 16:38:58.728"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:38:58.729" endtime="20220705 16:38:58.729"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:38:58.729" endtime="20220705 16:38:58.729"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:58.731" level="INFO">${url} = labels/62c469223359e645ebade1d2</msg>
<status status="PASS" starttime="20220705 16:38:58.731" endtime="20220705 16:38:58.731"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:58.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.731" endtime="20220705 16:38:58.842"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.842" endtime="20220705 16:38:58.842"/>
</return>
<msg timestamp="20220705 16:38:58.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.730" endtime="20220705 16:38:58.842"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.843" endtime="20220705 16:38:58.843"/>
</return>
<status status="PASS" starttime="20220705 16:38:58.729" endtime="20220705 16:38:58.843"/>
</kw>
<status status="PASS" starttime="20220705 16:38:58.729" endtime="20220705 16:38:58.843"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 16:38:58.506" endtime="20220705 16:38:58.843"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:58.845" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:58.845" endtime="20220705 16:38:58.845"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:58.845" endtime="20220705 16:38:58.845"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:58.846" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 16:38:58.845" endtime="20220705 16:38:58.846"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:58.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.846" endtime="20220705 16:38:58.955"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.955" endtime="20220705 16:38:58.955"/>
</return>
<msg timestamp="20220705 16:38:58.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.844" endtime="20220705 16:38:58.956"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:58.956" endtime="20220705 16:38:58.956"/>
</return>
<msg timestamp="20220705 16:38:58.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.844" endtime="20220705 16:38:58.956"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 16:38:58.956" endtime="20220705 16:38:58.956"/>
</return>
<msg timestamp="20220705 16:38:58.957" level="INFO">${LABEL_ID} = 62c469224c9f0a291994d139</msg>
<status status="PASS" starttime="20220705 16:38:58.956" endtime="20220705 16:38:58.957"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:58.959" level="INFO">${url} = labels/62c469224c9f0a291994d139</msg>
<status status="PASS" starttime="20220705 16:38:58.958" endtime="20220705 16:38:58.959"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:59.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.959" endtime="20220705 16:38:59.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.067" endtime="20220705 16:38:59.068"/>
</return>
<msg timestamp="20220705 16:38:59.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:58.958" endtime="20220705 16:38:59.068"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.068" endtime="20220705 16:38:59.068"/>
</return>
<status status="PASS" starttime="20220705 16:38:58.957" endtime="20220705 16:38:59.068"/>
</kw>
<status status="PASS" starttime="20220705 16:38:58.957" endtime="20220705 16:38:59.068"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:59.069" level="INFO">${url} = labels/62c469224c9f0a291994d139</msg>
<status status="PASS" starttime="20220705 16:38:59.069" endtime="20220705 16:38:59.069"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:38:59.110" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 16:38:59.069" endtime="20220705 16:38:59.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.110" endtime="20220705 16:38:59.111"/>
</return>
<msg timestamp="20220705 16:38:59.111" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 16:38:59.069" endtime="20220705 16:38:59.111"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.111" endtime="20220705 16:38:59.111"/>
</return>
<status status="PASS" starttime="20220705 16:38:59.068" endtime="20220705 16:38:59.111"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 16:38:58.843" endtime="20220705 16:38:59.111"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:59.114" level="INFO">${url} = boards/62c46922fcc53726cca7cbd8</msg>
<status status="PASS" starttime="20220705 16:38:59.113" endtime="20220705 16:38:59.114"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:38:59.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.114" endtime="20220705 16:38:59.419"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.419" endtime="20220705 16:38:59.419"/>
</return>
<msg timestamp="20220705 16:38:59.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.113" endtime="20220705 16:38:59.419"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.419" endtime="20220705 16:38:59.419"/>
</return>
<status status="PASS" starttime="20220705 16:38:59.113" endtime="20220705 16:38:59.420"/>
</kw>
<status status="PASS" starttime="20220705 16:38:59.112" endtime="20220705 16:38:59.420"/>
</kw>
<status status="PASS" starttime="20220705 16:38:59.112" endtime="20220705 16:38:59.420"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 16:38:59.420" endtime="20220705 16:38:59.421"/>
</kw>
<status status="PASS" starttime="20220705 16:38:59.112" endtime="20220705 16:38:59.421"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 16:38:57.945" endtime="20220705 16:38:59.421"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 16:38:59.430" endtime="20220705 16:38:59.430"/>
</kw>
<status status="PASS" starttime="20220705 16:38:59.430" endtime="20220705 16:38:59.430"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:59.431" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:59.431" endtime="20220705 16:38:59.431"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:59.431" endtime="20220705 16:38:59.431"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:59.432" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 16:38:59.432" endtime="20220705 16:38:59.432"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:59.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.432" endtime="20220705 16:38:59.623"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.623" endtime="20220705 16:38:59.623"/>
</return>
<msg timestamp="20220705 16:38:59.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.431" endtime="20220705 16:38:59.623"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.623" endtime="20220705 16:38:59.623"/>
</return>
<msg timestamp="20220705 16:38:59.623" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.430" endtime="20220705 16:38:59.624"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 16:38:59.625" level="INFO">${TEST_SUITE_BOARD_ID} = 62c46923a4a35f1290d11813</msg>
<status status="PASS" starttime="20220705 16:38:59.624" endtime="20220705 16:38:59.625"/>
</kw>
<status status="PASS" starttime="20220705 16:38:59.624" endtime="20220705 16:38:59.625"/>
</kw>
<status status="PASS" starttime="20220705 16:38:59.430" endtime="20220705 16:38:59.625"/>
</kw>
<status status="PASS" starttime="20220705 16:38:59.429" endtime="20220705 16:38:59.625"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:59.627" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:59.626" endtime="20220705 16:38:59.627"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:59.627" endtime="20220705 16:38:59.627"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:59.628" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 16:38:59.627" endtime="20220705 16:38:59.628"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:59.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.628" endtime="20220705 16:38:59.747"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.747" endtime="20220705 16:38:59.747"/>
</return>
<msg timestamp="20220705 16:38:59.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.626" endtime="20220705 16:38:59.747"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.747" endtime="20220705 16:38:59.747"/>
</return>
<msg timestamp="20220705 16:38:59.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.626" endtime="20220705 16:38:59.748"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:59.748" endtime="20220705 16:38:59.750"/>
</kw>
<status status="PASS" starttime="20220705 16:38:59.748" endtime="20220705 16:38:59.750"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 16:38:59.625" endtime="20220705 16:38:59.750"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:59.752" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:59.752" endtime="20220705 16:38:59.752"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:59.752" endtime="20220705 16:38:59.752"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:59.753" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 16:38:59.752" endtime="20220705 16:38:59.753"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:59.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.753" endtime="20220705 16:38:59.863"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.863" endtime="20220705 16:38:59.863"/>
</return>
<msg timestamp="20220705 16:38:59.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.751" endtime="20220705 16:38:59.864"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.864" endtime="20220705 16:38:59.864"/>
</return>
<msg timestamp="20220705 16:38:59.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.751" endtime="20220705 16:38:59.864"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:38:59.864" endtime="20220705 16:38:59.866"/>
</kw>
<status status="PASS" starttime="20220705 16:38:59.864" endtime="20220705 16:38:59.866"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:38:59.868" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:38:59.867" endtime="20220705 16:38:59.868"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:38:59.868" endtime="20220705 16:38:59.868"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:59.868" level="INFO">${url} = lists/62c4692309b4763315be309e</msg>
<status status="PASS" starttime="20220705 16:38:59.868" endtime="20220705 16:38:59.868"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:38:59.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.869" endtime="20220705 16:38:59.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.962" endtime="20220705 16:38:59.962"/>
</return>
<msg timestamp="20220705 16:38:59.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.867" endtime="20220705 16:38:59.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:38:59.962" endtime="20220705 16:38:59.962"/>
</return>
<status status="PASS" starttime="20220705 16:38:59.866" endtime="20220705 16:38:59.962"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:38:59.964" level="INFO">${url} = lists/62c4692309b4763315be309e</msg>
<status status="PASS" starttime="20220705 16:38:59.963" endtime="20220705 16:38:59.964"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:39:00.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.964" endtime="20220705 16:39:00.011"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:39:00.011" endtime="20220705 16:39:00.011"/>
</return>
<msg timestamp="20220705 16:39:00.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.963" endtime="20220705 16:39:00.011"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:39:00.011" endtime="20220705 16:39:00.011"/>
</return>
<msg timestamp="20220705 16:39:00.011" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:38:59.962" endtime="20220705 16:39:00.011"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 16:39:00.012" endtime="20220705 16:39:00.013"/>
</kw>
<status status="PASS" starttime="20220705 16:39:00.011" endtime="20220705 16:39:00.013"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 16:39:00.014" endtime="20220705 16:39:00.014"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 16:38:59.750" endtime="20220705 16:39:00.014"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:39:00.018" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:39:00.018" endtime="20220705 16:39:00.018"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:39:00.018" endtime="20220705 16:39:00.018"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:39:00.019" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 16:39:00.018" endtime="20220705 16:39:00.019"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:39:00.154" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:39:00.019" endtime="20220705 16:39:00.154"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:39:00.154" endtime="20220705 16:39:00.154"/>
</return>
<msg timestamp="20220705 16:39:00.154" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:39:00.017" endtime="20220705 16:39:00.154"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:39:00.154" endtime="20220705 16:39:00.154"/>
</return>
<msg timestamp="20220705 16:39:00.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:39:00.016" endtime="20220705 16:39:00.155"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 16:39:00.156" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 16:39:00.156" endtime="20220705 16:39:00.156"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 16:39:00.156" endtime="20220705 16:39:00.157"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:39:00.157" level="INFO">${url} = lists/62c469243f85c37525e962f7/closed</msg>
<status status="PASS" starttime="20220705 16:39:00.157" endtime="20220705 16:39:00.157"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 16:39:00.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:39:00.157" endtime="20220705 16:39:00.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:39:00.254" endtime="20220705 16:39:00.254"/>
</return>
<msg timestamp="20220705 16:39:00.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:39:00.155" endtime="20220705 16:39:00.255"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:39:00.255" endtime="20220705 16:39:00.255"/>
</return>
<status status="PASS" starttime="20220705 16:39:00.155" endtime="20220705 16:39:00.255"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:39:00.256" level="INFO">${url} = lists/62c469243f85c37525e962f7</msg>
<status status="PASS" starttime="20220705 16:39:00.256" endtime="20220705 16:39:00.256"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 16:39:00.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:39:00.256" endtime="20220705 16:39:00.303"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:39:00.304" endtime="20220705 16:39:00.304"/>
</return>
<msg timestamp="20220705 16:39:00.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:39:00.256" endtime="20220705 16:39:00.304"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:39:00.304" endtime="20220705 16:39:00.304"/>
</return>
<msg timestamp="20220705 16:39:00.304" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:39:00.255" endtime="20220705 16:39:00.304"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 16:39:00.304" endtime="20220705 16:39:00.305"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 16:39:00.015" endtime="20220705 16:39:00.305"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 16:39:00.307" level="INFO">${url} = boards/62c46923a4a35f1290d11813</msg>
<status status="PASS" starttime="20220705 16:39:00.307" endtime="20220705 16:39:00.307"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 16:39:00.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:39:00.308" endtime="20220705 16:39:00.660"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:39:00.660" endtime="20220705 16:39:00.660"/>
</return>
<msg timestamp="20220705 16:39:00.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 16:39:00.307" endtime="20220705 16:39:00.661"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 16:39:00.661" endtime="20220705 16:39:00.661"/>
</return>
<status status="PASS" starttime="20220705 16:39:00.306" endtime="20220705 16:39:00.661"/>
</kw>
<status status="PASS" starttime="20220705 16:39:00.306" endtime="20220705 16:39:00.661"/>
</kw>
<status status="PASS" starttime="20220705 16:39:00.306" endtime="20220705 16:39:00.661"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 16:39:00.661" endtime="20220705 16:39:00.662"/>
</kw>
<status status="PASS" starttime="20220705 16:39:00.306" endtime="20220705 16:39:00.662"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 16:38:59.422" endtime="20220705 16:39:00.662"/>
</suite>
<status status="PASS" starttime="20220705 16:38:49.560" endtime="20220705 16:39:00.664"/>
</suite>
<status status="PASS" starttime="20220705 16:38:49.543" endtime="20220705 16:39:00.665"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
