<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 13:47:31.550" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 13:47:31.674" endtime="20220705 13:47:31.674"/>
</kw>
<status status="PASS" starttime="20220705 13:47:31.673" endtime="20220705 13:47:31.674"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:31.676" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:31.676" endtime="20220705 13:47:31.676"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:31.676" endtime="20220705 13:47:31.676"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:31.677" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:47:31.677" endtime="20220705 13:47:31.677"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:31.931" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:31.677" endtime="20220705 13:47:31.931"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:31.931" endtime="20220705 13:47:31.931"/>
</return>
<msg timestamp="20220705 13:47:31.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:31.675" endtime="20220705 13:47:31.932"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:31.932" endtime="20220705 13:47:31.932"/>
</return>
<msg timestamp="20220705 13:47:31.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:31.675" endtime="20220705 13:47:31.932"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:31.933" endtime="20220705 13:47:31.937"/>
</kw>
<status status="PASS" starttime="20220705 13:47:31.932" endtime="20220705 13:47:31.938"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:31.940" level="INFO">${url} = boards/62c440f316546a8e83d527bd</msg>
<status status="PASS" starttime="20220705 13:47:31.939" endtime="20220705 13:47:31.940"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:32.275" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:31.940" endtime="20220705 13:47:32.275"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:32.275" endtime="20220705 13:47:32.275"/>
</return>
<msg timestamp="20220705 13:47:32.275" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:31.939" endtime="20220705 13:47:32.275"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:32.275" endtime="20220705 13:47:32.275"/>
</return>
<status status="PASS" starttime="20220705 13:47:31.938" endtime="20220705 13:47:32.276"/>
</kw>
<status status="PASS" starttime="20220705 13:47:31.938" endtime="20220705 13:47:32.276"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:47:31.675" endtime="20220705 13:47:32.276"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:32.278" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:32.277" endtime="20220705 13:47:32.278"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:32.278" endtime="20220705 13:47:32.278"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:32.279" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:47:32.278" endtime="20220705 13:47:32.279"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:32.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:32.279" endtime="20220705 13:47:32.542"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:32.542" endtime="20220705 13:47:32.542"/>
</return>
<msg timestamp="20220705 13:47:32.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:32.277" endtime="20220705 13:47:32.543"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:32.543" endtime="20220705 13:47:32.543"/>
</return>
<msg timestamp="20220705 13:47:32.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:32.276" endtime="20220705 13:47:32.543"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:32.544" endtime="20220705 13:47:32.548"/>
</kw>
<status status="PASS" starttime="20220705 13:47:32.543" endtime="20220705 13:47:32.548"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:32.550" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:32.549" endtime="20220705 13:47:32.550"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:32.550" endtime="20220705 13:47:32.550"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:32.550" level="INFO">${url} = boards/62c440f416f4c349850294c7</msg>
<status status="PASS" starttime="20220705 13:47:32.550" endtime="20220705 13:47:32.550"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:32.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:32.550" endtime="20220705 13:47:32.645"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:32.645" endtime="20220705 13:47:32.645"/>
</return>
<msg timestamp="20220705 13:47:32.646" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:32.549" endtime="20220705 13:47:32.646"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:32.646" endtime="20220705 13:47:32.646"/>
</return>
<status status="PASS" starttime="20220705 13:47:32.548" endtime="20220705 13:47:32.646"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:32.648" level="INFO">${url} = boards/62c440f416f4c349850294c7</msg>
<status status="PASS" starttime="20220705 13:47:32.647" endtime="20220705 13:47:32.648"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:32.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:32.648" endtime="20220705 13:47:32.701"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:32.701" endtime="20220705 13:47:32.701"/>
</return>
<msg timestamp="20220705 13:47:32.702" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:32.647" endtime="20220705 13:47:32.702"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:32.702" endtime="20220705 13:47:32.702"/>
</return>
<msg timestamp="20220705 13:47:32.702" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:32.646" endtime="20220705 13:47:32.702"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:32.702" endtime="20220705 13:47:32.706"/>
</kw>
<status status="PASS" starttime="20220705 13:47:32.702" endtime="20220705 13:47:32.706"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:32.706" endtime="20220705 13:47:32.707"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:32.709" level="INFO">${url} = boards/62c440f416f4c349850294c7</msg>
<status status="PASS" starttime="20220705 13:47:32.709" endtime="20220705 13:47:32.709"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:33.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:32.709" endtime="20220705 13:47:33.075"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:33.075" endtime="20220705 13:47:33.075"/>
</return>
<msg timestamp="20220705 13:47:33.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:32.708" endtime="20220705 13:47:33.075"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:33.075" endtime="20220705 13:47:33.075"/>
</return>
<status status="PASS" starttime="20220705 13:47:32.708" endtime="20220705 13:47:33.076"/>
</kw>
<status status="PASS" starttime="20220705 13:47:32.707" endtime="20220705 13:47:33.076"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:47:32.276" endtime="20220705 13:47:33.076"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:33.078" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:33.078" endtime="20220705 13:47:33.078"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:33.078" endtime="20220705 13:47:33.078"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:33.079" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:47:33.078" endtime="20220705 13:47:33.079"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:33.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:33.079" endtime="20220705 13:47:33.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:33.254" endtime="20220705 13:47:33.254"/>
</return>
<msg timestamp="20220705 13:47:33.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:33.077" endtime="20220705 13:47:33.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:33.254" endtime="20220705 13:47:33.254"/>
</return>
<msg timestamp="20220705 13:47:33.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:33.077" endtime="20220705 13:47:33.254"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:33.256" level="INFO">${url} = boards/62c440f50e63cd0ca4a323c8</msg>
<status status="PASS" starttime="20220705 13:47:33.256" endtime="20220705 13:47:33.256"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:33.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:33.256" endtime="20220705 13:47:33.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:33.695" endtime="20220705 13:47:33.695"/>
</return>
<msg timestamp="20220705 13:47:33.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:33.255" endtime="20220705 13:47:33.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:33.695" endtime="20220705 13:47:33.695"/>
</return>
<status status="PASS" starttime="20220705 13:47:33.254" endtime="20220705 13:47:33.695"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:33.697" level="INFO">${url} = boards/62c440f50e63cd0ca4a323c8</msg>
<status status="PASS" starttime="20220705 13:47:33.697" endtime="20220705 13:47:33.697"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:33.732" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:47:33.697" endtime="20220705 13:47:33.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:33.732" endtime="20220705 13:47:33.732"/>
</return>
<msg timestamp="20220705 13:47:33.732" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:47:33.696" endtime="20220705 13:47:33.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:33.732" endtime="20220705 13:47:33.732"/>
</return>
<status status="PASS" starttime="20220705 13:47:33.695" endtime="20220705 13:47:33.732"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:47:33.076" endtime="20220705 13:47:33.732"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:33.735" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:33.734" endtime="20220705 13:47:33.735"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:33.735" endtime="20220705 13:47:33.735"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:33.736" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:47:33.735" endtime="20220705 13:47:33.736"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:33.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:33.736" endtime="20220705 13:47:33.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:33.979" endtime="20220705 13:47:33.979"/>
</return>
<msg timestamp="20220705 13:47:33.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:33.734" endtime="20220705 13:47:33.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:33.979" endtime="20220705 13:47:33.979"/>
</return>
<msg timestamp="20220705 13:47:33.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:33.733" endtime="20220705 13:47:33.979"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:33.980" endtime="20220705 13:47:33.984"/>
</kw>
<status status="PASS" starttime="20220705 13:47:33.980" endtime="20220705 13:47:33.984"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:33.986" level="INFO">${url} = boards/62c440f52ce5e36e88372d34</msg>
<status status="PASS" starttime="20220705 13:47:33.986" endtime="20220705 13:47:33.986"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:34.030" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:33.986" endtime="20220705 13:47:34.030"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.030" endtime="20220705 13:47:34.030"/>
</return>
<msg timestamp="20220705 13:47:34.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:33.985" endtime="20220705 13:47:34.031"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.031" endtime="20220705 13:47:34.031"/>
</return>
<msg timestamp="20220705 13:47:34.031" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:33.985" endtime="20220705 13:47:34.031"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:34.032" endtime="20220705 13:47:34.036"/>
</kw>
<status status="PASS" starttime="20220705 13:47:34.031" endtime="20220705 13:47:34.036"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:34.036" endtime="20220705 13:47:34.037"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:34.039" level="INFO">${url} = boards/62c440f52ce5e36e88372d34</msg>
<status status="PASS" starttime="20220705 13:47:34.038" endtime="20220705 13:47:34.039"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:34.363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.039" endtime="20220705 13:47:34.363"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.363" endtime="20220705 13:47:34.363"/>
</return>
<msg timestamp="20220705 13:47:34.363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.038" endtime="20220705 13:47:34.363"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.363" endtime="20220705 13:47:34.363"/>
</return>
<status status="PASS" starttime="20220705 13:47:34.037" endtime="20220705 13:47:34.364"/>
</kw>
<status status="PASS" starttime="20220705 13:47:34.037" endtime="20220705 13:47:34.364"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:47:33.733" endtime="20220705 13:47:34.364"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:34.366" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:34.366" endtime="20220705 13:47:34.366"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:34.366" endtime="20220705 13:47:34.366"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:34.367" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:47:34.366" endtime="20220705 13:47:34.367"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:34.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.367" endtime="20220705 13:47:34.548"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.548" endtime="20220705 13:47:34.548"/>
</return>
<msg timestamp="20220705 13:47:34.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.365" endtime="20220705 13:47:34.548"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.548" endtime="20220705 13:47:34.549"/>
</return>
<msg timestamp="20220705 13:47:34.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.365" endtime="20220705 13:47:34.549"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:34.549" endtime="20220705 13:47:34.554"/>
</kw>
<status status="PASS" starttime="20220705 13:47:34.549" endtime="20220705 13:47:34.554"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:34.555" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:34.555" endtime="20220705 13:47:34.555"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:34.555" endtime="20220705 13:47:34.556"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:34.556" level="INFO">${url} = boards/62c440f61623506dcf230ffa</msg>
<status status="PASS" starttime="20220705 13:47:34.556" endtime="20220705 13:47:34.556"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:34.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.556" endtime="20220705 13:47:34.660"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.660" endtime="20220705 13:47:34.660"/>
</return>
<msg timestamp="20220705 13:47:34.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.555" endtime="20220705 13:47:34.660"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.660" endtime="20220705 13:47:34.660"/>
</return>
<status status="PASS" starttime="20220705 13:47:34.554" endtime="20220705 13:47:34.661"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:34.663" level="INFO">${url} = boards/62c440f61623506dcf230ffa</msg>
<status status="PASS" starttime="20220705 13:47:34.662" endtime="20220705 13:47:34.663"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:34.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.663" endtime="20220705 13:47:34.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.706" endtime="20220705 13:47:34.706"/>
</return>
<msg timestamp="20220705 13:47:34.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.662" endtime="20220705 13:47:34.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.706" endtime="20220705 13:47:34.707"/>
</return>
<msg timestamp="20220705 13:47:34.707" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.661" endtime="20220705 13:47:34.707"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:34.707" endtime="20220705 13:47:34.708"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:34.709" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:34.709" endtime="20220705 13:47:34.709"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:34.709" endtime="20220705 13:47:34.709"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:34.710" level="INFO">${url} = boards/62c440f61623506dcf230ffa</msg>
<status status="PASS" starttime="20220705 13:47:34.710" endtime="20220705 13:47:34.710"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:34.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.710" endtime="20220705 13:47:34.804"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.804" endtime="20220705 13:47:34.804"/>
</return>
<msg timestamp="20220705 13:47:34.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.708" endtime="20220705 13:47:34.805"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.805" endtime="20220705 13:47:34.805"/>
</return>
<status status="PASS" starttime="20220705 13:47:34.708" endtime="20220705 13:47:34.805"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:34.807" level="INFO">${url} = boards/62c440f61623506dcf230ffa</msg>
<status status="PASS" starttime="20220705 13:47:34.807" endtime="20220705 13:47:34.807"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:34.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.807" endtime="20220705 13:47:34.852"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.852" endtime="20220705 13:47:34.852"/>
</return>
<msg timestamp="20220705 13:47:34.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.806" endtime="20220705 13:47:34.852"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:34.852" endtime="20220705 13:47:34.852"/>
</return>
<msg timestamp="20220705 13:47:34.853" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.805" endtime="20220705 13:47:34.853"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:34.853" endtime="20220705 13:47:34.853"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:34.855" level="INFO">${url} = boards/62c440f61623506dcf230ffa</msg>
<status status="PASS" starttime="20220705 13:47:34.855" endtime="20220705 13:47:34.855"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:35.196" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.855" endtime="20220705 13:47:35.196"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:35.196" endtime="20220705 13:47:35.196"/>
</return>
<msg timestamp="20220705 13:47:35.196" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:34.855" endtime="20220705 13:47:35.197"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:35.197" endtime="20220705 13:47:35.197"/>
</return>
<status status="PASS" starttime="20220705 13:47:34.854" endtime="20220705 13:47:35.197"/>
</kw>
<status status="PASS" starttime="20220705 13:47:34.854" endtime="20220705 13:47:35.197"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:47:34.364" endtime="20220705 13:47:35.197"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 13:47:35.198" endtime="20220705 13:47:35.199"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 13:47:31.569" endtime="20220705 13:47:35.199"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 13:47:35.209" endtime="20220705 13:47:35.210"/>
</kw>
<status status="PASS" starttime="20220705 13:47:35.209" endtime="20220705 13:47:35.210"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:35.211" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:35.211" endtime="20220705 13:47:35.211"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:35.211" endtime="20220705 13:47:35.211"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:35.212" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:47:35.211" endtime="20220705 13:47:35.212"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:35.482" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.212" endtime="20220705 13:47:35.483"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:35.483" endtime="20220705 13:47:35.483"/>
</return>
<msg timestamp="20220705 13:47:35.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.210" endtime="20220705 13:47:35.483"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:35.483" endtime="20220705 13:47:35.483"/>
</return>
<msg timestamp="20220705 13:47:35.483" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.210" endtime="20220705 13:47:35.483"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:47:35.484" level="INFO">${TEST_SUITE_BOARD_ID} = 62c440f790ed788077cee8e1</msg>
<status status="PASS" starttime="20220705 13:47:35.483" endtime="20220705 13:47:35.484"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:35.485" level="INFO">${url} = boards/62c440f790ed788077cee8e1/lists/</msg>
<status status="PASS" starttime="20220705 13:47:35.485" endtime="20220705 13:47:35.485"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:35.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.486" endtime="20220705 13:47:35.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:35.534" endtime="20220705 13:47:35.534"/>
</return>
<msg timestamp="20220705 13:47:35.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.485" endtime="20220705 13:47:35.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:35.534" endtime="20220705 13:47:35.534"/>
</return>
<msg timestamp="20220705 13:47:35.535" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.484" endtime="20220705 13:47:35.535"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:47:35.536" level="INFO">${TEST_SUITE_LIST_ID} = 62c440f790ed788077cee8e8</msg>
<status status="PASS" starttime="20220705 13:47:35.535" endtime="20220705 13:47:35.536"/>
</kw>
<status status="PASS" starttime="20220705 13:47:35.210" endtime="20220705 13:47:35.536"/>
</kw>
<status status="PASS" starttime="20220705 13:47:35.209" endtime="20220705 13:47:35.536"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:35.538" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:35.538" endtime="20220705 13:47:35.538"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:35.538" endtime="20220705 13:47:35.538"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:35.539" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 13:47:35.538" endtime="20220705 13:47:35.539"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:35.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.539" endtime="20220705 13:47:35.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:35.750" endtime="20220705 13:47:35.751"/>
</return>
<msg timestamp="20220705 13:47:35.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.537" endtime="20220705 13:47:35.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:35.751" endtime="20220705 13:47:35.751"/>
</return>
<msg timestamp="20220705 13:47:35.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.537" endtime="20220705 13:47:35.751"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:35.752" endtime="20220705 13:47:35.757"/>
</kw>
<status status="PASS" starttime="20220705 13:47:35.751" endtime="20220705 13:47:35.757"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:35.758" endtime="20220705 13:47:35.758"/>
</return>
<msg timestamp="20220705 13:47:35.758" level="INFO">${CARD_ID} = 62c440f711525703dc28c960</msg>
<status status="PASS" starttime="20220705 13:47:35.757" endtime="20220705 13:47:35.758"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:35.760" level="INFO">${url} = cards/62c440f711525703dc28c960</msg>
<status status="PASS" starttime="20220705 13:47:35.759" endtime="20220705 13:47:35.760"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:35.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.760" endtime="20220705 13:47:35.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:35.812" endtime="20220705 13:47:35.812"/>
</return>
<msg timestamp="20220705 13:47:35.813" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.759" endtime="20220705 13:47:35.813"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:35.813" endtime="20220705 13:47:35.813"/>
</return>
<msg timestamp="20220705 13:47:35.813" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.758" endtime="20220705 13:47:35.813"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:35.813" endtime="20220705 13:47:35.814"/>
</return>
<msg timestamp="20220705 13:47:35.814" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 13:47:35.813" endtime="20220705 13:47:35.814"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:35.814" endtime="20220705 13:47:35.815"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:35.816" level="INFO">${url} = cards/62c440f711525703dc28c960</msg>
<status status="PASS" starttime="20220705 13:47:35.816" endtime="20220705 13:47:35.817"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:36.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.817" endtime="20220705 13:47:36.114"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:36.114" endtime="20220705 13:47:36.114"/>
</return>
<msg timestamp="20220705 13:47:36.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:35.816" endtime="20220705 13:47:36.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:36.115" endtime="20220705 13:47:36.115"/>
</return>
<status status="PASS" starttime="20220705 13:47:35.815" endtime="20220705 13:47:36.115"/>
</kw>
<status status="PASS" starttime="20220705 13:47:35.815" endtime="20220705 13:47:36.115"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:47:35.536" endtime="20220705 13:47:36.115"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:36.118" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:36.118" endtime="20220705 13:47:36.118"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:36.118" endtime="20220705 13:47:36.118"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:36.119" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 13:47:36.118" endtime="20220705 13:47:36.119"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:36.278" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.119" endtime="20220705 13:47:36.278"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:36.279" endtime="20220705 13:47:36.279"/>
</return>
<msg timestamp="20220705 13:47:36.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.117" endtime="20220705 13:47:36.279"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:36.279" endtime="20220705 13:47:36.279"/>
</return>
<msg timestamp="20220705 13:47:36.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.117" endtime="20220705 13:47:36.279"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:36.280" endtime="20220705 13:47:36.280"/>
</return>
<msg timestamp="20220705 13:47:36.281" level="INFO">${CARD_ID} = 62c440f81890eb2cbfab4e8e</msg>
<status status="PASS" starttime="20220705 13:47:36.279" endtime="20220705 13:47:36.281"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:36.283" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:36.283" endtime="20220705 13:47:36.283"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:36.283" endtime="20220705 13:47:36.283"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:36.284" level="INFO">${url} = cards/62c440f81890eb2cbfab4e8e</msg>
<status status="PASS" starttime="20220705 13:47:36.283" endtime="20220705 13:47:36.284"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:36.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.284" endtime="20220705 13:47:36.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:36.488" endtime="20220705 13:47:36.488"/>
</return>
<msg timestamp="20220705 13:47:36.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.282" endtime="20220705 13:47:36.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:36.489" endtime="20220705 13:47:36.489"/>
</return>
<msg timestamp="20220705 13:47:36.489" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.281" endtime="20220705 13:47:36.489"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:36.489" endtime="20220705 13:47:36.489"/>
</return>
<status status="PASS" starttime="20220705 13:47:36.281" endtime="20220705 13:47:36.489"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:36.490" level="INFO">${url} = cards/62c440f81890eb2cbfab4e8e</msg>
<status status="PASS" starttime="20220705 13:47:36.490" endtime="20220705 13:47:36.490"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:36.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.491" endtime="20220705 13:47:36.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:36.553" endtime="20220705 13:47:36.553"/>
</return>
<msg timestamp="20220705 13:47:36.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.490" endtime="20220705 13:47:36.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:36.553" endtime="20220705 13:47:36.553"/>
</return>
<msg timestamp="20220705 13:47:36.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.489" endtime="20220705 13:47:36.554"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:36.554" endtime="20220705 13:47:36.554"/>
</return>
<msg timestamp="20220705 13:47:36.555" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 13:47:36.554" endtime="20220705 13:47:36.555"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 13:47:36.555" endtime="20220705 13:47:36.556"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:36.557" level="INFO">${url} = cards/62c440f81890eb2cbfab4e8e</msg>
<status status="PASS" starttime="20220705 13:47:36.557" endtime="20220705 13:47:36.557"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:36.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.557" endtime="20220705 13:47:36.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:36.732" endtime="20220705 13:47:36.732"/>
</return>
<msg timestamp="20220705 13:47:36.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.557" endtime="20220705 13:47:36.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:36.732" endtime="20220705 13:47:36.732"/>
</return>
<status status="PASS" starttime="20220705 13:47:36.556" endtime="20220705 13:47:36.732"/>
</kw>
<status status="PASS" starttime="20220705 13:47:36.556" endtime="20220705 13:47:36.732"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 13:47:36.116" endtime="20220705 13:47:36.732"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:36.735" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:36.734" endtime="20220705 13:47:36.735"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:36.735" endtime="20220705 13:47:36.735"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:36.736" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 13:47:36.735" endtime="20220705 13:47:36.736"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:36.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.736" endtime="20220705 13:47:36.902"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:36.902" endtime="20220705 13:47:36.902"/>
</return>
<msg timestamp="20220705 13:47:36.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.734" endtime="20220705 13:47:36.902"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:36.902" endtime="20220705 13:47:36.902"/>
</return>
<msg timestamp="20220705 13:47:36.903" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.733" endtime="20220705 13:47:36.903"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:36.903" endtime="20220705 13:47:36.903"/>
</return>
<msg timestamp="20220705 13:47:36.904" level="INFO">${CARD_ID} = 62c440f8e77c4831c7256ff9</msg>
<status status="PASS" starttime="20220705 13:47:36.903" endtime="20220705 13:47:36.904"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:36.905" level="INFO">${url} = cards/62c440f8e77c4831c7256ff9</msg>
<status status="PASS" starttime="20220705 13:47:36.905" endtime="20220705 13:47:36.905"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:37.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.905" endtime="20220705 13:47:37.108"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:37.108" endtime="20220705 13:47:37.108"/>
</return>
<msg timestamp="20220705 13:47:37.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.904" endtime="20220705 13:47:37.108"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:37.108" endtime="20220705 13:47:37.108"/>
</return>
<msg timestamp="20220705 13:47:37.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:36.904" endtime="20220705 13:47:37.108"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:37.109" endtime="20220705 13:47:37.111"/>
</kw>
<status status="PASS" starttime="20220705 13:47:37.109" endtime="20220705 13:47:37.111"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:37.112" level="INFO">${url} = cards/62c440f8e77c4831c7256ff9</msg>
<status status="PASS" starttime="20220705 13:47:37.112" endtime="20220705 13:47:37.112"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:37.146" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:47:37.112" endtime="20220705 13:47:37.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:37.146" endtime="20220705 13:47:37.146"/>
</return>
<msg timestamp="20220705 13:47:37.146" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:47:37.111" endtime="20220705 13:47:37.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:37.146" endtime="20220705 13:47:37.146"/>
</return>
<status status="PASS" starttime="20220705 13:47:37.111" endtime="20220705 13:47:37.147"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:47:36.733" endtime="20220705 13:47:37.147"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:37.149" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:37.149" endtime="20220705 13:47:37.149"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:37.149" endtime="20220705 13:47:37.149"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:37.150" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 13:47:37.149" endtime="20220705 13:47:37.150"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:37.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:37.150" endtime="20220705 13:47:37.320"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:37.321" endtime="20220705 13:47:37.321"/>
</return>
<msg timestamp="20220705 13:47:37.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:37.148" endtime="20220705 13:47:37.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:37.321" endtime="20220705 13:47:37.321"/>
</return>
<msg timestamp="20220705 13:47:37.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:37.148" endtime="20220705 13:47:37.321"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:37.322" endtime="20220705 13:47:37.322"/>
</return>
<msg timestamp="20220705 13:47:37.322" level="INFO">${CARD_ID} = 62c440f9dc1cfc806fe2bbf9</msg>
<status status="PASS" starttime="20220705 13:47:37.321" endtime="20220705 13:47:37.322"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:37.323" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:37.323" endtime="20220705 13:47:37.324"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:37.324" endtime="20220705 13:47:37.324"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:37.324" level="INFO">${url} = cards/62c440f9dc1cfc806fe2bbf9</msg>
<status status="PASS" starttime="20220705 13:47:37.324" endtime="20220705 13:47:37.324"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:37.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:37.324" endtime="20220705 13:47:37.463"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:37.464" endtime="20220705 13:47:37.464"/>
</return>
<msg timestamp="20220705 13:47:37.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:37.323" endtime="20220705 13:47:37.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:37.464" endtime="20220705 13:47:37.464"/>
</return>
<msg timestamp="20220705 13:47:37.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:37.322" endtime="20220705 13:47:37.464"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:37.465" endtime="20220705 13:47:37.469"/>
</kw>
<status status="PASS" starttime="20220705 13:47:37.464" endtime="20220705 13:47:37.469"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:37.470" level="INFO">${url} = cards/62c440f9dc1cfc806fe2bbf9</msg>
<status status="PASS" starttime="20220705 13:47:37.470" endtime="20220705 13:47:37.470"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:37.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:37.470" endtime="20220705 13:47:37.521"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:37.521" endtime="20220705 13:47:37.521"/>
</return>
<msg timestamp="20220705 13:47:37.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:37.470" endtime="20220705 13:47:37.521"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:37.521" endtime="20220705 13:47:37.522"/>
</return>
<msg timestamp="20220705 13:47:37.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:37.469" endtime="20220705 13:47:37.522"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:37.522" endtime="20220705 13:47:37.522"/>
</return>
<msg timestamp="20220705 13:47:37.523" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 13:47:37.522" endtime="20220705 13:47:37.523"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:37.524" endtime="20220705 13:47:37.524"/>
</return>
<msg timestamp="20220705 13:47:37.524" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 13:47:37.523" endtime="20220705 13:47:37.524"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:37.525" endtime="20220705 13:47:37.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:37.525" endtime="20220705 13:47:37.525"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:37.526" level="INFO">${url} = cards/62c440f9dc1cfc806fe2bbf9</msg>
<status status="PASS" starttime="20220705 13:47:37.526" endtime="20220705 13:47:37.526"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:37.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:37.526" endtime="20220705 13:47:37.749"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:37.749" endtime="20220705 13:47:37.749"/>
</return>
<msg timestamp="20220705 13:47:37.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:37.526" endtime="20220705 13:47:37.749"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:37.749" endtime="20220705 13:47:37.749"/>
</return>
<status status="PASS" starttime="20220705 13:47:37.525" endtime="20220705 13:47:37.749"/>
</kw>
<status status="PASS" starttime="20220705 13:47:37.525" endtime="20220705 13:47:37.749"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 13:47:37.147" endtime="20220705 13:47:37.750"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:37.752" level="INFO">${url} = boards/62c440f790ed788077cee8e1</msg>
<status status="PASS" starttime="20220705 13:47:37.752" endtime="20220705 13:47:37.752"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:38.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:37.752" endtime="20220705 13:47:38.191"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:38.191" endtime="20220705 13:47:38.191"/>
</return>
<msg timestamp="20220705 13:47:38.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:37.752" endtime="20220705 13:47:38.191"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:38.191" endtime="20220705 13:47:38.191"/>
</return>
<status status="PASS" starttime="20220705 13:47:37.751" endtime="20220705 13:47:38.191"/>
</kw>
<status status="PASS" starttime="20220705 13:47:37.751" endtime="20220705 13:47:38.191"/>
</kw>
<status status="PASS" starttime="20220705 13:47:37.751" endtime="20220705 13:47:38.191"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 13:47:38.192" endtime="20220705 13:47:38.193"/>
</kw>
<status status="PASS" starttime="20220705 13:47:37.750" endtime="20220705 13:47:38.193"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 13:47:35.200" endtime="20220705 13:47:38.193"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 13:47:38.203" endtime="20220705 13:47:38.203"/>
</kw>
<status status="PASS" starttime="20220705 13:47:38.203" endtime="20220705 13:47:38.204"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:38.204" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:38.204" endtime="20220705 13:47:38.204"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:38.205" endtime="20220705 13:47:38.205"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:38.205" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:47:38.205" endtime="20220705 13:47:38.205"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:38.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.205" endtime="20220705 13:47:38.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:38.459" endtime="20220705 13:47:38.459"/>
</return>
<msg timestamp="20220705 13:47:38.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.204" endtime="20220705 13:47:38.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:38.459" endtime="20220705 13:47:38.459"/>
</return>
<msg timestamp="20220705 13:47:38.459" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.204" endtime="20220705 13:47:38.459"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:47:38.460" level="INFO">${TEST_SUITE_BOARD_ID} = 62c440fa15e5741523b072d4</msg>
<status status="PASS" starttime="20220705 13:47:38.459" endtime="20220705 13:47:38.460"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:38.461" level="INFO">${url} = boards/62c440fa15e5741523b072d4/lists/</msg>
<status status="PASS" starttime="20220705 13:47:38.461" endtime="20220705 13:47:38.461"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:38.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.461" endtime="20220705 13:47:38.509"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:38.509" endtime="20220705 13:47:38.509"/>
</return>
<msg timestamp="20220705 13:47:38.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.461" endtime="20220705 13:47:38.509"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:38.509" endtime="20220705 13:47:38.509"/>
</return>
<msg timestamp="20220705 13:47:38.509" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.460" endtime="20220705 13:47:38.509"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:47:38.510" level="INFO">${TEST_SUITE_LIST_ID} = 62c440fa15e5741523b072db</msg>
<status status="PASS" starttime="20220705 13:47:38.510" endtime="20220705 13:47:38.510"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:38.512" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:38.512" endtime="20220705 13:47:38.512"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:38.512" endtime="20220705 13:47:38.512"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:38.513" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 13:47:38.512" endtime="20220705 13:47:38.513"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:38.789" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.513" endtime="20220705 13:47:38.789"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:38.789" endtime="20220705 13:47:38.789"/>
</return>
<msg timestamp="20220705 13:47:38.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.511" endtime="20220705 13:47:38.790"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:38.790" endtime="20220705 13:47:38.790"/>
</return>
<msg timestamp="20220705 13:47:38.790" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.511" endtime="20220705 13:47:38.790"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:47:38.791" level="INFO">${TEST_SUITE_CARD_ID} = 62c440fa4775bd6de50ab667</msg>
<status status="PASS" starttime="20220705 13:47:38.790" endtime="20220705 13:47:38.791"/>
</kw>
<status status="PASS" starttime="20220705 13:47:38.204" endtime="20220705 13:47:38.791"/>
</kw>
<status status="PASS" starttime="20220705 13:47:38.203" endtime="20220705 13:47:38.791"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:38.793" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:38.793" endtime="20220705 13:47:38.793"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:38.793" endtime="20220705 13:47:38.794"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:38.795" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 13:47:38.794" endtime="20220705 13:47:38.795"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:38.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.795" endtime="20220705 13:47:38.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:38.912" endtime="20220705 13:47:38.913"/>
</return>
<msg timestamp="20220705 13:47:38.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.793" endtime="20220705 13:47:38.913"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:38.913" endtime="20220705 13:47:38.913"/>
</return>
<msg timestamp="20220705 13:47:38.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.792" endtime="20220705 13:47:38.913"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:38.914" endtime="20220705 13:47:38.914"/>
</return>
<msg timestamp="20220705 13:47:38.914" level="INFO">${checklist_id} = 62c440fa70e0902e54037c76</msg>
<status status="PASS" starttime="20220705 13:47:38.913" endtime="20220705 13:47:38.914"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:38.916" level="INFO">${url} = checklists/62c440fa70e0902e54037c76</msg>
<status status="PASS" starttime="20220705 13:47:38.915" endtime="20220705 13:47:38.916"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:38.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.916" endtime="20220705 13:47:38.968"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:38.968" endtime="20220705 13:47:38.968"/>
</return>
<msg timestamp="20220705 13:47:38.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.915" endtime="20220705 13:47:38.968"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:38.968" endtime="20220705 13:47:38.968"/>
</return>
<msg timestamp="20220705 13:47:38.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.915" endtime="20220705 13:47:38.968"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:38.969" endtime="20220705 13:47:38.969"/>
</return>
<msg timestamp="20220705 13:47:38.970" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 13:47:38.969" endtime="20220705 13:47:38.970"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:38.970" endtime="20220705 13:47:38.970"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:38.971" level="INFO">${url} = checklists/62c440fa70e0902e54037c76</msg>
<status status="PASS" starttime="20220705 13:47:38.971" endtime="20220705 13:47:38.971"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:39.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.971" endtime="20220705 13:47:39.082"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.082" endtime="20220705 13:47:39.082"/>
</return>
<msg timestamp="20220705 13:47:39.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:38.970" endtime="20220705 13:47:39.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.083" endtime="20220705 13:47:39.083"/>
</return>
<status status="PASS" starttime="20220705 13:47:38.970" endtime="20220705 13:47:39.083"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:47:38.791" endtime="20220705 13:47:39.083"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:39.086" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:39.085" endtime="20220705 13:47:39.086"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:39.086" endtime="20220705 13:47:39.086"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:39.087" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 13:47:39.086" endtime="20220705 13:47:39.087"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:39.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.087" endtime="20220705 13:47:39.201"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.201" endtime="20220705 13:47:39.202"/>
</return>
<msg timestamp="20220705 13:47:39.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.085" endtime="20220705 13:47:39.202"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.202" endtime="20220705 13:47:39.202"/>
</return>
<msg timestamp="20220705 13:47:39.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.084" endtime="20220705 13:47:39.202"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:39.203" endtime="20220705 13:47:39.203"/>
</return>
<msg timestamp="20220705 13:47:39.204" level="INFO">${checklist_id} = 62c440fb83fb47208f0f165f</msg>
<status status="PASS" starttime="20220705 13:47:39.202" endtime="20220705 13:47:39.204"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:39.205" level="INFO">${url} = checklists/62c440fb83fb47208f0f165f</msg>
<status status="PASS" starttime="20220705 13:47:39.204" endtime="20220705 13:47:39.205"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:39.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.205" endtime="20220705 13:47:39.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.308" endtime="20220705 13:47:39.308"/>
</return>
<msg timestamp="20220705 13:47:39.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.204" endtime="20220705 13:47:39.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.308" endtime="20220705 13:47:39.308"/>
</return>
<msg timestamp="20220705 13:47:39.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.204" endtime="20220705 13:47:39.308"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:39.309" endtime="20220705 13:47:39.311"/>
</kw>
<status status="PASS" starttime="20220705 13:47:39.309" endtime="20220705 13:47:39.311"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:39.312" level="INFO">${url} = checklists/62c440fb83fb47208f0f165f</msg>
<status status="PASS" starttime="20220705 13:47:39.312" endtime="20220705 13:47:39.312"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:39.351" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:47:39.313" endtime="20220705 13:47:39.351"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.351" endtime="20220705 13:47:39.351"/>
</return>
<msg timestamp="20220705 13:47:39.351" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:47:39.312" endtime="20220705 13:47:39.351"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.351" endtime="20220705 13:47:39.351"/>
</return>
<status status="PASS" starttime="20220705 13:47:39.311" endtime="20220705 13:47:39.352"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:47:39.083" endtime="20220705 13:47:39.352"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:39.356" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:39.354" endtime="20220705 13:47:39.356"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:39.356" endtime="20220705 13:47:39.356"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:39.357" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 13:47:39.356" endtime="20220705 13:47:39.357"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:39.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.357" endtime="20220705 13:47:39.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.473" endtime="20220705 13:47:39.473"/>
</return>
<msg timestamp="20220705 13:47:39.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.354" endtime="20220705 13:47:39.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.473" endtime="20220705 13:47:39.473"/>
</return>
<msg timestamp="20220705 13:47:39.474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.353" endtime="20220705 13:47:39.474"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:39.474" endtime="20220705 13:47:39.474"/>
</return>
<msg timestamp="20220705 13:47:39.475" level="INFO">${checklist_id} = 62c440fba826f92bd50ebbdc</msg>
<status status="PASS" starttime="20220705 13:47:39.474" endtime="20220705 13:47:39.475"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:39.476" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:39.476" endtime="20220705 13:47:39.476"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:39.476" endtime="20220705 13:47:39.477"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:39.477" level="INFO">${url} = checklists/62c440fba826f92bd50ebbdc</msg>
<status status="PASS" starttime="20220705 13:47:39.477" endtime="20220705 13:47:39.477"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:39.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.477" endtime="20220705 13:47:39.566"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.566" endtime="20220705 13:47:39.566"/>
</return>
<msg timestamp="20220705 13:47:39.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.476" endtime="20220705 13:47:39.566"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.566" endtime="20220705 13:47:39.566"/>
</return>
<msg timestamp="20220705 13:47:39.567" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.475" endtime="20220705 13:47:39.567"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:39.568" level="INFO">${url} = checklists/62c440fba826f92bd50ebbdc</msg>
<status status="PASS" starttime="20220705 13:47:39.568" endtime="20220705 13:47:39.568"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:39.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.568" endtime="20220705 13:47:39.631"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.631" endtime="20220705 13:47:39.632"/>
</return>
<msg timestamp="20220705 13:47:39.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.567" endtime="20220705 13:47:39.632"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.632" endtime="20220705 13:47:39.632"/>
</return>
<msg timestamp="20220705 13:47:39.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.567" endtime="20220705 13:47:39.632"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:39.633" endtime="20220705 13:47:39.633"/>
</return>
<msg timestamp="20220705 13:47:39.633" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 13:47:39.632" endtime="20220705 13:47:39.633"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:39.634" endtime="20220705 13:47:39.634"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:39.647" level="INFO">${url} = checklists/62c440fba826f92bd50ebbdc</msg>
<status status="PASS" starttime="20220705 13:47:39.646" endtime="20220705 13:47:39.647"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:39.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.647" endtime="20220705 13:47:39.756"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.756" endtime="20220705 13:47:39.756"/>
</return>
<msg timestamp="20220705 13:47:39.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.646" endtime="20220705 13:47:39.757"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:39.757" endtime="20220705 13:47:39.757"/>
</return>
<status status="PASS" starttime="20220705 13:47:39.634" endtime="20220705 13:47:39.757"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 13:47:39.352" endtime="20220705 13:47:39.757"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:39.760" level="INFO">${url} = boards/62c440fa15e5741523b072d4</msg>
<status status="PASS" starttime="20220705 13:47:39.759" endtime="20220705 13:47:39.760"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:40.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.760" endtime="20220705 13:47:40.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.180" endtime="20220705 13:47:40.180"/>
</return>
<msg timestamp="20220705 13:47:40.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:39.759" endtime="20220705 13:47:40.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.180" endtime="20220705 13:47:40.180"/>
</return>
<status status="PASS" starttime="20220705 13:47:39.759" endtime="20220705 13:47:40.180"/>
</kw>
<status status="PASS" starttime="20220705 13:47:39.758" endtime="20220705 13:47:40.180"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 13:47:40.181" endtime="20220705 13:47:40.182"/>
</kw>
<status status="PASS" starttime="20220705 13:47:39.758" endtime="20220705 13:47:40.182"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 13:47:38.194" endtime="20220705 13:47:40.182"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 13:47:40.193" endtime="20220705 13:47:40.193"/>
</kw>
<status status="PASS" starttime="20220705 13:47:40.192" endtime="20220705 13:47:40.193"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:40.194" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:40.194" endtime="20220705 13:47:40.194"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:40.194" endtime="20220705 13:47:40.194"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:40.195" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:47:40.194" endtime="20220705 13:47:40.195"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:40.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.195" endtime="20220705 13:47:40.388"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.388" endtime="20220705 13:47:40.388"/>
</return>
<msg timestamp="20220705 13:47:40.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.193" endtime="20220705 13:47:40.388"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.388" endtime="20220705 13:47:40.389"/>
</return>
<msg timestamp="20220705 13:47:40.389" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.193" endtime="20220705 13:47:40.389"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:47:40.390" level="INFO">${TEST_SUITE_BOARD_ID} = 62c440fccb210351e3a63e39</msg>
<status status="PASS" starttime="20220705 13:47:40.389" endtime="20220705 13:47:40.390"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:40.441" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.390" endtime="20220705 13:47:40.441"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:47:40.442" level="INFO">${TEST_SUITE_LIST_ID} = 62c440fccb210351e3a63e40</msg>
<status status="PASS" starttime="20220705 13:47:40.441" endtime="20220705 13:47:40.443"/>
</kw>
<status status="PASS" starttime="20220705 13:47:40.193" endtime="20220705 13:47:40.443"/>
</kw>
<status status="PASS" starttime="20220705 13:47:40.192" endtime="20220705 13:47:40.443"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:40.444" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:40.444" endtime="20220705 13:47:40.444"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:40.445" endtime="20220705 13:47:40.445"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:40.445" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 13:47:40.445" endtime="20220705 13:47:40.445"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:40.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.445" endtime="20220705 13:47:40.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.549" endtime="20220705 13:47:40.549"/>
</return>
<msg timestamp="20220705 13:47:40.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.444" endtime="20220705 13:47:40.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.549" endtime="20220705 13:47:40.550"/>
</return>
<msg timestamp="20220705 13:47:40.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.444" endtime="20220705 13:47:40.550"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:40.550" endtime="20220705 13:47:40.552"/>
</kw>
<status status="PASS" starttime="20220705 13:47:40.550" endtime="20220705 13:47:40.552"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:40.553" endtime="20220705 13:47:40.553"/>
</return>
<msg timestamp="20220705 13:47:40.554" level="INFO">${LABEL_ID} = 62c440fc91138724b1072b69</msg>
<status status="PASS" starttime="20220705 13:47:40.552" endtime="20220705 13:47:40.554"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:40.555" level="INFO">${url} = labels/62c440fc91138724b1072b69</msg>
<status status="PASS" starttime="20220705 13:47:40.555" endtime="20220705 13:47:40.555"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:40.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.555" endtime="20220705 13:47:40.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.610" endtime="20220705 13:47:40.610"/>
</return>
<msg timestamp="20220705 13:47:40.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.554" endtime="20220705 13:47:40.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.611" endtime="20220705 13:47:40.611"/>
</return>
<msg timestamp="20220705 13:47:40.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.554" endtime="20220705 13:47:40.611"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:40.611" endtime="20220705 13:47:40.612"/>
</return>
<msg timestamp="20220705 13:47:40.612" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 13:47:40.611" endtime="20220705 13:47:40.612"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:40.613" endtime="20220705 13:47:40.613"/>
</return>
<msg timestamp="20220705 13:47:40.613" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 13:47:40.612" endtime="20220705 13:47:40.613"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:40.614" endtime="20220705 13:47:40.614"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:40.614" endtime="20220705 13:47:40.614"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:40.616" level="INFO">${url} = labels/62c440fc91138724b1072b69</msg>
<status status="PASS" starttime="20220705 13:47:40.616" endtime="20220705 13:47:40.616"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:40.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.616" endtime="20220705 13:47:40.729"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.729" endtime="20220705 13:47:40.729"/>
</return>
<msg timestamp="20220705 13:47:40.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.615" endtime="20220705 13:47:40.729"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.729" endtime="20220705 13:47:40.730"/>
</return>
<status status="PASS" starttime="20220705 13:47:40.615" endtime="20220705 13:47:40.730"/>
</kw>
<status status="PASS" starttime="20220705 13:47:40.614" endtime="20220705 13:47:40.730"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:47:40.443" endtime="20220705 13:47:40.730"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:40.732" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:40.732" endtime="20220705 13:47:40.732"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:40.732" endtime="20220705 13:47:40.733"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:40.733" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 13:47:40.733" endtime="20220705 13:47:40.734"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:40.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.734" endtime="20220705 13:47:40.842"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.842" endtime="20220705 13:47:40.842"/>
</return>
<msg timestamp="20220705 13:47:40.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.731" endtime="20220705 13:47:40.842"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.842" endtime="20220705 13:47:40.842"/>
</return>
<msg timestamp="20220705 13:47:40.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.731" endtime="20220705 13:47:40.842"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:40.843" endtime="20220705 13:47:40.845"/>
</kw>
<status status="PASS" starttime="20220705 13:47:40.842" endtime="20220705 13:47:40.845"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:40.845" endtime="20220705 13:47:40.845"/>
</return>
<msg timestamp="20220705 13:47:40.846" level="INFO">${LABEL_ID} = 62c440fc43e9398927449ff2</msg>
<status status="PASS" starttime="20220705 13:47:40.845" endtime="20220705 13:47:40.846"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:40.847" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:40.847" endtime="20220705 13:47:40.847"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:40.848" endtime="20220705 13:47:40.848"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:40.848" level="INFO">${url} = labels/62c440fc43e9398927449ff2</msg>
<status status="PASS" starttime="20220705 13:47:40.848" endtime="20220705 13:47:40.848"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:40.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.848" endtime="20220705 13:47:40.960"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.960" endtime="20220705 13:47:40.960"/>
</return>
<msg timestamp="20220705 13:47:40.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.847" endtime="20220705 13:47:40.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:40.961" endtime="20220705 13:47:40.961"/>
</return>
<msg timestamp="20220705 13:47:40.961" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.846" endtime="20220705 13:47:40.961"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:40.961" endtime="20220705 13:47:40.961"/>
</return>
<msg timestamp="20220705 13:47:40.962" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 13:47:40.961" endtime="20220705 13:47:40.962"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:40.963" endtime="20220705 13:47:40.963"/>
</return>
<msg timestamp="20220705 13:47:40.963" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 13:47:40.962" endtime="20220705 13:47:40.963"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:40.963" endtime="20220705 13:47:40.964"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:40.964" endtime="20220705 13:47:40.964"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:40.966" level="INFO">${url} = labels/62c440fc43e9398927449ff2</msg>
<status status="PASS" starttime="20220705 13:47:40.965" endtime="20220705 13:47:40.966"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:41.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.966" endtime="20220705 13:47:41.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:41.067" endtime="20220705 13:47:41.067"/>
</return>
<msg timestamp="20220705 13:47:41.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:40.965" endtime="20220705 13:47:41.068"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:41.068" endtime="20220705 13:47:41.068"/>
</return>
<status status="PASS" starttime="20220705 13:47:40.964" endtime="20220705 13:47:41.068"/>
</kw>
<status status="PASS" starttime="20220705 13:47:40.964" endtime="20220705 13:47:41.068"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:47:40.730" endtime="20220705 13:47:41.068"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:41.070" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:41.070" endtime="20220705 13:47:41.070"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:41.070" endtime="20220705 13:47:41.071"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:41.072" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 13:47:41.071" endtime="20220705 13:47:41.072"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:41.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:41.072" endtime="20220705 13:47:41.187"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:41.188" endtime="20220705 13:47:41.188"/>
</return>
<msg timestamp="20220705 13:47:41.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:41.070" endtime="20220705 13:47:41.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:41.188" endtime="20220705 13:47:41.188"/>
</return>
<msg timestamp="20220705 13:47:41.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:41.069" endtime="20220705 13:47:41.188"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:47:41.189" endtime="20220705 13:47:41.189"/>
</return>
<msg timestamp="20220705 13:47:41.189" level="INFO">${LABEL_ID} = 62c440fd00c6406ee3db64b6</msg>
<status status="PASS" starttime="20220705 13:47:41.188" endtime="20220705 13:47:41.190"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:41.191" level="INFO">${url} = labels/62c440fd00c6406ee3db64b6</msg>
<status status="PASS" starttime="20220705 13:47:41.191" endtime="20220705 13:47:41.191"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:41.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:41.192" endtime="20220705 13:47:41.319"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:41.319" endtime="20220705 13:47:41.319"/>
</return>
<msg timestamp="20220705 13:47:41.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:41.191" endtime="20220705 13:47:41.319"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:41.319" endtime="20220705 13:47:41.319"/>
</return>
<status status="PASS" starttime="20220705 13:47:41.190" endtime="20220705 13:47:41.320"/>
</kw>
<status status="PASS" starttime="20220705 13:47:41.190" endtime="20220705 13:47:41.320"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:41.321" level="INFO">${url} = labels/62c440fd00c6406ee3db64b6</msg>
<status status="PASS" starttime="20220705 13:47:41.321" endtime="20220705 13:47:41.321"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:41.363" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:47:41.321" endtime="20220705 13:47:41.364"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:41.364" endtime="20220705 13:47:41.364"/>
</return>
<msg timestamp="20220705 13:47:41.364" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:47:41.320" endtime="20220705 13:47:41.364"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:41.364" endtime="20220705 13:47:41.364"/>
</return>
<status status="PASS" starttime="20220705 13:47:41.320" endtime="20220705 13:47:41.364"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:47:41.068" endtime="20220705 13:47:41.364"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:41.367" level="INFO">${url} = boards/62c440fccb210351e3a63e39</msg>
<status status="PASS" starttime="20220705 13:47:41.367" endtime="20220705 13:47:41.367"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:41.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:41.367" endtime="20220705 13:47:41.783"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:41.783" endtime="20220705 13:47:41.783"/>
</return>
<msg timestamp="20220705 13:47:41.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:41.366" endtime="20220705 13:47:41.783"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:41.783" endtime="20220705 13:47:41.783"/>
</return>
<status status="PASS" starttime="20220705 13:47:41.366" endtime="20220705 13:47:41.783"/>
</kw>
<status status="PASS" starttime="20220705 13:47:41.366" endtime="20220705 13:47:41.784"/>
</kw>
<status status="PASS" starttime="20220705 13:47:41.365" endtime="20220705 13:47:41.784"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 13:47:41.784" endtime="20220705 13:47:41.785"/>
</kw>
<status status="PASS" starttime="20220705 13:47:41.365" endtime="20220705 13:47:41.785"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 13:47:40.183" endtime="20220705 13:47:41.785"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 13:47:41.794" endtime="20220705 13:47:41.795"/>
</kw>
<status status="PASS" starttime="20220705 13:47:41.794" endtime="20220705 13:47:41.795"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:41.796" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:41.795" endtime="20220705 13:47:41.796"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:41.796" endtime="20220705 13:47:41.796"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:41.797" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:47:41.796" endtime="20220705 13:47:41.797"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:42.006" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:41.797" endtime="20220705 13:47:42.006"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.006" endtime="20220705 13:47:42.006"/>
</return>
<msg timestamp="20220705 13:47:42.006" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:41.795" endtime="20220705 13:47:42.006"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.006" endtime="20220705 13:47:42.006"/>
</return>
<msg timestamp="20220705 13:47:42.007" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:41.795" endtime="20220705 13:47:42.007"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:47:42.008" level="INFO">${TEST_SUITE_BOARD_ID} = 62c440fd786c902798004e8b</msg>
<status status="PASS" starttime="20220705 13:47:42.007" endtime="20220705 13:47:42.008"/>
</kw>
<status status="PASS" starttime="20220705 13:47:42.007" endtime="20220705 13:47:42.008"/>
</kw>
<status status="PASS" starttime="20220705 13:47:41.795" endtime="20220705 13:47:42.008"/>
</kw>
<status status="PASS" starttime="20220705 13:47:41.794" endtime="20220705 13:47:42.008"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:42.010" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:42.010" endtime="20220705 13:47:42.010"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:42.010" endtime="20220705 13:47:42.010"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:42.011" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 13:47:42.010" endtime="20220705 13:47:42.011"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:42.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.011" endtime="20220705 13:47:42.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.347" endtime="20220705 13:47:42.347"/>
</return>
<msg timestamp="20220705 13:47:42.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.009" endtime="20220705 13:47:42.348"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.348" endtime="20220705 13:47:42.348"/>
</return>
<msg timestamp="20220705 13:47:42.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.009" endtime="20220705 13:47:42.348"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:42.349" endtime="20220705 13:47:42.350"/>
</kw>
<status status="PASS" starttime="20220705 13:47:42.348" endtime="20220705 13:47:42.351"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:47:42.008" endtime="20220705 13:47:42.351"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:42.353" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:42.353" endtime="20220705 13:47:42.353"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:42.353" endtime="20220705 13:47:42.353"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:42.354" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 13:47:42.354" endtime="20220705 13:47:42.354"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:42.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.354" endtime="20220705 13:47:42.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.455" endtime="20220705 13:47:42.455"/>
</return>
<msg timestamp="20220705 13:47:42.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.352" endtime="20220705 13:47:42.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.455" endtime="20220705 13:47:42.455"/>
</return>
<msg timestamp="20220705 13:47:42.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.352" endtime="20220705 13:47:42.455"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:42.456" endtime="20220705 13:47:42.458"/>
</kw>
<status status="PASS" starttime="20220705 13:47:42.456" endtime="20220705 13:47:42.458"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:42.460" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:42.459" endtime="20220705 13:47:42.460"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:42.460" endtime="20220705 13:47:42.460"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:42.460" level="INFO">${url} = lists/62c440fe50819a627fcac767</msg>
<status status="PASS" starttime="20220705 13:47:42.460" endtime="20220705 13:47:42.460"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:42.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.460" endtime="20220705 13:47:42.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.549" endtime="20220705 13:47:42.550"/>
</return>
<msg timestamp="20220705 13:47:42.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.459" endtime="20220705 13:47:42.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.550" endtime="20220705 13:47:42.550"/>
</return>
<status status="PASS" starttime="20220705 13:47:42.458" endtime="20220705 13:47:42.550"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:42.552" level="INFO">${url} = lists/62c440fe50819a627fcac767</msg>
<status status="PASS" starttime="20220705 13:47:42.552" endtime="20220705 13:47:42.552"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:42.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.552" endtime="20220705 13:47:42.599"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.599" endtime="20220705 13:47:42.599"/>
</return>
<msg timestamp="20220705 13:47:42.600" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.551" endtime="20220705 13:47:42.600"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.600" endtime="20220705 13:47:42.600"/>
</return>
<msg timestamp="20220705 13:47:42.600" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.550" endtime="20220705 13:47:42.600"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:47:42.601" endtime="20220705 13:47:42.602"/>
</kw>
<status status="PASS" starttime="20220705 13:47:42.600" endtime="20220705 13:47:42.602"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:47:42.602" endtime="20220705 13:47:42.603"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 13:47:42.351" endtime="20220705 13:47:42.603"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:42.606" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:42.606" endtime="20220705 13:47:42.606"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:42.606" endtime="20220705 13:47:42.607"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:42.607" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 13:47:42.607" endtime="20220705 13:47:42.607"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:42.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.607" endtime="20220705 13:47:42.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.740" endtime="20220705 13:47:42.740"/>
</return>
<msg timestamp="20220705 13:47:42.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.606" endtime="20220705 13:47:42.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.740" endtime="20220705 13:47:42.740"/>
</return>
<msg timestamp="20220705 13:47:42.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.604" endtime="20220705 13:47:42.741"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:47:42.743" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:47:42.742" endtime="20220705 13:47:42.743"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:47:42.743" endtime="20220705 13:47:42.743"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:42.744" level="INFO">${url} = lists/62c440fe91138724b1072e6f/closed</msg>
<status status="PASS" starttime="20220705 13:47:42.743" endtime="20220705 13:47:42.744"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:47:42.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.744" endtime="20220705 13:47:42.838"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.838" endtime="20220705 13:47:42.838"/>
</return>
<msg timestamp="20220705 13:47:42.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.742" endtime="20220705 13:47:42.839"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.839" endtime="20220705 13:47:42.839"/>
</return>
<status status="PASS" starttime="20220705 13:47:42.741" endtime="20220705 13:47:42.839"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:42.841" level="INFO">${url} = lists/62c440fe91138724b1072e6f</msg>
<status status="PASS" starttime="20220705 13:47:42.840" endtime="20220705 13:47:42.841"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:47:42.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.841" endtime="20220705 13:47:42.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.892" endtime="20220705 13:47:42.893"/>
</return>
<msg timestamp="20220705 13:47:42.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.840" endtime="20220705 13:47:42.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:42.893" endtime="20220705 13:47:42.893"/>
</return>
<msg timestamp="20220705 13:47:42.893" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.839" endtime="20220705 13:47:42.893"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 13:47:42.893" endtime="20220705 13:47:42.894"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 13:47:42.604" endtime="20220705 13:47:42.894"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:47:42.897" level="INFO">${url} = boards/62c440fd786c902798004e8b</msg>
<status status="PASS" starttime="20220705 13:47:42.897" endtime="20220705 13:47:42.897"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:47:43.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.897" endtime="20220705 13:47:43.305"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:43.305" endtime="20220705 13:47:43.305"/>
</return>
<msg timestamp="20220705 13:47:43.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:47:42.896" endtime="20220705 13:47:43.305"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:47:43.305" endtime="20220705 13:47:43.306"/>
</return>
<status status="PASS" starttime="20220705 13:47:42.896" endtime="20220705 13:47:43.306"/>
</kw>
<status status="PASS" starttime="20220705 13:47:42.896" endtime="20220705 13:47:43.306"/>
</kw>
<status status="PASS" starttime="20220705 13:47:42.895" endtime="20220705 13:47:43.306"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 13:47:43.306" endtime="20220705 13:47:43.307"/>
</kw>
<status status="PASS" starttime="20220705 13:47:42.895" endtime="20220705 13:47:43.307"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 13:47:41.786" endtime="20220705 13:47:43.307"/>
</suite>
<status status="PASS" starttime="20220705 13:47:31.568" endtime="20220705 13:47:43.309"/>
</suite>
<status status="PASS" starttime="20220705 13:47:31.550" endtime="20220705 13:47:43.310"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
