<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 17:48:14.593" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 17:48:14.719" endtime="20220705 17:48:14.720"/>
</kw>
<status status="PASS" starttime="20220705 17:48:14.718" endtime="20220705 17:48:14.720"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:14.722" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:14.722" endtime="20220705 17:48:14.722"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:14.722" endtime="20220705 17:48:14.722"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:14.723" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:48:14.722" endtime="20220705 17:48:14.723"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:15.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:14.723" endtime="20220705 17:48:15.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:15.025" endtime="20220705 17:48:15.025"/>
</return>
<msg timestamp="20220705 17:48:15.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:14.721" endtime="20220705 17:48:15.025"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:15.025" endtime="20220705 17:48:15.025"/>
</return>
<msg timestamp="20220705 17:48:15.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:14.721" endtime="20220705 17:48:15.025"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:15.026" endtime="20220705 17:48:15.030"/>
</kw>
<status status="PASS" starttime="20220705 17:48:15.025" endtime="20220705 17:48:15.031"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:15.033" level="INFO">${url} = boards/62c4795e8a0570421f3bb324</msg>
<status status="PASS" starttime="20220705 17:48:15.033" endtime="20220705 17:48:15.033"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:15.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:15.033" endtime="20220705 17:48:15.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:15.423" endtime="20220705 17:48:15.423"/>
</return>
<msg timestamp="20220705 17:48:15.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:15.032" endtime="20220705 17:48:15.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:15.423" endtime="20220705 17:48:15.423"/>
</return>
<status status="PASS" starttime="20220705 17:48:15.031" endtime="20220705 17:48:15.423"/>
</kw>
<status status="PASS" starttime="20220705 17:48:15.031" endtime="20220705 17:48:15.423"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:48:14.720" endtime="20220705 17:48:15.424"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:15.426" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:15.426" endtime="20220705 17:48:15.426"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:15.427" endtime="20220705 17:48:15.427"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:15.427" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:48:15.427" endtime="20220705 17:48:15.428"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:15.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:15.428" endtime="20220705 17:48:15.625"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:15.625" endtime="20220705 17:48:15.625"/>
</return>
<msg timestamp="20220705 17:48:15.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:15.426" endtime="20220705 17:48:15.625"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:15.625" endtime="20220705 17:48:15.625"/>
</return>
<msg timestamp="20220705 17:48:15.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:15.425" endtime="20220705 17:48:15.625"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:15.626" endtime="20220705 17:48:15.630"/>
</kw>
<status status="PASS" starttime="20220705 17:48:15.625" endtime="20220705 17:48:15.630"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:15.632" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:15.632" endtime="20220705 17:48:15.632"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:15.632" endtime="20220705 17:48:15.632"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:15.632" level="INFO">${url} = boards/62c4795faf15dc21805382c8</msg>
<status status="PASS" starttime="20220705 17:48:15.632" endtime="20220705 17:48:15.632"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:15.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:15.633" endtime="20220705 17:48:15.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:15.753" endtime="20220705 17:48:15.753"/>
</return>
<msg timestamp="20220705 17:48:15.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:15.631" endtime="20220705 17:48:15.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:15.753" endtime="20220705 17:48:15.753"/>
</return>
<status status="PASS" starttime="20220705 17:48:15.630" endtime="20220705 17:48:15.754"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:15.755" level="INFO">${url} = boards/62c4795faf15dc21805382c8</msg>
<status status="PASS" starttime="20220705 17:48:15.755" endtime="20220705 17:48:15.755"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:15.859" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:15.756" endtime="20220705 17:48:15.859"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:15.859" endtime="20220705 17:48:15.859"/>
</return>
<msg timestamp="20220705 17:48:15.860" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:15.755" endtime="20220705 17:48:15.860"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:15.860" endtime="20220705 17:48:15.860"/>
</return>
<msg timestamp="20220705 17:48:15.860" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:15.754" endtime="20220705 17:48:15.860"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:15.860" endtime="20220705 17:48:15.865"/>
</kw>
<status status="PASS" starttime="20220705 17:48:15.860" endtime="20220705 17:48:15.865"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:15.865" endtime="20220705 17:48:15.866"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:15.868" level="INFO">${url} = boards/62c4795faf15dc21805382c8</msg>
<status status="PASS" starttime="20220705 17:48:15.868" endtime="20220705 17:48:15.868"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:16.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:15.868" endtime="20220705 17:48:16.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:16.248" endtime="20220705 17:48:16.248"/>
</return>
<msg timestamp="20220705 17:48:16.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:15.867" endtime="20220705 17:48:16.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:16.249" endtime="20220705 17:48:16.249"/>
</return>
<status status="PASS" starttime="20220705 17:48:15.866" endtime="20220705 17:48:16.249"/>
</kw>
<status status="PASS" starttime="20220705 17:48:15.866" endtime="20220705 17:48:16.249"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:48:15.424" endtime="20220705 17:48:16.249"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:16.251" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:16.251" endtime="20220705 17:48:16.251"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:16.251" endtime="20220705 17:48:16.251"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:16.252" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:48:16.251" endtime="20220705 17:48:16.252"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:16.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:16.252" endtime="20220705 17:48:16.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:16.447" endtime="20220705 17:48:16.447"/>
</return>
<msg timestamp="20220705 17:48:16.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:16.250" endtime="20220705 17:48:16.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:16.448" endtime="20220705 17:48:16.448"/>
</return>
<msg timestamp="20220705 17:48:16.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:16.250" endtime="20220705 17:48:16.448"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:16.450" level="INFO">${url} = boards/62c47960d9b83a32763555b5</msg>
<status status="PASS" starttime="20220705 17:48:16.450" endtime="20220705 17:48:16.450"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:16.822" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:16.450" endtime="20220705 17:48:16.822"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:16.823" endtime="20220705 17:48:16.823"/>
</return>
<msg timestamp="20220705 17:48:16.823" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:16.449" endtime="20220705 17:48:16.823"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:16.823" endtime="20220705 17:48:16.823"/>
</return>
<status status="PASS" starttime="20220705 17:48:16.448" endtime="20220705 17:48:16.823"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:16.825" level="INFO">${url} = boards/62c47960d9b83a32763555b5</msg>
<status status="PASS" starttime="20220705 17:48:16.825" endtime="20220705 17:48:16.825"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:16.904" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:48:16.825" endtime="20220705 17:48:16.904"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:16.904" endtime="20220705 17:48:16.904"/>
</return>
<msg timestamp="20220705 17:48:16.904" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:48:16.824" endtime="20220705 17:48:16.904"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:16.904" endtime="20220705 17:48:16.904"/>
</return>
<status status="PASS" starttime="20220705 17:48:16.823" endtime="20220705 17:48:16.905"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:48:16.249" endtime="20220705 17:48:16.905"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:16.907" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:16.907" endtime="20220705 17:48:16.907"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:16.907" endtime="20220705 17:48:16.908"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:16.908" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:48:16.908" endtime="20220705 17:48:16.908"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:17.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:16.908" endtime="20220705 17:48:17.150"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:17.150" endtime="20220705 17:48:17.150"/>
</return>
<msg timestamp="20220705 17:48:17.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:16.907" endtime="20220705 17:48:17.150"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:17.150" endtime="20220705 17:48:17.150"/>
</return>
<msg timestamp="20220705 17:48:17.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:16.906" endtime="20220705 17:48:17.151"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:17.151" endtime="20220705 17:48:17.156"/>
</kw>
<status status="PASS" starttime="20220705 17:48:17.151" endtime="20220705 17:48:17.156"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:17.158" level="INFO">${url} = boards/62c47960d615893aefc5d649</msg>
<status status="PASS" starttime="20220705 17:48:17.157" endtime="20220705 17:48:17.158"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:17.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:17.158" endtime="20220705 17:48:17.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:17.237" endtime="20220705 17:48:17.237"/>
</return>
<msg timestamp="20220705 17:48:17.238" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:17.157" endtime="20220705 17:48:17.238"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:17.238" endtime="20220705 17:48:17.238"/>
</return>
<msg timestamp="20220705 17:48:17.238" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:17.156" endtime="20220705 17:48:17.238"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:17.239" endtime="20220705 17:48:17.243"/>
</kw>
<status status="PASS" starttime="20220705 17:48:17.238" endtime="20220705 17:48:17.243"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:17.243" endtime="20220705 17:48:17.244"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:17.246" level="INFO">${url} = boards/62c47960d615893aefc5d649</msg>
<status status="PASS" starttime="20220705 17:48:17.245" endtime="20220705 17:48:17.246"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:17.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:17.246" endtime="20220705 17:48:17.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:17.617" endtime="20220705 17:48:17.617"/>
</return>
<msg timestamp="20220705 17:48:17.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:17.245" endtime="20220705 17:48:17.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:17.617" endtime="20220705 17:48:17.617"/>
</return>
<status status="PASS" starttime="20220705 17:48:17.244" endtime="20220705 17:48:17.617"/>
</kw>
<status status="PASS" starttime="20220705 17:48:17.244" endtime="20220705 17:48:17.618"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:48:16.906" endtime="20220705 17:48:17.618"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:17.620" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:17.620" endtime="20220705 17:48:17.620"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:17.620" endtime="20220705 17:48:17.621"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:17.621" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:48:17.621" endtime="20220705 17:48:17.621"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:17.814" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:17.622" endtime="20220705 17:48:17.814"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:17.815" endtime="20220705 17:48:17.815"/>
</return>
<msg timestamp="20220705 17:48:17.815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:17.620" endtime="20220705 17:48:17.815"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:17.815" endtime="20220705 17:48:17.815"/>
</return>
<msg timestamp="20220705 17:48:17.815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:17.619" endtime="20220705 17:48:17.815"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:17.816" endtime="20220705 17:48:17.820"/>
</kw>
<status status="PASS" starttime="20220705 17:48:17.815" endtime="20220705 17:48:17.820"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:17.822" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:17.822" endtime="20220705 17:48:17.822"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:17.822" endtime="20220705 17:48:17.823"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:17.823" level="INFO">${url} = boards/62c47961e54e8e5c9019f520</msg>
<status status="PASS" starttime="20220705 17:48:17.823" endtime="20220705 17:48:17.823"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:17.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:17.823" endtime="20220705 17:48:17.956"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:17.956" endtime="20220705 17:48:17.956"/>
</return>
<msg timestamp="20220705 17:48:17.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:17.821" endtime="20220705 17:48:17.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:17.957" endtime="20220705 17:48:17.957"/>
</return>
<status status="PASS" starttime="20220705 17:48:17.821" endtime="20220705 17:48:17.957"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:17.959" level="INFO">${url} = boards/62c47961e54e8e5c9019f520</msg>
<status status="PASS" starttime="20220705 17:48:17.959" endtime="20220705 17:48:17.959"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:18.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:17.959" endtime="20220705 17:48:18.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:18.039" endtime="20220705 17:48:18.039"/>
</return>
<msg timestamp="20220705 17:48:18.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:17.958" endtime="20220705 17:48:18.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:18.040" endtime="20220705 17:48:18.040"/>
</return>
<msg timestamp="20220705 17:48:18.040" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:17.957" endtime="20220705 17:48:18.040"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:18.040" endtime="20220705 17:48:18.041"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:18.043" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:18.043" endtime="20220705 17:48:18.043"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:18.043" endtime="20220705 17:48:18.043"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:18.044" level="INFO">${url} = boards/62c47961e54e8e5c9019f520</msg>
<status status="PASS" starttime="20220705 17:48:18.043" endtime="20220705 17:48:18.044"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:18.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:18.044" endtime="20220705 17:48:18.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:18.185" endtime="20220705 17:48:18.185"/>
</return>
<msg timestamp="20220705 17:48:18.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:18.042" endtime="20220705 17:48:18.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:18.185" endtime="20220705 17:48:18.185"/>
</return>
<status status="PASS" starttime="20220705 17:48:18.041" endtime="20220705 17:48:18.185"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:18.187" level="INFO">${url} = boards/62c47961e54e8e5c9019f520</msg>
<status status="PASS" starttime="20220705 17:48:18.187" endtime="20220705 17:48:18.187"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:18.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:18.188" endtime="20220705 17:48:18.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:18.277" endtime="20220705 17:48:18.277"/>
</return>
<msg timestamp="20220705 17:48:18.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:18.187" endtime="20220705 17:48:18.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:18.277" endtime="20220705 17:48:18.277"/>
</return>
<msg timestamp="20220705 17:48:18.278" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:18.186" endtime="20220705 17:48:18.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:18.278" endtime="20220705 17:48:18.279"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:18.281" level="INFO">${url} = boards/62c47961e54e8e5c9019f520</msg>
<status status="PASS" starttime="20220705 17:48:18.281" endtime="20220705 17:48:18.281"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:18.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:18.281" endtime="20220705 17:48:18.612"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:18.612" endtime="20220705 17:48:18.612"/>
</return>
<msg timestamp="20220705 17:48:18.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:18.280" endtime="20220705 17:48:18.612"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:18.613" endtime="20220705 17:48:18.613"/>
</return>
<status status="PASS" starttime="20220705 17:48:18.279" endtime="20220705 17:48:18.613"/>
</kw>
<status status="PASS" starttime="20220705 17:48:18.279" endtime="20220705 17:48:18.613"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:48:17.618" endtime="20220705 17:48:18.613"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 17:48:18.614" endtime="20220705 17:48:18.615"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 17:48:14.613" endtime="20220705 17:48:18.615"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 17:48:18.627" endtime="20220705 17:48:18.627"/>
</kw>
<status status="PASS" starttime="20220705 17:48:18.627" endtime="20220705 17:48:18.627"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:18.628" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:18.628" endtime="20220705 17:48:18.628"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:18.628" endtime="20220705 17:48:18.629"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:18.629" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:48:18.629" endtime="20220705 17:48:18.629"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:18.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:18.629" endtime="20220705 17:48:18.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:18.913" endtime="20220705 17:48:18.913"/>
</return>
<msg timestamp="20220705 17:48:18.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:18.628" endtime="20220705 17:48:18.913"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:18.913" endtime="20220705 17:48:18.913"/>
</return>
<msg timestamp="20220705 17:48:18.913" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:18.627" endtime="20220705 17:48:18.913"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:48:18.914" level="INFO">${TEST_SUITE_BOARD_ID} = 62c47962c58a0d523fcf2959</msg>
<status status="PASS" starttime="20220705 17:48:18.913" endtime="20220705 17:48:18.914"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:18.915" level="INFO">${url} = boards/62c47962c58a0d523fcf2959/lists/</msg>
<status status="PASS" starttime="20220705 17:48:18.915" endtime="20220705 17:48:18.916"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:19.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:18.916" endtime="20220705 17:48:19.001"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:19.001" endtime="20220705 17:48:19.001"/>
</return>
<msg timestamp="20220705 17:48:19.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:18.915" endtime="20220705 17:48:19.001"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:19.001" endtime="20220705 17:48:19.001"/>
</return>
<msg timestamp="20220705 17:48:19.002" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:18.914" endtime="20220705 17:48:19.002"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:48:19.003" level="INFO">${TEST_SUITE_LIST_ID} = 62c47962c58a0d523fcf2960</msg>
<status status="PASS" starttime="20220705 17:48:19.002" endtime="20220705 17:48:19.003"/>
</kw>
<status status="PASS" starttime="20220705 17:48:18.627" endtime="20220705 17:48:19.003"/>
</kw>
<status status="PASS" starttime="20220705 17:48:18.626" endtime="20220705 17:48:19.003"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:19.005" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:19.005" endtime="20220705 17:48:19.005"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:19.005" endtime="20220705 17:48:19.005"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:19.006" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 17:48:19.006" endtime="20220705 17:48:19.006"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:19.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.006" endtime="20220705 17:48:19.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:19.206" endtime="20220705 17:48:19.206"/>
</return>
<msg timestamp="20220705 17:48:19.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.004" endtime="20220705 17:48:19.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:19.206" endtime="20220705 17:48:19.206"/>
</return>
<msg timestamp="20220705 17:48:19.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.004" endtime="20220705 17:48:19.206"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:19.207" endtime="20220705 17:48:19.213"/>
</kw>
<status status="PASS" starttime="20220705 17:48:19.207" endtime="20220705 17:48:19.213"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:19.213" endtime="20220705 17:48:19.213"/>
</return>
<msg timestamp="20220705 17:48:19.214" level="INFO">${CARD_ID} = 62c479633b3a541cd675426a</msg>
<status status="PASS" starttime="20220705 17:48:19.213" endtime="20220705 17:48:19.214"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:19.215" level="INFO">${url} = cards/62c479633b3a541cd675426a</msg>
<status status="PASS" starttime="20220705 17:48:19.215" endtime="20220705 17:48:19.215"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:19.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.215" endtime="20220705 17:48:19.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:19.313" endtime="20220705 17:48:19.313"/>
</return>
<msg timestamp="20220705 17:48:19.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.214" endtime="20220705 17:48:19.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:19.313" endtime="20220705 17:48:19.313"/>
</return>
<msg timestamp="20220705 17:48:19.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.214" endtime="20220705 17:48:19.314"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:19.314" endtime="20220705 17:48:19.314"/>
</return>
<msg timestamp="20220705 17:48:19.315" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 17:48:19.314" endtime="20220705 17:48:19.315"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:19.315" endtime="20220705 17:48:19.315"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:19.317" level="INFO">${url} = cards/62c479633b3a541cd675426a</msg>
<status status="PASS" starttime="20220705 17:48:19.317" endtime="20220705 17:48:19.317"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:19.758" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.317" endtime="20220705 17:48:19.758"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:19.759" endtime="20220705 17:48:19.759"/>
</return>
<msg timestamp="20220705 17:48:19.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.316" endtime="20220705 17:48:19.759"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:19.759" endtime="20220705 17:48:19.759"/>
</return>
<status status="PASS" starttime="20220705 17:48:19.316" endtime="20220705 17:48:19.759"/>
</kw>
<status status="PASS" starttime="20220705 17:48:19.316" endtime="20220705 17:48:19.759"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:48:19.003" endtime="20220705 17:48:19.759"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:19.762" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:19.762" endtime="20220705 17:48:19.762"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:19.762" endtime="20220705 17:48:19.763"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:19.763" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 17:48:19.763" endtime="20220705 17:48:19.763"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:19.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.764" endtime="20220705 17:48:19.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:19.964" endtime="20220705 17:48:19.964"/>
</return>
<msg timestamp="20220705 17:48:19.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.761" endtime="20220705 17:48:19.965"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:19.965" endtime="20220705 17:48:19.965"/>
</return>
<msg timestamp="20220705 17:48:19.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.761" endtime="20220705 17:48:19.965"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:19.966" endtime="20220705 17:48:19.966"/>
</return>
<msg timestamp="20220705 17:48:19.966" level="INFO">${CARD_ID} = 62c479631cfce186dd099c17</msg>
<status status="PASS" starttime="20220705 17:48:19.965" endtime="20220705 17:48:19.966"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:19.969" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:19.968" endtime="20220705 17:48:19.969"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:19.969" endtime="20220705 17:48:19.969"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:19.969" level="INFO">${url} = cards/62c479631cfce186dd099c17</msg>
<status status="PASS" starttime="20220705 17:48:19.969" endtime="20220705 17:48:19.969"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:20.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.970" endtime="20220705 17:48:20.123"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:20.123" endtime="20220705 17:48:20.123"/>
</return>
<msg timestamp="20220705 17:48:20.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.968" endtime="20220705 17:48:20.123"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:20.123" endtime="20220705 17:48:20.123"/>
</return>
<msg timestamp="20220705 17:48:20.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:19.967" endtime="20220705 17:48:20.123"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:20.123" endtime="20220705 17:48:20.124"/>
</return>
<status status="PASS" starttime="20220705 17:48:19.966" endtime="20220705 17:48:20.124"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:20.125" level="INFO">${url} = cards/62c479631cfce186dd099c17</msg>
<status status="PASS" starttime="20220705 17:48:20.125" endtime="20220705 17:48:20.125"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:20.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.125" endtime="20220705 17:48:20.215"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:20.215" endtime="20220705 17:48:20.215"/>
</return>
<msg timestamp="20220705 17:48:20.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.124" endtime="20220705 17:48:20.216"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:20.216" endtime="20220705 17:48:20.216"/>
</return>
<msg timestamp="20220705 17:48:20.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.124" endtime="20220705 17:48:20.216"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:20.217" endtime="20220705 17:48:20.217"/>
</return>
<msg timestamp="20220705 17:48:20.217" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 17:48:20.216" endtime="20220705 17:48:20.217"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 17:48:20.218" endtime="20220705 17:48:20.218"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:20.220" level="INFO">${url} = cards/62c479631cfce186dd099c17</msg>
<status status="PASS" starttime="20220705 17:48:20.219" endtime="20220705 17:48:20.220"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:20.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.220" endtime="20220705 17:48:20.381"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:20.382" endtime="20220705 17:48:20.382"/>
</return>
<msg timestamp="20220705 17:48:20.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.219" endtime="20220705 17:48:20.382"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:20.382" endtime="20220705 17:48:20.382"/>
</return>
<status status="PASS" starttime="20220705 17:48:20.218" endtime="20220705 17:48:20.382"/>
</kw>
<status status="PASS" starttime="20220705 17:48:20.218" endtime="20220705 17:48:20.382"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 17:48:19.760" endtime="20220705 17:48:20.382"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:20.385" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:20.385" endtime="20220705 17:48:20.385"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:20.385" endtime="20220705 17:48:20.386"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:20.386" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 17:48:20.386" endtime="20220705 17:48:20.387"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:20.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.387" endtime="20220705 17:48:20.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:20.611" endtime="20220705 17:48:20.611"/>
</return>
<msg timestamp="20220705 17:48:20.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.384" endtime="20220705 17:48:20.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:20.611" endtime="20220705 17:48:20.611"/>
</return>
<msg timestamp="20220705 17:48:20.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.384" endtime="20220705 17:48:20.611"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:20.612" endtime="20220705 17:48:20.612"/>
</return>
<msg timestamp="20220705 17:48:20.613" level="INFO">${CARD_ID} = 62c47964eaf5f76cae533a21</msg>
<status status="PASS" starttime="20220705 17:48:20.612" endtime="20220705 17:48:20.613"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:20.614" level="INFO">${url} = cards/62c47964eaf5f76cae533a21</msg>
<status status="PASS" starttime="20220705 17:48:20.614" endtime="20220705 17:48:20.614"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:20.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.614" endtime="20220705 17:48:20.801"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:20.801" endtime="20220705 17:48:20.801"/>
</return>
<msg timestamp="20220705 17:48:20.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.613" endtime="20220705 17:48:20.801"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:20.801" endtime="20220705 17:48:20.801"/>
</return>
<msg timestamp="20220705 17:48:20.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.613" endtime="20220705 17:48:20.802"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:20.802" endtime="20220705 17:48:20.804"/>
</kw>
<status status="PASS" starttime="20220705 17:48:20.802" endtime="20220705 17:48:20.804"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:20.806" level="INFO">${url} = cards/62c47964eaf5f76cae533a21</msg>
<status status="PASS" starttime="20220705 17:48:20.806" endtime="20220705 17:48:20.806"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:20.876" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:48:20.806" endtime="20220705 17:48:20.876"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:20.876" endtime="20220705 17:48:20.876"/>
</return>
<msg timestamp="20220705 17:48:20.876" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:48:20.805" endtime="20220705 17:48:20.876"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:20.877" endtime="20220705 17:48:20.877"/>
</return>
<status status="PASS" starttime="20220705 17:48:20.805" endtime="20220705 17:48:20.877"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:48:20.383" endtime="20220705 17:48:20.877"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:20.880" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:20.879" endtime="20220705 17:48:20.880"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:20.880" endtime="20220705 17:48:20.880"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:20.881" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 17:48:20.880" endtime="20220705 17:48:20.881"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:21.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.881" endtime="20220705 17:48:21.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:21.055" endtime="20220705 17:48:21.055"/>
</return>
<msg timestamp="20220705 17:48:21.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.879" endtime="20220705 17:48:21.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:21.055" endtime="20220705 17:48:21.055"/>
</return>
<msg timestamp="20220705 17:48:21.056" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:20.878" endtime="20220705 17:48:21.056"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:21.056" endtime="20220705 17:48:21.056"/>
</return>
<msg timestamp="20220705 17:48:21.057" level="INFO">${CARD_ID} = 62c479649794fe55e9bc9830</msg>
<status status="PASS" starttime="20220705 17:48:21.056" endtime="20220705 17:48:21.057"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:21.058" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:21.058" endtime="20220705 17:48:21.058"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:21.059" endtime="20220705 17:48:21.059"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:21.059" level="INFO">${url} = cards/62c479649794fe55e9bc9830</msg>
<status status="PASS" starttime="20220705 17:48:21.059" endtime="20220705 17:48:21.059"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:21.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:21.059" endtime="20220705 17:48:21.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:21.254" endtime="20220705 17:48:21.254"/>
</return>
<msg timestamp="20220705 17:48:21.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:21.058" endtime="20220705 17:48:21.255"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:21.255" endtime="20220705 17:48:21.255"/>
</return>
<msg timestamp="20220705 17:48:21.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:21.057" endtime="20220705 17:48:21.255"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:21.255" endtime="20220705 17:48:21.261"/>
</kw>
<status status="PASS" starttime="20220705 17:48:21.255" endtime="20220705 17:48:21.261"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:21.262" level="INFO">${url} = cards/62c479649794fe55e9bc9830</msg>
<status status="PASS" starttime="20220705 17:48:21.262" endtime="20220705 17:48:21.262"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:21.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:21.262" endtime="20220705 17:48:21.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:21.378" endtime="20220705 17:48:21.378"/>
</return>
<msg timestamp="20220705 17:48:21.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:21.261" endtime="20220705 17:48:21.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:21.378" endtime="20220705 17:48:21.378"/>
</return>
<msg timestamp="20220705 17:48:21.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:21.261" endtime="20220705 17:48:21.378"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:21.379" endtime="20220705 17:48:21.379"/>
</return>
<msg timestamp="20220705 17:48:21.380" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 17:48:21.379" endtime="20220705 17:48:21.380"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:21.380" endtime="20220705 17:48:21.380"/>
</return>
<msg timestamp="20220705 17:48:21.381" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 17:48:21.380" endtime="20220705 17:48:21.381"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:21.381" endtime="20220705 17:48:21.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:21.382" endtime="20220705 17:48:21.382"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:21.384" level="INFO">${url} = cards/62c479649794fe55e9bc9830</msg>
<status status="PASS" starttime="20220705 17:48:21.383" endtime="20220705 17:48:21.384"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:21.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:21.384" endtime="20220705 17:48:21.569"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:21.569" endtime="20220705 17:48:21.570"/>
</return>
<msg timestamp="20220705 17:48:21.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:21.383" endtime="20220705 17:48:21.570"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:21.570" endtime="20220705 17:48:21.570"/>
</return>
<status status="PASS" starttime="20220705 17:48:21.382" endtime="20220705 17:48:21.570"/>
</kw>
<status status="PASS" starttime="20220705 17:48:21.382" endtime="20220705 17:48:21.570"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 17:48:20.877" endtime="20220705 17:48:21.570"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:21.574" level="INFO">${url} = boards/62c47962c58a0d523fcf2959</msg>
<status status="PASS" starttime="20220705 17:48:21.573" endtime="20220705 17:48:21.574"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:21.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:21.574" endtime="20220705 17:48:21.928"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:21.928" endtime="20220705 17:48:21.928"/>
</return>
<msg timestamp="20220705 17:48:21.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:21.573" endtime="20220705 17:48:21.928"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:21.928" endtime="20220705 17:48:21.928"/>
</return>
<status status="PASS" starttime="20220705 17:48:21.572" endtime="20220705 17:48:21.928"/>
</kw>
<status status="PASS" starttime="20220705 17:48:21.572" endtime="20220705 17:48:21.928"/>
</kw>
<status status="PASS" starttime="20220705 17:48:21.572" endtime="20220705 17:48:21.928"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 17:48:21.929" endtime="20220705 17:48:21.930"/>
</kw>
<status status="PASS" starttime="20220705 17:48:21.572" endtime="20220705 17:48:21.930"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 17:48:18.617" endtime="20220705 17:48:21.930"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 17:48:21.941" endtime="20220705 17:48:21.941"/>
</kw>
<status status="PASS" starttime="20220705 17:48:21.940" endtime="20220705 17:48:21.941"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:21.942" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:21.942" endtime="20220705 17:48:21.942"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:21.943" endtime="20220705 17:48:21.943"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:21.943" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:48:21.943" endtime="20220705 17:48:21.944"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:22.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:21.944" endtime="20220705 17:48:22.305"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:22.305" endtime="20220705 17:48:22.305"/>
</return>
<msg timestamp="20220705 17:48:22.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:21.942" endtime="20220705 17:48:22.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:22.306" endtime="20220705 17:48:22.306"/>
</return>
<msg timestamp="20220705 17:48:22.306" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:21.942" endtime="20220705 17:48:22.306"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:48:22.307" level="INFO">${TEST_SUITE_BOARD_ID} = 62c479667610ab1f25262370</msg>
<status status="PASS" starttime="20220705 17:48:22.306" endtime="20220705 17:48:22.307"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:22.308" level="INFO">${url} = boards/62c479667610ab1f25262370/lists/</msg>
<status status="PASS" starttime="20220705 17:48:22.308" endtime="20220705 17:48:22.308"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:22.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.308" endtime="20220705 17:48:22.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:22.396" endtime="20220705 17:48:22.396"/>
</return>
<msg timestamp="20220705 17:48:22.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.307" endtime="20220705 17:48:22.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:22.396" endtime="20220705 17:48:22.396"/>
</return>
<msg timestamp="20220705 17:48:22.397" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.307" endtime="20220705 17:48:22.397"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:48:22.398" level="INFO">${TEST_SUITE_LIST_ID} = 62c479667610ab1f25262377</msg>
<status status="PASS" starttime="20220705 17:48:22.397" endtime="20220705 17:48:22.398"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:22.399" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:22.399" endtime="20220705 17:48:22.399"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:22.399" endtime="20220705 17:48:22.400"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:22.400" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 17:48:22.400" endtime="20220705 17:48:22.400"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:22.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.400" endtime="20220705 17:48:22.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:22.629" endtime="20220705 17:48:22.629"/>
</return>
<msg timestamp="20220705 17:48:22.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.399" endtime="20220705 17:48:22.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:22.629" endtime="20220705 17:48:22.629"/>
</return>
<msg timestamp="20220705 17:48:22.629" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.398" endtime="20220705 17:48:22.629"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:48:22.630" level="INFO">${TEST_SUITE_CARD_ID} = 62c479662ceab7139343b1f8</msg>
<status status="PASS" starttime="20220705 17:48:22.630" endtime="20220705 17:48:22.630"/>
</kw>
<status status="PASS" starttime="20220705 17:48:21.942" endtime="20220705 17:48:22.631"/>
</kw>
<status status="PASS" starttime="20220705 17:48:21.940" endtime="20220705 17:48:22.631"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:22.633" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:22.633" endtime="20220705 17:48:22.633"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:22.633" endtime="20220705 17:48:22.633"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:22.634" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 17:48:22.633" endtime="20220705 17:48:22.634"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:22.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.634" endtime="20220705 17:48:22.805"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:22.805" endtime="20220705 17:48:22.805"/>
</return>
<msg timestamp="20220705 17:48:22.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.632" endtime="20220705 17:48:22.805"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:22.805" endtime="20220705 17:48:22.805"/>
</return>
<msg timestamp="20220705 17:48:22.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.632" endtime="20220705 17:48:22.805"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:22.806" endtime="20220705 17:48:22.806"/>
</return>
<msg timestamp="20220705 17:48:22.807" level="INFO">${checklist_id} = 62c47966252f110271365dc4</msg>
<status status="PASS" starttime="20220705 17:48:22.806" endtime="20220705 17:48:22.807"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:22.808" level="INFO">${url} = checklists/62c47966252f110271365dc4</msg>
<status status="PASS" starttime="20220705 17:48:22.808" endtime="20220705 17:48:22.808"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:22.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.808" endtime="20220705 17:48:22.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:22.906" endtime="20220705 17:48:22.906"/>
</return>
<msg timestamp="20220705 17:48:22.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.807" endtime="20220705 17:48:22.907"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:22.907" endtime="20220705 17:48:22.907"/>
</return>
<msg timestamp="20220705 17:48:22.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.807" endtime="20220705 17:48:22.907"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:22.908" endtime="20220705 17:48:22.908"/>
</return>
<msg timestamp="20220705 17:48:22.908" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 17:48:22.907" endtime="20220705 17:48:22.908"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:22.909" endtime="20220705 17:48:22.909"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:22.910" level="INFO">${url} = checklists/62c47966252f110271365dc4</msg>
<status status="PASS" starttime="20220705 17:48:22.910" endtime="20220705 17:48:22.910"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:23.066" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.910" endtime="20220705 17:48:23.066"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.066" endtime="20220705 17:48:23.066"/>
</return>
<msg timestamp="20220705 17:48:23.066" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:22.909" endtime="20220705 17:48:23.066"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.066" endtime="20220705 17:48:23.066"/>
</return>
<status status="PASS" starttime="20220705 17:48:22.909" endtime="20220705 17:48:23.067"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:48:22.631" endtime="20220705 17:48:23.067"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:23.069" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:23.069" endtime="20220705 17:48:23.069"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:23.070" endtime="20220705 17:48:23.070"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:23.071" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 17:48:23.070" endtime="20220705 17:48:23.071"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:23.218" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.071" endtime="20220705 17:48:23.218"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.218" endtime="20220705 17:48:23.218"/>
</return>
<msg timestamp="20220705 17:48:23.218" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.069" endtime="20220705 17:48:23.218"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.218" endtime="20220705 17:48:23.218"/>
</return>
<msg timestamp="20220705 17:48:23.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.068" endtime="20220705 17:48:23.219"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:23.219" endtime="20220705 17:48:23.219"/>
</return>
<msg timestamp="20220705 17:48:23.220" level="INFO">${checklist_id} = 62c4796728247341306be5ec</msg>
<status status="PASS" starttime="20220705 17:48:23.219" endtime="20220705 17:48:23.220"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:23.222" level="INFO">${url} = checklists/62c4796728247341306be5ec</msg>
<status status="PASS" starttime="20220705 17:48:23.222" endtime="20220705 17:48:23.222"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:23.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.222" endtime="20220705 17:48:23.375"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.375" endtime="20220705 17:48:23.376"/>
</return>
<msg timestamp="20220705 17:48:23.376" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.221" endtime="20220705 17:48:23.376"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.376" endtime="20220705 17:48:23.376"/>
</return>
<msg timestamp="20220705 17:48:23.376" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.221" endtime="20220705 17:48:23.376"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:23.377" endtime="20220705 17:48:23.379"/>
</kw>
<status status="PASS" starttime="20220705 17:48:23.376" endtime="20220705 17:48:23.379"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:23.380" level="INFO">${url} = checklists/62c4796728247341306be5ec</msg>
<status status="PASS" starttime="20220705 17:48:23.380" endtime="20220705 17:48:23.380"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:23.459" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:48:23.380" endtime="20220705 17:48:23.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.459" endtime="20220705 17:48:23.459"/>
</return>
<msg timestamp="20220705 17:48:23.460" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:48:23.379" endtime="20220705 17:48:23.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.460" endtime="20220705 17:48:23.460"/>
</return>
<status status="PASS" starttime="20220705 17:48:23.379" endtime="20220705 17:48:23.460"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:48:23.067" endtime="20220705 17:48:23.460"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:23.465" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:23.463" endtime="20220705 17:48:23.465"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:23.465" endtime="20220705 17:48:23.465"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:23.466" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 17:48:23.465" endtime="20220705 17:48:23.466"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:23.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.466" endtime="20220705 17:48:23.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.626" endtime="20220705 17:48:23.626"/>
</return>
<msg timestamp="20220705 17:48:23.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.462" endtime="20220705 17:48:23.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.626" endtime="20220705 17:48:23.626"/>
</return>
<msg timestamp="20220705 17:48:23.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.462" endtime="20220705 17:48:23.626"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:23.627" endtime="20220705 17:48:23.627"/>
</return>
<msg timestamp="20220705 17:48:23.628" level="INFO">${checklist_id} = 62c479673c016544029ccc80</msg>
<status status="PASS" starttime="20220705 17:48:23.627" endtime="20220705 17:48:23.628"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:23.629" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:23.629" endtime="20220705 17:48:23.629"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:23.629" endtime="20220705 17:48:23.630"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:23.630" level="INFO">${url} = checklists/62c479673c016544029ccc80</msg>
<status status="PASS" starttime="20220705 17:48:23.630" endtime="20220705 17:48:23.630"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:23.754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.630" endtime="20220705 17:48:23.754"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.755" endtime="20220705 17:48:23.755"/>
</return>
<msg timestamp="20220705 17:48:23.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.629" endtime="20220705 17:48:23.755"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.755" endtime="20220705 17:48:23.755"/>
</return>
<msg timestamp="20220705 17:48:23.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.628" endtime="20220705 17:48:23.755"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:23.757" level="INFO">${url} = checklists/62c479673c016544029ccc80</msg>
<status status="PASS" starttime="20220705 17:48:23.756" endtime="20220705 17:48:23.757"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:23.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.757" endtime="20220705 17:48:23.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.848" endtime="20220705 17:48:23.848"/>
</return>
<msg timestamp="20220705 17:48:23.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.756" endtime="20220705 17:48:23.848"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:23.848" endtime="20220705 17:48:23.848"/>
</return>
<msg timestamp="20220705 17:48:23.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.755" endtime="20220705 17:48:23.848"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:23.849" endtime="20220705 17:48:23.849"/>
</return>
<msg timestamp="20220705 17:48:23.850" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 17:48:23.848" endtime="20220705 17:48:23.850"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:23.850" endtime="20220705 17:48:23.850"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:23.864" level="INFO">${url} = checklists/62c479673c016544029ccc80</msg>
<status status="PASS" starttime="20220705 17:48:23.864" endtime="20220705 17:48:23.864"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:24.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.864" endtime="20220705 17:48:24.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:24.014" endtime="20220705 17:48:24.014"/>
</return>
<msg timestamp="20220705 17:48:24.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:23.863" endtime="20220705 17:48:24.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:24.014" endtime="20220705 17:48:24.014"/>
</return>
<status status="PASS" starttime="20220705 17:48:23.850" endtime="20220705 17:48:24.015"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 17:48:23.461" endtime="20220705 17:48:24.015"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:24.017" level="INFO">${url} = boards/62c479667610ab1f25262370</msg>
<status status="PASS" starttime="20220705 17:48:24.017" endtime="20220705 17:48:24.017"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:24.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:24.017" endtime="20220705 17:48:24.428"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:24.428" endtime="20220705 17:48:24.428"/>
</return>
<msg timestamp="20220705 17:48:24.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:24.016" endtime="20220705 17:48:24.428"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:24.428" endtime="20220705 17:48:24.428"/>
</return>
<status status="PASS" starttime="20220705 17:48:24.016" endtime="20220705 17:48:24.429"/>
</kw>
<status status="PASS" starttime="20220705 17:48:24.016" endtime="20220705 17:48:24.429"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 17:48:24.429" endtime="20220705 17:48:24.430"/>
</kw>
<status status="PASS" starttime="20220705 17:48:24.015" endtime="20220705 17:48:24.430"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 17:48:21.931" endtime="20220705 17:48:24.430"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 17:48:24.440" endtime="20220705 17:48:24.441"/>
</kw>
<status status="PASS" starttime="20220705 17:48:24.440" endtime="20220705 17:48:24.441"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:24.442" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:24.442" endtime="20220705 17:48:24.442"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:24.442" endtime="20220705 17:48:24.442"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:24.443" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:48:24.442" endtime="20220705 17:48:24.443"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:24.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:24.443" endtime="20220705 17:48:24.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:24.743" endtime="20220705 17:48:24.743"/>
</return>
<msg timestamp="20220705 17:48:24.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:24.441" endtime="20220705 17:48:24.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:24.743" endtime="20220705 17:48:24.743"/>
</return>
<msg timestamp="20220705 17:48:24.744" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:24.441" endtime="20220705 17:48:24.744"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:48:24.745" level="INFO">${TEST_SUITE_BOARD_ID} = 62c47968224ea140f22d5264</msg>
<status status="PASS" starttime="20220705 17:48:24.744" endtime="20220705 17:48:24.745"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:24.826" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:24.745" endtime="20220705 17:48:24.826"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:48:24.827" level="INFO">${TEST_SUITE_LIST_ID} = 62c47968224ea140f22d526b</msg>
<status status="PASS" starttime="20220705 17:48:24.826" endtime="20220705 17:48:24.827"/>
</kw>
<status status="PASS" starttime="20220705 17:48:24.441" endtime="20220705 17:48:24.827"/>
</kw>
<status status="PASS" starttime="20220705 17:48:24.440" endtime="20220705 17:48:24.827"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:24.829" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:24.829" endtime="20220705 17:48:24.829"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:24.830" endtime="20220705 17:48:24.830"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:24.831" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 17:48:24.830" endtime="20220705 17:48:24.831"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:24.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:24.831" endtime="20220705 17:48:24.965"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:24.965" endtime="20220705 17:48:24.965"/>
</return>
<msg timestamp="20220705 17:48:24.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:24.829" endtime="20220705 17:48:24.965"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:24.966" endtime="20220705 17:48:24.966"/>
</return>
<msg timestamp="20220705 17:48:24.966" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:24.828" endtime="20220705 17:48:24.966"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:24.966" endtime="20220705 17:48:24.968"/>
</kw>
<status status="PASS" starttime="20220705 17:48:24.966" endtime="20220705 17:48:24.968"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:24.969" endtime="20220705 17:48:24.969"/>
</return>
<msg timestamp="20220705 17:48:24.969" level="INFO">${LABEL_ID} = 62c479680e98321543282904</msg>
<status status="PASS" starttime="20220705 17:48:24.968" endtime="20220705 17:48:24.969"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:24.970" level="INFO">${url} = labels/62c479680e98321543282904</msg>
<status status="PASS" starttime="20220705 17:48:24.970" endtime="20220705 17:48:24.970"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:25.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:24.971" endtime="20220705 17:48:25.059"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.059" endtime="20220705 17:48:25.059"/>
</return>
<msg timestamp="20220705 17:48:25.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:24.970" endtime="20220705 17:48:25.059"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.059" endtime="20220705 17:48:25.059"/>
</return>
<msg timestamp="20220705 17:48:25.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:24.969" endtime="20220705 17:48:25.059"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:25.060" endtime="20220705 17:48:25.060"/>
</return>
<msg timestamp="20220705 17:48:25.061" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 17:48:25.060" endtime="20220705 17:48:25.061"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:25.061" endtime="20220705 17:48:25.061"/>
</return>
<msg timestamp="20220705 17:48:25.062" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 17:48:25.061" endtime="20220705 17:48:25.062"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:25.062" endtime="20220705 17:48:25.062"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:25.063" endtime="20220705 17:48:25.063"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:25.065" level="INFO">${url} = labels/62c479680e98321543282904</msg>
<status status="PASS" starttime="20220705 17:48:25.064" endtime="20220705 17:48:25.065"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:25.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.065" endtime="20220705 17:48:25.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.238" endtime="20220705 17:48:25.238"/>
</return>
<msg timestamp="20220705 17:48:25.238" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.064" endtime="20220705 17:48:25.238"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.238" endtime="20220705 17:48:25.238"/>
</return>
<status status="PASS" starttime="20220705 17:48:25.063" endtime="20220705 17:48:25.238"/>
</kw>
<status status="PASS" starttime="20220705 17:48:25.063" endtime="20220705 17:48:25.238"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:48:24.828" endtime="20220705 17:48:25.238"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:25.241" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:25.240" endtime="20220705 17:48:25.241"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:25.241" endtime="20220705 17:48:25.241"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:25.242" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 17:48:25.241" endtime="20220705 17:48:25.242"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:25.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.242" endtime="20220705 17:48:25.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.390" endtime="20220705 17:48:25.390"/>
</return>
<msg timestamp="20220705 17:48:25.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.240" endtime="20220705 17:48:25.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.390" endtime="20220705 17:48:25.390"/>
</return>
<msg timestamp="20220705 17:48:25.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.239" endtime="20220705 17:48:25.390"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:25.391" endtime="20220705 17:48:25.393"/>
</kw>
<status status="PASS" starttime="20220705 17:48:25.391" endtime="20220705 17:48:25.393"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:25.394" endtime="20220705 17:48:25.394"/>
</return>
<msg timestamp="20220705 17:48:25.394" level="INFO">${LABEL_ID} = 62c4796931078d89fff11385</msg>
<status status="PASS" starttime="20220705 17:48:25.393" endtime="20220705 17:48:25.394"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:25.396" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:25.395" endtime="20220705 17:48:25.396"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:25.396" endtime="20220705 17:48:25.396"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:25.396" level="INFO">${url} = labels/62c4796931078d89fff11385</msg>
<status status="PASS" starttime="20220705 17:48:25.396" endtime="20220705 17:48:25.396"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:25.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.396" endtime="20220705 17:48:25.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.534" endtime="20220705 17:48:25.534"/>
</return>
<msg timestamp="20220705 17:48:25.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.395" endtime="20220705 17:48:25.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.535" endtime="20220705 17:48:25.535"/>
</return>
<msg timestamp="20220705 17:48:25.535" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.395" endtime="20220705 17:48:25.535"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:25.535" endtime="20220705 17:48:25.535"/>
</return>
<msg timestamp="20220705 17:48:25.536" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 17:48:25.535" endtime="20220705 17:48:25.536"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:25.537" endtime="20220705 17:48:25.537"/>
</return>
<msg timestamp="20220705 17:48:25.537" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 17:48:25.536" endtime="20220705 17:48:25.537"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:25.537" endtime="20220705 17:48:25.538"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:25.538" endtime="20220705 17:48:25.538"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:25.540" level="INFO">${url} = labels/62c4796931078d89fff11385</msg>
<status status="PASS" starttime="20220705 17:48:25.540" endtime="20220705 17:48:25.540"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:25.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.540" endtime="20220705 17:48:25.705"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.705" endtime="20220705 17:48:25.705"/>
</return>
<msg timestamp="20220705 17:48:25.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.539" endtime="20220705 17:48:25.705"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.706" endtime="20220705 17:48:25.706"/>
</return>
<status status="PASS" starttime="20220705 17:48:25.538" endtime="20220705 17:48:25.706"/>
</kw>
<status status="PASS" starttime="20220705 17:48:25.538" endtime="20220705 17:48:25.706"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:48:25.239" endtime="20220705 17:48:25.706"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:25.709" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:25.708" endtime="20220705 17:48:25.709"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:25.709" endtime="20220705 17:48:25.709"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:25.710" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 17:48:25.709" endtime="20220705 17:48:25.710"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:25.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.710" endtime="20220705 17:48:25.827"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.827" endtime="20220705 17:48:25.828"/>
</return>
<msg timestamp="20220705 17:48:25.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.708" endtime="20220705 17:48:25.828"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.828" endtime="20220705 17:48:25.828"/>
</return>
<msg timestamp="20220705 17:48:25.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.707" endtime="20220705 17:48:25.828"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:48:25.829" endtime="20220705 17:48:25.829"/>
</return>
<msg timestamp="20220705 17:48:25.829" level="INFO">${LABEL_ID} = 62c479693d467757d160535b</msg>
<status status="PASS" starttime="20220705 17:48:25.828" endtime="20220705 17:48:25.830"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:25.831" level="INFO">${url} = labels/62c479693d467757d160535b</msg>
<status status="PASS" starttime="20220705 17:48:25.831" endtime="20220705 17:48:25.831"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:25.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.832" endtime="20220705 17:48:25.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.979" endtime="20220705 17:48:25.979"/>
</return>
<msg timestamp="20220705 17:48:25.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:25.831" endtime="20220705 17:48:25.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:25.979" endtime="20220705 17:48:25.979"/>
</return>
<status status="PASS" starttime="20220705 17:48:25.830" endtime="20220705 17:48:25.979"/>
</kw>
<status status="PASS" starttime="20220705 17:48:25.830" endtime="20220705 17:48:25.980"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:25.981" level="INFO">${url} = labels/62c479693d467757d160535b</msg>
<status status="PASS" starttime="20220705 17:48:25.981" endtime="20220705 17:48:25.981"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:26.054" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:48:25.981" endtime="20220705 17:48:26.054"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:26.054" endtime="20220705 17:48:26.054"/>
</return>
<msg timestamp="20220705 17:48:26.055" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:48:25.980" endtime="20220705 17:48:26.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:26.055" endtime="20220705 17:48:26.055"/>
</return>
<status status="PASS" starttime="20220705 17:48:25.980" endtime="20220705 17:48:26.055"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:48:25.706" endtime="20220705 17:48:26.055"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:26.058" level="INFO">${url} = boards/62c47968224ea140f22d5264</msg>
<status status="PASS" starttime="20220705 17:48:26.057" endtime="20220705 17:48:26.058"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:26.500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:26.058" endtime="20220705 17:48:26.500"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:26.500" endtime="20220705 17:48:26.500"/>
</return>
<msg timestamp="20220705 17:48:26.500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:26.057" endtime="20220705 17:48:26.500"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:26.500" endtime="20220705 17:48:26.500"/>
</return>
<status status="PASS" starttime="20220705 17:48:26.056" endtime="20220705 17:48:26.500"/>
</kw>
<status status="PASS" starttime="20220705 17:48:26.056" endtime="20220705 17:48:26.500"/>
</kw>
<status status="PASS" starttime="20220705 17:48:26.056" endtime="20220705 17:48:26.500"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 17:48:26.501" endtime="20220705 17:48:26.502"/>
</kw>
<status status="PASS" starttime="20220705 17:48:26.056" endtime="20220705 17:48:26.502"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 17:48:24.432" endtime="20220705 17:48:26.502"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 17:48:26.512" endtime="20220705 17:48:26.512"/>
</kw>
<status status="PASS" starttime="20220705 17:48:26.511" endtime="20220705 17:48:26.512"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:26.513" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:26.513" endtime="20220705 17:48:26.513"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:26.513" endtime="20220705 17:48:26.513"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:26.514" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:48:26.513" endtime="20220705 17:48:26.514"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:26.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:26.514" endtime="20220705 17:48:26.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:26.835" endtime="20220705 17:48:26.835"/>
</return>
<msg timestamp="20220705 17:48:26.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:26.512" endtime="20220705 17:48:26.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:26.835" endtime="20220705 17:48:26.835"/>
</return>
<msg timestamp="20220705 17:48:26.835" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:26.512" endtime="20220705 17:48:26.835"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:48:26.837" level="INFO">${TEST_SUITE_BOARD_ID} = 62c4796aeff87d370d928a3f</msg>
<status status="PASS" starttime="20220705 17:48:26.836" endtime="20220705 17:48:26.837"/>
</kw>
<status status="PASS" starttime="20220705 17:48:26.835" endtime="20220705 17:48:26.837"/>
</kw>
<status status="PASS" starttime="20220705 17:48:26.512" endtime="20220705 17:48:26.837"/>
</kw>
<status status="PASS" starttime="20220705 17:48:26.511" endtime="20220705 17:48:26.837"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:26.839" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:26.839" endtime="20220705 17:48:26.839"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:26.839" endtime="20220705 17:48:26.839"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:26.840" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 17:48:26.839" endtime="20220705 17:48:26.840"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:26.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:26.840" endtime="20220705 17:48:26.974"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:26.974" endtime="20220705 17:48:26.974"/>
</return>
<msg timestamp="20220705 17:48:26.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:26.838" endtime="20220705 17:48:26.974"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:26.974" endtime="20220705 17:48:26.974"/>
</return>
<msg timestamp="20220705 17:48:26.975" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:26.838" endtime="20220705 17:48:26.975"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:26.975" endtime="20220705 17:48:26.977"/>
</kw>
<status status="PASS" starttime="20220705 17:48:26.975" endtime="20220705 17:48:26.977"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:48:26.837" endtime="20220705 17:48:26.978"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:26.980" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:26.979" endtime="20220705 17:48:26.980"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:26.980" endtime="20220705 17:48:26.980"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:26.981" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 17:48:26.980" endtime="20220705 17:48:26.981"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:27.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:26.981" endtime="20220705 17:48:27.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:27.128" endtime="20220705 17:48:27.128"/>
</return>
<msg timestamp="20220705 17:48:27.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:26.979" endtime="20220705 17:48:27.129"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:27.129" endtime="20220705 17:48:27.129"/>
</return>
<msg timestamp="20220705 17:48:27.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:26.978" endtime="20220705 17:48:27.129"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:27.129" endtime="20220705 17:48:27.131"/>
</kw>
<status status="PASS" starttime="20220705 17:48:27.129" endtime="20220705 17:48:27.131"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:27.133" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:27.133" endtime="20220705 17:48:27.133"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:27.134" endtime="20220705 17:48:27.134"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:27.134" level="INFO">${url} = lists/62c4796bdccd7001d0998921</msg>
<status status="PASS" starttime="20220705 17:48:27.134" endtime="20220705 17:48:27.134"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:27.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.134" endtime="20220705 17:48:27.383"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:27.383" endtime="20220705 17:48:27.383"/>
</return>
<msg timestamp="20220705 17:48:27.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.132" endtime="20220705 17:48:27.384"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:27.384" endtime="20220705 17:48:27.384"/>
</return>
<status status="PASS" starttime="20220705 17:48:27.132" endtime="20220705 17:48:27.384"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:27.386" level="INFO">${url} = lists/62c4796bdccd7001d0998921</msg>
<status status="PASS" starttime="20220705 17:48:27.386" endtime="20220705 17:48:27.386"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:27.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.386" endtime="20220705 17:48:27.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:27.491" endtime="20220705 17:48:27.491"/>
</return>
<msg timestamp="20220705 17:48:27.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.385" endtime="20220705 17:48:27.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:27.491" endtime="20220705 17:48:27.491"/>
</return>
<msg timestamp="20220705 17:48:27.491" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.384" endtime="20220705 17:48:27.491"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:48:27.492" endtime="20220705 17:48:27.494"/>
</kw>
<status status="PASS" starttime="20220705 17:48:27.491" endtime="20220705 17:48:27.494"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:48:27.494" endtime="20220705 17:48:27.495"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 17:48:26.978" endtime="20220705 17:48:27.495"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:27.498" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:27.498" endtime="20220705 17:48:27.498"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:27.499" endtime="20220705 17:48:27.499"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:27.500" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 17:48:27.499" endtime="20220705 17:48:27.500"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:27.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.500" endtime="20220705 17:48:27.660"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:27.661" endtime="20220705 17:48:27.661"/>
</return>
<msg timestamp="20220705 17:48:27.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.498" endtime="20220705 17:48:27.661"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:27.661" endtime="20220705 17:48:27.661"/>
</return>
<msg timestamp="20220705 17:48:27.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.496" endtime="20220705 17:48:27.661"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:48:27.663" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:48:27.663" endtime="20220705 17:48:27.663"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:48:27.663" endtime="20220705 17:48:27.663"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:27.664" level="INFO">${url} = lists/62c4796b7d7395368f244d18/closed</msg>
<status status="PASS" starttime="20220705 17:48:27.664" endtime="20220705 17:48:27.664"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:48:27.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.664" endtime="20220705 17:48:27.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:27.812" endtime="20220705 17:48:27.812"/>
</return>
<msg timestamp="20220705 17:48:27.813" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.662" endtime="20220705 17:48:27.813"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:27.813" endtime="20220705 17:48:27.813"/>
</return>
<status status="PASS" starttime="20220705 17:48:27.661" endtime="20220705 17:48:27.813"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:27.815" level="INFO">${url} = lists/62c4796b7d7395368f244d18</msg>
<status status="PASS" starttime="20220705 17:48:27.814" endtime="20220705 17:48:27.815"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:48:27.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.815" endtime="20220705 17:48:27.902"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:27.902" endtime="20220705 17:48:27.902"/>
</return>
<msg timestamp="20220705 17:48:27.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.814" endtime="20220705 17:48:27.902"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:27.903" endtime="20220705 17:48:27.903"/>
</return>
<msg timestamp="20220705 17:48:27.903" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.813" endtime="20220705 17:48:27.903"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 17:48:27.903" endtime="20220705 17:48:27.904"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 17:48:27.495" endtime="20220705 17:48:27.904"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:48:27.907" level="INFO">${url} = boards/62c4796aeff87d370d928a3f</msg>
<status status="PASS" starttime="20220705 17:48:27.906" endtime="20220705 17:48:27.907"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:48:28.278" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.907" endtime="20220705 17:48:28.278"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:28.278" endtime="20220705 17:48:28.278"/>
</return>
<msg timestamp="20220705 17:48:28.278" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:48:27.906" endtime="20220705 17:48:28.278"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:48:28.278" endtime="20220705 17:48:28.278"/>
</return>
<status status="PASS" starttime="20220705 17:48:27.906" endtime="20220705 17:48:28.278"/>
</kw>
<status status="PASS" starttime="20220705 17:48:27.906" endtime="20220705 17:48:28.278"/>
</kw>
<status status="PASS" starttime="20220705 17:48:27.905" endtime="20220705 17:48:28.279"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 17:48:28.279" endtime="20220705 17:48:28.280"/>
</kw>
<status status="PASS" starttime="20220705 17:48:27.905" endtime="20220705 17:48:28.280"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 17:48:26.503" endtime="20220705 17:48:28.280"/>
</suite>
<status status="PASS" starttime="20220705 17:48:14.611" endtime="20220705 17:48:28.282"/>
</suite>
<status status="PASS" starttime="20220705 17:48:14.594" endtime="20220705 17:48:28.284"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
