<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 14:36:07.564" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:36:07.696" endtime="20220704 14:36:07.697"/>
</kw>
<status status="PASS" starttime="20220704 14:36:07.692" endtime="20220704 14:36:07.697"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:07.699" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:07.699" endtime="20220704 14:36:07.699"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:07.699" endtime="20220704 14:36:07.699"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:07.700" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:07.699" endtime="20220704 14:36:07.700"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:07.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:07.700" endtime="20220704 14:36:07.926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:07.926" endtime="20220704 14:36:07.926"/>
</return>
<msg timestamp="20220704 14:36:07.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:07.698" endtime="20220704 14:36:07.926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:07.926" endtime="20220704 14:36:07.926"/>
</return>
<msg timestamp="20220704 14:36:07.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:07.698" endtime="20220704 14:36:07.926"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:07.927" endtime="20220704 14:36:07.931"/>
</kw>
<status status="PASS" starttime="20220704 14:36:07.926" endtime="20220704 14:36:07.932"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:07.934" level="INFO">${url} = boards/62c2fad74abb7986b2858ae5</msg>
<status status="PASS" starttime="20220704 14:36:07.933" endtime="20220704 14:36:07.934"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:08.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:07.934" endtime="20220704 14:36:08.273"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.274" endtime="20220704 14:36:08.274"/>
</return>
<msg timestamp="20220704 14:36:08.274" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:07.933" endtime="20220704 14:36:08.274"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.274" endtime="20220704 14:36:08.274"/>
</return>
<status status="PASS" starttime="20220704 14:36:07.932" endtime="20220704 14:36:08.274"/>
</kw>
<status status="PASS" starttime="20220704 14:36:07.932" endtime="20220704 14:36:08.274"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:07.697" endtime="20220704 14:36:08.274"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:08.277" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:08.277" endtime="20220704 14:36:08.277"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:08.278" endtime="20220704 14:36:08.278"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:08.278" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:08.278" endtime="20220704 14:36:08.278"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:08.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.279" endtime="20220704 14:36:08.487"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.487" endtime="20220704 14:36:08.487"/>
</return>
<msg timestamp="20220704 14:36:08.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.277" endtime="20220704 14:36:08.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.488" endtime="20220704 14:36:08.488"/>
</return>
<msg timestamp="20220704 14:36:08.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.276" endtime="20220704 14:36:08.488"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:08.488" endtime="20220704 14:36:08.492"/>
</kw>
<status status="PASS" starttime="20220704 14:36:08.488" endtime="20220704 14:36:08.492"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:08.494" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:08.494" endtime="20220704 14:36:08.494"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:08.494" endtime="20220704 14:36:08.494"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:08.495" level="INFO">${url} = boards/62c2fad80d0d698cc4715dc5</msg>
<status status="PASS" starttime="20220704 14:36:08.494" endtime="20220704 14:36:08.495"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:08.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.495" endtime="20220704 14:36:08.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.583" endtime="20220704 14:36:08.583"/>
</return>
<msg timestamp="20220704 14:36:08.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.493" endtime="20220704 14:36:08.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.583" endtime="20220704 14:36:08.583"/>
</return>
<status status="PASS" starttime="20220704 14:36:08.493" endtime="20220704 14:36:08.583"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:08.585" level="INFO">${url} = boards/62c2fad80d0d698cc4715dc5</msg>
<status status="PASS" starttime="20220704 14:36:08.585" endtime="20220704 14:36:08.585"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:08.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.585" endtime="20220704 14:36:08.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.629" endtime="20220704 14:36:08.629"/>
</return>
<msg timestamp="20220704 14:36:08.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.584" endtime="20220704 14:36:08.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.629" endtime="20220704 14:36:08.629"/>
</return>
<msg timestamp="20220704 14:36:08.629" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.583" endtime="20220704 14:36:08.629"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:08.630" endtime="20220704 14:36:08.634"/>
</kw>
<status status="PASS" starttime="20220704 14:36:08.630" endtime="20220704 14:36:08.634"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:08.634" endtime="20220704 14:36:08.635"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:08.637" level="INFO">${url} = boards/62c2fad80d0d698cc4715dc5</msg>
<status status="PASS" starttime="20220704 14:36:08.637" endtime="20220704 14:36:08.638"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:08.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.638" endtime="20220704 14:36:08.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.962" endtime="20220704 14:36:08.962"/>
</return>
<msg timestamp="20220704 14:36:08.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.636" endtime="20220704 14:36:08.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.962" endtime="20220704 14:36:08.962"/>
</return>
<status status="PASS" starttime="20220704 14:36:08.636" endtime="20220704 14:36:08.962"/>
</kw>
<status status="PASS" starttime="20220704 14:36:08.635" endtime="20220704 14:36:08.962"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:08.275" endtime="20220704 14:36:08.962"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:08.966" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:08.965" endtime="20220704 14:36:08.966"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:08.966" endtime="20220704 14:36:08.966"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:08.967" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:08.966" endtime="20220704 14:36:08.967"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:09.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.967" endtime="20220704 14:36:09.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.135" endtime="20220704 14:36:09.135"/>
</return>
<msg timestamp="20220704 14:36:09.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.965" endtime="20220704 14:36:09.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.135" endtime="20220704 14:36:09.135"/>
</return>
<msg timestamp="20220704 14:36:09.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.964" endtime="20220704 14:36:09.136"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:09.138" level="INFO">${url} = boards/62c2fad9da328d62051cebd0</msg>
<status status="PASS" starttime="20220704 14:36:09.137" endtime="20220704 14:36:09.138"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:09.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.138" endtime="20220704 14:36:09.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.454" endtime="20220704 14:36:09.455"/>
</return>
<msg timestamp="20220704 14:36:09.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.137" endtime="20220704 14:36:09.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.455" endtime="20220704 14:36:09.455"/>
</return>
<status status="PASS" starttime="20220704 14:36:09.136" endtime="20220704 14:36:09.455"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:09.457" level="INFO">${url} = boards/62c2fad9da328d62051cebd0</msg>
<status status="PASS" starttime="20220704 14:36:09.457" endtime="20220704 14:36:09.457"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:09.492" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:09.457" endtime="20220704 14:36:09.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.493" endtime="20220704 14:36:09.493"/>
</return>
<msg timestamp="20220704 14:36:09.493" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:09.456" endtime="20220704 14:36:09.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.493" endtime="20220704 14:36:09.493"/>
</return>
<status status="PASS" starttime="20220704 14:36:09.455" endtime="20220704 14:36:09.493"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:08.963" endtime="20220704 14:36:09.493"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:09.495" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:09.495" endtime="20220704 14:36:09.495"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:09.495" endtime="20220704 14:36:09.496"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:09.496" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:09.496" endtime="20220704 14:36:09.496"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:09.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.497" endtime="20220704 14:36:09.660"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.660" endtime="20220704 14:36:09.660"/>
</return>
<msg timestamp="20220704 14:36:09.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.495" endtime="20220704 14:36:09.661"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.661" endtime="20220704 14:36:09.661"/>
</return>
<msg timestamp="20220704 14:36:09.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.494" endtime="20220704 14:36:09.661"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:09.662" endtime="20220704 14:36:09.666"/>
</kw>
<status status="PASS" starttime="20220704 14:36:09.661" endtime="20220704 14:36:09.666"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:09.668" level="INFO">${url} = boards/62c2fad95e58b7052bb2f146</msg>
<status status="PASS" starttime="20220704 14:36:09.668" endtime="20220704 14:36:09.668"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:09.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.668" endtime="20220704 14:36:09.717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.717" endtime="20220704 14:36:09.717"/>
</return>
<msg timestamp="20220704 14:36:09.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.667" endtime="20220704 14:36:09.717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.717" endtime="20220704 14:36:09.717"/>
</return>
<msg timestamp="20220704 14:36:09.717" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.666" endtime="20220704 14:36:09.717"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:09.718" endtime="20220704 14:36:09.722"/>
</kw>
<status status="PASS" starttime="20220704 14:36:09.717" endtime="20220704 14:36:09.722"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:09.722" endtime="20220704 14:36:09.723"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:09.725" level="INFO">${url} = boards/62c2fad95e58b7052bb2f146</msg>
<status status="PASS" starttime="20220704 14:36:09.724" endtime="20220704 14:36:09.725"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.725" endtime="20220704 14:36:10.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.081" endtime="20220704 14:36:10.081"/>
</return>
<msg timestamp="20220704 14:36:10.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.724" endtime="20220704 14:36:10.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.081" endtime="20220704 14:36:10.081"/>
</return>
<status status="PASS" starttime="20220704 14:36:09.723" endtime="20220704 14:36:10.081"/>
</kw>
<status status="PASS" starttime="20220704 14:36:09.723" endtime="20220704 14:36:10.081"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:09.494" endtime="20220704 14:36:10.082"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:10.085" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:10.085" endtime="20220704 14:36:10.085"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:10.085" endtime="20220704 14:36:10.085"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:10.086" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:10.085" endtime="20220704 14:36:10.086"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.086" endtime="20220704 14:36:10.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.241" endtime="20220704 14:36:10.241"/>
</return>
<msg timestamp="20220704 14:36:10.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.084" endtime="20220704 14:36:10.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.241" endtime="20220704 14:36:10.241"/>
</return>
<msg timestamp="20220704 14:36:10.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.084" endtime="20220704 14:36:10.241"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:10.242" endtime="20220704 14:36:10.247"/>
</kw>
<status status="PASS" starttime="20220704 14:36:10.242" endtime="20220704 14:36:10.247"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:10.249" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:10.248" endtime="20220704 14:36:10.249"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:10.249" endtime="20220704 14:36:10.249"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:10.249" level="INFO">${url} = boards/62c2fada00b3b22fd797faba</msg>
<status status="PASS" starttime="20220704 14:36:10.249" endtime="20220704 14:36:10.249"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.249" endtime="20220704 14:36:10.358"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.358" endtime="20220704 14:36:10.358"/>
</return>
<msg timestamp="20220704 14:36:10.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.248" endtime="20220704 14:36:10.358"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.358" endtime="20220704 14:36:10.358"/>
</return>
<status status="PASS" starttime="20220704 14:36:10.247" endtime="20220704 14:36:10.358"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:10.360" level="INFO">${url} = boards/62c2fada00b3b22fd797faba</msg>
<status status="PASS" starttime="20220704 14:36:10.360" endtime="20220704 14:36:10.360"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.360" endtime="20220704 14:36:10.422"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.422" endtime="20220704 14:36:10.422"/>
</return>
<msg timestamp="20220704 14:36:10.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.360" endtime="20220704 14:36:10.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.423" endtime="20220704 14:36:10.423"/>
</return>
<msg timestamp="20220704 14:36:10.423" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.358" endtime="20220704 14:36:10.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:10.423" endtime="20220704 14:36:10.424"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:10.426" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:10.426" endtime="20220704 14:36:10.426"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:10.426" endtime="20220704 14:36:10.426"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:10.427" level="INFO">${url} = boards/62c2fada00b3b22fd797faba</msg>
<status status="PASS" starttime="20220704 14:36:10.427" endtime="20220704 14:36:10.427"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.524" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.427" endtime="20220704 14:36:10.524"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.524" endtime="20220704 14:36:10.524"/>
</return>
<msg timestamp="20220704 14:36:10.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.425" endtime="20220704 14:36:10.525"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.525" endtime="20220704 14:36:10.525"/>
</return>
<status status="PASS" starttime="20220704 14:36:10.424" endtime="20220704 14:36:10.525"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:10.527" level="INFO">${url} = boards/62c2fada00b3b22fd797faba</msg>
<status status="PASS" starttime="20220704 14:36:10.527" endtime="20220704 14:36:10.527"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.572" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.527" endtime="20220704 14:36:10.572"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.572" endtime="20220704 14:36:10.572"/>
</return>
<msg timestamp="20220704 14:36:10.572" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.526" endtime="20220704 14:36:10.572"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.572" endtime="20220704 14:36:10.572"/>
</return>
<msg timestamp="20220704 14:36:10.572" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.525" endtime="20220704 14:36:10.572"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:10.573" endtime="20220704 14:36:10.573"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:10.576" level="INFO">${url} = boards/62c2fada00b3b22fd797faba</msg>
<status status="PASS" starttime="20220704 14:36:10.575" endtime="20220704 14:36:10.576"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.984" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.576" endtime="20220704 14:36:10.984"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.984" endtime="20220704 14:36:10.984"/>
</return>
<msg timestamp="20220704 14:36:10.985" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.575" endtime="20220704 14:36:10.985"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.985" endtime="20220704 14:36:10.985"/>
</return>
<status status="PASS" starttime="20220704 14:36:10.574" endtime="20220704 14:36:10.985"/>
</kw>
<status status="PASS" starttime="20220704 14:36:10.574" endtime="20220704 14:36:10.985"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:10.082" endtime="20220704 14:36:10.985"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 14:36:10.986" endtime="20220704 14:36:10.987"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 14:36:07.584" endtime="20220704 14:36:10.988"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:36:11.000" endtime="20220704 14:36:11.000"/>
</kw>
<status status="PASS" starttime="20220704 14:36:10.999" endtime="20220704 14:36:11.000"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:11.001" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:11.001" endtime="20220704 14:36:11.001"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:11.001" endtime="20220704 14:36:11.001"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.002" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:11.001" endtime="20220704 14:36:11.002"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.002" endtime="20220704 14:36:11.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.188" endtime="20220704 14:36:11.188"/>
</return>
<msg timestamp="20220704 14:36:11.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.000" endtime="20220704 14:36:11.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.189" endtime="20220704 14:36:11.189"/>
</return>
<msg timestamp="20220704 14:36:11.189" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.000" endtime="20220704 14:36:11.189"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:11.190" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2fadb73928849fcea6d16</msg>
<status status="PASS" starttime="20220704 14:36:11.189" endtime="20220704 14:36:11.190"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.191" level="INFO">${url} = boards/62c2fadb73928849fcea6d16/lists/</msg>
<status status="PASS" starttime="20220704 14:36:11.191" endtime="20220704 14:36:11.191"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.191" endtime="20220704 14:36:11.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.241" endtime="20220704 14:36:11.241"/>
</return>
<msg timestamp="20220704 14:36:11.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.190" endtime="20220704 14:36:11.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.241" endtime="20220704 14:36:11.241"/>
</return>
<msg timestamp="20220704 14:36:11.242" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.190" endtime="20220704 14:36:11.242"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:11.243" level="INFO">${TEST_SUITE_LIST_ID} = 62c2fadb73928849fcea6d1d</msg>
<status status="PASS" starttime="20220704 14:36:11.242" endtime="20220704 14:36:11.243"/>
</kw>
<status status="PASS" starttime="20220704 14:36:11.000" endtime="20220704 14:36:11.243"/>
</kw>
<status status="PASS" starttime="20220704 14:36:10.999" endtime="20220704 14:36:11.243"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:11.245" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:11.245" endtime="20220704 14:36:11.245"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:11.245" endtime="20220704 14:36:11.245"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.246" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:36:11.246" endtime="20220704 14:36:11.246"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.247" endtime="20220704 14:36:11.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.414" endtime="20220704 14:36:11.414"/>
</return>
<msg timestamp="20220704 14:36:11.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.244" endtime="20220704 14:36:11.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.414" endtime="20220704 14:36:11.414"/>
</return>
<msg timestamp="20220704 14:36:11.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.244" endtime="20220704 14:36:11.415"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:11.415" endtime="20220704 14:36:11.421"/>
</kw>
<status status="PASS" starttime="20220704 14:36:11.415" endtime="20220704 14:36:11.421"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:11.421" endtime="20220704 14:36:11.421"/>
</return>
<msg timestamp="20220704 14:36:11.422" level="INFO">${CARD_ID} = 62c2fadb91710d1372588a0c</msg>
<status status="PASS" starttime="20220704 14:36:11.421" endtime="20220704 14:36:11.422"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.423" level="INFO">${url} = cards/62c2fadb91710d1372588a0c</msg>
<status status="PASS" starttime="20220704 14:36:11.423" endtime="20220704 14:36:11.423"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.423" endtime="20220704 14:36:11.501"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.501" endtime="20220704 14:36:11.501"/>
</return>
<msg timestamp="20220704 14:36:11.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.423" endtime="20220704 14:36:11.501"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.501" endtime="20220704 14:36:11.501"/>
</return>
<msg timestamp="20220704 14:36:11.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.422" endtime="20220704 14:36:11.501"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:11.502" endtime="20220704 14:36:11.502"/>
</return>
<msg timestamp="20220704 14:36:11.503" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 14:36:11.502" endtime="20220704 14:36:11.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:11.503" endtime="20220704 14:36:11.503"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.505" level="INFO">${url} = cards/62c2fadb91710d1372588a0c</msg>
<status status="PASS" starttime="20220704 14:36:11.504" endtime="20220704 14:36:11.505"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.505" endtime="20220704 14:36:11.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.648" endtime="20220704 14:36:11.648"/>
</return>
<msg timestamp="20220704 14:36:11.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.504" endtime="20220704 14:36:11.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.648" endtime="20220704 14:36:11.648"/>
</return>
<status status="PASS" starttime="20220704 14:36:11.504" endtime="20220704 14:36:11.649"/>
</kw>
<status status="PASS" starttime="20220704 14:36:11.503" endtime="20220704 14:36:11.649"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:11.243" endtime="20220704 14:36:11.649"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:11.652" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:11.651" endtime="20220704 14:36:11.652"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:11.652" endtime="20220704 14:36:11.652"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.653" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:36:11.652" endtime="20220704 14:36:11.653"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.653" endtime="20220704 14:36:11.801"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.801" endtime="20220704 14:36:11.801"/>
</return>
<msg timestamp="20220704 14:36:11.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.651" endtime="20220704 14:36:11.801"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.801" endtime="20220704 14:36:11.801"/>
</return>
<msg timestamp="20220704 14:36:11.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.650" endtime="20220704 14:36:11.802"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:11.802" endtime="20220704 14:36:11.802"/>
</return>
<msg timestamp="20220704 14:36:11.803" level="INFO">${CARD_ID} = 62c2fadb76aa3449d0354a50</msg>
<status status="PASS" starttime="20220704 14:36:11.802" endtime="20220704 14:36:11.803"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:11.805" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:11.805" endtime="20220704 14:36:11.805"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:11.806" endtime="20220704 14:36:11.806"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.806" level="INFO">${url} = cards/62c2fadb76aa3449d0354a50</msg>
<status status="PASS" starttime="20220704 14:36:11.806" endtime="20220704 14:36:11.806"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.806" endtime="20220704 14:36:11.934"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.934" endtime="20220704 14:36:11.934"/>
</return>
<msg timestamp="20220704 14:36:11.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.805" endtime="20220704 14:36:11.935"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.935" endtime="20220704 14:36:11.935"/>
</return>
<msg timestamp="20220704 14:36:11.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.804" endtime="20220704 14:36:11.935"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.935" endtime="20220704 14:36:11.935"/>
</return>
<status status="PASS" starttime="20220704 14:36:11.803" endtime="20220704 14:36:11.935"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.937" level="INFO">${url} = cards/62c2fadb76aa3449d0354a50</msg>
<status status="PASS" starttime="20220704 14:36:11.936" endtime="20220704 14:36:11.937"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.937" endtime="20220704 14:36:11.986"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.986" endtime="20220704 14:36:11.986"/>
</return>
<msg timestamp="20220704 14:36:11.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.936" endtime="20220704 14:36:11.987"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.987" endtime="20220704 14:36:11.987"/>
</return>
<msg timestamp="20220704 14:36:11.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.935" endtime="20220704 14:36:11.987"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:11.988" endtime="20220704 14:36:11.988"/>
</return>
<msg timestamp="20220704 14:36:11.989" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 14:36:11.987" endtime="20220704 14:36:11.989"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:36:11.989" endtime="20220704 14:36:11.989"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.991" level="INFO">${url} = cards/62c2fadb76aa3449d0354a50</msg>
<status status="PASS" starttime="20220704 14:36:11.990" endtime="20220704 14:36:11.991"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.119" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.991" endtime="20220704 14:36:12.119"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.119" endtime="20220704 14:36:12.119"/>
</return>
<msg timestamp="20220704 14:36:12.119" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.990" endtime="20220704 14:36:12.119"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.119" endtime="20220704 14:36:12.119"/>
</return>
<status status="PASS" starttime="20220704 14:36:11.989" endtime="20220704 14:36:12.120"/>
</kw>
<status status="PASS" starttime="20220704 14:36:11.989" endtime="20220704 14:36:12.120"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:36:11.649" endtime="20220704 14:36:12.120"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:12.123" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:12.123" endtime="20220704 14:36:12.123"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:12.123" endtime="20220704 14:36:12.123"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.124" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:36:12.123" endtime="20220704 14:36:12.124"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.124" endtime="20220704 14:36:12.296"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.296" endtime="20220704 14:36:12.296"/>
</return>
<msg timestamp="20220704 14:36:12.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.122" endtime="20220704 14:36:12.296"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.296" endtime="20220704 14:36:12.296"/>
</return>
<msg timestamp="20220704 14:36:12.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.121" endtime="20220704 14:36:12.296"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:12.297" endtime="20220704 14:36:12.297"/>
</return>
<msg timestamp="20220704 14:36:12.298" level="INFO">${CARD_ID} = 62c2fadc1b15ad5c6831ffd6</msg>
<status status="PASS" starttime="20220704 14:36:12.297" endtime="20220704 14:36:12.298"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.299" level="INFO">${url} = cards/62c2fadc1b15ad5c6831ffd6</msg>
<status status="PASS" starttime="20220704 14:36:12.299" endtime="20220704 14:36:12.299"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.299" endtime="20220704 14:36:12.472"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.472" endtime="20220704 14:36:12.472"/>
</return>
<msg timestamp="20220704 14:36:12.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.298" endtime="20220704 14:36:12.472"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.472" endtime="20220704 14:36:12.472"/>
</return>
<msg timestamp="20220704 14:36:12.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.298" endtime="20220704 14:36:12.472"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:12.473" endtime="20220704 14:36:12.475"/>
</kw>
<status status="PASS" starttime="20220704 14:36:12.473" endtime="20220704 14:36:12.475"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.476" level="INFO">${url} = cards/62c2fadc1b15ad5c6831ffd6</msg>
<status status="PASS" starttime="20220704 14:36:12.476" endtime="20220704 14:36:12.476"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.513" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:12.476" endtime="20220704 14:36:12.513"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.513" endtime="20220704 14:36:12.513"/>
</return>
<msg timestamp="20220704 14:36:12.513" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:12.476" endtime="20220704 14:36:12.513"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.513" endtime="20220704 14:36:12.513"/>
</return>
<status status="PASS" starttime="20220704 14:36:12.475" endtime="20220704 14:36:12.513"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:12.120" endtime="20220704 14:36:12.514"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:12.517" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:12.516" endtime="20220704 14:36:12.517"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:12.517" endtime="20220704 14:36:12.517"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.518" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:36:12.517" endtime="20220704 14:36:12.518"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.518" endtime="20220704 14:36:12.677"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.677" endtime="20220704 14:36:12.677"/>
</return>
<msg timestamp="20220704 14:36:12.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.516" endtime="20220704 14:36:12.677"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.677" endtime="20220704 14:36:12.677"/>
</return>
<msg timestamp="20220704 14:36:12.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.515" endtime="20220704 14:36:12.677"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:12.678" endtime="20220704 14:36:12.678"/>
</return>
<msg timestamp="20220704 14:36:12.679" level="INFO">${CARD_ID} = 62c2fadc1da1656d7987e3e6</msg>
<status status="PASS" starttime="20220704 14:36:12.677" endtime="20220704 14:36:12.679"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:12.680" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:12.680" endtime="20220704 14:36:12.680"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:12.680" endtime="20220704 14:36:12.681"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.681" level="INFO">${url} = cards/62c2fadc1da1656d7987e3e6</msg>
<status status="PASS" starttime="20220704 14:36:12.681" endtime="20220704 14:36:12.681"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.681" endtime="20220704 14:36:12.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.818" endtime="20220704 14:36:12.818"/>
</return>
<msg timestamp="20220704 14:36:12.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.679" endtime="20220704 14:36:12.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.818" endtime="20220704 14:36:12.818"/>
</return>
<msg timestamp="20220704 14:36:12.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.679" endtime="20220704 14:36:12.819"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:12.819" endtime="20220704 14:36:12.824"/>
</kw>
<status status="PASS" starttime="20220704 14:36:12.819" endtime="20220704 14:36:12.824"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.826" level="INFO">${url} = cards/62c2fadc1da1656d7987e3e6</msg>
<status status="PASS" starttime="20220704 14:36:12.825" endtime="20220704 14:36:12.826"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.826" endtime="20220704 14:36:12.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.883" endtime="20220704 14:36:12.883"/>
</return>
<msg timestamp="20220704 14:36:12.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.825" endtime="20220704 14:36:12.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.884" endtime="20220704 14:36:12.884"/>
</return>
<msg timestamp="20220704 14:36:12.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.825" endtime="20220704 14:36:12.884"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:12.884" endtime="20220704 14:36:12.884"/>
</return>
<msg timestamp="20220704 14:36:12.885" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 14:36:12.884" endtime="20220704 14:36:12.885"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:12.886" endtime="20220704 14:36:12.886"/>
</return>
<msg timestamp="20220704 14:36:12.887" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 14:36:12.885" endtime="20220704 14:36:12.887"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:12.887" endtime="20220704 14:36:12.887"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:12.887" endtime="20220704 14:36:12.887"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.889" level="INFO">${url} = cards/62c2fadc1da1656d7987e3e6</msg>
<status status="PASS" starttime="20220704 14:36:12.889" endtime="20220704 14:36:12.889"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:13.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.889" endtime="20220704 14:36:13.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.026" endtime="20220704 14:36:13.026"/>
</return>
<msg timestamp="20220704 14:36:13.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.888" endtime="20220704 14:36:13.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.027" endtime="20220704 14:36:13.027"/>
</return>
<status status="PASS" starttime="20220704 14:36:12.888" endtime="20220704 14:36:13.027"/>
</kw>
<status status="PASS" starttime="20220704 14:36:12.888" endtime="20220704 14:36:13.027"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:36:12.514" endtime="20220704 14:36:13.027"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:13.031" level="INFO">${url} = boards/62c2fadb73928849fcea6d16</msg>
<status status="PASS" starttime="20220704 14:36:13.030" endtime="20220704 14:36:13.031"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:13.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.031" endtime="20220704 14:36:13.431"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.431" endtime="20220704 14:36:13.431"/>
</return>
<msg timestamp="20220704 14:36:13.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.030" endtime="20220704 14:36:13.432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.432" endtime="20220704 14:36:13.432"/>
</return>
<status status="PASS" starttime="20220704 14:36:13.029" endtime="20220704 14:36:13.432"/>
</kw>
<status status="PASS" starttime="20220704 14:36:13.029" endtime="20220704 14:36:13.432"/>
</kw>
<status status="PASS" starttime="20220704 14:36:13.028" endtime="20220704 14:36:13.432"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:36:13.432" endtime="20220704 14:36:13.433"/>
</kw>
<status status="PASS" starttime="20220704 14:36:13.028" endtime="20220704 14:36:13.433"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:36:10.990" endtime="20220704 14:36:13.433"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:36:13.445" endtime="20220704 14:36:13.445"/>
</kw>
<status status="PASS" starttime="20220704 14:36:13.444" endtime="20220704 14:36:13.445"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:13.446" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:13.446" endtime="20220704 14:36:13.446"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:13.447" endtime="20220704 14:36:13.447"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:13.447" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:13.447" endtime="20220704 14:36:13.447"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:13.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.448" endtime="20220704 14:36:13.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.647" endtime="20220704 14:36:13.647"/>
</return>
<msg timestamp="20220704 14:36:13.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.446" endtime="20220704 14:36:13.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.648" endtime="20220704 14:36:13.648"/>
</return>
<msg timestamp="20220704 14:36:13.648" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.446" endtime="20220704 14:36:13.648"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:13.649" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2fadd44d13a4758ffc3cd</msg>
<status status="PASS" starttime="20220704 14:36:13.648" endtime="20220704 14:36:13.649"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:13.650" level="INFO">${url} = boards/62c2fadd44d13a4758ffc3cd/lists/</msg>
<status status="PASS" starttime="20220704 14:36:13.650" endtime="20220704 14:36:13.650"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:13.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.650" endtime="20220704 14:36:13.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.691" endtime="20220704 14:36:13.691"/>
</return>
<msg timestamp="20220704 14:36:13.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.649" endtime="20220704 14:36:13.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.691" endtime="20220704 14:36:13.691"/>
</return>
<msg timestamp="20220704 14:36:13.692" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.649" endtime="20220704 14:36:13.692"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:13.693" level="INFO">${TEST_SUITE_LIST_ID} = 62c2fadd44d13a4758ffc3d4</msg>
<status status="PASS" starttime="20220704 14:36:13.692" endtime="20220704 14:36:13.693"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:13.694" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:13.694" endtime="20220704 14:36:13.694"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:13.694" endtime="20220704 14:36:13.695"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:13.695" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:36:13.695" endtime="20220704 14:36:13.695"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:13.867" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.695" endtime="20220704 14:36:13.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.868" endtime="20220704 14:36:13.868"/>
</return>
<msg timestamp="20220704 14:36:13.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.694" endtime="20220704 14:36:13.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.868" endtime="20220704 14:36:13.868"/>
</return>
<msg timestamp="20220704 14:36:13.868" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.693" endtime="20220704 14:36:13.868"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:13.869" level="INFO">${TEST_SUITE_CARD_ID} = 62c2fadd6597113db91f0eef</msg>
<status status="PASS" starttime="20220704 14:36:13.868" endtime="20220704 14:36:13.869"/>
</kw>
<status status="PASS" starttime="20220704 14:36:13.445" endtime="20220704 14:36:13.870"/>
</kw>
<status status="PASS" starttime="20220704 14:36:13.444" endtime="20220704 14:36:13.870"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:13.872" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:13.872" endtime="20220704 14:36:13.872"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:13.872" endtime="20220704 14:36:13.872"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:13.873" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:36:13.872" endtime="20220704 14:36:13.873"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.873" endtime="20220704 14:36:14.048"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.048" endtime="20220704 14:36:14.048"/>
</return>
<msg timestamp="20220704 14:36:14.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.871" endtime="20220704 14:36:14.048"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.048" endtime="20220704 14:36:14.048"/>
</return>
<msg timestamp="20220704 14:36:14.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.871" endtime="20220704 14:36:14.048"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:14.049" endtime="20220704 14:36:14.049"/>
</return>
<msg timestamp="20220704 14:36:14.050" level="INFO">${checklist_id} = 62c2faddc41cd8084f73a9ad</msg>
<status status="PASS" starttime="20220704 14:36:14.048" endtime="20220704 14:36:14.050"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.051" level="INFO">${url} = checklists/62c2faddc41cd8084f73a9ad</msg>
<status status="PASS" starttime="20220704 14:36:14.051" endtime="20220704 14:36:14.051"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.051" endtime="20220704 14:36:14.105"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.105" endtime="20220704 14:36:14.105"/>
</return>
<msg timestamp="20220704 14:36:14.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.050" endtime="20220704 14:36:14.105"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.105" endtime="20220704 14:36:14.105"/>
</return>
<msg timestamp="20220704 14:36:14.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.050" endtime="20220704 14:36:14.105"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:14.106" endtime="20220704 14:36:14.106"/>
</return>
<msg timestamp="20220704 14:36:14.107" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 14:36:14.106" endtime="20220704 14:36:14.107"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:14.107" endtime="20220704 14:36:14.107"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.108" level="INFO">${url} = checklists/62c2faddc41cd8084f73a9ad</msg>
<status status="PASS" starttime="20220704 14:36:14.108" endtime="20220704 14:36:14.108"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.109" endtime="20220704 14:36:14.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.226" endtime="20220704 14:36:14.226"/>
</return>
<msg timestamp="20220704 14:36:14.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.108" endtime="20220704 14:36:14.227"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.227" endtime="20220704 14:36:14.227"/>
</return>
<status status="PASS" starttime="20220704 14:36:14.107" endtime="20220704 14:36:14.227"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:13.870" endtime="20220704 14:36:14.227"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:14.229" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:14.229" endtime="20220704 14:36:14.229"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:14.229" endtime="20220704 14:36:14.229"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.230" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:36:14.230" endtime="20220704 14:36:14.230"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.230" endtime="20220704 14:36:14.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.341" endtime="20220704 14:36:14.341"/>
</return>
<msg timestamp="20220704 14:36:14.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.228" endtime="20220704 14:36:14.341"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.341" endtime="20220704 14:36:14.341"/>
</return>
<msg timestamp="20220704 14:36:14.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.228" endtime="20220704 14:36:14.341"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:14.342" endtime="20220704 14:36:14.342"/>
</return>
<msg timestamp="20220704 14:36:14.343" level="INFO">${checklist_id} = 62c2fade18d31c88d9cea85a</msg>
<status status="PASS" starttime="20220704 14:36:14.341" endtime="20220704 14:36:14.343"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.345" level="INFO">${url} = checklists/62c2fade18d31c88d9cea85a</msg>
<status status="PASS" starttime="20220704 14:36:14.344" endtime="20220704 14:36:14.345"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.345" endtime="20220704 14:36:14.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.475" endtime="20220704 14:36:14.476"/>
</return>
<msg timestamp="20220704 14:36:14.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.344" endtime="20220704 14:36:14.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.476" endtime="20220704 14:36:14.476"/>
</return>
<msg timestamp="20220704 14:36:14.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.343" endtime="20220704 14:36:14.476"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:14.477" endtime="20220704 14:36:14.479"/>
</kw>
<status status="PASS" starttime="20220704 14:36:14.476" endtime="20220704 14:36:14.479"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.480" level="INFO">${url} = checklists/62c2fade18d31c88d9cea85a</msg>
<status status="PASS" starttime="20220704 14:36:14.480" endtime="20220704 14:36:14.480"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.511" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:14.480" endtime="20220704 14:36:14.512"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.512" endtime="20220704 14:36:14.512"/>
</return>
<msg timestamp="20220704 14:36:14.512" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:14.480" endtime="20220704 14:36:14.512"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.512" endtime="20220704 14:36:14.512"/>
</return>
<status status="PASS" starttime="20220704 14:36:14.479" endtime="20220704 14:36:14.512"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:14.227" endtime="20220704 14:36:14.512"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:14.517" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:14.515" endtime="20220704 14:36:14.517"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:14.517" endtime="20220704 14:36:14.517"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.518" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:36:14.517" endtime="20220704 14:36:14.518"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.518" endtime="20220704 14:36:14.614"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.614" endtime="20220704 14:36:14.614"/>
</return>
<msg timestamp="20220704 14:36:14.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.514" endtime="20220704 14:36:14.614"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.614" endtime="20220704 14:36:14.614"/>
</return>
<msg timestamp="20220704 14:36:14.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.513" endtime="20220704 14:36:14.615"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:14.615" endtime="20220704 14:36:14.615"/>
</return>
<msg timestamp="20220704 14:36:14.616" level="INFO">${checklist_id} = 62c2fadea920cc14ba2cdf8a</msg>
<status status="PASS" starttime="20220704 14:36:14.615" endtime="20220704 14:36:14.616"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:14.618" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:14.617" endtime="20220704 14:36:14.618"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:14.618" endtime="20220704 14:36:14.618"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.618" level="INFO">${url} = checklists/62c2fadea920cc14ba2cdf8a</msg>
<status status="PASS" starttime="20220704 14:36:14.618" endtime="20220704 14:36:14.618"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.619" endtime="20220704 14:36:14.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.732" endtime="20220704 14:36:14.732"/>
</return>
<msg timestamp="20220704 14:36:14.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.617" endtime="20220704 14:36:14.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.732" endtime="20220704 14:36:14.732"/>
</return>
<msg timestamp="20220704 14:36:14.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.616" endtime="20220704 14:36:14.732"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.734" level="INFO">${url} = checklists/62c2fadea920cc14ba2cdf8a</msg>
<status status="PASS" starttime="20220704 14:36:14.734" endtime="20220704 14:36:14.734"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.778" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.734" endtime="20220704 14:36:14.778"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.778" endtime="20220704 14:36:14.778"/>
</return>
<msg timestamp="20220704 14:36:14.779" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.733" endtime="20220704 14:36:14.779"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.779" endtime="20220704 14:36:14.779"/>
</return>
<msg timestamp="20220704 14:36:14.779" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.733" endtime="20220704 14:36:14.779"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:14.780" endtime="20220704 14:36:14.780"/>
</return>
<msg timestamp="20220704 14:36:14.780" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 14:36:14.779" endtime="20220704 14:36:14.780"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:14.781" endtime="20220704 14:36:14.781"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.798" level="INFO">${url} = checklists/62c2fadea920cc14ba2cdf8a</msg>
<status status="PASS" starttime="20220704 14:36:14.797" endtime="20220704 14:36:14.798"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.952" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.798" endtime="20220704 14:36:14.952"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.952" endtime="20220704 14:36:14.952"/>
</return>
<msg timestamp="20220704 14:36:14.952" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.797" endtime="20220704 14:36:14.952"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.952" endtime="20220704 14:36:14.952"/>
</return>
<status status="PASS" starttime="20220704 14:36:14.781" endtime="20220704 14:36:14.952"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:36:14.513" endtime="20220704 14:36:14.952"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.955" level="INFO">${url} = boards/62c2fadd44d13a4758ffc3cd</msg>
<status status="PASS" starttime="20220704 14:36:14.955" endtime="20220704 14:36:14.955"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:15.410" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.955" endtime="20220704 14:36:15.410"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.410" endtime="20220704 14:36:15.410"/>
</return>
<msg timestamp="20220704 14:36:15.410" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.954" endtime="20220704 14:36:15.410"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.410" endtime="20220704 14:36:15.411"/>
</return>
<status status="PASS" starttime="20220704 14:36:14.954" endtime="20220704 14:36:15.411"/>
</kw>
<status status="PASS" starttime="20220704 14:36:14.953" endtime="20220704 14:36:15.411"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:36:15.411" endtime="20220704 14:36:15.412"/>
</kw>
<status status="PASS" starttime="20220704 14:36:14.953" endtime="20220704 14:36:15.412"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 14:36:13.435" endtime="20220704 14:36:15.412"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:36:15.422" endtime="20220704 14:36:15.422"/>
</kw>
<status status="PASS" starttime="20220704 14:36:15.422" endtime="20220704 14:36:15.422"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:15.423" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:15.423" endtime="20220704 14:36:15.423"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:15.423" endtime="20220704 14:36:15.424"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:15.424" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:15.424" endtime="20220704 14:36:15.424"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:15.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.424" endtime="20220704 14:36:15.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.638" endtime="20220704 14:36:15.638"/>
</return>
<msg timestamp="20220704 14:36:15.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.423" endtime="20220704 14:36:15.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.638" endtime="20220704 14:36:15.638"/>
</return>
<msg timestamp="20220704 14:36:15.638" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.423" endtime="20220704 14:36:15.639"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:15.640" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2fadf9511e9450fd5b87b</msg>
<status status="PASS" starttime="20220704 14:36:15.639" endtime="20220704 14:36:15.640"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:15.687" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.640" endtime="20220704 14:36:15.687"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:15.688" level="INFO">${TEST_SUITE_LIST_ID} = 62c2fadf9511e9450fd5b882</msg>
<status status="PASS" starttime="20220704 14:36:15.687" endtime="20220704 14:36:15.688"/>
</kw>
<status status="PASS" starttime="20220704 14:36:15.423" endtime="20220704 14:36:15.689"/>
</kw>
<status status="PASS" starttime="20220704 14:36:15.422" endtime="20220704 14:36:15.689"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:15.691" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:15.690" endtime="20220704 14:36:15.691"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:15.691" endtime="20220704 14:36:15.691"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:15.692" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:36:15.691" endtime="20220704 14:36:15.692"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:15.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.692" endtime="20220704 14:36:15.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.802" endtime="20220704 14:36:15.802"/>
</return>
<msg timestamp="20220704 14:36:15.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.690" endtime="20220704 14:36:15.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.802" endtime="20220704 14:36:15.802"/>
</return>
<msg timestamp="20220704 14:36:15.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.689" endtime="20220704 14:36:15.803"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:15.803" endtime="20220704 14:36:15.805"/>
</kw>
<status status="PASS" starttime="20220704 14:36:15.803" endtime="20220704 14:36:15.805"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:15.805" endtime="20220704 14:36:15.806"/>
</return>
<msg timestamp="20220704 14:36:15.806" level="INFO">${LABEL_ID} = 62c2fadf7fad8f859e558759</msg>
<status status="PASS" starttime="20220704 14:36:15.805" endtime="20220704 14:36:15.806"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:15.807" level="INFO">${url} = labels/62c2fadf7fad8f859e558759</msg>
<status status="PASS" starttime="20220704 14:36:15.807" endtime="20220704 14:36:15.807"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:15.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.807" endtime="20220704 14:36:15.857"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.857" endtime="20220704 14:36:15.857"/>
</return>
<msg timestamp="20220704 14:36:15.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.807" endtime="20220704 14:36:15.857"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.857" endtime="20220704 14:36:15.857"/>
</return>
<msg timestamp="20220704 14:36:15.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.806" endtime="20220704 14:36:15.857"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:15.858" endtime="20220704 14:36:15.858"/>
</return>
<msg timestamp="20220704 14:36:15.859" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 14:36:15.858" endtime="20220704 14:36:15.859"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:15.859" endtime="20220704 14:36:15.859"/>
</return>
<msg timestamp="20220704 14:36:15.860" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 14:36:15.859" endtime="20220704 14:36:15.860"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:15.860" endtime="20220704 14:36:15.861"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:15.861" endtime="20220704 14:36:15.861"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:15.863" level="INFO">${url} = labels/62c2fadf7fad8f859e558759</msg>
<status status="PASS" starttime="20220704 14:36:15.862" endtime="20220704 14:36:15.863"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.863" endtime="20220704 14:36:16.000"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.000" endtime="20220704 14:36:16.000"/>
</return>
<msg timestamp="20220704 14:36:16.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.862" endtime="20220704 14:36:16.001"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.001" endtime="20220704 14:36:16.001"/>
</return>
<status status="PASS" starttime="20220704 14:36:15.861" endtime="20220704 14:36:16.001"/>
</kw>
<status status="PASS" starttime="20220704 14:36:15.861" endtime="20220704 14:36:16.001"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:15.689" endtime="20220704 14:36:16.001"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:16.003" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:16.003" endtime="20220704 14:36:16.003"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:16.004" endtime="20220704 14:36:16.004"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.005" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:36:16.004" endtime="20220704 14:36:16.005"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.005" endtime="20220704 14:36:16.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.084" endtime="20220704 14:36:16.084"/>
</return>
<msg timestamp="20220704 14:36:16.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.003" endtime="20220704 14:36:16.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.084" endtime="20220704 14:36:16.084"/>
</return>
<msg timestamp="20220704 14:36:16.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.002" endtime="20220704 14:36:16.084"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:16.085" endtime="20220704 14:36:16.087"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.084" endtime="20220704 14:36:16.087"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:16.087" endtime="20220704 14:36:16.088"/>
</return>
<msg timestamp="20220704 14:36:16.088" level="INFO">${LABEL_ID} = 62c2fae033b6c826135222cb</msg>
<status status="PASS" starttime="20220704 14:36:16.087" endtime="20220704 14:36:16.088"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:16.089" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:16.089" endtime="20220704 14:36:16.089"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:16.089" endtime="20220704 14:36:16.089"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.090" level="INFO">${url} = labels/62c2fae033b6c826135222cb</msg>
<status status="PASS" starttime="20220704 14:36:16.090" endtime="20220704 14:36:16.090"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.090" endtime="20220704 14:36:16.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.196" endtime="20220704 14:36:16.196"/>
</return>
<msg timestamp="20220704 14:36:16.196" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.089" endtime="20220704 14:36:16.196"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.196" endtime="20220704 14:36:16.196"/>
</return>
<msg timestamp="20220704 14:36:16.196" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.088" endtime="20220704 14:36:16.196"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:16.197" endtime="20220704 14:36:16.197"/>
</return>
<msg timestamp="20220704 14:36:16.198" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 14:36:16.196" endtime="20220704 14:36:16.198"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:16.198" endtime="20220704 14:36:16.198"/>
</return>
<msg timestamp="20220704 14:36:16.199" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 14:36:16.198" endtime="20220704 14:36:16.199"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:16.199" endtime="20220704 14:36:16.199"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:16.199" endtime="20220704 14:36:16.200"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.201" level="INFO">${url} = labels/62c2fae033b6c826135222cb</msg>
<status status="PASS" starttime="20220704 14:36:16.201" endtime="20220704 14:36:16.201"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.202" endtime="20220704 14:36:16.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.306" endtime="20220704 14:36:16.306"/>
</return>
<msg timestamp="20220704 14:36:16.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.201" endtime="20220704 14:36:16.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.306" endtime="20220704 14:36:16.306"/>
</return>
<status status="PASS" starttime="20220704 14:36:16.200" endtime="20220704 14:36:16.307"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.200" endtime="20220704 14:36:16.307"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:16.001" endtime="20220704 14:36:16.307"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:16.309" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:16.309" endtime="20220704 14:36:16.309"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:16.309" endtime="20220704 14:36:16.309"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.310" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:36:16.309" endtime="20220704 14:36:16.310"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.310" endtime="20220704 14:36:16.386"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.386" endtime="20220704 14:36:16.386"/>
</return>
<msg timestamp="20220704 14:36:16.387" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.308" endtime="20220704 14:36:16.387"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.387" endtime="20220704 14:36:16.387"/>
</return>
<msg timestamp="20220704 14:36:16.387" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.308" endtime="20220704 14:36:16.387"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:16.388" endtime="20220704 14:36:16.388"/>
</return>
<msg timestamp="20220704 14:36:16.388" level="INFO">${LABEL_ID} = 62c2fae052d2302c2d82cd4a</msg>
<status status="PASS" starttime="20220704 14:36:16.387" endtime="20220704 14:36:16.388"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.390" level="INFO">${url} = labels/62c2fae052d2302c2d82cd4a</msg>
<status status="PASS" starttime="20220704 14:36:16.390" endtime="20220704 14:36:16.390"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.391" endtime="20220704 14:36:16.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.508" endtime="20220704 14:36:16.508"/>
</return>
<msg timestamp="20220704 14:36:16.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.390" endtime="20220704 14:36:16.508"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.508" endtime="20220704 14:36:16.508"/>
</return>
<status status="PASS" starttime="20220704 14:36:16.389" endtime="20220704 14:36:16.508"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.389" endtime="20220704 14:36:16.508"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.510" level="INFO">${url} = labels/62c2fae052d2302c2d82cd4a</msg>
<status status="PASS" starttime="20220704 14:36:16.509" endtime="20220704 14:36:16.510"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.539" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:16.510" endtime="20220704 14:36:16.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.540" endtime="20220704 14:36:16.540"/>
</return>
<msg timestamp="20220704 14:36:16.540" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:16.509" endtime="20220704 14:36:16.540"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.540" endtime="20220704 14:36:16.540"/>
</return>
<status status="PASS" starttime="20220704 14:36:16.508" endtime="20220704 14:36:16.540"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:16.307" endtime="20220704 14:36:16.540"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.543" level="INFO">${url} = boards/62c2fadf9511e9450fd5b87b</msg>
<status status="PASS" starttime="20220704 14:36:16.543" endtime="20220704 14:36:16.543"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.984" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.543" endtime="20220704 14:36:16.984"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.984" endtime="20220704 14:36:16.984"/>
</return>
<msg timestamp="20220704 14:36:16.985" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.542" endtime="20220704 14:36:16.985"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.985" endtime="20220704 14:36:16.985"/>
</return>
<status status="PASS" starttime="20220704 14:36:16.542" endtime="20220704 14:36:16.985"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.541" endtime="20220704 14:36:16.985"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.541" endtime="20220704 14:36:16.985"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:36:16.985" endtime="20220704 14:36:16.986"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.541" endtime="20220704 14:36:16.987"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:36:15.414" endtime="20220704 14:36:16.987"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:36:16.996" endtime="20220704 14:36:16.996"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.996" endtime="20220704 14:36:16.997"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:16.998" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:16.997" endtime="20220704 14:36:16.998"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:16.998" endtime="20220704 14:36:16.998"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.999" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:16.998" endtime="20220704 14:36:16.999"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.999" endtime="20220704 14:36:17.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.160" endtime="20220704 14:36:17.160"/>
</return>
<msg timestamp="20220704 14:36:17.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.997" endtime="20220704 14:36:17.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.161" endtime="20220704 14:36:17.161"/>
</return>
<msg timestamp="20220704 14:36:17.161" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.997" endtime="20220704 14:36:17.161"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:17.162" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2fae18d3aa34572397714</msg>
<status status="PASS" starttime="20220704 14:36:17.161" endtime="20220704 14:36:17.162"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.161" endtime="20220704 14:36:17.162"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.997" endtime="20220704 14:36:17.162"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.996" endtime="20220704 14:36:17.162"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:17.164" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:17.164" endtime="20220704 14:36:17.164"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:17.165" endtime="20220704 14:36:17.165"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.166" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:36:17.165" endtime="20220704 14:36:17.166"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.166" endtime="20220704 14:36:17.315"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.315" endtime="20220704 14:36:17.315"/>
</return>
<msg timestamp="20220704 14:36:17.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.164" endtime="20220704 14:36:17.315"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.315" endtime="20220704 14:36:17.316"/>
</return>
<msg timestamp="20220704 14:36:17.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.163" endtime="20220704 14:36:17.316"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:17.316" endtime="20220704 14:36:17.318"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.316" endtime="20220704 14:36:17.318"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:17.163" endtime="20220704 14:36:17.319"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:17.321" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:17.320" endtime="20220704 14:36:17.321"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:17.321" endtime="20220704 14:36:17.321"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.322" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:36:17.321" endtime="20220704 14:36:17.322"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.322" endtime="20220704 14:36:17.427"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.427" endtime="20220704 14:36:17.427"/>
</return>
<msg timestamp="20220704 14:36:17.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.320" endtime="20220704 14:36:17.428"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.428" endtime="20220704 14:36:17.428"/>
</return>
<msg timestamp="20220704 14:36:17.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.320" endtime="20220704 14:36:17.428"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:17.428" endtime="20220704 14:36:17.430"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.428" endtime="20220704 14:36:17.430"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:17.432" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:17.432" endtime="20220704 14:36:17.433"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:17.433" endtime="20220704 14:36:17.433"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.433" level="INFO">${url} = lists/62c2fae11447473eef0898da</msg>
<status status="PASS" starttime="20220704 14:36:17.433" endtime="20220704 14:36:17.433"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.433" endtime="20220704 14:36:17.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.499" endtime="20220704 14:36:17.499"/>
</return>
<msg timestamp="20220704 14:36:17.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.431" endtime="20220704 14:36:17.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.499" endtime="20220704 14:36:17.499"/>
</return>
<status status="PASS" starttime="20220704 14:36:17.431" endtime="20220704 14:36:17.500"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.502" level="INFO">${url} = lists/62c2fae11447473eef0898da</msg>
<status status="PASS" starttime="20220704 14:36:17.501" endtime="20220704 14:36:17.502"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.502" endtime="20220704 14:36:17.548"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.548" endtime="20220704 14:36:17.548"/>
</return>
<msg timestamp="20220704 14:36:17.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.501" endtime="20220704 14:36:17.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.549" endtime="20220704 14:36:17.549"/>
</return>
<msg timestamp="20220704 14:36:17.549" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.500" endtime="20220704 14:36:17.549"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:17.549" endtime="20220704 14:36:17.551"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.549" endtime="20220704 14:36:17.551"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:17.552" endtime="20220704 14:36:17.552"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:36:17.319" endtime="20220704 14:36:17.552"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:17.556" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:17.556" endtime="20220704 14:36:17.556"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:17.556" endtime="20220704 14:36:17.556"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.557" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:36:17.556" endtime="20220704 14:36:17.557"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.557" endtime="20220704 14:36:17.643"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.643" endtime="20220704 14:36:17.643"/>
</return>
<msg timestamp="20220704 14:36:17.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.555" endtime="20220704 14:36:17.643"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.643" endtime="20220704 14:36:17.643"/>
</return>
<msg timestamp="20220704 14:36:17.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.553" endtime="20220704 14:36:17.644"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:17.646" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:17.645" endtime="20220704 14:36:17.646"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:17.646" endtime="20220704 14:36:17.646"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.646" level="INFO">${url} = lists/62c2fae15478895d0792ddf0/closed</msg>
<status status="PASS" starttime="20220704 14:36:17.646" endtime="20220704 14:36:17.647"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.647" endtime="20220704 14:36:17.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.744" endtime="20220704 14:36:17.744"/>
</return>
<msg timestamp="20220704 14:36:17.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.645" endtime="20220704 14:36:17.745"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.745" endtime="20220704 14:36:17.745"/>
</return>
<status status="PASS" starttime="20220704 14:36:17.644" endtime="20220704 14:36:17.745"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.747" level="INFO">${url} = lists/62c2fae15478895d0792ddf0</msg>
<status status="PASS" starttime="20220704 14:36:17.747" endtime="20220704 14:36:17.747"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.747" endtime="20220704 14:36:17.783"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.783" endtime="20220704 14:36:17.783"/>
</return>
<msg timestamp="20220704 14:36:17.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.746" endtime="20220704 14:36:17.783"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.784" endtime="20220704 14:36:17.784"/>
</return>
<msg timestamp="20220704 14:36:17.784" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.745" endtime="20220704 14:36:17.784"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:36:17.784" endtime="20220704 14:36:17.785"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:36:17.553" endtime="20220704 14:36:17.785"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.788" level="INFO">${url} = boards/62c2fae18d3aa34572397714</msg>
<status status="PASS" starttime="20220704 14:36:17.787" endtime="20220704 14:36:17.788"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:18.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.788" endtime="20220704 14:36:18.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:18.107" endtime="20220704 14:36:18.107"/>
</return>
<msg timestamp="20220704 14:36:18.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.787" endtime="20220704 14:36:18.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:18.107" endtime="20220704 14:36:18.107"/>
</return>
<status status="PASS" starttime="20220704 14:36:17.787" endtime="20220704 14:36:18.107"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.786" endtime="20220704 14:36:18.107"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.786" endtime="20220704 14:36:18.108"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:36:18.108" endtime="20220704 14:36:18.109"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.785" endtime="20220704 14:36:18.109"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 14:36:16.988" endtime="20220704 14:36:18.109"/>
</suite>
<status status="PASS" starttime="20220704 14:36:07.582" endtime="20220704 14:36:18.111"/>
</suite>
<status status="PASS" starttime="20220704 14:36:07.565" endtime="20220704 14:36:18.115"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
