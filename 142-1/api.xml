<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 08:29:10.717" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 08:29:10.879" endtime="20220705 08:29:10.880"/>
</kw>
<status status="PASS" starttime="20220705 08:29:10.878" endtime="20220705 08:29:10.880"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:10.882" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:10.882" endtime="20220705 08:29:10.882"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:10.882" endtime="20220705 08:29:10.883"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:10.884" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:29:10.883" endtime="20220705 08:29:10.884"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:11.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:10.884" endtime="20220705 08:29:11.153"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:11.153" endtime="20220705 08:29:11.153"/>
</return>
<msg timestamp="20220705 08:29:11.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:10.881" endtime="20220705 08:29:11.153"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:11.153" endtime="20220705 08:29:11.153"/>
</return>
<msg timestamp="20220705 08:29:11.154" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:10.881" endtime="20220705 08:29:11.154"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:11.155" endtime="20220705 08:29:11.160"/>
</kw>
<status status="PASS" starttime="20220705 08:29:11.154" endtime="20220705 08:29:11.161"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:11.164" level="INFO">${url} = boards/62c3f657e395121d14ddce04</msg>
<status status="PASS" starttime="20220705 08:29:11.163" endtime="20220705 08:29:11.164"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:11.597" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:11.164" endtime="20220705 08:29:11.597"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:11.597" endtime="20220705 08:29:11.597"/>
</return>
<msg timestamp="20220705 08:29:11.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:11.163" endtime="20220705 08:29:11.598"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:11.598" endtime="20220705 08:29:11.598"/>
</return>
<status status="PASS" starttime="20220705 08:29:11.161" endtime="20220705 08:29:11.598"/>
</kw>
<status status="PASS" starttime="20220705 08:29:11.161" endtime="20220705 08:29:11.598"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:29:10.880" endtime="20220705 08:29:11.598"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:11.601" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:11.601" endtime="20220705 08:29:11.602"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:11.602" endtime="20220705 08:29:11.602"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:11.603" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:29:11.602" endtime="20220705 08:29:11.603"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:11.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:11.603" endtime="20220705 08:29:11.828"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:11.828" endtime="20220705 08:29:11.828"/>
</return>
<msg timestamp="20220705 08:29:11.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:11.601" endtime="20220705 08:29:11.828"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:11.828" endtime="20220705 08:29:11.828"/>
</return>
<msg timestamp="20220705 08:29:11.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:11.600" endtime="20220705 08:29:11.829"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:11.829" endtime="20220705 08:29:11.834"/>
</kw>
<status status="PASS" starttime="20220705 08:29:11.829" endtime="20220705 08:29:11.834"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:11.838" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:11.838" endtime="20220705 08:29:11.838"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:11.838" endtime="20220705 08:29:11.839"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:11.839" level="INFO">${url} = boards/62c3f657480260809f10a982</msg>
<status status="PASS" starttime="20220705 08:29:11.839" endtime="20220705 08:29:11.839"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:11.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:11.839" endtime="20220705 08:29:11.976"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:11.976" endtime="20220705 08:29:11.976"/>
</return>
<msg timestamp="20220705 08:29:11.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:11.837" endtime="20220705 08:29:11.977"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:11.977" endtime="20220705 08:29:11.977"/>
</return>
<status status="PASS" starttime="20220705 08:29:11.834" endtime="20220705 08:29:11.977"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:11.979" level="INFO">${url} = boards/62c3f657480260809f10a982</msg>
<status status="PASS" starttime="20220705 08:29:11.979" endtime="20220705 08:29:11.979"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:12.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:11.979" endtime="20220705 08:29:12.089"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:12.089" endtime="20220705 08:29:12.089"/>
</return>
<msg timestamp="20220705 08:29:12.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:11.978" endtime="20220705 08:29:12.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:12.090" endtime="20220705 08:29:12.090"/>
</return>
<msg timestamp="20220705 08:29:12.090" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:11.977" endtime="20220705 08:29:12.090"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:12.091" endtime="20220705 08:29:12.095"/>
</kw>
<status status="PASS" starttime="20220705 08:29:12.090" endtime="20220705 08:29:12.096"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:12.096" endtime="20220705 08:29:12.096"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:12.099" level="INFO">${url} = boards/62c3f657480260809f10a982</msg>
<status status="PASS" starttime="20220705 08:29:12.099" endtime="20220705 08:29:12.099"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:12.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:12.099" endtime="20220705 08:29:12.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:12.541" endtime="20220705 08:29:12.541"/>
</return>
<msg timestamp="20220705 08:29:12.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:12.098" endtime="20220705 08:29:12.542"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:12.542" endtime="20220705 08:29:12.542"/>
</return>
<status status="PASS" starttime="20220705 08:29:12.097" endtime="20220705 08:29:12.542"/>
</kw>
<status status="PASS" starttime="20220705 08:29:12.097" endtime="20220705 08:29:12.542"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:29:11.599" endtime="20220705 08:29:12.542"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:12.545" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:12.545" endtime="20220705 08:29:12.545"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:12.545" endtime="20220705 08:29:12.545"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:12.546" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:29:12.546" endtime="20220705 08:29:12.546"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:12.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:12.547" endtime="20220705 08:29:12.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:12.774" endtime="20220705 08:29:12.774"/>
</return>
<msg timestamp="20220705 08:29:12.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:12.544" endtime="20220705 08:29:12.775"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:12.775" endtime="20220705 08:29:12.775"/>
</return>
<msg timestamp="20220705 08:29:12.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:12.544" endtime="20220705 08:29:12.775"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:12.777" level="INFO">${url} = boards/62c3f6589a86eb3e94f97236</msg>
<status status="PASS" starttime="20220705 08:29:12.777" endtime="20220705 08:29:12.777"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:13.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:12.777" endtime="20220705 08:29:13.220"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:13.220" endtime="20220705 08:29:13.220"/>
</return>
<msg timestamp="20220705 08:29:13.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:12.776" endtime="20220705 08:29:13.220"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:13.220" endtime="20220705 08:29:13.220"/>
</return>
<status status="PASS" starttime="20220705 08:29:12.775" endtime="20220705 08:29:13.221"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:13.223" level="INFO">${url} = boards/62c3f6589a86eb3e94f97236</msg>
<status status="PASS" starttime="20220705 08:29:13.223" endtime="20220705 08:29:13.223"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:13.321" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:29:13.224" endtime="20220705 08:29:13.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:13.321" endtime="20220705 08:29:13.321"/>
</return>
<msg timestamp="20220705 08:29:13.321" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:29:13.222" endtime="20220705 08:29:13.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:13.321" endtime="20220705 08:29:13.321"/>
</return>
<status status="PASS" starttime="20220705 08:29:13.221" endtime="20220705 08:29:13.322"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:29:12.543" endtime="20220705 08:29:13.322"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:13.324" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:13.324" endtime="20220705 08:29:13.324"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:13.324" endtime="20220705 08:29:13.324"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:13.325" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:29:13.324" endtime="20220705 08:29:13.325"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:17.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:13.326" endtime="20220705 08:29:17.271"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:17.271" endtime="20220705 08:29:17.271"/>
</return>
<msg timestamp="20220705 08:29:17.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:13.323" endtime="20220705 08:29:17.272"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:17.272" endtime="20220705 08:29:17.272"/>
</return>
<msg timestamp="20220705 08:29:17.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:13.323" endtime="20220705 08:29:17.272"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:17.273" endtime="20220705 08:29:17.277"/>
</kw>
<status status="PASS" starttime="20220705 08:29:17.272" endtime="20220705 08:29:17.277"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:17.279" level="INFO">${url} = boards/62c3f65b3e825263775c1b1d</msg>
<status status="PASS" starttime="20220705 08:29:17.278" endtime="20220705 08:29:17.279"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:17.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:17.279" endtime="20220705 08:29:17.382"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:17.382" endtime="20220705 08:29:17.382"/>
</return>
<msg timestamp="20220705 08:29:17.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:17.278" endtime="20220705 08:29:17.383"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:17.383" endtime="20220705 08:29:17.383"/>
</return>
<msg timestamp="20220705 08:29:17.383" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:17.277" endtime="20220705 08:29:17.383"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:17.384" endtime="20220705 08:29:17.388"/>
</kw>
<status status="PASS" starttime="20220705 08:29:17.383" endtime="20220705 08:29:17.388"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:17.389" endtime="20220705 08:29:17.389"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:17.392" level="INFO">${url} = boards/62c3f65b3e825263775c1b1d</msg>
<status status="PASS" starttime="20220705 08:29:17.391" endtime="20220705 08:29:17.392"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:17.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:17.392" endtime="20220705 08:29:17.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:17.878" endtime="20220705 08:29:17.879"/>
</return>
<msg timestamp="20220705 08:29:17.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:17.391" endtime="20220705 08:29:17.879"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:17.879" endtime="20220705 08:29:17.879"/>
</return>
<status status="PASS" starttime="20220705 08:29:17.390" endtime="20220705 08:29:17.879"/>
</kw>
<status status="PASS" starttime="20220705 08:29:17.390" endtime="20220705 08:29:17.879"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:29:13.322" endtime="20220705 08:29:17.879"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:17.883" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:17.882" endtime="20220705 08:29:17.883"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:17.883" endtime="20220705 08:29:17.883"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:17.884" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:29:17.883" endtime="20220705 08:29:17.884"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:18.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:17.884" endtime="20220705 08:29:18.094"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:18.094" endtime="20220705 08:29:18.095"/>
</return>
<msg timestamp="20220705 08:29:18.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:17.882" endtime="20220705 08:29:18.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:18.095" endtime="20220705 08:29:18.095"/>
</return>
<msg timestamp="20220705 08:29:18.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:17.881" endtime="20220705 08:29:18.095"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:18.096" endtime="20220705 08:29:18.101"/>
</kw>
<status status="PASS" starttime="20220705 08:29:18.095" endtime="20220705 08:29:18.101"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:18.103" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:18.103" endtime="20220705 08:29:18.103"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:18.103" endtime="20220705 08:29:18.103"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:18.104" level="INFO">${url} = boards/62c3f65daa9fd4105eb8df17</msg>
<status status="PASS" starttime="20220705 08:29:18.104" endtime="20220705 08:29:18.104"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:18.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:18.104" endtime="20220705 08:29:18.252"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:18.253" endtime="20220705 08:29:18.253"/>
</return>
<msg timestamp="20220705 08:29:18.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:18.102" endtime="20220705 08:29:18.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:18.253" endtime="20220705 08:29:18.253"/>
</return>
<status status="PASS" starttime="20220705 08:29:18.101" endtime="20220705 08:29:18.253"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:18.256" level="INFO">${url} = boards/62c3f65daa9fd4105eb8df17</msg>
<status status="PASS" starttime="20220705 08:29:18.255" endtime="20220705 08:29:18.256"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:18.364" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:18.256" endtime="20220705 08:29:18.364"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:18.364" endtime="20220705 08:29:18.364"/>
</return>
<msg timestamp="20220705 08:29:18.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:18.255" endtime="20220705 08:29:18.365"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:18.365" endtime="20220705 08:29:18.365"/>
</return>
<msg timestamp="20220705 08:29:18.365" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:18.253" endtime="20220705 08:29:18.365"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:18.365" endtime="20220705 08:29:18.366"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:18.368" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:18.368" endtime="20220705 08:29:18.368"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:18.368" endtime="20220705 08:29:18.369"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:18.369" level="INFO">${url} = boards/62c3f65daa9fd4105eb8df17</msg>
<status status="PASS" starttime="20220705 08:29:18.369" endtime="20220705 08:29:18.369"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:18.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:18.370" endtime="20220705 08:29:18.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:18.507" endtime="20220705 08:29:18.507"/>
</return>
<msg timestamp="20220705 08:29:18.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:18.367" endtime="20220705 08:29:18.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:18.507" endtime="20220705 08:29:18.507"/>
</return>
<status status="PASS" starttime="20220705 08:29:18.366" endtime="20220705 08:29:18.508"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:18.510" level="INFO">${url} = boards/62c3f65daa9fd4105eb8df17</msg>
<status status="PASS" starttime="20220705 08:29:18.510" endtime="20220705 08:29:18.510"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:18.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:18.510" endtime="20220705 08:29:18.607"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:18.607" endtime="20220705 08:29:18.607"/>
</return>
<msg timestamp="20220705 08:29:18.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:18.509" endtime="20220705 08:29:18.607"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:18.607" endtime="20220705 08:29:18.607"/>
</return>
<msg timestamp="20220705 08:29:18.607" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:18.508" endtime="20220705 08:29:18.607"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:18.607" endtime="20220705 08:29:18.608"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:18.611" level="INFO">${url} = boards/62c3f65daa9fd4105eb8df17</msg>
<status status="PASS" starttime="20220705 08:29:18.610" endtime="20220705 08:29:18.611"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:19.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:18.611" endtime="20220705 08:29:19.023"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:19.023" endtime="20220705 08:29:19.023"/>
</return>
<msg timestamp="20220705 08:29:19.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:18.610" endtime="20220705 08:29:19.023"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:19.023" endtime="20220705 08:29:19.023"/>
</return>
<status status="PASS" starttime="20220705 08:29:18.609" endtime="20220705 08:29:19.024"/>
</kw>
<status status="PASS" starttime="20220705 08:29:18.608" endtime="20220705 08:29:19.024"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:29:17.880" endtime="20220705 08:29:19.024"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 08:29:19.025" endtime="20220705 08:29:19.026"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 08:29:10.746" endtime="20220705 08:29:19.027"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 08:29:19.041" endtime="20220705 08:29:19.042"/>
</kw>
<status status="PASS" starttime="20220705 08:29:19.041" endtime="20220705 08:29:19.042"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:19.044" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:19.044" endtime="20220705 08:29:19.044"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:19.044" endtime="20220705 08:29:19.044"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:19.045" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:29:19.044" endtime="20220705 08:29:19.045"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:19.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.045" endtime="20220705 08:29:19.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:19.299" endtime="20220705 08:29:19.299"/>
</return>
<msg timestamp="20220705 08:29:19.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.043" endtime="20220705 08:29:19.299"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:19.299" endtime="20220705 08:29:19.299"/>
</return>
<msg timestamp="20220705 08:29:19.299" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.043" endtime="20220705 08:29:19.299"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:29:19.300" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3f65fbc208b425e07c925</msg>
<status status="PASS" starttime="20220705 08:29:19.299" endtime="20220705 08:29:19.300"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:19.302" level="INFO">${url} = boards/62c3f65fbc208b425e07c925/lists/</msg>
<status status="PASS" starttime="20220705 08:29:19.301" endtime="20220705 08:29:19.302"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:19.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.302" endtime="20220705 08:29:19.403"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:19.403" endtime="20220705 08:29:19.403"/>
</return>
<msg timestamp="20220705 08:29:19.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.301" endtime="20220705 08:29:19.403"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:19.403" endtime="20220705 08:29:19.403"/>
</return>
<msg timestamp="20220705 08:29:19.404" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.300" endtime="20220705 08:29:19.404"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:29:19.405" level="INFO">${TEST_SUITE_LIST_ID} = 62c3f65fbc208b425e07c92c</msg>
<status status="PASS" starttime="20220705 08:29:19.404" endtime="20220705 08:29:19.405"/>
</kw>
<status status="PASS" starttime="20220705 08:29:19.043" endtime="20220705 08:29:19.405"/>
</kw>
<status status="PASS" starttime="20220705 08:29:19.041" endtime="20220705 08:29:19.405"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:19.407" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:19.407" endtime="20220705 08:29:19.407"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:19.407" endtime="20220705 08:29:19.408"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:19.409" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 08:29:19.408" endtime="20220705 08:29:19.409"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:19.641" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.409" endtime="20220705 08:29:19.641"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:19.641" endtime="20220705 08:29:19.641"/>
</return>
<msg timestamp="20220705 08:29:19.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.406" endtime="20220705 08:29:19.642"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:19.642" endtime="20220705 08:29:19.642"/>
</return>
<msg timestamp="20220705 08:29:19.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.406" endtime="20220705 08:29:19.642"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:19.643" endtime="20220705 08:29:19.649"/>
</kw>
<status status="PASS" starttime="20220705 08:29:19.642" endtime="20220705 08:29:19.649"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:19.649" endtime="20220705 08:29:19.649"/>
</return>
<msg timestamp="20220705 08:29:19.650" level="INFO">${CARD_ID} = 62c3f65f7b9fca55f60dc8a9</msg>
<status status="PASS" starttime="20220705 08:29:19.649" endtime="20220705 08:29:19.650"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:19.652" level="INFO">${url} = cards/62c3f65f7b9fca55f60dc8a9</msg>
<status status="PASS" starttime="20220705 08:29:19.651" endtime="20220705 08:29:19.652"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:19.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.652" endtime="20220705 08:29:19.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:19.763" endtime="20220705 08:29:19.763"/>
</return>
<msg timestamp="20220705 08:29:19.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.651" endtime="20220705 08:29:19.764"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:19.764" endtime="20220705 08:29:19.764"/>
</return>
<msg timestamp="20220705 08:29:19.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.650" endtime="20220705 08:29:19.764"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:19.765" endtime="20220705 08:29:19.765"/>
</return>
<msg timestamp="20220705 08:29:19.765" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 08:29:19.764" endtime="20220705 08:29:19.765"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:19.766" endtime="20220705 08:29:19.766"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:19.768" level="INFO">${url} = cards/62c3f65f7b9fca55f60dc8a9</msg>
<status status="PASS" starttime="20220705 08:29:19.768" endtime="20220705 08:29:19.768"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:19.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.768" endtime="20220705 08:29:19.983"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:19.983" endtime="20220705 08:29:19.983"/>
</return>
<msg timestamp="20220705 08:29:19.984" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.767" endtime="20220705 08:29:19.984"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:19.984" endtime="20220705 08:29:19.984"/>
</return>
<status status="PASS" starttime="20220705 08:29:19.767" endtime="20220705 08:29:19.984"/>
</kw>
<status status="PASS" starttime="20220705 08:29:19.766" endtime="20220705 08:29:19.984"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:29:19.405" endtime="20220705 08:29:19.984"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:19.987" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:19.986" endtime="20220705 08:29:19.987"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:19.987" endtime="20220705 08:29:19.987"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:19.988" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 08:29:19.987" endtime="20220705 08:29:19.988"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:20.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.988" endtime="20220705 08:29:20.181"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:20.181" endtime="20220705 08:29:20.182"/>
</return>
<msg timestamp="20220705 08:29:20.182" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.986" endtime="20220705 08:29:20.182"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:20.182" endtime="20220705 08:29:20.182"/>
</return>
<msg timestamp="20220705 08:29:20.182" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:19.985" endtime="20220705 08:29:20.182"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:20.183" endtime="20220705 08:29:20.183"/>
</return>
<msg timestamp="20220705 08:29:20.184" level="INFO">${CARD_ID} = 62c3f660c74c582a9e3f788c</msg>
<status status="PASS" starttime="20220705 08:29:20.183" endtime="20220705 08:29:20.184"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:20.187" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:20.186" endtime="20220705 08:29:20.187"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:20.187" endtime="20220705 08:29:20.187"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:20.187" level="INFO">${url} = cards/62c3f660c74c582a9e3f788c</msg>
<status status="PASS" starttime="20220705 08:29:20.187" endtime="20220705 08:29:20.187"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:20.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.188" endtime="20220705 08:29:20.358"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:20.358" endtime="20220705 08:29:20.358"/>
</return>
<msg timestamp="20220705 08:29:20.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.186" endtime="20220705 08:29:20.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:20.359" endtime="20220705 08:29:20.359"/>
</return>
<msg timestamp="20220705 08:29:20.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.185" endtime="20220705 08:29:20.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:20.359" endtime="20220705 08:29:20.359"/>
</return>
<status status="PASS" starttime="20220705 08:29:20.184" endtime="20220705 08:29:20.359"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:20.361" level="INFO">${url} = cards/62c3f660c74c582a9e3f788c</msg>
<status status="PASS" starttime="20220705 08:29:20.361" endtime="20220705 08:29:20.361"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:20.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.361" endtime="20220705 08:29:20.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:20.473" endtime="20220705 08:29:20.473"/>
</return>
<msg timestamp="20220705 08:29:20.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.360" endtime="20220705 08:29:20.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:20.473" endtime="20220705 08:29:20.473"/>
</return>
<msg timestamp="20220705 08:29:20.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.359" endtime="20220705 08:29:20.473"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:20.474" endtime="20220705 08:29:20.474"/>
</return>
<msg timestamp="20220705 08:29:20.475" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 08:29:20.474" endtime="20220705 08:29:20.475"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 08:29:20.475" endtime="20220705 08:29:20.475"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:20.478" level="INFO">${url} = cards/62c3f660c74c582a9e3f788c</msg>
<status status="PASS" starttime="20220705 08:29:20.477" endtime="20220705 08:29:20.478"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:20.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.478" endtime="20220705 08:29:20.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:20.657" endtime="20220705 08:29:20.657"/>
</return>
<msg timestamp="20220705 08:29:20.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.477" endtime="20220705 08:29:20.658"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:20.658" endtime="20220705 08:29:20.658"/>
</return>
<status status="PASS" starttime="20220705 08:29:20.476" endtime="20220705 08:29:20.658"/>
</kw>
<status status="PASS" starttime="20220705 08:29:20.476" endtime="20220705 08:29:20.658"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 08:29:19.984" endtime="20220705 08:29:20.658"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:20.662" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:20.661" endtime="20220705 08:29:20.662"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:20.662" endtime="20220705 08:29:20.662"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:20.663" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 08:29:20.662" endtime="20220705 08:29:20.663"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:20.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.663" endtime="20220705 08:29:20.875"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:20.875" endtime="20220705 08:29:20.875"/>
</return>
<msg timestamp="20220705 08:29:20.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.660" endtime="20220705 08:29:20.875"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:20.875" endtime="20220705 08:29:20.875"/>
</return>
<msg timestamp="20220705 08:29:20.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.660" endtime="20220705 08:29:20.876"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:20.876" endtime="20220705 08:29:20.876"/>
</return>
<msg timestamp="20220705 08:29:20.877" level="INFO">${CARD_ID} = 62c3f660aaacf20f17cfa323</msg>
<status status="PASS" starttime="20220705 08:29:20.876" endtime="20220705 08:29:20.877"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:20.879" level="INFO">${url} = cards/62c3f660aaacf20f17cfa323</msg>
<status status="PASS" starttime="20220705 08:29:20.879" endtime="20220705 08:29:20.879"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:21.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.879" endtime="20220705 08:29:21.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:21.095" endtime="20220705 08:29:21.095"/>
</return>
<msg timestamp="20220705 08:29:21.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.878" endtime="20220705 08:29:21.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:21.095" endtime="20220705 08:29:21.095"/>
</return>
<msg timestamp="20220705 08:29:21.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:20.878" endtime="20220705 08:29:21.095"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:21.096" endtime="20220705 08:29:21.098"/>
</kw>
<status status="PASS" starttime="20220705 08:29:21.096" endtime="20220705 08:29:21.098"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:21.100" level="INFO">${url} = cards/62c3f660aaacf20f17cfa323</msg>
<status status="PASS" starttime="20220705 08:29:21.100" endtime="20220705 08:29:21.100"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:21.197" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:29:21.100" endtime="20220705 08:29:21.197"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:21.197" endtime="20220705 08:29:21.198"/>
</return>
<msg timestamp="20220705 08:29:21.198" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:29:21.099" endtime="20220705 08:29:21.198"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:21.198" endtime="20220705 08:29:21.198"/>
</return>
<status status="PASS" starttime="20220705 08:29:21.099" endtime="20220705 08:29:21.198"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:29:20.659" endtime="20220705 08:29:21.198"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:21.200" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:21.200" endtime="20220705 08:29:21.200"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:21.201" endtime="20220705 08:29:21.201"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:21.202" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 08:29:21.201" endtime="20220705 08:29:21.202"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:21.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:21.202" endtime="20220705 08:29:21.405"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:21.405" endtime="20220705 08:29:21.405"/>
</return>
<msg timestamp="20220705 08:29:21.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:21.200" endtime="20220705 08:29:21.406"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:21.406" endtime="20220705 08:29:21.406"/>
</return>
<msg timestamp="20220705 08:29:21.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:21.199" endtime="20220705 08:29:21.406"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:21.407" endtime="20220705 08:29:21.407"/>
</return>
<msg timestamp="20220705 08:29:21.408" level="INFO">${CARD_ID} = 62c3f6615068660768de5452</msg>
<status status="PASS" starttime="20220705 08:29:21.406" endtime="20220705 08:29:21.408"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:21.409" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:21.409" endtime="20220705 08:29:21.409"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:21.409" endtime="20220705 08:29:21.410"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:21.410" level="INFO">${url} = cards/62c3f6615068660768de5452</msg>
<status status="PASS" starttime="20220705 08:29:21.410" endtime="20220705 08:29:21.410"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:21.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:21.410" endtime="20220705 08:29:21.599"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:21.599" endtime="20220705 08:29:21.599"/>
</return>
<msg timestamp="20220705 08:29:21.600" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:21.408" endtime="20220705 08:29:21.600"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:21.600" endtime="20220705 08:29:21.600"/>
</return>
<msg timestamp="20220705 08:29:21.600" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:21.408" endtime="20220705 08:29:21.600"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:21.601" endtime="20220705 08:29:21.607"/>
</kw>
<status status="PASS" starttime="20220705 08:29:21.600" endtime="20220705 08:29:21.608"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:21.610" level="INFO">${url} = cards/62c3f6615068660768de5452</msg>
<status status="PASS" starttime="20220705 08:29:21.609" endtime="20220705 08:29:21.610"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:21.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:21.610" endtime="20220705 08:29:21.727"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:21.727" endtime="20220705 08:29:21.727"/>
</return>
<msg timestamp="20220705 08:29:21.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:21.609" endtime="20220705 08:29:21.727"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:21.727" endtime="20220705 08:29:21.727"/>
</return>
<msg timestamp="20220705 08:29:21.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:21.608" endtime="20220705 08:29:21.728"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:21.728" endtime="20220705 08:29:21.728"/>
</return>
<msg timestamp="20220705 08:29:21.729" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 08:29:21.728" endtime="20220705 08:29:21.729"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:21.730" endtime="20220705 08:29:21.730"/>
</return>
<msg timestamp="20220705 08:29:21.731" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 08:29:21.729" endtime="20220705 08:29:21.731"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:21.731" endtime="20220705 08:29:21.731"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:21.731" endtime="20220705 08:29:21.732"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:21.733" level="INFO">${url} = cards/62c3f6615068660768de5452</msg>
<status status="PASS" starttime="20220705 08:29:21.733" endtime="20220705 08:29:21.734"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:21.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:21.734" endtime="20220705 08:29:21.959"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:21.959" endtime="20220705 08:29:21.959"/>
</return>
<msg timestamp="20220705 08:29:21.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:21.733" endtime="20220705 08:29:21.959"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:21.959" endtime="20220705 08:29:21.959"/>
</return>
<status status="PASS" starttime="20220705 08:29:21.732" endtime="20220705 08:29:21.960"/>
</kw>
<status status="PASS" starttime="20220705 08:29:21.732" endtime="20220705 08:29:21.960"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 08:29:21.199" endtime="20220705 08:29:21.960"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:21.964" level="INFO">${url} = boards/62c3f65fbc208b425e07c925</msg>
<status status="PASS" starttime="20220705 08:29:21.963" endtime="20220705 08:29:21.964"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:22.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:21.964" endtime="20220705 08:29:22.366"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:22.366" endtime="20220705 08:29:22.366"/>
</return>
<msg timestamp="20220705 08:29:22.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:21.963" endtime="20220705 08:29:22.366"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:22.367" endtime="20220705 08:29:22.367"/>
</return>
<status status="PASS" starttime="20220705 08:29:21.962" endtime="20220705 08:29:22.367"/>
</kw>
<status status="PASS" starttime="20220705 08:29:21.962" endtime="20220705 08:29:22.367"/>
</kw>
<status status="PASS" starttime="20220705 08:29:21.961" endtime="20220705 08:29:22.367"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 08:29:22.367" endtime="20220705 08:29:22.369"/>
</kw>
<status status="PASS" starttime="20220705 08:29:21.961" endtime="20220705 08:29:22.369"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 08:29:19.029" endtime="20220705 08:29:22.369"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 08:29:22.381" endtime="20220705 08:29:22.382"/>
</kw>
<status status="PASS" starttime="20220705 08:29:22.381" endtime="20220705 08:29:22.382"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:22.383" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:22.383" endtime="20220705 08:29:22.383"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:22.383" endtime="20220705 08:29:22.384"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:22.385" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:29:22.384" endtime="20220705 08:29:22.385"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:22.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:22.385" endtime="20220705 08:29:22.606"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:22.606" endtime="20220705 08:29:22.607"/>
</return>
<msg timestamp="20220705 08:29:22.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:22.383" endtime="20220705 08:29:22.607"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:22.607" endtime="20220705 08:29:22.607"/>
</return>
<msg timestamp="20220705 08:29:22.607" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:22.382" endtime="20220705 08:29:22.607"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:29:22.608" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3f6623ace3714e2365204</msg>
<status status="PASS" starttime="20220705 08:29:22.607" endtime="20220705 08:29:22.608"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:22.610" level="INFO">${url} = boards/62c3f6623ace3714e2365204/lists/</msg>
<status status="PASS" starttime="20220705 08:29:22.609" endtime="20220705 08:29:22.610"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:22.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:22.610" endtime="20220705 08:29:22.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:22.709" endtime="20220705 08:29:22.709"/>
</return>
<msg timestamp="20220705 08:29:22.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:22.609" endtime="20220705 08:29:22.710"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:22.710" endtime="20220705 08:29:22.710"/>
</return>
<msg timestamp="20220705 08:29:22.710" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:22.608" endtime="20220705 08:29:22.710"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:29:22.711" level="INFO">${TEST_SUITE_LIST_ID} = 62c3f6623ace3714e236520b</msg>
<status status="PASS" starttime="20220705 08:29:22.710" endtime="20220705 08:29:22.711"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:22.713" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:22.713" endtime="20220705 08:29:22.713"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:22.713" endtime="20220705 08:29:22.714"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:22.715" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 08:29:22.714" endtime="20220705 08:29:22.715"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:22.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:22.715" endtime="20220705 08:29:22.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:22.946" endtime="20220705 08:29:22.946"/>
</return>
<msg timestamp="20220705 08:29:22.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:22.712" endtime="20220705 08:29:22.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:22.946" endtime="20220705 08:29:22.946"/>
</return>
<msg timestamp="20220705 08:29:22.947" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:22.711" endtime="20220705 08:29:22.947"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:29:22.948" level="INFO">${TEST_SUITE_CARD_ID} = 62c3f6622f26fd3bc1906063</msg>
<status status="PASS" starttime="20220705 08:29:22.947" endtime="20220705 08:29:22.948"/>
</kw>
<status status="PASS" starttime="20220705 08:29:22.382" endtime="20220705 08:29:22.948"/>
</kw>
<status status="PASS" starttime="20220705 08:29:22.381" endtime="20220705 08:29:22.948"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:22.950" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:22.950" endtime="20220705 08:29:22.950"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:22.950" endtime="20220705 08:29:22.951"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:22.951" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 08:29:22.951" endtime="20220705 08:29:22.951"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:23.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:22.951" endtime="20220705 08:29:23.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:23.121" endtime="20220705 08:29:23.121"/>
</return>
<msg timestamp="20220705 08:29:23.122" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:22.949" endtime="20220705 08:29:23.122"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:23.122" endtime="20220705 08:29:23.122"/>
</return>
<msg timestamp="20220705 08:29:23.122" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:22.949" endtime="20220705 08:29:23.122"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:23.123" endtime="20220705 08:29:23.123"/>
</return>
<msg timestamp="20220705 08:29:23.124" level="INFO">${checklist_id} = 62c3f6637b69f03147ece008</msg>
<status status="PASS" starttime="20220705 08:29:23.122" endtime="20220705 08:29:23.124"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:23.125" level="INFO">${url} = checklists/62c3f6637b69f03147ece008</msg>
<status status="PASS" starttime="20220705 08:29:23.125" endtime="20220705 08:29:23.125"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:23.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.125" endtime="20220705 08:29:23.236"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:23.236" endtime="20220705 08:29:23.236"/>
</return>
<msg timestamp="20220705 08:29:23.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.124" endtime="20220705 08:29:23.236"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:23.236" endtime="20220705 08:29:23.236"/>
</return>
<msg timestamp="20220705 08:29:23.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.124" endtime="20220705 08:29:23.237"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:23.237" endtime="20220705 08:29:23.237"/>
</return>
<msg timestamp="20220705 08:29:23.238" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 08:29:23.237" endtime="20220705 08:29:23.238"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:23.238" endtime="20220705 08:29:23.239"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:23.240" level="INFO">${url} = checklists/62c3f6637b69f03147ece008</msg>
<status status="PASS" starttime="20220705 08:29:23.240" endtime="20220705 08:29:23.240"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:23.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.240" endtime="20220705 08:29:23.399"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:23.400" endtime="20220705 08:29:23.400"/>
</return>
<msg timestamp="20220705 08:29:23.400" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.239" endtime="20220705 08:29:23.400"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:23.400" endtime="20220705 08:29:23.400"/>
</return>
<status status="PASS" starttime="20220705 08:29:23.239" endtime="20220705 08:29:23.400"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:29:22.948" endtime="20220705 08:29:23.400"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:23.404" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:23.403" endtime="20220705 08:29:23.404"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:23.404" endtime="20220705 08:29:23.404"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:23.406" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 08:29:23.404" endtime="20220705 08:29:23.406"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:23.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.406" endtime="20220705 08:29:23.578"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:23.579" endtime="20220705 08:29:23.579"/>
</return>
<msg timestamp="20220705 08:29:23.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.402" endtime="20220705 08:29:23.579"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:23.579" endtime="20220705 08:29:23.579"/>
</return>
<msg timestamp="20220705 08:29:23.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.402" endtime="20220705 08:29:23.579"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:23.580" endtime="20220705 08:29:23.580"/>
</return>
<msg timestamp="20220705 08:29:23.581" level="INFO">${checklist_id} = 62c3f663a19ea25b9d452ef0</msg>
<status status="PASS" starttime="20220705 08:29:23.579" endtime="20220705 08:29:23.581"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:23.582" level="INFO">${url} = checklists/62c3f663a19ea25b9d452ef0</msg>
<status status="PASS" starttime="20220705 08:29:23.582" endtime="20220705 08:29:23.582"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:23.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.583" endtime="20220705 08:29:23.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:23.743" endtime="20220705 08:29:23.743"/>
</return>
<msg timestamp="20220705 08:29:23.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.581" endtime="20220705 08:29:23.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:23.744" endtime="20220705 08:29:23.744"/>
</return>
<msg timestamp="20220705 08:29:23.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.581" endtime="20220705 08:29:23.744"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:23.744" endtime="20220705 08:29:23.747"/>
</kw>
<status status="PASS" starttime="20220705 08:29:23.744" endtime="20220705 08:29:23.747"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:23.748" level="INFO">${url} = checklists/62c3f663a19ea25b9d452ef0</msg>
<status status="PASS" starttime="20220705 08:29:23.748" endtime="20220705 08:29:23.748"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:23.839" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:29:23.749" endtime="20220705 08:29:23.839"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:23.839" endtime="20220705 08:29:23.839"/>
</return>
<msg timestamp="20220705 08:29:23.840" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:29:23.747" endtime="20220705 08:29:23.840"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:23.840" endtime="20220705 08:29:23.840"/>
</return>
<status status="PASS" starttime="20220705 08:29:23.747" endtime="20220705 08:29:23.840"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:29:23.401" endtime="20220705 08:29:23.840"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:23.846" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:23.844" endtime="20220705 08:29:23.846"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:23.846" endtime="20220705 08:29:23.846"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:23.848" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 08:29:23.847" endtime="20220705 08:29:23.848"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:24.019" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.848" endtime="20220705 08:29:24.019"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:24.019" endtime="20220705 08:29:24.019"/>
</return>
<msg timestamp="20220705 08:29:24.019" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.843" endtime="20220705 08:29:24.019"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:24.019" endtime="20220705 08:29:24.019"/>
</return>
<msg timestamp="20220705 08:29:24.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:23.842" endtime="20220705 08:29:24.020"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:24.020" endtime="20220705 08:29:24.020"/>
</return>
<msg timestamp="20220705 08:29:24.021" level="INFO">${checklist_id} = 62c3f663c5d8642c6a88f3df</msg>
<status status="PASS" starttime="20220705 08:29:24.020" endtime="20220705 08:29:24.021"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:24.023" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:24.022" endtime="20220705 08:29:24.023"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:24.023" endtime="20220705 08:29:24.023"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:24.024" level="INFO">${url} = checklists/62c3f663c5d8642c6a88f3df</msg>
<status status="PASS" starttime="20220705 08:29:24.023" endtime="20220705 08:29:24.024"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:24.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:24.024" endtime="20220705 08:29:24.165"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:24.165" endtime="20220705 08:29:24.165"/>
</return>
<msg timestamp="20220705 08:29:24.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:24.022" endtime="20220705 08:29:24.166"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:24.166" endtime="20220705 08:29:24.166"/>
</return>
<msg timestamp="20220705 08:29:24.166" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:24.021" endtime="20220705 08:29:24.166"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:24.167" level="INFO">${url} = checklists/62c3f663c5d8642c6a88f3df</msg>
<status status="PASS" starttime="20220705 08:29:24.167" endtime="20220705 08:29:24.167"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:24.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:24.168" endtime="20220705 08:29:24.279"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:24.279" endtime="20220705 08:29:24.279"/>
</return>
<msg timestamp="20220705 08:29:24.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:24.166" endtime="20220705 08:29:24.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:24.280" endtime="20220705 08:29:24.280"/>
</return>
<msg timestamp="20220705 08:29:24.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:24.166" endtime="20220705 08:29:24.280"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:24.281" endtime="20220705 08:29:24.281"/>
</return>
<msg timestamp="20220705 08:29:24.282" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 08:29:24.280" endtime="20220705 08:29:24.282"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:24.282" endtime="20220705 08:29:24.282"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:24.295" level="INFO">${url} = checklists/62c3f663c5d8642c6a88f3df</msg>
<status status="PASS" starttime="20220705 08:29:24.294" endtime="20220705 08:29:24.295"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:24.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:24.295" endtime="20220705 08:29:24.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:24.455" endtime="20220705 08:29:24.455"/>
</return>
<msg timestamp="20220705 08:29:24.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:24.294" endtime="20220705 08:29:24.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:24.456" endtime="20220705 08:29:24.456"/>
</return>
<status status="PASS" starttime="20220705 08:29:24.283" endtime="20220705 08:29:24.456"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 08:29:23.841" endtime="20220705 08:29:24.456"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:24.459" level="INFO">${url} = boards/62c3f6623ace3714e2365204</msg>
<status status="PASS" starttime="20220705 08:29:24.458" endtime="20220705 08:29:24.459"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:24.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:24.459" endtime="20220705 08:29:24.905"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:24.905" endtime="20220705 08:29:24.905"/>
</return>
<msg timestamp="20220705 08:29:24.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:24.458" endtime="20220705 08:29:24.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:24.906" endtime="20220705 08:29:24.906"/>
</return>
<status status="PASS" starttime="20220705 08:29:24.457" endtime="20220705 08:29:24.906"/>
</kw>
<status status="PASS" starttime="20220705 08:29:24.457" endtime="20220705 08:29:24.906"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 08:29:24.907" endtime="20220705 08:29:24.908"/>
</kw>
<status status="PASS" starttime="20220705 08:29:24.457" endtime="20220705 08:29:24.908"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 08:29:22.370" endtime="20220705 08:29:24.908"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 08:29:24.921" endtime="20220705 08:29:24.921"/>
</kw>
<status status="PASS" starttime="20220705 08:29:24.920" endtime="20220705 08:29:24.921"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:24.922" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:24.922" endtime="20220705 08:29:24.922"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:24.923" endtime="20220705 08:29:24.923"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:24.924" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:29:24.923" endtime="20220705 08:29:24.924"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:25.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:24.924" endtime="20220705 08:29:25.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:25.164" endtime="20220705 08:29:25.164"/>
</return>
<msg timestamp="20220705 08:29:25.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:24.922" endtime="20220705 08:29:25.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:25.164" endtime="20220705 08:29:25.164"/>
</return>
<msg timestamp="20220705 08:29:25.165" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:24.922" endtime="20220705 08:29:25.165"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:29:25.166" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3f665f6d7b2212fbc6273</msg>
<status status="PASS" starttime="20220705 08:29:25.165" endtime="20220705 08:29:25.166"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:25.266" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:25.166" endtime="20220705 08:29:25.266"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:29:25.267" level="INFO">${TEST_SUITE_LIST_ID} = 62c3f665f6d7b2212fbc627a</msg>
<status status="PASS" starttime="20220705 08:29:25.266" endtime="20220705 08:29:25.267"/>
</kw>
<status status="PASS" starttime="20220705 08:29:24.921" endtime="20220705 08:29:25.267"/>
</kw>
<status status="PASS" starttime="20220705 08:29:24.920" endtime="20220705 08:29:25.267"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:25.270" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:25.269" endtime="20220705 08:29:25.270"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:25.270" endtime="20220705 08:29:25.270"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:25.271" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 08:29:25.270" endtime="20220705 08:29:25.271"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:25.421" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:25.271" endtime="20220705 08:29:25.421"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:25.422" endtime="20220705 08:29:25.422"/>
</return>
<msg timestamp="20220705 08:29:25.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:25.269" endtime="20220705 08:29:25.422"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:25.422" endtime="20220705 08:29:25.422"/>
</return>
<msg timestamp="20220705 08:29:25.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:25.268" endtime="20220705 08:29:25.422"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:25.423" endtime="20220705 08:29:25.425"/>
</kw>
<status status="PASS" starttime="20220705 08:29:25.423" endtime="20220705 08:29:25.425"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:25.426" endtime="20220705 08:29:25.426"/>
</return>
<msg timestamp="20220705 08:29:25.426" level="INFO">${LABEL_ID} = 62c3f6653f07f028f3ecabe6</msg>
<status status="PASS" starttime="20220705 08:29:25.425" endtime="20220705 08:29:25.426"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:25.428" level="INFO">${url} = labels/62c3f6653f07f028f3ecabe6</msg>
<status status="PASS" starttime="20220705 08:29:25.427" endtime="20220705 08:29:25.428"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:25.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:25.428" endtime="20220705 08:29:25.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:25.851" endtime="20220705 08:29:25.851"/>
</return>
<msg timestamp="20220705 08:29:25.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:25.427" endtime="20220705 08:29:25.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:25.851" endtime="20220705 08:29:25.851"/>
</return>
<msg timestamp="20220705 08:29:25.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:25.426" endtime="20220705 08:29:25.852"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:25.852" endtime="20220705 08:29:25.852"/>
</return>
<msg timestamp="20220705 08:29:25.853" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 08:29:25.852" endtime="20220705 08:29:25.853"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:25.854" endtime="20220705 08:29:25.854"/>
</return>
<msg timestamp="20220705 08:29:25.855" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 08:29:25.854" endtime="20220705 08:29:25.855"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:25.855" endtime="20220705 08:29:25.855"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:25.856" endtime="20220705 08:29:25.856"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:25.859" level="INFO">${url} = labels/62c3f6653f07f028f3ecabe6</msg>
<status status="PASS" starttime="20220705 08:29:25.858" endtime="20220705 08:29:25.859"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:26.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:25.859" endtime="20220705 08:29:26.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.026" endtime="20220705 08:29:26.026"/>
</return>
<msg timestamp="20220705 08:29:26.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:25.857" endtime="20220705 08:29:26.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.027" endtime="20220705 08:29:26.027"/>
</return>
<status status="PASS" starttime="20220705 08:29:25.857" endtime="20220705 08:29:26.027"/>
</kw>
<status status="PASS" starttime="20220705 08:29:25.856" endtime="20220705 08:29:26.027"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:29:25.267" endtime="20220705 08:29:26.027"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:26.030" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:26.030" endtime="20220705 08:29:26.030"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:26.030" endtime="20220705 08:29:26.031"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:26.032" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 08:29:26.031" endtime="20220705 08:29:26.032"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:26.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.032" endtime="20220705 08:29:26.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.163" endtime="20220705 08:29:26.163"/>
</return>
<msg timestamp="20220705 08:29:26.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.029" endtime="20220705 08:29:26.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.164" endtime="20220705 08:29:26.164"/>
</return>
<msg timestamp="20220705 08:29:26.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.028" endtime="20220705 08:29:26.164"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:26.165" endtime="20220705 08:29:26.167"/>
</kw>
<status status="PASS" starttime="20220705 08:29:26.164" endtime="20220705 08:29:26.167"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:26.168" endtime="20220705 08:29:26.168"/>
</return>
<msg timestamp="20220705 08:29:26.169" level="INFO">${LABEL_ID} = 62c3f66615ab7b2c21e101de</msg>
<status status="PASS" starttime="20220705 08:29:26.167" endtime="20220705 08:29:26.169"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:26.170" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:26.170" endtime="20220705 08:29:26.170"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:26.170" endtime="20220705 08:29:26.170"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:26.171" level="INFO">${url} = labels/62c3f66615ab7b2c21e101de</msg>
<status status="PASS" starttime="20220705 08:29:26.170" endtime="20220705 08:29:26.171"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:26.317" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.171" endtime="20220705 08:29:26.317"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.317" endtime="20220705 08:29:26.317"/>
</return>
<msg timestamp="20220705 08:29:26.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.169" endtime="20220705 08:29:26.318"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.318" endtime="20220705 08:29:26.318"/>
</return>
<msg timestamp="20220705 08:29:26.318" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.169" endtime="20220705 08:29:26.318"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:26.318" endtime="20220705 08:29:26.318"/>
</return>
<msg timestamp="20220705 08:29:26.319" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 08:29:26.318" endtime="20220705 08:29:26.319"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:26.320" endtime="20220705 08:29:26.320"/>
</return>
<msg timestamp="20220705 08:29:26.320" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 08:29:26.319" endtime="20220705 08:29:26.320"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:26.321" endtime="20220705 08:29:26.321"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:26.321" endtime="20220705 08:29:26.321"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:26.324" level="INFO">${url} = labels/62c3f66615ab7b2c21e101de</msg>
<status status="PASS" starttime="20220705 08:29:26.324" endtime="20220705 08:29:26.324"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:26.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.324" endtime="20220705 08:29:26.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.493" endtime="20220705 08:29:26.493"/>
</return>
<msg timestamp="20220705 08:29:26.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.323" endtime="20220705 08:29:26.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.493" endtime="20220705 08:29:26.493"/>
</return>
<status status="PASS" starttime="20220705 08:29:26.322" endtime="20220705 08:29:26.493"/>
</kw>
<status status="PASS" starttime="20220705 08:29:26.322" endtime="20220705 08:29:26.493"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:29:26.028" endtime="20220705 08:29:26.493"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:26.496" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:26.496" endtime="20220705 08:29:26.496"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:26.496" endtime="20220705 08:29:26.496"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:26.498" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 08:29:26.497" endtime="20220705 08:29:26.498"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:26.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.498" endtime="20220705 08:29:26.637"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.637" endtime="20220705 08:29:26.637"/>
</return>
<msg timestamp="20220705 08:29:26.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.495" endtime="20220705 08:29:26.637"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.637" endtime="20220705 08:29:26.637"/>
</return>
<msg timestamp="20220705 08:29:26.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.495" endtime="20220705 08:29:26.638"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:29:26.638" endtime="20220705 08:29:26.638"/>
</return>
<msg timestamp="20220705 08:29:26.639" level="INFO">${LABEL_ID} = 62c3f6661e566e853b979cd0</msg>
<status status="PASS" starttime="20220705 08:29:26.638" endtime="20220705 08:29:26.639"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:26.641" level="INFO">${url} = labels/62c3f6661e566e853b979cd0</msg>
<status status="PASS" starttime="20220705 08:29:26.640" endtime="20220705 08:29:26.641"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:26.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.641" endtime="20220705 08:29:26.829"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.829" endtime="20220705 08:29:26.829"/>
</return>
<msg timestamp="20220705 08:29:26.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.640" endtime="20220705 08:29:26.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.830" endtime="20220705 08:29:26.830"/>
</return>
<status status="PASS" starttime="20220705 08:29:26.640" endtime="20220705 08:29:26.830"/>
</kw>
<status status="PASS" starttime="20220705 08:29:26.639" endtime="20220705 08:29:26.830"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:26.832" level="INFO">${url} = labels/62c3f6661e566e853b979cd0</msg>
<status status="PASS" starttime="20220705 08:29:26.831" endtime="20220705 08:29:26.832"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:26.917" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:29:26.832" endtime="20220705 08:29:26.917"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.917" endtime="20220705 08:29:26.918"/>
</return>
<msg timestamp="20220705 08:29:26.918" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:29:26.831" endtime="20220705 08:29:26.918"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:26.918" endtime="20220705 08:29:26.918"/>
</return>
<status status="PASS" starttime="20220705 08:29:26.830" endtime="20220705 08:29:26.918"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:29:26.494" endtime="20220705 08:29:26.918"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:26.922" level="INFO">${url} = boards/62c3f665f6d7b2212fbc6273</msg>
<status status="PASS" starttime="20220705 08:29:26.922" endtime="20220705 08:29:26.922"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:27.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.922" endtime="20220705 08:29:27.344"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:27.344" endtime="20220705 08:29:27.344"/>
</return>
<msg timestamp="20220705 08:29:27.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:26.921" endtime="20220705 08:29:27.344"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:27.344" endtime="20220705 08:29:27.344"/>
</return>
<status status="PASS" starttime="20220705 08:29:26.920" endtime="20220705 08:29:27.345"/>
</kw>
<status status="PASS" starttime="20220705 08:29:26.920" endtime="20220705 08:29:27.345"/>
</kw>
<status status="PASS" starttime="20220705 08:29:26.919" endtime="20220705 08:29:27.345"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 08:29:27.345" endtime="20220705 08:29:27.347"/>
</kw>
<status status="PASS" starttime="20220705 08:29:26.919" endtime="20220705 08:29:27.347"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 08:29:24.910" endtime="20220705 08:29:27.347"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 08:29:27.361" endtime="20220705 08:29:27.362"/>
</kw>
<status status="PASS" starttime="20220705 08:29:27.361" endtime="20220705 08:29:27.362"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:27.364" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:27.363" endtime="20220705 08:29:27.364"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:27.364" endtime="20220705 08:29:27.364"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:27.365" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:29:27.364" endtime="20220705 08:29:27.365"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:27.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:27.365" endtime="20220705 08:29:27.599"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:27.599" endtime="20220705 08:29:27.599"/>
</return>
<msg timestamp="20220705 08:29:27.600" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:27.362" endtime="20220705 08:29:27.600"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:27.600" endtime="20220705 08:29:27.600"/>
</return>
<msg timestamp="20220705 08:29:27.600" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:27.362" endtime="20220705 08:29:27.600"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:29:27.602" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3f667d59d9e5af6092644</msg>
<status status="PASS" starttime="20220705 08:29:27.601" endtime="20220705 08:29:27.602"/>
</kw>
<status status="PASS" starttime="20220705 08:29:27.600" endtime="20220705 08:29:27.602"/>
</kw>
<status status="PASS" starttime="20220705 08:29:27.362" endtime="20220705 08:29:27.602"/>
</kw>
<status status="PASS" starttime="20220705 08:29:27.361" endtime="20220705 08:29:27.602"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:27.605" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:27.604" endtime="20220705 08:29:27.605"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:27.605" endtime="20220705 08:29:27.605"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:27.606" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 08:29:27.605" endtime="20220705 08:29:27.606"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:27.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:27.606" endtime="20220705 08:29:27.759"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:27.759" endtime="20220705 08:29:27.759"/>
</return>
<msg timestamp="20220705 08:29:27.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:27.604" endtime="20220705 08:29:27.759"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:27.759" endtime="20220705 08:29:27.759"/>
</return>
<msg timestamp="20220705 08:29:27.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:27.603" endtime="20220705 08:29:27.759"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:27.760" endtime="20220705 08:29:27.762"/>
</kw>
<status status="PASS" starttime="20220705 08:29:27.760" endtime="20220705 08:29:27.763"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:29:27.602" endtime="20220705 08:29:27.763"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:27.766" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:27.765" endtime="20220705 08:29:27.766"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:27.766" endtime="20220705 08:29:27.766"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:27.767" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 08:29:27.766" endtime="20220705 08:29:27.767"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:27.963" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:27.767" endtime="20220705 08:29:27.963"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:27.963" endtime="20220705 08:29:27.963"/>
</return>
<msg timestamp="20220705 08:29:27.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:27.764" endtime="20220705 08:29:27.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:27.964" endtime="20220705 08:29:27.964"/>
</return>
<msg timestamp="20220705 08:29:27.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:27.764" endtime="20220705 08:29:27.964"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:27.965" endtime="20220705 08:29:27.967"/>
</kw>
<status status="PASS" starttime="20220705 08:29:27.964" endtime="20220705 08:29:27.967"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:27.969" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:27.968" endtime="20220705 08:29:27.969"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:27.969" endtime="20220705 08:29:27.969"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:27.970" level="INFO">${url} = lists/62c3f66728a9ed5c8fc86058</msg>
<status status="PASS" starttime="20220705 08:29:27.969" endtime="20220705 08:29:27.970"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:28.096" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:27.970" endtime="20220705 08:29:28.096"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:28.096" endtime="20220705 08:29:28.096"/>
</return>
<msg timestamp="20220705 08:29:28.096" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:27.968" endtime="20220705 08:29:28.096"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:28.096" endtime="20220705 08:29:28.096"/>
</return>
<status status="PASS" starttime="20220705 08:29:27.967" endtime="20220705 08:29:28.097"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:28.099" level="INFO">${url} = lists/62c3f66728a9ed5c8fc86058</msg>
<status status="PASS" starttime="20220705 08:29:28.098" endtime="20220705 08:29:28.099"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:28.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:28.099" endtime="20220705 08:29:28.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:28.206" endtime="20220705 08:29:28.206"/>
</return>
<msg timestamp="20220705 08:29:28.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:28.098" endtime="20220705 08:29:28.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:28.207" endtime="20220705 08:29:28.207"/>
</return>
<msg timestamp="20220705 08:29:28.207" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:28.097" endtime="20220705 08:29:28.207"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:29:28.207" endtime="20220705 08:29:28.209"/>
</kw>
<status status="PASS" starttime="20220705 08:29:28.207" endtime="20220705 08:29:28.209"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:29:28.209" endtime="20220705 08:29:28.210"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 08:29:27.763" endtime="20220705 08:29:28.210"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:28.213" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:28.212" endtime="20220705 08:29:28.213"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:28.213" endtime="20220705 08:29:28.214"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:28.215" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 08:29:28.214" endtime="20220705 08:29:28.215"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:28.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:28.215" endtime="20220705 08:29:28.377"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:28.377" endtime="20220705 08:29:28.377"/>
</return>
<msg timestamp="20220705 08:29:28.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:28.212" endtime="20220705 08:29:28.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:28.378" endtime="20220705 08:29:28.378"/>
</return>
<msg timestamp="20220705 08:29:28.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:28.211" endtime="20220705 08:29:28.378"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:29:28.380" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:29:28.380" endtime="20220705 08:29:28.380"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:29:28.380" endtime="20220705 08:29:28.380"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:28.381" level="INFO">${url} = lists/62c3f66804ac8e80e064f02c/closed</msg>
<status status="PASS" starttime="20220705 08:29:28.381" endtime="20220705 08:29:28.381"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:29:28.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:28.381" endtime="20220705 08:29:28.516"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:28.516" endtime="20220705 08:29:28.516"/>
</return>
<msg timestamp="20220705 08:29:28.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:28.379" endtime="20220705 08:29:28.516"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:28.516" endtime="20220705 08:29:28.516"/>
</return>
<status status="PASS" starttime="20220705 08:29:28.378" endtime="20220705 08:29:28.516"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:28.518" level="INFO">${url} = lists/62c3f66804ac8e80e064f02c</msg>
<status status="PASS" starttime="20220705 08:29:28.518" endtime="20220705 08:29:28.518"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:29:28.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:28.518" endtime="20220705 08:29:28.625"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:28.625" endtime="20220705 08:29:28.625"/>
</return>
<msg timestamp="20220705 08:29:28.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:28.517" endtime="20220705 08:29:28.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:28.626" endtime="20220705 08:29:28.626"/>
</return>
<msg timestamp="20220705 08:29:28.626" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:28.516" endtime="20220705 08:29:28.626"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 08:29:28.626" endtime="20220705 08:29:28.627"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 08:29:28.211" endtime="20220705 08:29:28.627"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:29:28.631" level="INFO">${url} = boards/62c3f667d59d9e5af6092644</msg>
<status status="PASS" starttime="20220705 08:29:28.630" endtime="20220705 08:29:28.631"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:29:29.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:28.631" endtime="20220705 08:29:29.041"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:29.041" endtime="20220705 08:29:29.042"/>
</return>
<msg timestamp="20220705 08:29:29.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:29:28.630" endtime="20220705 08:29:29.042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:29:29.042" endtime="20220705 08:29:29.042"/>
</return>
<status status="PASS" starttime="20220705 08:29:28.629" endtime="20220705 08:29:29.042"/>
</kw>
<status status="PASS" starttime="20220705 08:29:28.629" endtime="20220705 08:29:29.042"/>
</kw>
<status status="PASS" starttime="20220705 08:29:28.628" endtime="20220705 08:29:29.042"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 08:29:29.042" endtime="20220705 08:29:29.044"/>
</kw>
<status status="PASS" starttime="20220705 08:29:28.628" endtime="20220705 08:29:29.044"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 08:29:27.349" endtime="20220705 08:29:29.044"/>
</suite>
<status status="PASS" starttime="20220705 08:29:10.744" endtime="20220705 08:29:29.047"/>
</suite>
<status status="PASS" starttime="20220705 08:29:10.718" endtime="20220705 08:29:29.051"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
