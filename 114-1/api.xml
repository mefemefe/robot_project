<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 15:46:16.789" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:46:16.913" endtime="20220704 15:46:16.913"/>
</kw>
<status status="PASS" starttime="20220704 15:46:16.912" endtime="20220704 15:46:16.913"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:16.915" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:16.915" endtime="20220704 15:46:16.915"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:16.915" endtime="20220704 15:46:16.915"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:16.916" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:46:16.916" endtime="20220704 15:46:16.916"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:17.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:16.916" endtime="20220704 15:46:17.108"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:17.109" endtime="20220704 15:46:17.109"/>
</return>
<msg timestamp="20220704 15:46:17.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:16.914" endtime="20220704 15:46:17.109"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:17.109" endtime="20220704 15:46:17.109"/>
</return>
<msg timestamp="20220704 15:46:17.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:16.914" endtime="20220704 15:46:17.109"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:17.110" endtime="20220704 15:46:17.115"/>
</kw>
<status status="PASS" starttime="20220704 15:46:17.109" endtime="20220704 15:46:17.115"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:17.117" level="INFO">${url} = boards/62c30b48eb02754519f8c118</msg>
<status status="PASS" starttime="20220704 15:46:17.116" endtime="20220704 15:46:17.117"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:17.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:17.117" endtime="20220704 15:46:17.444"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:17.444" endtime="20220704 15:46:17.444"/>
</return>
<msg timestamp="20220704 15:46:17.445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:17.116" endtime="20220704 15:46:17.445"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:17.445" endtime="20220704 15:46:17.445"/>
</return>
<status status="PASS" starttime="20220704 15:46:17.115" endtime="20220704 15:46:17.445"/>
</kw>
<status status="PASS" starttime="20220704 15:46:17.115" endtime="20220704 15:46:17.445"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:46:16.913" endtime="20220704 15:46:17.445"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:17.448" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:17.447" endtime="20220704 15:46:17.448"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:17.448" endtime="20220704 15:46:17.448"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:17.449" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:46:17.448" endtime="20220704 15:46:17.449"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:17.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:17.449" endtime="20220704 15:46:17.624"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:17.624" endtime="20220704 15:46:17.624"/>
</return>
<msg timestamp="20220704 15:46:17.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:17.447" endtime="20220704 15:46:17.624"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:17.624" endtime="20220704 15:46:17.624"/>
</return>
<msg timestamp="20220704 15:46:17.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:17.446" endtime="20220704 15:46:17.625"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:17.625" endtime="20220704 15:46:17.629"/>
</kw>
<status status="PASS" starttime="20220704 15:46:17.625" endtime="20220704 15:46:17.629"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:17.631" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:17.631" endtime="20220704 15:46:17.631"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:17.631" endtime="20220704 15:46:17.631"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:17.632" level="INFO">${url} = boards/62c30b4930b32381017b21cf</msg>
<status status="PASS" starttime="20220704 15:46:17.631" endtime="20220704 15:46:17.632"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:17.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:17.632" endtime="20220704 15:46:17.723"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:17.723" endtime="20220704 15:46:17.723"/>
</return>
<msg timestamp="20220704 15:46:17.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:17.630" endtime="20220704 15:46:17.723"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:17.723" endtime="20220704 15:46:17.723"/>
</return>
<status status="PASS" starttime="20220704 15:46:17.630" endtime="20220704 15:46:17.723"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:17.725" level="INFO">${url} = boards/62c30b4930b32381017b21cf</msg>
<status status="PASS" starttime="20220704 15:46:17.725" endtime="20220704 15:46:17.725"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:17.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:17.725" endtime="20220704 15:46:17.767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:17.767" endtime="20220704 15:46:17.767"/>
</return>
<msg timestamp="20220704 15:46:17.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:17.724" endtime="20220704 15:46:17.767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:17.767" endtime="20220704 15:46:17.767"/>
</return>
<msg timestamp="20220704 15:46:17.767" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:17.724" endtime="20220704 15:46:17.767"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:17.768" endtime="20220704 15:46:17.772"/>
</kw>
<status status="PASS" starttime="20220704 15:46:17.768" endtime="20220704 15:46:17.772"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:17.772" endtime="20220704 15:46:17.773"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:17.775" level="INFO">${url} = boards/62c30b4930b32381017b21cf</msg>
<status status="PASS" starttime="20220704 15:46:17.775" endtime="20220704 15:46:17.775"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:18.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:17.775" endtime="20220704 15:46:18.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:18.160" endtime="20220704 15:46:18.160"/>
</return>
<msg timestamp="20220704 15:46:18.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:17.774" endtime="20220704 15:46:18.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:18.160" endtime="20220704 15:46:18.160"/>
</return>
<status status="PASS" starttime="20220704 15:46:17.773" endtime="20220704 15:46:18.160"/>
</kw>
<status status="PASS" starttime="20220704 15:46:17.773" endtime="20220704 15:46:18.160"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:46:17.446" endtime="20220704 15:46:18.160"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:18.163" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:18.162" endtime="20220704 15:46:18.163"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:18.163" endtime="20220704 15:46:18.163"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:18.164" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:46:18.163" endtime="20220704 15:46:18.164"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:18.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:18.164" endtime="20220704 15:46:18.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:18.328" endtime="20220704 15:46:18.328"/>
</return>
<msg timestamp="20220704 15:46:18.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:18.162" endtime="20220704 15:46:18.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:18.328" endtime="20220704 15:46:18.328"/>
</return>
<msg timestamp="20220704 15:46:18.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:18.161" endtime="20220704 15:46:18.328"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:18.330" level="INFO">${url} = boards/62c30b4aa7ba994bc2616541</msg>
<status status="PASS" starttime="20220704 15:46:18.330" endtime="20220704 15:46:18.330"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:18.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:18.330" endtime="20220704 15:46:18.644"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:18.644" endtime="20220704 15:46:18.644"/>
</return>
<msg timestamp="20220704 15:46:18.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:18.329" endtime="20220704 15:46:18.644"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:18.644" endtime="20220704 15:46:18.644"/>
</return>
<status status="PASS" starttime="20220704 15:46:18.328" endtime="20220704 15:46:18.645"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:18.647" level="INFO">${url} = boards/62c30b4aa7ba994bc2616541</msg>
<status status="PASS" starttime="20220704 15:46:18.646" endtime="20220704 15:46:18.647"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:18.685" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:46:18.647" endtime="20220704 15:46:18.685"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:18.685" endtime="20220704 15:46:18.685"/>
</return>
<msg timestamp="20220704 15:46:18.685" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:46:18.646" endtime="20220704 15:46:18.685"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:18.685" endtime="20220704 15:46:18.685"/>
</return>
<status status="PASS" starttime="20220704 15:46:18.645" endtime="20220704 15:46:18.685"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:46:18.161" endtime="20220704 15:46:18.685"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:18.687" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:18.687" endtime="20220704 15:46:18.687"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:18.688" endtime="20220704 15:46:18.688"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:18.689" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:46:18.688" endtime="20220704 15:46:18.689"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:18.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:18.689" endtime="20220704 15:46:18.841"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:18.841" endtime="20220704 15:46:18.841"/>
</return>
<msg timestamp="20220704 15:46:18.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:18.687" endtime="20220704 15:46:18.842"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:18.842" endtime="20220704 15:46:18.842"/>
</return>
<msg timestamp="20220704 15:46:18.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:18.686" endtime="20220704 15:46:18.842"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:18.842" endtime="20220704 15:46:18.846"/>
</kw>
<status status="PASS" starttime="20220704 15:46:18.842" endtime="20220704 15:46:18.846"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:18.848" level="INFO">${url} = boards/62c30b4a8c81d96853daddd0</msg>
<status status="PASS" starttime="20220704 15:46:18.848" endtime="20220704 15:46:18.848"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:18.897" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:18.848" endtime="20220704 15:46:18.897"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:18.897" endtime="20220704 15:46:18.897"/>
</return>
<msg timestamp="20220704 15:46:18.897" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:18.847" endtime="20220704 15:46:18.897"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:18.897" endtime="20220704 15:46:18.897"/>
</return>
<msg timestamp="20220704 15:46:18.897" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:18.847" endtime="20220704 15:46:18.898"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:18.898" endtime="20220704 15:46:18.902"/>
</kw>
<status status="PASS" starttime="20220704 15:46:18.898" endtime="20220704 15:46:18.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:18.902" endtime="20220704 15:46:18.903"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:18.905" level="INFO">${url} = boards/62c30b4a8c81d96853daddd0</msg>
<status status="PASS" starttime="20220704 15:46:18.905" endtime="20220704 15:46:18.905"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:19.243" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:18.905" endtime="20220704 15:46:19.243"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:19.243" endtime="20220704 15:46:19.243"/>
</return>
<msg timestamp="20220704 15:46:19.243" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:18.904" endtime="20220704 15:46:19.243"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:19.243" endtime="20220704 15:46:19.243"/>
</return>
<status status="PASS" starttime="20220704 15:46:18.903" endtime="20220704 15:46:19.243"/>
</kw>
<status status="PASS" starttime="20220704 15:46:18.903" endtime="20220704 15:46:19.243"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:46:18.686" endtime="20220704 15:46:19.244"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:19.246" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:19.246" endtime="20220704 15:46:19.246"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:19.246" endtime="20220704 15:46:19.246"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:19.247" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:46:19.246" endtime="20220704 15:46:19.247"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:19.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.247" endtime="20220704 15:46:19.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:19.396" endtime="20220704 15:46:19.396"/>
</return>
<msg timestamp="20220704 15:46:19.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.245" endtime="20220704 15:46:19.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:19.396" endtime="20220704 15:46:19.396"/>
</return>
<msg timestamp="20220704 15:46:19.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.245" endtime="20220704 15:46:19.396"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:19.397" endtime="20220704 15:46:19.401"/>
</kw>
<status status="PASS" starttime="20220704 15:46:19.397" endtime="20220704 15:46:19.402"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:19.403" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:19.403" endtime="20220704 15:46:19.403"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:19.403" endtime="20220704 15:46:19.403"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:19.404" level="INFO">${url} = boards/62c30b4b3ff8dc2980c5074e</msg>
<status status="PASS" starttime="20220704 15:46:19.403" endtime="20220704 15:46:19.404"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:19.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.404" endtime="20220704 15:46:19.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:19.485" endtime="20220704 15:46:19.485"/>
</return>
<msg timestamp="20220704 15:46:19.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.402" endtime="20220704 15:46:19.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:19.486" endtime="20220704 15:46:19.486"/>
</return>
<status status="PASS" starttime="20220704 15:46:19.402" endtime="20220704 15:46:19.486"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:19.488" level="INFO">${url} = boards/62c30b4b3ff8dc2980c5074e</msg>
<status status="PASS" starttime="20220704 15:46:19.488" endtime="20220704 15:46:19.488"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:19.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.488" endtime="20220704 15:46:19.535"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:19.535" endtime="20220704 15:46:19.535"/>
</return>
<msg timestamp="20220704 15:46:19.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.487" endtime="20220704 15:46:19.535"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:19.535" endtime="20220704 15:46:19.535"/>
</return>
<msg timestamp="20220704 15:46:19.535" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.486" endtime="20220704 15:46:19.535"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:19.536" endtime="20220704 15:46:19.536"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:19.538" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:19.538" endtime="20220704 15:46:19.538"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:19.538" endtime="20220704 15:46:19.539"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:19.539" level="INFO">${url} = boards/62c30b4b3ff8dc2980c5074e</msg>
<status status="PASS" starttime="20220704 15:46:19.539" endtime="20220704 15:46:19.539"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:19.641" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.539" endtime="20220704 15:46:19.641"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:19.641" endtime="20220704 15:46:19.641"/>
</return>
<msg timestamp="20220704 15:46:19.641" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.537" endtime="20220704 15:46:19.641"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:19.641" endtime="20220704 15:46:19.641"/>
</return>
<status status="PASS" starttime="20220704 15:46:19.536" endtime="20220704 15:46:19.641"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:19.643" level="INFO">${url} = boards/62c30b4b3ff8dc2980c5074e</msg>
<status status="PASS" starttime="20220704 15:46:19.643" endtime="20220704 15:46:19.643"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:19.697" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.644" endtime="20220704 15:46:19.697"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:19.698" endtime="20220704 15:46:19.698"/>
</return>
<msg timestamp="20220704 15:46:19.698" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.642" endtime="20220704 15:46:19.698"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:19.698" endtime="20220704 15:46:19.698"/>
</return>
<msg timestamp="20220704 15:46:19.698" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.641" endtime="20220704 15:46:19.698"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:19.698" endtime="20220704 15:46:19.699"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:19.701" level="INFO">${url} = boards/62c30b4b3ff8dc2980c5074e</msg>
<status status="PASS" starttime="20220704 15:46:19.701" endtime="20220704 15:46:19.701"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:20.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.702" endtime="20220704 15:46:20.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.062" endtime="20220704 15:46:20.062"/>
</return>
<msg timestamp="20220704 15:46:20.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:19.701" endtime="20220704 15:46:20.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.062" endtime="20220704 15:46:20.062"/>
</return>
<status status="PASS" starttime="20220704 15:46:19.700" endtime="20220704 15:46:20.063"/>
</kw>
<status status="PASS" starttime="20220704 15:46:19.699" endtime="20220704 15:46:20.063"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:46:19.244" endtime="20220704 15:46:20.063"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 15:46:20.064" endtime="20220704 15:46:20.065"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 15:46:16.809" endtime="20220704 15:46:20.065"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:46:20.079" endtime="20220704 15:46:20.079"/>
</kw>
<status status="PASS" starttime="20220704 15:46:20.078" endtime="20220704 15:46:20.079"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:20.081" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:20.080" endtime="20220704 15:46:20.081"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:20.082" endtime="20220704 15:46:20.082"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:20.082" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:46:20.082" endtime="20220704 15:46:20.082"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:20.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.083" endtime="20220704 15:46:20.260"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.260" endtime="20220704 15:46:20.260"/>
</return>
<msg timestamp="20220704 15:46:20.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.080" endtime="20220704 15:46:20.260"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.260" endtime="20220704 15:46:20.260"/>
</return>
<msg timestamp="20220704 15:46:20.260" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.079" endtime="20220704 15:46:20.260"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:46:20.261" level="INFO">${TEST_SUITE_BOARD_ID} = 62c30b4c5cecfe317448e800</msg>
<status status="PASS" starttime="20220704 15:46:20.261" endtime="20220704 15:46:20.261"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:20.263" level="INFO">${url} = boards/62c30b4c5cecfe317448e800/lists/</msg>
<status status="PASS" starttime="20220704 15:46:20.262" endtime="20220704 15:46:20.263"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:20.310" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.263" endtime="20220704 15:46:20.310"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.310" endtime="20220704 15:46:20.311"/>
</return>
<msg timestamp="20220704 15:46:20.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.262" endtime="20220704 15:46:20.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.311" endtime="20220704 15:46:20.311"/>
</return>
<msg timestamp="20220704 15:46:20.311" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.262" endtime="20220704 15:46:20.311"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:46:20.312" level="INFO">${TEST_SUITE_LIST_ID} = 62c30b4c5cecfe317448e807</msg>
<status status="PASS" starttime="20220704 15:46:20.311" endtime="20220704 15:46:20.312"/>
</kw>
<status status="PASS" starttime="20220704 15:46:20.079" endtime="20220704 15:46:20.312"/>
</kw>
<status status="PASS" starttime="20220704 15:46:20.078" endtime="20220704 15:46:20.312"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:20.315" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:20.314" endtime="20220704 15:46:20.315"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:20.315" endtime="20220704 15:46:20.315"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:20.316" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:46:20.315" endtime="20220704 15:46:20.316"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:20.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.316" endtime="20220704 15:46:20.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.476" endtime="20220704 15:46:20.476"/>
</return>
<msg timestamp="20220704 15:46:20.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.314" endtime="20220704 15:46:20.477"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.477" endtime="20220704 15:46:20.477"/>
</return>
<msg timestamp="20220704 15:46:20.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.313" endtime="20220704 15:46:20.477"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:20.478" endtime="20220704 15:46:20.483"/>
</kw>
<status status="PASS" starttime="20220704 15:46:20.477" endtime="20220704 15:46:20.483"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:20.483" endtime="20220704 15:46:20.483"/>
</return>
<msg timestamp="20220704 15:46:20.484" level="INFO">${CARD_ID} = 62c30b4c0887121df69173db</msg>
<status status="PASS" starttime="20220704 15:46:20.483" endtime="20220704 15:46:20.484"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:20.485" level="INFO">${url} = cards/62c30b4c0887121df69173db</msg>
<status status="PASS" starttime="20220704 15:46:20.485" endtime="20220704 15:46:20.485"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:20.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.485" endtime="20220704 15:46:20.538"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.538" endtime="20220704 15:46:20.538"/>
</return>
<msg timestamp="20220704 15:46:20.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.484" endtime="20220704 15:46:20.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.539" endtime="20220704 15:46:20.539"/>
</return>
<msg timestamp="20220704 15:46:20.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.484" endtime="20220704 15:46:20.539"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:20.540" endtime="20220704 15:46:20.540"/>
</return>
<msg timestamp="20220704 15:46:20.540" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 15:46:20.539" endtime="20220704 15:46:20.540"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:20.540" endtime="20220704 15:46:20.541"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:20.542" level="INFO">${url} = cards/62c30b4c0887121df69173db</msg>
<status status="PASS" starttime="20220704 15:46:20.542" endtime="20220704 15:46:20.542"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:20.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.542" endtime="20220704 15:46:20.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.706" endtime="20220704 15:46:20.707"/>
</return>
<msg timestamp="20220704 15:46:20.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.541" endtime="20220704 15:46:20.707"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.707" endtime="20220704 15:46:20.707"/>
</return>
<status status="PASS" starttime="20220704 15:46:20.541" endtime="20220704 15:46:20.707"/>
</kw>
<status status="PASS" starttime="20220704 15:46:20.541" endtime="20220704 15:46:20.707"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:46:20.313" endtime="20220704 15:46:20.707"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:20.710" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:20.710" endtime="20220704 15:46:20.710"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:20.710" endtime="20220704 15:46:20.711"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:20.712" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:46:20.711" endtime="20220704 15:46:20.712"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:20.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.712" endtime="20220704 15:46:20.864"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.865" endtime="20220704 15:46:20.865"/>
</return>
<msg timestamp="20220704 15:46:20.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.709" endtime="20220704 15:46:20.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:20.865" endtime="20220704 15:46:20.865"/>
</return>
<msg timestamp="20220704 15:46:20.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.709" endtime="20220704 15:46:20.865"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:20.866" endtime="20220704 15:46:20.866"/>
</return>
<msg timestamp="20220704 15:46:20.867" level="INFO">${CARD_ID} = 62c30b4ce872a0217569d57f</msg>
<status status="PASS" starttime="20220704 15:46:20.865" endtime="20220704 15:46:20.867"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:20.869" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:20.869" endtime="20220704 15:46:20.869"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:20.869" endtime="20220704 15:46:20.869"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:20.870" level="INFO">${url} = cards/62c30b4ce872a0217569d57f</msg>
<status status="PASS" starttime="20220704 15:46:20.869" endtime="20220704 15:46:20.870"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:21.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.870" endtime="20220704 15:46:21.215"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:21.215" endtime="20220704 15:46:21.215"/>
</return>
<msg timestamp="20220704 15:46:21.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.868" endtime="20220704 15:46:21.215"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:21.215" endtime="20220704 15:46:21.215"/>
</return>
<msg timestamp="20220704 15:46:21.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:20.867" endtime="20220704 15:46:21.215"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:21.215" endtime="20220704 15:46:21.216"/>
</return>
<status status="PASS" starttime="20220704 15:46:20.867" endtime="20220704 15:46:21.216"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:21.217" level="INFO">${url} = cards/62c30b4ce872a0217569d57f</msg>
<status status="PASS" starttime="20220704 15:46:21.217" endtime="20220704 15:46:21.217"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:21.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.217" endtime="20220704 15:46:21.271"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:21.271" endtime="20220704 15:46:21.271"/>
</return>
<msg timestamp="20220704 15:46:21.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.216" endtime="20220704 15:46:21.272"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:21.272" endtime="20220704 15:46:21.272"/>
</return>
<msg timestamp="20220704 15:46:21.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.216" endtime="20220704 15:46:21.272"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:21.272" endtime="20220704 15:46:21.272"/>
</return>
<msg timestamp="20220704 15:46:21.273" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 15:46:21.272" endtime="20220704 15:46:21.273"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 15:46:21.274" endtime="20220704 15:46:21.274"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:21.276" level="INFO">${url} = cards/62c30b4ce872a0217569d57f</msg>
<status status="PASS" starttime="20220704 15:46:21.275" endtime="20220704 15:46:21.276"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:21.409" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.276" endtime="20220704 15:46:21.409"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:21.409" endtime="20220704 15:46:21.409"/>
</return>
<msg timestamp="20220704 15:46:21.409" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.275" endtime="20220704 15:46:21.409"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:21.409" endtime="20220704 15:46:21.409"/>
</return>
<status status="PASS" starttime="20220704 15:46:21.274" endtime="20220704 15:46:21.409"/>
</kw>
<status status="PASS" starttime="20220704 15:46:21.274" endtime="20220704 15:46:21.409"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:46:20.708" endtime="20220704 15:46:21.410"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:21.413" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:21.413" endtime="20220704 15:46:21.413"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:21.413" endtime="20220704 15:46:21.413"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:21.414" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:46:21.413" endtime="20220704 15:46:21.414"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:21.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.414" endtime="20220704 15:46:21.640"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:21.640" endtime="20220704 15:46:21.640"/>
</return>
<msg timestamp="20220704 15:46:21.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.412" endtime="20220704 15:46:21.640"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:21.640" endtime="20220704 15:46:21.640"/>
</return>
<msg timestamp="20220704 15:46:21.641" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.411" endtime="20220704 15:46:21.641"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:21.641" endtime="20220704 15:46:21.641"/>
</return>
<msg timestamp="20220704 15:46:21.642" level="INFO">${CARD_ID} = 62c30b4d45cb6b0b445bbcdb</msg>
<status status="PASS" starttime="20220704 15:46:21.641" endtime="20220704 15:46:21.642"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:21.643" level="INFO">${url} = cards/62c30b4d45cb6b0b445bbcdb</msg>
<status status="PASS" starttime="20220704 15:46:21.643" endtime="20220704 15:46:21.644"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:21.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.644" endtime="20220704 15:46:21.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:21.802" endtime="20220704 15:46:21.802"/>
</return>
<msg timestamp="20220704 15:46:21.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.643" endtime="20220704 15:46:21.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:21.802" endtime="20220704 15:46:21.802"/>
</return>
<msg timestamp="20220704 15:46:21.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.642" endtime="20220704 15:46:21.803"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:21.803" endtime="20220704 15:46:21.805"/>
</kw>
<status status="PASS" starttime="20220704 15:46:21.803" endtime="20220704 15:46:21.805"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:21.807" level="INFO">${url} = cards/62c30b4d45cb6b0b445bbcdb</msg>
<status status="PASS" starttime="20220704 15:46:21.806" endtime="20220704 15:46:21.807"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:21.839" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:46:21.807" endtime="20220704 15:46:21.839"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:21.839" endtime="20220704 15:46:21.839"/>
</return>
<msg timestamp="20220704 15:46:21.839" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:46:21.806" endtime="20220704 15:46:21.840"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:21.840" endtime="20220704 15:46:21.840"/>
</return>
<status status="PASS" starttime="20220704 15:46:21.805" endtime="20220704 15:46:21.840"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:46:21.410" endtime="20220704 15:46:21.840"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:21.843" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:21.843" endtime="20220704 15:46:21.843"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:21.843" endtime="20220704 15:46:21.843"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:21.844" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:46:21.843" endtime="20220704 15:46:21.844"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:22.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.844" endtime="20220704 15:46:22.001"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:22.001" endtime="20220704 15:46:22.001"/>
</return>
<msg timestamp="20220704 15:46:22.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.842" endtime="20220704 15:46:22.001"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:22.001" endtime="20220704 15:46:22.001"/>
</return>
<msg timestamp="20220704 15:46:22.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:21.842" endtime="20220704 15:46:22.001"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:22.002" endtime="20220704 15:46:22.002"/>
</return>
<msg timestamp="20220704 15:46:22.003" level="INFO">${CARD_ID} = 62c30b4d82eb28019e8601fe</msg>
<status status="PASS" starttime="20220704 15:46:22.002" endtime="20220704 15:46:22.003"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:22.004" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:22.004" endtime="20220704 15:46:22.004"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:22.004" endtime="20220704 15:46:22.004"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:22.005" level="INFO">${url} = cards/62c30b4d82eb28019e8601fe</msg>
<status status="PASS" starttime="20220704 15:46:22.005" endtime="20220704 15:46:22.005"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:22.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:22.005" endtime="20220704 15:46:22.443"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:22.444" endtime="20220704 15:46:22.444"/>
</return>
<msg timestamp="20220704 15:46:22.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:22.003" endtime="20220704 15:46:22.444"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:22.444" endtime="20220704 15:46:22.444"/>
</return>
<msg timestamp="20220704 15:46:22.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:22.003" endtime="20220704 15:46:22.444"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:22.445" endtime="20220704 15:46:22.450"/>
</kw>
<status status="PASS" starttime="20220704 15:46:22.444" endtime="20220704 15:46:22.450"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:22.451" level="INFO">${url} = cards/62c30b4d82eb28019e8601fe</msg>
<status status="PASS" starttime="20220704 15:46:22.451" endtime="20220704 15:46:22.451"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:22.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:22.452" endtime="20220704 15:46:22.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:22.505" endtime="20220704 15:46:22.505"/>
</return>
<msg timestamp="20220704 15:46:22.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:22.451" endtime="20220704 15:46:22.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:22.505" endtime="20220704 15:46:22.505"/>
</return>
<msg timestamp="20220704 15:46:22.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:22.450" endtime="20220704 15:46:22.506"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:22.506" endtime="20220704 15:46:22.506"/>
</return>
<msg timestamp="20220704 15:46:22.507" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 15:46:22.506" endtime="20220704 15:46:22.507"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:22.507" endtime="20220704 15:46:22.507"/>
</return>
<msg timestamp="20220704 15:46:22.508" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 15:46:22.507" endtime="20220704 15:46:22.508"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:22.508" endtime="20220704 15:46:22.508"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:22.508" endtime="20220704 15:46:22.509"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:22.510" level="INFO">${url} = cards/62c30b4d82eb28019e8601fe</msg>
<status status="PASS" starttime="20220704 15:46:22.510" endtime="20220704 15:46:22.510"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:22.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:22.510" endtime="20220704 15:46:22.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:22.656" endtime="20220704 15:46:22.656"/>
</return>
<msg timestamp="20220704 15:46:22.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:22.509" endtime="20220704 15:46:22.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:22.656" endtime="20220704 15:46:22.656"/>
</return>
<status status="PASS" starttime="20220704 15:46:22.509" endtime="20220704 15:46:22.656"/>
</kw>
<status status="PASS" starttime="20220704 15:46:22.509" endtime="20220704 15:46:22.656"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:46:21.840" endtime="20220704 15:46:22.656"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:22.660" level="INFO">${url} = boards/62c30b4c5cecfe317448e800</msg>
<status status="PASS" starttime="20220704 15:46:22.660" endtime="20220704 15:46:22.660"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:23.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:22.660" endtime="20220704 15:46:23.020"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.020" endtime="20220704 15:46:23.020"/>
</return>
<msg timestamp="20220704 15:46:23.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:22.659" endtime="20220704 15:46:23.020"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.020" endtime="20220704 15:46:23.020"/>
</return>
<status status="PASS" starttime="20220704 15:46:22.658" endtime="20220704 15:46:23.021"/>
</kw>
<status status="PASS" starttime="20220704 15:46:22.658" endtime="20220704 15:46:23.021"/>
</kw>
<status status="PASS" starttime="20220704 15:46:22.658" endtime="20220704 15:46:23.021"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:46:23.021" endtime="20220704 15:46:23.022"/>
</kw>
<status status="PASS" starttime="20220704 15:46:22.658" endtime="20220704 15:46:23.022"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 15:46:20.066" endtime="20220704 15:46:23.022"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:46:23.033" endtime="20220704 15:46:23.034"/>
</kw>
<status status="PASS" starttime="20220704 15:46:23.033" endtime="20220704 15:46:23.034"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:23.035" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:23.035" endtime="20220704 15:46:23.035"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:23.035" endtime="20220704 15:46:23.035"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:23.036" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:46:23.035" endtime="20220704 15:46:23.036"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:23.238" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.036" endtime="20220704 15:46:23.238"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.238" endtime="20220704 15:46:23.238"/>
</return>
<msg timestamp="20220704 15:46:23.238" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.034" endtime="20220704 15:46:23.238"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.238" endtime="20220704 15:46:23.239"/>
</return>
<msg timestamp="20220704 15:46:23.239" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.034" endtime="20220704 15:46:23.239"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:46:23.240" level="INFO">${TEST_SUITE_BOARD_ID} = 62c30b4f02946349ed6504ee</msg>
<status status="PASS" starttime="20220704 15:46:23.239" endtime="20220704 15:46:23.240"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:23.241" level="INFO">${url} = boards/62c30b4f02946349ed6504ee/lists/</msg>
<status status="PASS" starttime="20220704 15:46:23.240" endtime="20220704 15:46:23.241"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:23.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.241" endtime="20220704 15:46:23.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.283" endtime="20220704 15:46:23.283"/>
</return>
<msg timestamp="20220704 15:46:23.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.240" endtime="20220704 15:46:23.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.283" endtime="20220704 15:46:23.283"/>
</return>
<msg timestamp="20220704 15:46:23.284" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.240" endtime="20220704 15:46:23.284"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:46:23.285" level="INFO">${TEST_SUITE_LIST_ID} = 62c30b4f02946349ed6504f5</msg>
<status status="PASS" starttime="20220704 15:46:23.284" endtime="20220704 15:46:23.285"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:23.286" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:23.286" endtime="20220704 15:46:23.286"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:23.287" endtime="20220704 15:46:23.287"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:23.288" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:46:23.287" endtime="20220704 15:46:23.288"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:23.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.288" endtime="20220704 15:46:23.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.466" endtime="20220704 15:46:23.466"/>
</return>
<msg timestamp="20220704 15:46:23.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.286" endtime="20220704 15:46:23.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.466" endtime="20220704 15:46:23.466"/>
</return>
<msg timestamp="20220704 15:46:23.466" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.285" endtime="20220704 15:46:23.466"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:46:23.468" level="INFO">${TEST_SUITE_CARD_ID} = 62c30b4f33666058a0724864</msg>
<status status="PASS" starttime="20220704 15:46:23.467" endtime="20220704 15:46:23.468"/>
</kw>
<status status="PASS" starttime="20220704 15:46:23.034" endtime="20220704 15:46:23.468"/>
</kw>
<status status="PASS" starttime="20220704 15:46:23.033" endtime="20220704 15:46:23.468"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:23.470" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:23.470" endtime="20220704 15:46:23.470"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:23.470" endtime="20220704 15:46:23.470"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:23.471" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 15:46:23.471" endtime="20220704 15:46:23.471"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:23.585" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.471" endtime="20220704 15:46:23.585"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.585" endtime="20220704 15:46:23.585"/>
</return>
<msg timestamp="20220704 15:46:23.585" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.469" endtime="20220704 15:46:23.585"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.585" endtime="20220704 15:46:23.585"/>
</return>
<msg timestamp="20220704 15:46:23.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.469" endtime="20220704 15:46:23.586"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:23.586" endtime="20220704 15:46:23.586"/>
</return>
<msg timestamp="20220704 15:46:23.587" level="INFO">${checklist_id} = 62c30b4f49b14c88389be531</msg>
<status status="PASS" starttime="20220704 15:46:23.586" endtime="20220704 15:46:23.587"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:23.588" level="INFO">${url} = checklists/62c30b4f49b14c88389be531</msg>
<status status="PASS" starttime="20220704 15:46:23.588" endtime="20220704 15:46:23.588"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:23.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.589" endtime="20220704 15:46:23.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.751" endtime="20220704 15:46:23.751"/>
</return>
<msg timestamp="20220704 15:46:23.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.588" endtime="20220704 15:46:23.752"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.752" endtime="20220704 15:46:23.752"/>
</return>
<msg timestamp="20220704 15:46:23.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.587" endtime="20220704 15:46:23.752"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:23.752" endtime="20220704 15:46:23.753"/>
</return>
<msg timestamp="20220704 15:46:23.753" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 15:46:23.752" endtime="20220704 15:46:23.753"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:23.753" endtime="20220704 15:46:23.754"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:23.755" level="INFO">${url} = checklists/62c30b4f49b14c88389be531</msg>
<status status="PASS" starttime="20220704 15:46:23.755" endtime="20220704 15:46:23.755"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:23.874" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.755" endtime="20220704 15:46:23.874"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.875" endtime="20220704 15:46:23.875"/>
</return>
<msg timestamp="20220704 15:46:23.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.754" endtime="20220704 15:46:23.875"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:23.875" endtime="20220704 15:46:23.875"/>
</return>
<status status="PASS" starttime="20220704 15:46:23.754" endtime="20220704 15:46:23.875"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:46:23.468" endtime="20220704 15:46:23.875"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:23.878" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:23.878" endtime="20220704 15:46:23.878"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:23.878" endtime="20220704 15:46:23.879"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:23.879" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 15:46:23.879" endtime="20220704 15:46:23.879"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:24.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.879" endtime="20220704 15:46:24.005"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.005" endtime="20220704 15:46:24.005"/>
</return>
<msg timestamp="20220704 15:46:24.006" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.878" endtime="20220704 15:46:24.006"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.006" endtime="20220704 15:46:24.006"/>
</return>
<msg timestamp="20220704 15:46:24.006" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:23.877" endtime="20220704 15:46:24.006"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:24.006" endtime="20220704 15:46:24.006"/>
</return>
<msg timestamp="20220704 15:46:24.008" level="INFO">${checklist_id} = 62c30b4f23227f0a3e815ed7</msg>
<status status="PASS" starttime="20220704 15:46:24.006" endtime="20220704 15:46:24.008"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:24.009" level="INFO">${url} = checklists/62c30b4f23227f0a3e815ed7</msg>
<status status="PASS" starttime="20220704 15:46:24.009" endtime="20220704 15:46:24.009"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:24.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.009" endtime="20220704 15:46:24.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.128" endtime="20220704 15:46:24.128"/>
</return>
<msg timestamp="20220704 15:46:24.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.008" endtime="20220704 15:46:24.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.128" endtime="20220704 15:46:24.128"/>
</return>
<msg timestamp="20220704 15:46:24.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.008" endtime="20220704 15:46:24.129"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:24.129" endtime="20220704 15:46:24.131"/>
</kw>
<status status="PASS" starttime="20220704 15:46:24.129" endtime="20220704 15:46:24.131"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:24.133" level="INFO">${url} = checklists/62c30b4f23227f0a3e815ed7</msg>
<status status="PASS" starttime="20220704 15:46:24.132" endtime="20220704 15:46:24.133"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:24.170" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:46:24.133" endtime="20220704 15:46:24.170"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.170" endtime="20220704 15:46:24.170"/>
</return>
<msg timestamp="20220704 15:46:24.171" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:46:24.132" endtime="20220704 15:46:24.171"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.171" endtime="20220704 15:46:24.171"/>
</return>
<status status="PASS" starttime="20220704 15:46:24.131" endtime="20220704 15:46:24.171"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:46:23.876" endtime="20220704 15:46:24.171"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:24.175" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:24.173" endtime="20220704 15:46:24.175"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:24.175" endtime="20220704 15:46:24.175"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:24.176" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 15:46:24.175" endtime="20220704 15:46:24.176"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:24.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.176" endtime="20220704 15:46:24.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.307" endtime="20220704 15:46:24.307"/>
</return>
<msg timestamp="20220704 15:46:24.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.173" endtime="20220704 15:46:24.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.308" endtime="20220704 15:46:24.308"/>
</return>
<msg timestamp="20220704 15:46:24.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.172" endtime="20220704 15:46:24.308"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:24.308" endtime="20220704 15:46:24.308"/>
</return>
<msg timestamp="20220704 15:46:24.309" level="INFO">${checklist_id} = 62c30b509866bd5979ed038f</msg>
<status status="PASS" starttime="20220704 15:46:24.308" endtime="20220704 15:46:24.309"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:24.311" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:24.310" endtime="20220704 15:46:24.311"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:24.311" endtime="20220704 15:46:24.311"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:24.312" level="INFO">${url} = checklists/62c30b509866bd5979ed038f</msg>
<status status="PASS" starttime="20220704 15:46:24.311" endtime="20220704 15:46:24.312"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:24.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.312" endtime="20220704 15:46:24.392"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.392" endtime="20220704 15:46:24.392"/>
</return>
<msg timestamp="20220704 15:46:24.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.310" endtime="20220704 15:46:24.392"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.392" endtime="20220704 15:46:24.392"/>
</return>
<msg timestamp="20220704 15:46:24.393" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.309" endtime="20220704 15:46:24.393"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:24.394" level="INFO">${url} = checklists/62c30b509866bd5979ed038f</msg>
<status status="PASS" starttime="20220704 15:46:24.394" endtime="20220704 15:46:24.394"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:24.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.394" endtime="20220704 15:46:24.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.455" endtime="20220704 15:46:24.455"/>
</return>
<msg timestamp="20220704 15:46:24.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.393" endtime="20220704 15:46:24.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.456" endtime="20220704 15:46:24.456"/>
</return>
<msg timestamp="20220704 15:46:24.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.393" endtime="20220704 15:46:24.456"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:24.456" endtime="20220704 15:46:24.456"/>
</return>
<msg timestamp="20220704 15:46:24.457" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 15:46:24.456" endtime="20220704 15:46:24.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:24.457" endtime="20220704 15:46:24.458"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:24.471" level="INFO">${url} = checklists/62c30b509866bd5979ed038f</msg>
<status status="PASS" starttime="20220704 15:46:24.471" endtime="20220704 15:46:24.471"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:24.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.471" endtime="20220704 15:46:24.587"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.587" endtime="20220704 15:46:24.587"/>
</return>
<msg timestamp="20220704 15:46:24.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.470" endtime="20220704 15:46:24.587"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.587" endtime="20220704 15:46:24.587"/>
</return>
<status status="PASS" starttime="20220704 15:46:24.458" endtime="20220704 15:46:24.587"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:46:24.172" endtime="20220704 15:46:24.588"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:24.590" level="INFO">${url} = boards/62c30b4f02946349ed6504ee</msg>
<status status="PASS" starttime="20220704 15:46:24.590" endtime="20220704 15:46:24.590"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:24.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.590" endtime="20220704 15:46:24.925"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.925" endtime="20220704 15:46:24.925"/>
</return>
<msg timestamp="20220704 15:46:24.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.590" endtime="20220704 15:46:24.925"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:24.925" endtime="20220704 15:46:24.925"/>
</return>
<status status="PASS" starttime="20220704 15:46:24.589" endtime="20220704 15:46:24.926"/>
</kw>
<status status="PASS" starttime="20220704 15:46:24.589" endtime="20220704 15:46:24.926"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:46:24.926" endtime="20220704 15:46:24.927"/>
</kw>
<status status="PASS" starttime="20220704 15:46:24.589" endtime="20220704 15:46:24.927"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 15:46:23.024" endtime="20220704 15:46:24.927"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:46:24.939" endtime="20220704 15:46:24.939"/>
</kw>
<status status="PASS" starttime="20220704 15:46:24.939" endtime="20220704 15:46:24.939"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:24.940" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:24.940" endtime="20220704 15:46:24.940"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:24.940" endtime="20220704 15:46:24.941"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:24.941" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:46:24.941" endtime="20220704 15:46:24.941"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:25.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.941" endtime="20220704 15:46:25.113"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.113" endtime="20220704 15:46:25.113"/>
</return>
<msg timestamp="20220704 15:46:25.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.940" endtime="20220704 15:46:25.113"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.113" endtime="20220704 15:46:25.113"/>
</return>
<msg timestamp="20220704 15:46:25.114" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:24.940" endtime="20220704 15:46:25.114"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:46:25.115" level="INFO">${TEST_SUITE_BOARD_ID} = 62c30b51fcd9da4619b35eaa</msg>
<status status="PASS" starttime="20220704 15:46:25.114" endtime="20220704 15:46:25.115"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:25.161" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.115" endtime="20220704 15:46:25.161"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:46:25.162" level="INFO">${TEST_SUITE_LIST_ID} = 62c30b51fcd9da4619b35eb1</msg>
<status status="PASS" starttime="20220704 15:46:25.161" endtime="20220704 15:46:25.162"/>
</kw>
<status status="PASS" starttime="20220704 15:46:24.939" endtime="20220704 15:46:25.162"/>
</kw>
<status status="PASS" starttime="20220704 15:46:24.938" endtime="20220704 15:46:25.162"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:25.165" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:25.164" endtime="20220704 15:46:25.165"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:25.165" endtime="20220704 15:46:25.165"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:25.166" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 15:46:25.165" endtime="20220704 15:46:25.166"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:25.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.166" endtime="20220704 15:46:25.250"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.250" endtime="20220704 15:46:25.250"/>
</return>
<msg timestamp="20220704 15:46:25.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.164" endtime="20220704 15:46:25.251"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.251" endtime="20220704 15:46:25.251"/>
</return>
<msg timestamp="20220704 15:46:25.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.163" endtime="20220704 15:46:25.251"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:25.252" endtime="20220704 15:46:25.254"/>
</kw>
<status status="PASS" starttime="20220704 15:46:25.251" endtime="20220704 15:46:25.254"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:25.254" endtime="20220704 15:46:25.254"/>
</return>
<msg timestamp="20220704 15:46:25.255" level="INFO">${LABEL_ID} = 62c30b51920c9344019e7e0f</msg>
<status status="PASS" starttime="20220704 15:46:25.254" endtime="20220704 15:46:25.255"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:25.256" level="INFO">${url} = labels/62c30b51920c9344019e7e0f</msg>
<status status="PASS" starttime="20220704 15:46:25.256" endtime="20220704 15:46:25.256"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:25.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.256" endtime="20220704 15:46:25.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.307" endtime="20220704 15:46:25.307"/>
</return>
<msg timestamp="20220704 15:46:25.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.255" endtime="20220704 15:46:25.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.307" endtime="20220704 15:46:25.307"/>
</return>
<msg timestamp="20220704 15:46:25.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.255" endtime="20220704 15:46:25.307"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:25.308" endtime="20220704 15:46:25.308"/>
</return>
<msg timestamp="20220704 15:46:25.308" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 15:46:25.307" endtime="20220704 15:46:25.308"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:25.309" endtime="20220704 15:46:25.309"/>
</return>
<msg timestamp="20220704 15:46:25.309" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 15:46:25.308" endtime="20220704 15:46:25.309"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:25.310" endtime="20220704 15:46:25.310"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:25.310" endtime="20220704 15:46:25.310"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:25.312" level="INFO">${url} = labels/62c30b51920c9344019e7e0f</msg>
<status status="PASS" starttime="20220704 15:46:25.311" endtime="20220704 15:46:25.312"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:25.425" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.312" endtime="20220704 15:46:25.425"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.425" endtime="20220704 15:46:25.426"/>
</return>
<msg timestamp="20220704 15:46:25.426" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.311" endtime="20220704 15:46:25.426"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.426" endtime="20220704 15:46:25.426"/>
</return>
<status status="PASS" starttime="20220704 15:46:25.311" endtime="20220704 15:46:25.426"/>
</kw>
<status status="PASS" starttime="20220704 15:46:25.310" endtime="20220704 15:46:25.426"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:46:25.163" endtime="20220704 15:46:25.426"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:25.429" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:25.428" endtime="20220704 15:46:25.429"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:25.429" endtime="20220704 15:46:25.429"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:25.430" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 15:46:25.429" endtime="20220704 15:46:25.430"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:25.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.430" endtime="20220704 15:46:25.515"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.515" endtime="20220704 15:46:25.515"/>
</return>
<msg timestamp="20220704 15:46:25.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.428" endtime="20220704 15:46:25.515"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.515" endtime="20220704 15:46:25.515"/>
</return>
<msg timestamp="20220704 15:46:25.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.427" endtime="20220704 15:46:25.515"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:25.516" endtime="20220704 15:46:25.518"/>
</kw>
<status status="PASS" starttime="20220704 15:46:25.516" endtime="20220704 15:46:25.518"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:25.518" endtime="20220704 15:46:25.519"/>
</return>
<msg timestamp="20220704 15:46:25.519" level="INFO">${LABEL_ID} = 62c30b51d1a2672a13c4cf4c</msg>
<status status="PASS" starttime="20220704 15:46:25.518" endtime="20220704 15:46:25.519"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:25.520" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:25.520" endtime="20220704 15:46:25.520"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:25.520" endtime="20220704 15:46:25.521"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:25.521" level="INFO">${url} = labels/62c30b51d1a2672a13c4cf4c</msg>
<status status="PASS" starttime="20220704 15:46:25.521" endtime="20220704 15:46:25.521"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:25.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.521" endtime="20220704 15:46:25.630"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.630" endtime="20220704 15:46:25.630"/>
</return>
<msg timestamp="20220704 15:46:25.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.520" endtime="20220704 15:46:25.630"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.630" endtime="20220704 15:46:25.630"/>
</return>
<msg timestamp="20220704 15:46:25.631" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.519" endtime="20220704 15:46:25.631"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:25.631" endtime="20220704 15:46:25.631"/>
</return>
<msg timestamp="20220704 15:46:25.632" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 15:46:25.631" endtime="20220704 15:46:25.632"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:25.632" endtime="20220704 15:46:25.632"/>
</return>
<msg timestamp="20220704 15:46:25.633" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 15:46:25.632" endtime="20220704 15:46:25.633"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:25.633" endtime="20220704 15:46:25.633"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:25.633" endtime="20220704 15:46:25.633"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:25.635" level="INFO">${url} = labels/62c30b51d1a2672a13c4cf4c</msg>
<status status="PASS" starttime="20220704 15:46:25.635" endtime="20220704 15:46:25.635"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:25.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.636" endtime="20220704 15:46:25.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.744" endtime="20220704 15:46:25.744"/>
</return>
<msg timestamp="20220704 15:46:25.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.635" endtime="20220704 15:46:25.745"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.745" endtime="20220704 15:46:25.745"/>
</return>
<status status="PASS" starttime="20220704 15:46:25.634" endtime="20220704 15:46:25.745"/>
</kw>
<status status="PASS" starttime="20220704 15:46:25.634" endtime="20220704 15:46:25.745"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:46:25.427" endtime="20220704 15:46:25.745"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:25.747" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:25.747" endtime="20220704 15:46:25.747"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:25.747" endtime="20220704 15:46:25.748"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:25.749" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 15:46:25.748" endtime="20220704 15:46:25.749"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:25.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.749" endtime="20220704 15:46:25.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.830" endtime="20220704 15:46:25.830"/>
</return>
<msg timestamp="20220704 15:46:25.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.747" endtime="20220704 15:46:25.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.830" endtime="20220704 15:46:25.830"/>
</return>
<msg timestamp="20220704 15:46:25.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.746" endtime="20220704 15:46:25.830"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:46:25.831" endtime="20220704 15:46:25.831"/>
</return>
<msg timestamp="20220704 15:46:25.832" level="INFO">${LABEL_ID} = 62c30b51487c3041470540b6</msg>
<status status="PASS" starttime="20220704 15:46:25.831" endtime="20220704 15:46:25.832"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:25.834" level="INFO">${url} = labels/62c30b51487c3041470540b6</msg>
<status status="PASS" starttime="20220704 15:46:25.833" endtime="20220704 15:46:25.834"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:25.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.834" endtime="20220704 15:46:25.956"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.956" endtime="20220704 15:46:25.957"/>
</return>
<msg timestamp="20220704 15:46:25.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:25.833" endtime="20220704 15:46:25.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.957" endtime="20220704 15:46:25.957"/>
</return>
<status status="PASS" starttime="20220704 15:46:25.832" endtime="20220704 15:46:25.957"/>
</kw>
<status status="PASS" starttime="20220704 15:46:25.832" endtime="20220704 15:46:25.957"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:25.959" level="INFO">${url} = labels/62c30b51487c3041470540b6</msg>
<status status="PASS" starttime="20220704 15:46:25.958" endtime="20220704 15:46:25.959"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:25.999" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:46:25.959" endtime="20220704 15:46:25.999"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:25.999" endtime="20220704 15:46:25.999"/>
</return>
<msg timestamp="20220704 15:46:25.999" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:46:25.958" endtime="20220704 15:46:25.999"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:26.000" endtime="20220704 15:46:26.000"/>
</return>
<status status="PASS" starttime="20220704 15:46:25.957" endtime="20220704 15:46:26.000"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:46:25.745" endtime="20220704 15:46:26.000"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:26.003" level="INFO">${url} = boards/62c30b51fcd9da4619b35eaa</msg>
<status status="PASS" starttime="20220704 15:46:26.002" endtime="20220704 15:46:26.003"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:26.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.003" endtime="20220704 15:46:26.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:26.321" endtime="20220704 15:46:26.321"/>
</return>
<msg timestamp="20220704 15:46:26.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.002" endtime="20220704 15:46:26.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:26.321" endtime="20220704 15:46:26.321"/>
</return>
<status status="PASS" starttime="20220704 15:46:26.001" endtime="20220704 15:46:26.322"/>
</kw>
<status status="PASS" starttime="20220704 15:46:26.001" endtime="20220704 15:46:26.322"/>
</kw>
<status status="PASS" starttime="20220704 15:46:26.001" endtime="20220704 15:46:26.322"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:46:26.322" endtime="20220704 15:46:26.323"/>
</kw>
<status status="PASS" starttime="20220704 15:46:26.001" endtime="20220704 15:46:26.323"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 15:46:24.929" endtime="20220704 15:46:26.323"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:46:26.333" endtime="20220704 15:46:26.333"/>
</kw>
<status status="PASS" starttime="20220704 15:46:26.333" endtime="20220704 15:46:26.333"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:26.334" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:26.334" endtime="20220704 15:46:26.335"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:26.335" endtime="20220704 15:46:26.335"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:26.336" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:46:26.335" endtime="20220704 15:46:26.336"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:26.562" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.336" endtime="20220704 15:46:26.562"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:26.562" endtime="20220704 15:46:26.562"/>
</return>
<msg timestamp="20220704 15:46:26.562" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.334" endtime="20220704 15:46:26.562"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:26.562" endtime="20220704 15:46:26.562"/>
</return>
<msg timestamp="20220704 15:46:26.562" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.334" endtime="20220704 15:46:26.562"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:46:26.564" level="INFO">${TEST_SUITE_BOARD_ID} = 62c30b5266af4c7ffee8c884</msg>
<status status="PASS" starttime="20220704 15:46:26.563" endtime="20220704 15:46:26.564"/>
</kw>
<status status="PASS" starttime="20220704 15:46:26.563" endtime="20220704 15:46:26.564"/>
</kw>
<status status="PASS" starttime="20220704 15:46:26.334" endtime="20220704 15:46:26.564"/>
</kw>
<status status="PASS" starttime="20220704 15:46:26.333" endtime="20220704 15:46:26.564"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:26.566" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:26.566" endtime="20220704 15:46:26.566"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:26.566" endtime="20220704 15:46:26.566"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:26.567" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 15:46:26.566" endtime="20220704 15:46:26.567"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:26.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.567" endtime="20220704 15:46:26.662"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:26.662" endtime="20220704 15:46:26.662"/>
</return>
<msg timestamp="20220704 15:46:26.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.565" endtime="20220704 15:46:26.663"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:26.663" endtime="20220704 15:46:26.663"/>
</return>
<msg timestamp="20220704 15:46:26.663" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.565" endtime="20220704 15:46:26.663"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:26.663" endtime="20220704 15:46:26.665"/>
</kw>
<status status="PASS" starttime="20220704 15:46:26.663" endtime="20220704 15:46:26.665"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:46:26.564" endtime="20220704 15:46:26.666"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:26.668" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:26.667" endtime="20220704 15:46:26.668"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:26.668" endtime="20220704 15:46:26.668"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:26.669" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 15:46:26.668" endtime="20220704 15:46:26.669"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:26.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.669" endtime="20220704 15:46:26.764"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:26.764" endtime="20220704 15:46:26.764"/>
</return>
<msg timestamp="20220704 15:46:26.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.667" endtime="20220704 15:46:26.764"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:26.764" endtime="20220704 15:46:26.764"/>
</return>
<msg timestamp="20220704 15:46:26.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.666" endtime="20220704 15:46:26.764"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:26.765" endtime="20220704 15:46:26.767"/>
</kw>
<status status="PASS" starttime="20220704 15:46:26.764" endtime="20220704 15:46:26.767"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:26.769" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:26.769" endtime="20220704 15:46:26.769"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:26.769" endtime="20220704 15:46:26.769"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:26.770" level="INFO">${url} = lists/62c30b523f11b3742ff8a25a</msg>
<status status="PASS" starttime="20220704 15:46:26.769" endtime="20220704 15:46:26.770"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:26.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.770" endtime="20220704 15:46:26.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:26.847" endtime="20220704 15:46:26.847"/>
</return>
<msg timestamp="20220704 15:46:26.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.768" endtime="20220704 15:46:26.848"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:26.848" endtime="20220704 15:46:26.848"/>
</return>
<status status="PASS" starttime="20220704 15:46:26.767" endtime="20220704 15:46:26.848"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:26.850" level="INFO">${url} = lists/62c30b523f11b3742ff8a25a</msg>
<status status="PASS" starttime="20220704 15:46:26.850" endtime="20220704 15:46:26.850"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:26.898" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.850" endtime="20220704 15:46:26.898"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:26.899" endtime="20220704 15:46:26.899"/>
</return>
<msg timestamp="20220704 15:46:26.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.849" endtime="20220704 15:46:26.899"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:26.899" endtime="20220704 15:46:26.899"/>
</return>
<msg timestamp="20220704 15:46:26.899" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.848" endtime="20220704 15:46:26.899"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:46:26.900" endtime="20220704 15:46:26.902"/>
</kw>
<status status="PASS" starttime="20220704 15:46:26.899" endtime="20220704 15:46:26.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:46:26.902" endtime="20220704 15:46:26.902"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:46:26.666" endtime="20220704 15:46:26.903"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:26.906" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:26.906" endtime="20220704 15:46:26.906"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:26.906" endtime="20220704 15:46:26.906"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:26.907" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 15:46:26.906" endtime="20220704 15:46:26.907"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:27.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.907" endtime="20220704 15:46:27.005"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:27.005" endtime="20220704 15:46:27.005"/>
</return>
<msg timestamp="20220704 15:46:27.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.905" endtime="20220704 15:46:27.005"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:27.005" endtime="20220704 15:46:27.006"/>
</return>
<msg timestamp="20220704 15:46:27.006" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:26.903" endtime="20220704 15:46:27.006"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:46:27.008" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:46:27.008" endtime="20220704 15:46:27.008"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:46:27.008" endtime="20220704 15:46:27.008"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:27.009" level="INFO">${url} = lists/62c30b52b6e3e555c5a6fbcb/closed</msg>
<status status="PASS" starttime="20220704 15:46:27.008" endtime="20220704 15:46:27.009"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:46:27.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:27.009" endtime="20220704 15:46:27.091"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:27.091" endtime="20220704 15:46:27.091"/>
</return>
<msg timestamp="20220704 15:46:27.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:27.007" endtime="20220704 15:46:27.091"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:27.091" endtime="20220704 15:46:27.091"/>
</return>
<status status="PASS" starttime="20220704 15:46:27.006" endtime="20220704 15:46:27.091"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:27.093" level="INFO">${url} = lists/62c30b52b6e3e555c5a6fbcb</msg>
<status status="PASS" starttime="20220704 15:46:27.093" endtime="20220704 15:46:27.093"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:46:27.138" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:27.093" endtime="20220704 15:46:27.138"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:27.138" endtime="20220704 15:46:27.138"/>
</return>
<msg timestamp="20220704 15:46:27.138" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:27.092" endtime="20220704 15:46:27.138"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:27.138" endtime="20220704 15:46:27.138"/>
</return>
<msg timestamp="20220704 15:46:27.138" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:27.091" endtime="20220704 15:46:27.138"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 15:46:27.139" endtime="20220704 15:46:27.139"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:46:26.903" endtime="20220704 15:46:27.140"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:46:27.142" level="INFO">${url} = boards/62c30b5266af4c7ffee8c884</msg>
<status status="PASS" starttime="20220704 15:46:27.142" endtime="20220704 15:46:27.142"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:46:27.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:27.142" endtime="20220704 15:46:27.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:27.459" endtime="20220704 15:46:27.459"/>
</return>
<msg timestamp="20220704 15:46:27.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:46:27.142" endtime="20220704 15:46:27.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:46:27.460" endtime="20220704 15:46:27.460"/>
</return>
<status status="PASS" starttime="20220704 15:46:27.141" endtime="20220704 15:46:27.460"/>
</kw>
<status status="PASS" starttime="20220704 15:46:27.141" endtime="20220704 15:46:27.460"/>
</kw>
<status status="PASS" starttime="20220704 15:46:27.140" endtime="20220704 15:46:27.460"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:46:27.460" endtime="20220704 15:46:27.461"/>
</kw>
<status status="PASS" starttime="20220704 15:46:27.140" endtime="20220704 15:46:27.461"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 15:46:26.325" endtime="20220704 15:46:27.461"/>
</suite>
<status status="PASS" starttime="20220704 15:46:16.807" endtime="20220704 15:46:27.464"/>
</suite>
<status status="PASS" starttime="20220704 15:46:16.790" endtime="20220704 15:46:27.467"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
