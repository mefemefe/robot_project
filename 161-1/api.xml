<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 19:18:29.568" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 19:18:29.696" endtime="20220705 19:18:29.697"/>
</kw>
<status status="PASS" starttime="20220705 19:18:29.695" endtime="20220705 19:18:29.697"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:29.699" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:29.698" endtime="20220705 19:18:29.699"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:29.699" endtime="20220705 19:18:29.699"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:29.700" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 19:18:29.699" endtime="20220705 19:18:29.700"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:29.927" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:29.700" endtime="20220705 19:18:29.927"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:29.928" endtime="20220705 19:18:29.928"/>
</return>
<msg timestamp="20220705 19:18:29.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:29.698" endtime="20220705 19:18:29.928"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:29.928" endtime="20220705 19:18:29.928"/>
</return>
<msg timestamp="20220705 19:18:29.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:29.698" endtime="20220705 19:18:29.928"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:29.929" endtime="20220705 19:18:29.933"/>
</kw>
<status status="PASS" starttime="20220705 19:18:29.928" endtime="20220705 19:18:29.933"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:29.935" level="INFO">${url} = boards/62c48e8554a20c8cba836b31</msg>
<status status="PASS" starttime="20220705 19:18:29.935" endtime="20220705 19:18:29.936"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:30.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:29.936" endtime="20220705 19:18:30.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:30.297" endtime="20220705 19:18:30.297"/>
</return>
<msg timestamp="20220705 19:18:30.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:29.935" endtime="20220705 19:18:30.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:30.298" endtime="20220705 19:18:30.298"/>
</return>
<status status="PASS" starttime="20220705 19:18:29.934" endtime="20220705 19:18:30.298"/>
</kw>
<status status="PASS" starttime="20220705 19:18:29.934" endtime="20220705 19:18:30.298"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 19:18:29.697" endtime="20220705 19:18:30.298"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:30.301" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:30.300" endtime="20220705 19:18:30.301"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:30.301" endtime="20220705 19:18:30.301"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:30.302" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 19:18:30.301" endtime="20220705 19:18:30.302"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:30.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:30.302" endtime="20220705 19:18:30.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:30.491" endtime="20220705 19:18:30.491"/>
</return>
<msg timestamp="20220705 19:18:30.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:30.300" endtime="20220705 19:18:30.492"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:30.492" endtime="20220705 19:18:30.492"/>
</return>
<msg timestamp="20220705 19:18:30.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:30.299" endtime="20220705 19:18:30.492"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:30.493" endtime="20220705 19:18:30.497"/>
</kw>
<status status="PASS" starttime="20220705 19:18:30.492" endtime="20220705 19:18:30.497"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:30.499" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:30.498" endtime="20220705 19:18:30.499"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:30.499" endtime="20220705 19:18:30.499"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:30.499" level="INFO">${url} = boards/62c48e869843e15e674f20cd</msg>
<status status="PASS" starttime="20220705 19:18:30.499" endtime="20220705 19:18:30.499"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:30.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:30.499" endtime="20220705 19:18:30.604"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:30.604" endtime="20220705 19:18:30.604"/>
</return>
<msg timestamp="20220705 19:18:30.605" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:30.498" endtime="20220705 19:18:30.605"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:30.605" endtime="20220705 19:18:30.605"/>
</return>
<status status="PASS" starttime="20220705 19:18:30.497" endtime="20220705 19:18:30.605"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:30.607" level="INFO">${url} = boards/62c48e869843e15e674f20cd</msg>
<status status="PASS" starttime="20220705 19:18:30.607" endtime="20220705 19:18:30.607"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:30.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:30.607" endtime="20220705 19:18:30.662"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:30.662" endtime="20220705 19:18:30.662"/>
</return>
<msg timestamp="20220705 19:18:30.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:30.606" endtime="20220705 19:18:30.662"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:30.662" endtime="20220705 19:18:30.662"/>
</return>
<msg timestamp="20220705 19:18:30.662" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:30.605" endtime="20220705 19:18:30.663"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:30.663" endtime="20220705 19:18:30.668"/>
</kw>
<status status="PASS" starttime="20220705 19:18:30.663" endtime="20220705 19:18:30.668"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:30.668" endtime="20220705 19:18:30.669"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:30.671" level="INFO">${url} = boards/62c48e869843e15e674f20cd</msg>
<status status="PASS" starttime="20220705 19:18:30.670" endtime="20220705 19:18:30.671"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:31.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:30.671" endtime="20220705 19:18:31.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:31.027" endtime="20220705 19:18:31.027"/>
</return>
<msg timestamp="20220705 19:18:31.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:30.670" endtime="20220705 19:18:31.028"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:31.028" endtime="20220705 19:18:31.028"/>
</return>
<status status="PASS" starttime="20220705 19:18:30.669" endtime="20220705 19:18:31.028"/>
</kw>
<status status="PASS" starttime="20220705 19:18:30.669" endtime="20220705 19:18:31.028"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 19:18:30.298" endtime="20220705 19:18:31.028"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:31.030" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:31.030" endtime="20220705 19:18:31.030"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:31.031" endtime="20220705 19:18:31.031"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:31.031" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 19:18:31.031" endtime="20220705 19:18:31.032"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:31.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:31.032" endtime="20220705 19:18:31.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:31.314" endtime="20220705 19:18:31.314"/>
</return>
<msg timestamp="20220705 19:18:31.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:31.030" endtime="20220705 19:18:31.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:31.314" endtime="20220705 19:18:31.314"/>
</return>
<msg timestamp="20220705 19:18:31.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:31.029" endtime="20220705 19:18:31.314"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:31.317" level="INFO">${url} = boards/62c48e8728a9ed5c8f0e309a</msg>
<status status="PASS" starttime="20220705 19:18:31.316" endtime="20220705 19:18:31.317"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:31.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:31.317" endtime="20220705 19:18:31.659"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:31.659" endtime="20220705 19:18:31.659"/>
</return>
<msg timestamp="20220705 19:18:31.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:31.316" endtime="20220705 19:18:31.659"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:31.659" endtime="20220705 19:18:31.659"/>
</return>
<status status="PASS" starttime="20220705 19:18:31.315" endtime="20220705 19:18:31.659"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:31.661" level="INFO">${url} = boards/62c48e8728a9ed5c8f0e309a</msg>
<status status="PASS" starttime="20220705 19:18:31.661" endtime="20220705 19:18:31.661"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:31.694" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 19:18:31.661" endtime="20220705 19:18:31.694"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:31.694" endtime="20220705 19:18:31.694"/>
</return>
<msg timestamp="20220705 19:18:31.695" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 19:18:31.660" endtime="20220705 19:18:31.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:31.695" endtime="20220705 19:18:31.695"/>
</return>
<status status="PASS" starttime="20220705 19:18:31.659" endtime="20220705 19:18:31.695"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 19:18:31.029" endtime="20220705 19:18:31.695"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:31.698" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:31.697" endtime="20220705 19:18:31.698"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:31.698" endtime="20220705 19:18:31.698"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:31.699" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 19:18:31.698" endtime="20220705 19:18:31.699"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:31.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:31.699" endtime="20220705 19:18:31.862"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:31.862" endtime="20220705 19:18:31.862"/>
</return>
<msg timestamp="20220705 19:18:31.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:31.697" endtime="20220705 19:18:31.862"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:31.862" endtime="20220705 19:18:31.862"/>
</return>
<msg timestamp="20220705 19:18:31.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:31.696" endtime="20220705 19:18:31.863"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:31.863" endtime="20220705 19:18:31.867"/>
</kw>
<status status="PASS" starttime="20220705 19:18:31.863" endtime="20220705 19:18:31.867"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:31.869" level="INFO">${url} = boards/62c48e879904a404b0fc0a4d</msg>
<status status="PASS" starttime="20220705 19:18:31.869" endtime="20220705 19:18:31.869"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:31.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:31.869" endtime="20220705 19:18:31.919"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:31.919" endtime="20220705 19:18:31.919"/>
</return>
<msg timestamp="20220705 19:18:31.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:31.868" endtime="20220705 19:18:31.920"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:31.920" endtime="20220705 19:18:31.920"/>
</return>
<msg timestamp="20220705 19:18:31.920" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:31.867" endtime="20220705 19:18:31.920"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:31.921" endtime="20220705 19:18:31.925"/>
</kw>
<status status="PASS" starttime="20220705 19:18:31.920" endtime="20220705 19:18:31.925"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:31.925" endtime="20220705 19:18:31.926"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:31.928" level="INFO">${url} = boards/62c48e879904a404b0fc0a4d</msg>
<status status="PASS" starttime="20220705 19:18:31.927" endtime="20220705 19:18:31.928"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:32.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:31.928" endtime="20220705 19:18:32.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:32.307" endtime="20220705 19:18:32.307"/>
</return>
<msg timestamp="20220705 19:18:32.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:31.927" endtime="20220705 19:18:32.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:32.307" endtime="20220705 19:18:32.307"/>
</return>
<status status="PASS" starttime="20220705 19:18:31.926" endtime="20220705 19:18:32.307"/>
</kw>
<status status="PASS" starttime="20220705 19:18:31.926" endtime="20220705 19:18:32.307"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 19:18:31.695" endtime="20220705 19:18:32.308"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:32.311" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:32.310" endtime="20220705 19:18:32.311"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:32.311" endtime="20220705 19:18:32.311"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:32.312" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 19:18:32.311" endtime="20220705 19:18:32.312"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:32.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.312" endtime="20220705 19:18:32.479"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:32.479" endtime="20220705 19:18:32.479"/>
</return>
<msg timestamp="20220705 19:18:32.479" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.310" endtime="20220705 19:18:32.479"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:32.479" endtime="20220705 19:18:32.479"/>
</return>
<msg timestamp="20220705 19:18:32.479" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.309" endtime="20220705 19:18:32.479"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:32.480" endtime="20220705 19:18:32.484"/>
</kw>
<status status="PASS" starttime="20220705 19:18:32.479" endtime="20220705 19:18:32.484"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:32.486" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:32.486" endtime="20220705 19:18:32.486"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:32.486" endtime="20220705 19:18:32.486"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:32.487" level="INFO">${url} = boards/62c48e8846fef3817b3cbe5d</msg>
<status status="PASS" starttime="20220705 19:18:32.486" endtime="20220705 19:18:32.487"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:32.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.487" endtime="20220705 19:18:32.593"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:32.593" endtime="20220705 19:18:32.593"/>
</return>
<msg timestamp="20220705 19:18:32.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.485" endtime="20220705 19:18:32.593"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:32.593" endtime="20220705 19:18:32.593"/>
</return>
<status status="PASS" starttime="20220705 19:18:32.484" endtime="20220705 19:18:32.593"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:32.595" level="INFO">${url} = boards/62c48e8846fef3817b3cbe5d</msg>
<status status="PASS" starttime="20220705 19:18:32.595" endtime="20220705 19:18:32.596"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:32.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.596" endtime="20220705 19:18:32.661"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:32.661" endtime="20220705 19:18:32.661"/>
</return>
<msg timestamp="20220705 19:18:32.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.595" endtime="20220705 19:18:32.661"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:32.661" endtime="20220705 19:18:32.661"/>
</return>
<msg timestamp="20220705 19:18:32.662" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.594" endtime="20220705 19:18:32.662"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:32.662" endtime="20220705 19:18:32.663"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:32.665" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:32.664" endtime="20220705 19:18:32.665"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:32.665" endtime="20220705 19:18:32.665"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:32.665" level="INFO">${url} = boards/62c48e8846fef3817b3cbe5d</msg>
<status status="PASS" starttime="20220705 19:18:32.665" endtime="20220705 19:18:32.666"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:32.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.666" endtime="20220705 19:18:32.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:32.773" endtime="20220705 19:18:32.773"/>
</return>
<msg timestamp="20220705 19:18:32.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.664" endtime="20220705 19:18:32.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:32.774" endtime="20220705 19:18:32.774"/>
</return>
<status status="PASS" starttime="20220705 19:18:32.663" endtime="20220705 19:18:32.774"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:32.776" level="INFO">${url} = boards/62c48e8846fef3817b3cbe5d</msg>
<status status="PASS" starttime="20220705 19:18:32.775" endtime="20220705 19:18:32.776"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:32.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.776" endtime="20220705 19:18:32.829"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:32.829" endtime="20220705 19:18:32.829"/>
</return>
<msg timestamp="20220705 19:18:32.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.775" endtime="20220705 19:18:32.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:32.830" endtime="20220705 19:18:32.830"/>
</return>
<msg timestamp="20220705 19:18:32.831" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.774" endtime="20220705 19:18:32.832"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:32.832" endtime="20220705 19:18:32.833"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:32.835" level="INFO">${url} = boards/62c48e8846fef3817b3cbe5d</msg>
<status status="PASS" starttime="20220705 19:18:32.835" endtime="20220705 19:18:32.835"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:33.209" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.835" endtime="20220705 19:18:33.209"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:33.209" endtime="20220705 19:18:33.209"/>
</return>
<msg timestamp="20220705 19:18:33.210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:32.834" endtime="20220705 19:18:33.210"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:33.210" endtime="20220705 19:18:33.210"/>
</return>
<status status="PASS" starttime="20220705 19:18:32.833" endtime="20220705 19:18:33.210"/>
</kw>
<status status="PASS" starttime="20220705 19:18:32.833" endtime="20220705 19:18:33.210"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 19:18:32.309" endtime="20220705 19:18:33.210"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 19:18:33.212" endtime="20220705 19:18:33.213"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 19:18:29.588" endtime="20220705 19:18:33.213"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 19:18:33.225" endtime="20220705 19:18:33.225"/>
</kw>
<status status="PASS" starttime="20220705 19:18:33.225" endtime="20220705 19:18:33.225"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:33.226" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:33.226" endtime="20220705 19:18:33.226"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:33.226" endtime="20220705 19:18:33.227"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:33.227" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 19:18:33.227" endtime="20220705 19:18:33.227"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:33.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.227" endtime="20220705 19:18:33.438"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:33.438" endtime="20220705 19:18:33.438"/>
</return>
<msg timestamp="20220705 19:18:33.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.226" endtime="20220705 19:18:33.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:33.439" endtime="20220705 19:18:33.439"/>
</return>
<msg timestamp="20220705 19:18:33.439" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.226" endtime="20220705 19:18:33.439"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 19:18:33.440" level="INFO">${TEST_SUITE_BOARD_ID} = 62c48e898540401b70bea7df</msg>
<status status="PASS" starttime="20220705 19:18:33.439" endtime="20220705 19:18:33.440"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:33.441" level="INFO">${url} = boards/62c48e898540401b70bea7df/lists/</msg>
<status status="PASS" starttime="20220705 19:18:33.441" endtime="20220705 19:18:33.441"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:33.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.441" endtime="20220705 19:18:33.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:33.488" endtime="20220705 19:18:33.488"/>
</return>
<msg timestamp="20220705 19:18:33.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.440" endtime="20220705 19:18:33.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:33.488" endtime="20220705 19:18:33.488"/>
</return>
<msg timestamp="20220705 19:18:33.488" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.440" endtime="20220705 19:18:33.489"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 19:18:33.490" level="INFO">${TEST_SUITE_LIST_ID} = 62c48e898540401b70bea7e6</msg>
<status status="PASS" starttime="20220705 19:18:33.489" endtime="20220705 19:18:33.490"/>
</kw>
<status status="PASS" starttime="20220705 19:18:33.225" endtime="20220705 19:18:33.490"/>
</kw>
<status status="PASS" starttime="20220705 19:18:33.225" endtime="20220705 19:18:33.490"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:33.492" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:33.492" endtime="20220705 19:18:33.492"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:33.492" endtime="20220705 19:18:33.492"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:33.493" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 19:18:33.492" endtime="20220705 19:18:33.493"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:33.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.493" endtime="20220705 19:18:33.673"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:33.673" endtime="20220705 19:18:33.673"/>
</return>
<msg timestamp="20220705 19:18:33.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.491" endtime="20220705 19:18:33.673"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:33.673" endtime="20220705 19:18:33.673"/>
</return>
<msg timestamp="20220705 19:18:33.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.491" endtime="20220705 19:18:33.674"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:33.674" endtime="20220705 19:18:33.679"/>
</kw>
<status status="PASS" starttime="20220705 19:18:33.674" endtime="20220705 19:18:33.679"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:33.680" endtime="20220705 19:18:33.680"/>
</return>
<msg timestamp="20220705 19:18:33.681" level="INFO">${CARD_ID} = 62c48e897fd4bb5a070eb722</msg>
<status status="PASS" starttime="20220705 19:18:33.679" endtime="20220705 19:18:33.681"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:33.682" level="INFO">${url} = cards/62c48e897fd4bb5a070eb722</msg>
<status status="PASS" starttime="20220705 19:18:33.681" endtime="20220705 19:18:33.682"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:33.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.682" endtime="20220705 19:18:33.738"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:33.738" endtime="20220705 19:18:33.738"/>
</return>
<msg timestamp="20220705 19:18:33.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.681" endtime="20220705 19:18:33.739"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:33.739" endtime="20220705 19:18:33.739"/>
</return>
<msg timestamp="20220705 19:18:33.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.681" endtime="20220705 19:18:33.739"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:33.739" endtime="20220705 19:18:33.739"/>
</return>
<msg timestamp="20220705 19:18:33.740" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 19:18:33.739" endtime="20220705 19:18:33.740"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:33.740" endtime="20220705 19:18:33.741"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:33.742" level="INFO">${url} = cards/62c48e897fd4bb5a070eb722</msg>
<status status="PASS" starttime="20220705 19:18:33.742" endtime="20220705 19:18:33.742"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:33.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.742" endtime="20220705 19:18:33.920"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:33.920" endtime="20220705 19:18:33.920"/>
</return>
<msg timestamp="20220705 19:18:33.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.741" endtime="20220705 19:18:33.920"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:33.920" endtime="20220705 19:18:33.920"/>
</return>
<status status="PASS" starttime="20220705 19:18:33.741" endtime="20220705 19:18:33.920"/>
</kw>
<status status="PASS" starttime="20220705 19:18:33.741" endtime="20220705 19:18:33.920"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 19:18:33.490" endtime="20220705 19:18:33.920"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:33.923" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:33.923" endtime="20220705 19:18:33.923"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:33.923" endtime="20220705 19:18:33.923"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:33.924" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 19:18:33.923" endtime="20220705 19:18:33.924"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:34.074" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.924" endtime="20220705 19:18:34.074"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.074" endtime="20220705 19:18:34.075"/>
</return>
<msg timestamp="20220705 19:18:34.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.922" endtime="20220705 19:18:34.075"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.075" endtime="20220705 19:18:34.075"/>
</return>
<msg timestamp="20220705 19:18:34.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:33.921" endtime="20220705 19:18:34.075"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:34.076" endtime="20220705 19:18:34.076"/>
</return>
<msg timestamp="20220705 19:18:34.077" level="INFO">${CARD_ID} = 62c48e89edaec956d66538a5</msg>
<status status="PASS" starttime="20220705 19:18:34.075" endtime="20220705 19:18:34.077"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:34.079" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:34.079" endtime="20220705 19:18:34.079"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:34.079" endtime="20220705 19:18:34.079"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:34.080" level="INFO">${url} = cards/62c48e89edaec956d66538a5</msg>
<status status="PASS" starttime="20220705 19:18:34.079" endtime="20220705 19:18:34.080"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:34.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.080" endtime="20220705 19:18:34.212"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.212" endtime="20220705 19:18:34.212"/>
</return>
<msg timestamp="20220705 19:18:34.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.078" endtime="20220705 19:18:34.212"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.212" endtime="20220705 19:18:34.212"/>
</return>
<msg timestamp="20220705 19:18:34.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.077" endtime="20220705 19:18:34.212"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.212" endtime="20220705 19:18:34.212"/>
</return>
<status status="PASS" starttime="20220705 19:18:34.077" endtime="20220705 19:18:34.213"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:34.214" level="INFO">${url} = cards/62c48e89edaec956d66538a5</msg>
<status status="PASS" starttime="20220705 19:18:34.214" endtime="20220705 19:18:34.214"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:34.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.214" endtime="20220705 19:18:34.271"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.271" endtime="20220705 19:18:34.271"/>
</return>
<msg timestamp="20220705 19:18:34.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.213" endtime="20220705 19:18:34.272"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.272" endtime="20220705 19:18:34.272"/>
</return>
<msg timestamp="20220705 19:18:34.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.213" endtime="20220705 19:18:34.272"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:34.272" endtime="20220705 19:18:34.272"/>
</return>
<msg timestamp="20220705 19:18:34.273" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 19:18:34.272" endtime="20220705 19:18:34.273"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 19:18:34.273" endtime="20220705 19:18:34.274"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:34.275" level="INFO">${url} = cards/62c48e89edaec956d66538a5</msg>
<status status="PASS" starttime="20220705 19:18:34.275" endtime="20220705 19:18:34.275"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:34.474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.275" endtime="20220705 19:18:34.474"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.474" endtime="20220705 19:18:34.475"/>
</return>
<msg timestamp="20220705 19:18:34.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.274" endtime="20220705 19:18:34.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.475" endtime="20220705 19:18:34.475"/>
</return>
<status status="PASS" starttime="20220705 19:18:34.274" endtime="20220705 19:18:34.475"/>
</kw>
<status status="PASS" starttime="20220705 19:18:34.274" endtime="20220705 19:18:34.475"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 19:18:33.921" endtime="20220705 19:18:34.475"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:34.478" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:34.478" endtime="20220705 19:18:34.478"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:34.478" endtime="20220705 19:18:34.479"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:34.479" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 19:18:34.479" endtime="20220705 19:18:34.479"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:34.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.479" endtime="20220705 19:18:34.677"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.677" endtime="20220705 19:18:34.677"/>
</return>
<msg timestamp="20220705 19:18:34.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.477" endtime="20220705 19:18:34.678"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.678" endtime="20220705 19:18:34.678"/>
</return>
<msg timestamp="20220705 19:18:34.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.476" endtime="20220705 19:18:34.678"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:34.678" endtime="20220705 19:18:34.678"/>
</return>
<msg timestamp="20220705 19:18:34.679" level="INFO">${CARD_ID} = 62c48e8a9f2efd2d64fdf340</msg>
<status status="PASS" starttime="20220705 19:18:34.678" endtime="20220705 19:18:34.679"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:34.683" level="INFO">${url} = cards/62c48e8a9f2efd2d64fdf340</msg>
<status status="PASS" starttime="20220705 19:18:34.683" endtime="20220705 19:18:34.683"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:34.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.683" endtime="20220705 19:18:34.831"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.831" endtime="20220705 19:18:34.831"/>
</return>
<msg timestamp="20220705 19:18:34.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.680" endtime="20220705 19:18:34.832"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.832" endtime="20220705 19:18:34.832"/>
</return>
<msg timestamp="20220705 19:18:34.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.679" endtime="20220705 19:18:34.832"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:34.833" endtime="20220705 19:18:34.835"/>
</kw>
<status status="PASS" starttime="20220705 19:18:34.832" endtime="20220705 19:18:34.835"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:34.836" level="INFO">${url} = cards/62c48e8a9f2efd2d64fdf340</msg>
<status status="PASS" starttime="20220705 19:18:34.836" endtime="20220705 19:18:34.836"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:34.877" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 19:18:34.836" endtime="20220705 19:18:34.877"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.877" endtime="20220705 19:18:34.877"/>
</return>
<msg timestamp="20220705 19:18:34.877" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 19:18:34.835" endtime="20220705 19:18:34.877"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:34.877" endtime="20220705 19:18:34.877"/>
</return>
<status status="PASS" starttime="20220705 19:18:34.835" endtime="20220705 19:18:34.878"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 19:18:34.476" endtime="20220705 19:18:34.878"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:34.881" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:34.880" endtime="20220705 19:18:34.881"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:34.881" endtime="20220705 19:18:34.881"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:34.882" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 19:18:34.881" endtime="20220705 19:18:34.882"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:35.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.882" endtime="20220705 19:18:35.028"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:35.028" endtime="20220705 19:18:35.028"/>
</return>
<msg timestamp="20220705 19:18:35.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.880" endtime="20220705 19:18:35.028"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:35.028" endtime="20220705 19:18:35.028"/>
</return>
<msg timestamp="20220705 19:18:35.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:34.879" endtime="20220705 19:18:35.029"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:35.029" endtime="20220705 19:18:35.029"/>
</return>
<msg timestamp="20220705 19:18:35.030" level="INFO">${CARD_ID} = 62c48e8abaa73a2894500236</msg>
<status status="PASS" starttime="20220705 19:18:35.029" endtime="20220705 19:18:35.030"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:35.031" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:35.031" endtime="20220705 19:18:35.031"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:35.031" endtime="20220705 19:18:35.032"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:35.032" level="INFO">${url} = cards/62c48e8abaa73a2894500236</msg>
<status status="PASS" starttime="20220705 19:18:35.032" endtime="20220705 19:18:35.032"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:35.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:35.032" endtime="20220705 19:18:35.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:35.233" endtime="20220705 19:18:35.233"/>
</return>
<msg timestamp="20220705 19:18:35.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:35.030" endtime="20220705 19:18:35.234"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:35.234" endtime="20220705 19:18:35.234"/>
</return>
<msg timestamp="20220705 19:18:35.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:35.030" endtime="20220705 19:18:35.234"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:35.235" endtime="20220705 19:18:35.240"/>
</kw>
<status status="PASS" starttime="20220705 19:18:35.234" endtime="20220705 19:18:35.240"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:35.241" level="INFO">${url} = cards/62c48e8abaa73a2894500236</msg>
<status status="PASS" starttime="20220705 19:18:35.241" endtime="20220705 19:18:35.241"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:35.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:35.241" endtime="20220705 19:18:35.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:35.307" endtime="20220705 19:18:35.307"/>
</return>
<msg timestamp="20220705 19:18:35.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:35.240" endtime="20220705 19:18:35.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:35.308" endtime="20220705 19:18:35.308"/>
</return>
<msg timestamp="20220705 19:18:35.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:35.240" endtime="20220705 19:18:35.308"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:35.308" endtime="20220705 19:18:35.308"/>
</return>
<msg timestamp="20220705 19:18:35.309" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 19:18:35.308" endtime="20220705 19:18:35.309"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:35.310" endtime="20220705 19:18:35.310"/>
</return>
<msg timestamp="20220705 19:18:35.310" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 19:18:35.309" endtime="20220705 19:18:35.311"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:35.311" endtime="20220705 19:18:35.311"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:35.311" endtime="20220705 19:18:35.311"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:35.313" level="INFO">${url} = cards/62c48e8abaa73a2894500236</msg>
<status status="PASS" starttime="20220705 19:18:35.313" endtime="20220705 19:18:35.313"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:35.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:35.313" endtime="20220705 19:18:35.480"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:35.480" endtime="20220705 19:18:35.480"/>
</return>
<msg timestamp="20220705 19:18:35.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:35.312" endtime="20220705 19:18:35.480"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:35.481" endtime="20220705 19:18:35.481"/>
</return>
<status status="PASS" starttime="20220705 19:18:35.312" endtime="20220705 19:18:35.481"/>
</kw>
<status status="PASS" starttime="20220705 19:18:35.312" endtime="20220705 19:18:35.481"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 19:18:34.878" endtime="20220705 19:18:35.481"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:35.484" level="INFO">${url} = boards/62c48e898540401b70bea7df</msg>
<status status="PASS" starttime="20220705 19:18:35.484" endtime="20220705 19:18:35.484"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:35.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:35.484" endtime="20220705 19:18:35.798"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:35.798" endtime="20220705 19:18:35.798"/>
</return>
<msg timestamp="20220705 19:18:35.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:35.483" endtime="20220705 19:18:35.799"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:35.799" endtime="20220705 19:18:35.799"/>
</return>
<status status="PASS" starttime="20220705 19:18:35.483" endtime="20220705 19:18:35.799"/>
</kw>
<status status="PASS" starttime="20220705 19:18:35.483" endtime="20220705 19:18:35.799"/>
</kw>
<status status="PASS" starttime="20220705 19:18:35.482" endtime="20220705 19:18:35.799"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 19:18:35.799" endtime="20220705 19:18:35.801"/>
</kw>
<status status="PASS" starttime="20220705 19:18:35.481" endtime="20220705 19:18:35.801"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 19:18:33.215" endtime="20220705 19:18:35.801"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 19:18:35.812" endtime="20220705 19:18:35.813"/>
</kw>
<status status="PASS" starttime="20220705 19:18:35.812" endtime="20220705 19:18:35.813"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:35.814" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:35.814" endtime="20220705 19:18:35.814"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:35.814" endtime="20220705 19:18:35.814"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:35.815" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 19:18:35.815" endtime="20220705 19:18:35.815"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:36.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:35.815" endtime="20220705 19:18:36.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.017" endtime="20220705 19:18:36.017"/>
</return>
<msg timestamp="20220705 19:18:36.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:35.814" endtime="20220705 19:18:36.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.017" endtime="20220705 19:18:36.017"/>
</return>
<msg timestamp="20220705 19:18:36.017" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:35.813" endtime="20220705 19:18:36.017"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 19:18:36.018" level="INFO">${TEST_SUITE_BOARD_ID} = 62c48e8b04b9dd4213e37e56</msg>
<status status="PASS" starttime="20220705 19:18:36.018" endtime="20220705 19:18:36.018"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:36.020" level="INFO">${url} = boards/62c48e8b04b9dd4213e37e56/lists/</msg>
<status status="PASS" starttime="20220705 19:18:36.019" endtime="20220705 19:18:36.020"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:36.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.020" endtime="20220705 19:18:36.093"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.093" endtime="20220705 19:18:36.093"/>
</return>
<msg timestamp="20220705 19:18:36.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.019" endtime="20220705 19:18:36.093"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.093" endtime="20220705 19:18:36.093"/>
</return>
<msg timestamp="20220705 19:18:36.093" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.019" endtime="20220705 19:18:36.093"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 19:18:36.094" level="INFO">${TEST_SUITE_LIST_ID} = 62c48e8b04b9dd4213e37e5d</msg>
<status status="PASS" starttime="20220705 19:18:36.094" endtime="20220705 19:18:36.095"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:36.096" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:36.096" endtime="20220705 19:18:36.096"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:36.096" endtime="20220705 19:18:36.097"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:36.097" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 19:18:36.097" endtime="20220705 19:18:36.097"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:36.295" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.097" endtime="20220705 19:18:36.295"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.295" endtime="20220705 19:18:36.295"/>
</return>
<msg timestamp="20220705 19:18:36.295" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.095" endtime="20220705 19:18:36.295"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.295" endtime="20220705 19:18:36.295"/>
</return>
<msg timestamp="20220705 19:18:36.296" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.095" endtime="20220705 19:18:36.296"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 19:18:36.297" level="INFO">${TEST_SUITE_CARD_ID} = 62c48e8cf5671239f7c64fe8</msg>
<status status="PASS" starttime="20220705 19:18:36.296" endtime="20220705 19:18:36.297"/>
</kw>
<status status="PASS" starttime="20220705 19:18:35.813" endtime="20220705 19:18:36.297"/>
</kw>
<status status="PASS" starttime="20220705 19:18:35.812" endtime="20220705 19:18:36.297"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:36.299" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:36.299" endtime="20220705 19:18:36.299"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:36.299" endtime="20220705 19:18:36.300"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:36.301" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 19:18:36.300" endtime="20220705 19:18:36.301"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:36.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.301" endtime="20220705 19:18:36.422"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.422" endtime="20220705 19:18:36.422"/>
</return>
<msg timestamp="20220705 19:18:36.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.298" endtime="20220705 19:18:36.422"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.422" endtime="20220705 19:18:36.422"/>
</return>
<msg timestamp="20220705 19:18:36.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.298" endtime="20220705 19:18:36.423"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:36.423" endtime="20220705 19:18:36.423"/>
</return>
<msg timestamp="20220705 19:18:36.424" level="INFO">${checklist_id} = 62c48e8c4166ba3ead0081d0</msg>
<status status="PASS" starttime="20220705 19:18:36.423" endtime="20220705 19:18:36.424"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:36.425" level="INFO">${url} = checklists/62c48e8c4166ba3ead0081d0</msg>
<status status="PASS" starttime="20220705 19:18:36.425" endtime="20220705 19:18:36.425"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:36.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.425" endtime="20220705 19:18:36.483"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.483" endtime="20220705 19:18:36.483"/>
</return>
<msg timestamp="20220705 19:18:36.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.424" endtime="20220705 19:18:36.483"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.483" endtime="20220705 19:18:36.483"/>
</return>
<msg timestamp="20220705 19:18:36.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.424" endtime="20220705 19:18:36.484"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:36.484" endtime="20220705 19:18:36.484"/>
</return>
<msg timestamp="20220705 19:18:36.485" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 19:18:36.484" endtime="20220705 19:18:36.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:36.485" endtime="20220705 19:18:36.485"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:36.487" level="INFO">${url} = checklists/62c48e8c4166ba3ead0081d0</msg>
<status status="PASS" starttime="20220705 19:18:36.486" endtime="20220705 19:18:36.487"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:36.605" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.487" endtime="20220705 19:18:36.605"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.605" endtime="20220705 19:18:36.606"/>
</return>
<msg timestamp="20220705 19:18:36.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.486" endtime="20220705 19:18:36.606"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.606" endtime="20220705 19:18:36.606"/>
</return>
<status status="PASS" starttime="20220705 19:18:36.486" endtime="20220705 19:18:36.606"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 19:18:36.297" endtime="20220705 19:18:36.606"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:36.610" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:36.609" endtime="20220705 19:18:36.610"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:36.610" endtime="20220705 19:18:36.610"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:36.611" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 19:18:36.610" endtime="20220705 19:18:36.611"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:36.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.611" endtime="20220705 19:18:36.735"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.735" endtime="20220705 19:18:36.735"/>
</return>
<msg timestamp="20220705 19:18:36.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.608" endtime="20220705 19:18:36.736"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.736" endtime="20220705 19:18:36.736"/>
</return>
<msg timestamp="20220705 19:18:36.736" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.608" endtime="20220705 19:18:36.736"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:36.736" endtime="20220705 19:18:36.736"/>
</return>
<msg timestamp="20220705 19:18:36.738" level="INFO">${checklist_id} = 62c48e8cf019d4182c5dd056</msg>
<status status="PASS" starttime="20220705 19:18:36.736" endtime="20220705 19:18:36.738"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:36.739" level="INFO">${url} = checklists/62c48e8cf019d4182c5dd056</msg>
<status status="PASS" starttime="20220705 19:18:36.739" endtime="20220705 19:18:36.739"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:36.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.739" endtime="20220705 19:18:36.837"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.838" endtime="20220705 19:18:36.838"/>
</return>
<msg timestamp="20220705 19:18:36.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.738" endtime="20220705 19:18:36.838"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.838" endtime="20220705 19:18:36.838"/>
</return>
<msg timestamp="20220705 19:18:36.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.738" endtime="20220705 19:18:36.838"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:36.839" endtime="20220705 19:18:36.841"/>
</kw>
<status status="PASS" starttime="20220705 19:18:36.838" endtime="20220705 19:18:36.841"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:36.842" level="INFO">${url} = checklists/62c48e8cf019d4182c5dd056</msg>
<status status="PASS" starttime="20220705 19:18:36.842" endtime="20220705 19:18:36.842"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:36.890" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 19:18:36.843" endtime="20220705 19:18:36.890"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.890" endtime="20220705 19:18:36.890"/>
</return>
<msg timestamp="20220705 19:18:36.890" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 19:18:36.842" endtime="20220705 19:18:36.890"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:36.890" endtime="20220705 19:18:36.890"/>
</return>
<status status="PASS" starttime="20220705 19:18:36.841" endtime="20220705 19:18:36.890"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 19:18:36.607" endtime="20220705 19:18:36.890"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:36.895" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:36.893" endtime="20220705 19:18:36.895"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:36.895" endtime="20220705 19:18:36.896"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:36.897" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 19:18:36.896" endtime="20220705 19:18:36.897"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:37.000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.897" endtime="20220705 19:18:37.000"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.000" endtime="20220705 19:18:37.000"/>
</return>
<msg timestamp="20220705 19:18:37.000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.893" endtime="20220705 19:18:37.000"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.000" endtime="20220705 19:18:37.000"/>
</return>
<msg timestamp="20220705 19:18:37.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:36.892" endtime="20220705 19:18:37.001"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:37.001" endtime="20220705 19:18:37.001"/>
</return>
<msg timestamp="20220705 19:18:37.002" level="INFO">${checklist_id} = 62c48e8c1d7e2b3962aefbd2</msg>
<status status="PASS" starttime="20220705 19:18:37.001" endtime="20220705 19:18:37.002"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:37.004" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:37.003" endtime="20220705 19:18:37.004"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:37.004" endtime="20220705 19:18:37.004"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:37.005" level="INFO">${url} = checklists/62c48e8c1d7e2b3962aefbd2</msg>
<status status="PASS" starttime="20220705 19:18:37.004" endtime="20220705 19:18:37.005"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:37.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.005" endtime="20220705 19:18:37.092"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.092" endtime="20220705 19:18:37.092"/>
</return>
<msg timestamp="20220705 19:18:37.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.003" endtime="20220705 19:18:37.093"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.093" endtime="20220705 19:18:37.093"/>
</return>
<msg timestamp="20220705 19:18:37.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.002" endtime="20220705 19:18:37.093"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:37.094" level="INFO">${url} = checklists/62c48e8c1d7e2b3962aefbd2</msg>
<status status="PASS" starttime="20220705 19:18:37.094" endtime="20220705 19:18:37.094"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:37.154" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.095" endtime="20220705 19:18:37.154"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.154" endtime="20220705 19:18:37.154"/>
</return>
<msg timestamp="20220705 19:18:37.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.094" endtime="20220705 19:18:37.155"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.155" endtime="20220705 19:18:37.155"/>
</return>
<msg timestamp="20220705 19:18:37.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.093" endtime="20220705 19:18:37.155"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:37.155" endtime="20220705 19:18:37.156"/>
</return>
<msg timestamp="20220705 19:18:37.156" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 19:18:37.155" endtime="20220705 19:18:37.156"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:37.157" endtime="20220705 19:18:37.157"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:37.173" level="INFO">${url} = checklists/62c48e8c1d7e2b3962aefbd2</msg>
<status status="PASS" starttime="20220705 19:18:37.172" endtime="20220705 19:18:37.173"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:37.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.173" endtime="20220705 19:18:37.268"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.268" endtime="20220705 19:18:37.268"/>
</return>
<msg timestamp="20220705 19:18:37.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.172" endtime="20220705 19:18:37.268"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.268" endtime="20220705 19:18:37.268"/>
</return>
<status status="PASS" starttime="20220705 19:18:37.157" endtime="20220705 19:18:37.268"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 19:18:36.891" endtime="20220705 19:18:37.268"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:37.271" level="INFO">${url} = boards/62c48e8b04b9dd4213e37e56</msg>
<status status="PASS" starttime="20220705 19:18:37.271" endtime="20220705 19:18:37.271"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:37.613" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.272" endtime="20220705 19:18:37.613"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.613" endtime="20220705 19:18:37.613"/>
</return>
<msg timestamp="20220705 19:18:37.613" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.271" endtime="20220705 19:18:37.613"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.613" endtime="20220705 19:18:37.613"/>
</return>
<status status="PASS" starttime="20220705 19:18:37.270" endtime="20220705 19:18:37.614"/>
</kw>
<status status="PASS" starttime="20220705 19:18:37.270" endtime="20220705 19:18:37.614"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 19:18:37.614" endtime="20220705 19:18:37.615"/>
</kw>
<status status="PASS" starttime="20220705 19:18:37.269" endtime="20220705 19:18:37.615"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 19:18:35.802" endtime="20220705 19:18:37.615"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 19:18:37.625" endtime="20220705 19:18:37.626"/>
</kw>
<status status="PASS" starttime="20220705 19:18:37.625" endtime="20220705 19:18:37.626"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:37.627" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:37.627" endtime="20220705 19:18:37.627"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:37.627" endtime="20220705 19:18:37.627"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:37.628" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 19:18:37.627" endtime="20220705 19:18:37.628"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:37.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.628" endtime="20220705 19:18:37.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.803" endtime="20220705 19:18:37.803"/>
</return>
<msg timestamp="20220705 19:18:37.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.626" endtime="20220705 19:18:37.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.804" endtime="20220705 19:18:37.804"/>
</return>
<msg timestamp="20220705 19:18:37.804" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.626" endtime="20220705 19:18:37.804"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 19:18:37.805" level="INFO">${TEST_SUITE_BOARD_ID} = 62c48e8dba8ac6864618bd53</msg>
<status status="PASS" starttime="20220705 19:18:37.804" endtime="20220705 19:18:37.805"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:37.852" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.805" endtime="20220705 19:18:37.852"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 19:18:37.853" level="INFO">${TEST_SUITE_LIST_ID} = 62c48e8dba8ac6864618bd5a</msg>
<status status="PASS" starttime="20220705 19:18:37.852" endtime="20220705 19:18:37.854"/>
</kw>
<status status="PASS" starttime="20220705 19:18:37.626" endtime="20220705 19:18:37.854"/>
</kw>
<status status="PASS" starttime="20220705 19:18:37.625" endtime="20220705 19:18:37.854"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:37.856" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:37.855" endtime="20220705 19:18:37.856"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:37.856" endtime="20220705 19:18:37.856"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:37.857" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 19:18:37.856" endtime="20220705 19:18:37.857"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:37.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.857" endtime="20220705 19:18:37.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.946" endtime="20220705 19:18:37.946"/>
</return>
<msg timestamp="20220705 19:18:37.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.855" endtime="20220705 19:18:37.947"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.947" endtime="20220705 19:18:37.947"/>
</return>
<msg timestamp="20220705 19:18:37.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.855" endtime="20220705 19:18:37.947"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:37.947" endtime="20220705 19:18:37.949"/>
</kw>
<status status="PASS" starttime="20220705 19:18:37.947" endtime="20220705 19:18:37.949"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:37.950" endtime="20220705 19:18:37.950"/>
</return>
<msg timestamp="20220705 19:18:37.951" level="INFO">${LABEL_ID} = 62c48e8dba8ac6864618bdb5</msg>
<status status="PASS" starttime="20220705 19:18:37.950" endtime="20220705 19:18:37.951"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:37.952" level="INFO">${url} = labels/62c48e8dba8ac6864618bdb5</msg>
<status status="PASS" starttime="20220705 19:18:37.951" endtime="20220705 19:18:37.952"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:37.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.952" endtime="20220705 19:18:37.993"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.993" endtime="20220705 19:18:37.994"/>
</return>
<msg timestamp="20220705 19:18:37.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.951" endtime="20220705 19:18:37.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:37.994" endtime="20220705 19:18:37.994"/>
</return>
<msg timestamp="20220705 19:18:37.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.951" endtime="20220705 19:18:37.994"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:37.995" endtime="20220705 19:18:37.995"/>
</return>
<msg timestamp="20220705 19:18:37.995" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 19:18:37.994" endtime="20220705 19:18:37.995"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:37.996" endtime="20220705 19:18:37.996"/>
</return>
<msg timestamp="20220705 19:18:37.997" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 19:18:37.996" endtime="20220705 19:18:37.997"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:37.997" endtime="20220705 19:18:37.997"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:37.997" endtime="20220705 19:18:37.998"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:37.999" level="INFO">${url} = labels/62c48e8dba8ac6864618bdb5</msg>
<status status="PASS" starttime="20220705 19:18:37.999" endtime="20220705 19:18:37.999"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:38.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.999" endtime="20220705 19:18:38.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.110" endtime="20220705 19:18:38.111"/>
</return>
<msg timestamp="20220705 19:18:38.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:37.998" endtime="20220705 19:18:38.111"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.111" endtime="20220705 19:18:38.111"/>
</return>
<status status="PASS" starttime="20220705 19:18:37.998" endtime="20220705 19:18:38.111"/>
</kw>
<status status="PASS" starttime="20220705 19:18:37.998" endtime="20220705 19:18:38.111"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 19:18:37.854" endtime="20220705 19:18:38.111"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:38.114" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:38.114" endtime="20220705 19:18:38.114"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:38.114" endtime="20220705 19:18:38.114"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:38.115" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 19:18:38.114" endtime="20220705 19:18:38.115"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:38.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.115" endtime="20220705 19:18:38.201"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.201" endtime="20220705 19:18:38.201"/>
</return>
<msg timestamp="20220705 19:18:38.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.113" endtime="20220705 19:18:38.202"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.202" endtime="20220705 19:18:38.202"/>
</return>
<msg timestamp="20220705 19:18:38.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.113" endtime="20220705 19:18:38.202"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:38.202" endtime="20220705 19:18:38.204"/>
</kw>
<status status="PASS" starttime="20220705 19:18:38.202" endtime="20220705 19:18:38.204"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:38.205" endtime="20220705 19:18:38.205"/>
</return>
<msg timestamp="20220705 19:18:38.206" level="INFO">${LABEL_ID} = 62c48e8ee15cf745d07ea427</msg>
<status status="PASS" starttime="20220705 19:18:38.205" endtime="20220705 19:18:38.206"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:38.207" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:38.207" endtime="20220705 19:18:38.207"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:38.207" endtime="20220705 19:18:38.207"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:38.208" level="INFO">${url} = labels/62c48e8ee15cf745d07ea427</msg>
<status status="PASS" starttime="20220705 19:18:38.207" endtime="20220705 19:18:38.208"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:38.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.208" endtime="20220705 19:18:38.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.291" endtime="20220705 19:18:38.291"/>
</return>
<msg timestamp="20220705 19:18:38.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.206" endtime="20220705 19:18:38.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.291" endtime="20220705 19:18:38.291"/>
</return>
<msg timestamp="20220705 19:18:38.292" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.206" endtime="20220705 19:18:38.292"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:38.292" endtime="20220705 19:18:38.292"/>
</return>
<msg timestamp="20220705 19:18:38.293" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 19:18:38.292" endtime="20220705 19:18:38.293"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:38.294" endtime="20220705 19:18:38.294"/>
</return>
<msg timestamp="20220705 19:18:38.294" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 19:18:38.293" endtime="20220705 19:18:38.294"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:38.294" endtime="20220705 19:18:38.295"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:38.295" endtime="20220705 19:18:38.295"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:38.297" level="INFO">${url} = labels/62c48e8ee15cf745d07ea427</msg>
<status status="PASS" starttime="20220705 19:18:38.297" endtime="20220705 19:18:38.297"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:38.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.297" endtime="20220705 19:18:38.417"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.417" endtime="20220705 19:18:38.417"/>
</return>
<msg timestamp="20220705 19:18:38.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.296" endtime="20220705 19:18:38.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.418" endtime="20220705 19:18:38.418"/>
</return>
<status status="PASS" starttime="20220705 19:18:38.295" endtime="20220705 19:18:38.418"/>
</kw>
<status status="PASS" starttime="20220705 19:18:38.295" endtime="20220705 19:18:38.418"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 19:18:38.112" endtime="20220705 19:18:38.418"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:38.420" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:38.420" endtime="20220705 19:18:38.420"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:38.420" endtime="20220705 19:18:38.420"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:38.421" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 19:18:38.420" endtime="20220705 19:18:38.421"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:38.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.421" endtime="20220705 19:18:38.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.519" endtime="20220705 19:18:38.519"/>
</return>
<msg timestamp="20220705 19:18:38.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.419" endtime="20220705 19:18:38.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.519" endtime="20220705 19:18:38.519"/>
</return>
<msg timestamp="20220705 19:18:38.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.419" endtime="20220705 19:18:38.519"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 19:18:38.520" endtime="20220705 19:18:38.520"/>
</return>
<msg timestamp="20220705 19:18:38.521" level="INFO">${LABEL_ID} = 62c48e8e52d2302c2d983fe5</msg>
<status status="PASS" starttime="20220705 19:18:38.520" endtime="20220705 19:18:38.521"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:38.523" level="INFO">${url} = labels/62c48e8e52d2302c2d983fe5</msg>
<status status="PASS" starttime="20220705 19:18:38.522" endtime="20220705 19:18:38.523"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:38.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.523" endtime="20220705 19:18:38.640"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.640" endtime="20220705 19:18:38.640"/>
</return>
<msg timestamp="20220705 19:18:38.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.522" endtime="20220705 19:18:38.640"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.640" endtime="20220705 19:18:38.640"/>
</return>
<status status="PASS" starttime="20220705 19:18:38.521" endtime="20220705 19:18:38.640"/>
</kw>
<status status="PASS" starttime="20220705 19:18:38.521" endtime="20220705 19:18:38.640"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:38.642" level="INFO">${url} = labels/62c48e8e52d2302c2d983fe5</msg>
<status status="PASS" starttime="20220705 19:18:38.641" endtime="20220705 19:18:38.642"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:38.680" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 19:18:38.642" endtime="20220705 19:18:38.680"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.680" endtime="20220705 19:18:38.680"/>
</return>
<msg timestamp="20220705 19:18:38.680" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 19:18:38.641" endtime="20220705 19:18:38.680"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:38.680" endtime="20220705 19:18:38.680"/>
</return>
<status status="PASS" starttime="20220705 19:18:38.640" endtime="20220705 19:18:38.681"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 19:18:38.418" endtime="20220705 19:18:38.681"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:38.684" level="INFO">${url} = boards/62c48e8dba8ac6864618bd53</msg>
<status status="PASS" starttime="20220705 19:18:38.683" endtime="20220705 19:18:38.684"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:39.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.684" endtime="20220705 19:18:39.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.017" endtime="20220705 19:18:39.017"/>
</return>
<msg timestamp="20220705 19:18:39.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:38.683" endtime="20220705 19:18:39.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.017" endtime="20220705 19:18:39.017"/>
</return>
<status status="PASS" starttime="20220705 19:18:38.683" endtime="20220705 19:18:39.018"/>
</kw>
<status status="PASS" starttime="20220705 19:18:38.682" endtime="20220705 19:18:39.018"/>
</kw>
<status status="PASS" starttime="20220705 19:18:38.682" endtime="20220705 19:18:39.018"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 19:18:39.018" endtime="20220705 19:18:39.019"/>
</kw>
<status status="PASS" starttime="20220705 19:18:38.682" endtime="20220705 19:18:39.019"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 19:18:37.617" endtime="20220705 19:18:39.019"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 19:18:39.033" endtime="20220705 19:18:39.033"/>
</kw>
<status status="PASS" starttime="20220705 19:18:39.033" endtime="20220705 19:18:39.033"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:39.034" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:39.034" endtime="20220705 19:18:39.034"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:39.035" endtime="20220705 19:18:39.035"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:39.035" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 19:18:39.035" endtime="20220705 19:18:39.035"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:39.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.036" endtime="20220705 19:18:39.219"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.219" endtime="20220705 19:18:39.219"/>
</return>
<msg timestamp="20220705 19:18:39.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.034" endtime="20220705 19:18:39.220"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.220" endtime="20220705 19:18:39.220"/>
</return>
<msg timestamp="20220705 19:18:39.220" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.034" endtime="20220705 19:18:39.220"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 19:18:39.221" level="INFO">${TEST_SUITE_BOARD_ID} = 62c48e8f41bb97738657a14f</msg>
<status status="PASS" starttime="20220705 19:18:39.221" endtime="20220705 19:18:39.221"/>
</kw>
<status status="PASS" starttime="20220705 19:18:39.220" endtime="20220705 19:18:39.222"/>
</kw>
<status status="PASS" starttime="20220705 19:18:39.034" endtime="20220705 19:18:39.222"/>
</kw>
<status status="PASS" starttime="20220705 19:18:39.032" endtime="20220705 19:18:39.222"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:39.224" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:39.224" endtime="20220705 19:18:39.224"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:39.224" endtime="20220705 19:18:39.224"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:39.225" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 19:18:39.224" endtime="20220705 19:18:39.225"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:39.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.225" endtime="20220705 19:18:39.322"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.322" endtime="20220705 19:18:39.322"/>
</return>
<msg timestamp="20220705 19:18:39.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.223" endtime="20220705 19:18:39.323"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.323" endtime="20220705 19:18:39.323"/>
</return>
<msg timestamp="20220705 19:18:39.323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.223" endtime="20220705 19:18:39.323"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:39.323" endtime="20220705 19:18:39.325"/>
</kw>
<status status="PASS" starttime="20220705 19:18:39.323" endtime="20220705 19:18:39.326"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 19:18:39.222" endtime="20220705 19:18:39.326"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:39.328" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:39.328" endtime="20220705 19:18:39.328"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:39.328" endtime="20220705 19:18:39.329"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:39.329" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 19:18:39.329" endtime="20220705 19:18:39.329"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:39.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.329" endtime="20220705 19:18:39.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.423" endtime="20220705 19:18:39.423"/>
</return>
<msg timestamp="20220705 19:18:39.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.327" endtime="20220705 19:18:39.424"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.424" endtime="20220705 19:18:39.424"/>
</return>
<msg timestamp="20220705 19:18:39.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.327" endtime="20220705 19:18:39.424"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:39.424" endtime="20220705 19:18:39.426"/>
</kw>
<status status="PASS" starttime="20220705 19:18:39.424" endtime="20220705 19:18:39.426"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:39.428" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:39.428" endtime="20220705 19:18:39.429"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:39.429" endtime="20220705 19:18:39.429"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:39.429" level="INFO">${url} = lists/62c48e8fd53e771d025faa09</msg>
<status status="PASS" starttime="20220705 19:18:39.429" endtime="20220705 19:18:39.429"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:39.514" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.430" endtime="20220705 19:18:39.514"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.514" endtime="20220705 19:18:39.515"/>
</return>
<msg timestamp="20220705 19:18:39.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.427" endtime="20220705 19:18:39.515"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.515" endtime="20220705 19:18:39.515"/>
</return>
<status status="PASS" starttime="20220705 19:18:39.427" endtime="20220705 19:18:39.515"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:39.517" level="INFO">${url} = lists/62c48e8fd53e771d025faa09</msg>
<status status="PASS" starttime="20220705 19:18:39.517" endtime="20220705 19:18:39.517"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:39.562" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.517" endtime="20220705 19:18:39.562"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.562" endtime="20220705 19:18:39.563"/>
</return>
<msg timestamp="20220705 19:18:39.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.516" endtime="20220705 19:18:39.563"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.563" endtime="20220705 19:18:39.563"/>
</return>
<msg timestamp="20220705 19:18:39.563" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.515" endtime="20220705 19:18:39.563"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 19:18:39.564" endtime="20220705 19:18:39.565"/>
</kw>
<status status="PASS" starttime="20220705 19:18:39.563" endtime="20220705 19:18:39.565"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 19:18:39.566" endtime="20220705 19:18:39.566"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 19:18:39.326" endtime="20220705 19:18:39.566"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:39.570" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:39.570" endtime="20220705 19:18:39.570"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:39.570" endtime="20220705 19:18:39.570"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:39.571" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 19:18:39.571" endtime="20220705 19:18:39.571"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:39.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.571" endtime="20220705 19:18:39.660"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.660" endtime="20220705 19:18:39.660"/>
</return>
<msg timestamp="20220705 19:18:39.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.569" endtime="20220705 19:18:39.660"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.660" endtime="20220705 19:18:39.660"/>
</return>
<msg timestamp="20220705 19:18:39.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.567" endtime="20220705 19:18:39.660"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 19:18:39.662" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 19:18:39.662" endtime="20220705 19:18:39.662"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 19:18:39.662" endtime="20220705 19:18:39.663"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:39.663" level="INFO">${url} = lists/62c48e8f5226b015993f346e/closed</msg>
<status status="PASS" starttime="20220705 19:18:39.663" endtime="20220705 19:18:39.663"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 19:18:39.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.663" endtime="20220705 19:18:39.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.753" endtime="20220705 19:18:39.753"/>
</return>
<msg timestamp="20220705 19:18:39.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.661" endtime="20220705 19:18:39.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.753" endtime="20220705 19:18:39.753"/>
</return>
<status status="PASS" starttime="20220705 19:18:39.660" endtime="20220705 19:18:39.754"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:39.756" level="INFO">${url} = lists/62c48e8f5226b015993f346e</msg>
<status status="PASS" starttime="20220705 19:18:39.755" endtime="20220705 19:18:39.756"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 19:18:39.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.756" endtime="20220705 19:18:39.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.802" endtime="20220705 19:18:39.802"/>
</return>
<msg timestamp="20220705 19:18:39.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.755" endtime="20220705 19:18:39.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:39.802" endtime="20220705 19:18:39.802"/>
</return>
<msg timestamp="20220705 19:18:39.802" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.754" endtime="20220705 19:18:39.802"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 19:18:39.803" endtime="20220705 19:18:39.803"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 19:18:39.567" endtime="20220705 19:18:39.803"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 19:18:39.807" level="INFO">${url} = boards/62c48e8f41bb97738657a14f</msg>
<status status="PASS" starttime="20220705 19:18:39.807" endtime="20220705 19:18:39.807"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 19:18:40.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.807" endtime="20220705 19:18:40.203"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:40.203" endtime="20220705 19:18:40.203"/>
</return>
<msg timestamp="20220705 19:18:40.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 19:18:39.806" endtime="20220705 19:18:40.203"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 19:18:40.203" endtime="20220705 19:18:40.203"/>
</return>
<status status="PASS" starttime="20220705 19:18:39.806" endtime="20220705 19:18:40.203"/>
</kw>
<status status="PASS" starttime="20220705 19:18:39.806" endtime="20220705 19:18:40.203"/>
</kw>
<status status="PASS" starttime="20220705 19:18:39.805" endtime="20220705 19:18:40.204"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 19:18:40.204" endtime="20220705 19:18:40.205"/>
</kw>
<status status="PASS" starttime="20220705 19:18:39.804" endtime="20220705 19:18:40.205"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 19:18:39.021" endtime="20220705 19:18:40.205"/>
</suite>
<status status="PASS" starttime="20220705 19:18:29.586" endtime="20220705 19:18:40.207"/>
</suite>
<status status="PASS" starttime="20220705 19:18:29.568" endtime="20220705 19:18:40.209"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
