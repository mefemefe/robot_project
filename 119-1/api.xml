<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 18:50:51.576" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 18:50:51.703" endtime="20220704 18:50:51.704"/>
</kw>
<status status="PASS" starttime="20220704 18:50:51.700" endtime="20220704 18:50:51.704"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:51.706" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:51.705" endtime="20220704 18:50:51.706"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:51.706" endtime="20220704 18:50:51.706"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:51.707" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:50:51.706" endtime="20220704 18:50:51.707"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:51.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:51.707" endtime="20220704 18:50:51.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:51.946" endtime="20220704 18:50:51.946"/>
</return>
<msg timestamp="20220704 18:50:51.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:51.705" endtime="20220704 18:50:51.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:51.946" endtime="20220704 18:50:51.946"/>
</return>
<msg timestamp="20220704 18:50:51.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:51.705" endtime="20220704 18:50:51.947"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:50:51.947" endtime="20220704 18:50:51.952"/>
</kw>
<status status="PASS" starttime="20220704 18:50:51.947" endtime="20220704 18:50:51.952"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:51.955" level="INFO">${url} = boards/62c3368b800e59147f529e8b</msg>
<status status="PASS" starttime="20220704 18:50:51.954" endtime="20220704 18:50:51.955"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:52.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:51.955" endtime="20220704 18:50:52.282"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:52.283" endtime="20220704 18:50:52.283"/>
</return>
<msg timestamp="20220704 18:50:52.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:51.954" endtime="20220704 18:50:52.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:52.283" endtime="20220704 18:50:52.283"/>
</return>
<status status="PASS" starttime="20220704 18:50:51.953" endtime="20220704 18:50:52.283"/>
</kw>
<status status="PASS" starttime="20220704 18:50:51.953" endtime="20220704 18:50:52.283"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:50:51.704" endtime="20220704 18:50:52.283"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:52.287" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:52.286" endtime="20220704 18:50:52.287"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:52.287" endtime="20220704 18:50:52.287"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:52.288" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:50:52.287" endtime="20220704 18:50:52.288"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:52.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:52.288" endtime="20220704 18:50:52.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:52.457" endtime="20220704 18:50:52.457"/>
</return>
<msg timestamp="20220704 18:50:52.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:52.286" endtime="20220704 18:50:52.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:52.457" endtime="20220704 18:50:52.457"/>
</return>
<msg timestamp="20220704 18:50:52.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:52.285" endtime="20220704 18:50:52.457"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:50:52.458" endtime="20220704 18:50:52.462"/>
</kw>
<status status="PASS" starttime="20220704 18:50:52.458" endtime="20220704 18:50:52.462"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:52.464" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:52.464" endtime="20220704 18:50:52.464"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:52.464" endtime="20220704 18:50:52.464"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:52.465" level="INFO">${url} = boards/62c3368ca73ff36da1ea726e</msg>
<status status="PASS" starttime="20220704 18:50:52.464" endtime="20220704 18:50:52.465"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:52.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:52.465" endtime="20220704 18:50:52.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:52.553" endtime="20220704 18:50:52.553"/>
</return>
<msg timestamp="20220704 18:50:52.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:52.463" endtime="20220704 18:50:52.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:52.553" endtime="20220704 18:50:52.553"/>
</return>
<status status="PASS" starttime="20220704 18:50:52.463" endtime="20220704 18:50:52.553"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:52.555" level="INFO">${url} = boards/62c3368ca73ff36da1ea726e</msg>
<status status="PASS" starttime="20220704 18:50:52.555" endtime="20220704 18:50:52.555"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:52.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:52.555" endtime="20220704 18:50:52.627"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:52.627" endtime="20220704 18:50:52.627"/>
</return>
<msg timestamp="20220704 18:50:52.627" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:52.554" endtime="20220704 18:50:52.627"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:52.627" endtime="20220704 18:50:52.627"/>
</return>
<msg timestamp="20220704 18:50:52.627" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:52.554" endtime="20220704 18:50:52.627"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:50:52.628" endtime="20220704 18:50:52.632"/>
</kw>
<status status="PASS" starttime="20220704 18:50:52.627" endtime="20220704 18:50:52.632"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:50:52.632" endtime="20220704 18:50:52.633"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:52.635" level="INFO">${url} = boards/62c3368ca73ff36da1ea726e</msg>
<status status="PASS" starttime="20220704 18:50:52.635" endtime="20220704 18:50:52.635"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:52.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:52.635" endtime="20220704 18:50:52.969"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:52.969" endtime="20220704 18:50:52.969"/>
</return>
<msg timestamp="20220704 18:50:52.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:52.634" endtime="20220704 18:50:52.969"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:52.969" endtime="20220704 18:50:52.969"/>
</return>
<status status="PASS" starttime="20220704 18:50:52.633" endtime="20220704 18:50:52.969"/>
</kw>
<status status="PASS" starttime="20220704 18:50:52.633" endtime="20220704 18:50:52.969"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:50:52.284" endtime="20220704 18:50:52.969"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:52.973" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:52.972" endtime="20220704 18:50:52.973"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:52.973" endtime="20220704 18:50:52.973"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:52.974" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:50:52.973" endtime="20220704 18:50:52.974"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:53.139" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:52.974" endtime="20220704 18:50:53.139"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:53.139" endtime="20220704 18:50:53.139"/>
</return>
<msg timestamp="20220704 18:50:53.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:52.972" endtime="20220704 18:50:53.140"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:53.140" endtime="20220704 18:50:53.140"/>
</return>
<msg timestamp="20220704 18:50:53.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:52.971" endtime="20220704 18:50:53.140"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:53.142" level="INFO">${url} = boards/62c3368d783e67738895f817</msg>
<status status="PASS" starttime="20220704 18:50:53.142" endtime="20220704 18:50:53.142"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:53.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:53.142" endtime="20220704 18:50:53.465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:53.465" endtime="20220704 18:50:53.465"/>
</return>
<msg timestamp="20220704 18:50:53.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:53.141" endtime="20220704 18:50:53.465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:53.465" endtime="20220704 18:50:53.465"/>
</return>
<status status="PASS" starttime="20220704 18:50:53.140" endtime="20220704 18:50:53.466"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:53.468" level="INFO">${url} = boards/62c3368d783e67738895f817</msg>
<status status="PASS" starttime="20220704 18:50:53.467" endtime="20220704 18:50:53.468"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:53.507" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:50:53.468" endtime="20220704 18:50:53.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:53.507" endtime="20220704 18:50:53.507"/>
</return>
<msg timestamp="20220704 18:50:53.507" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:50:53.467" endtime="20220704 18:50:53.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:53.507" endtime="20220704 18:50:53.507"/>
</return>
<status status="PASS" starttime="20220704 18:50:53.466" endtime="20220704 18:50:53.507"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:50:52.970" endtime="20220704 18:50:53.507"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:53.511" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:53.510" endtime="20220704 18:50:53.511"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:53.511" endtime="20220704 18:50:53.511"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:53.512" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:50:53.511" endtime="20220704 18:50:53.512"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:53.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:53.512" endtime="20220704 18:50:53.718"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:53.718" endtime="20220704 18:50:53.718"/>
</return>
<msg timestamp="20220704 18:50:53.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:53.510" endtime="20220704 18:50:53.718"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:53.718" endtime="20220704 18:50:53.718"/>
</return>
<msg timestamp="20220704 18:50:53.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:53.510" endtime="20220704 18:50:53.719"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:50:53.719" endtime="20220704 18:50:53.723"/>
</kw>
<status status="PASS" starttime="20220704 18:50:53.719" endtime="20220704 18:50:53.723"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:53.725" level="INFO">${url} = boards/62c3368d0c55e43eea660121</msg>
<status status="PASS" starttime="20220704 18:50:53.725" endtime="20220704 18:50:53.725"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:54.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:53.725" endtime="20220704 18:50:54.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:54.459" endtime="20220704 18:50:54.459"/>
</return>
<msg timestamp="20220704 18:50:54.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:53.724" endtime="20220704 18:50:54.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:54.460" endtime="20220704 18:50:54.460"/>
</return>
<msg timestamp="20220704 18:50:54.460" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:53.724" endtime="20220704 18:50:54.460"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:50:54.460" endtime="20220704 18:50:54.464"/>
</kw>
<status status="PASS" starttime="20220704 18:50:54.460" endtime="20220704 18:50:54.465"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:50:54.465" endtime="20220704 18:50:54.465"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:54.468" level="INFO">${url} = boards/62c3368d0c55e43eea660121</msg>
<status status="PASS" starttime="20220704 18:50:54.467" endtime="20220704 18:50:54.468"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:54.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:54.468" endtime="20220704 18:50:54.809"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:54.809" endtime="20220704 18:50:54.809"/>
</return>
<msg timestamp="20220704 18:50:54.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:54.467" endtime="20220704 18:50:54.809"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:54.809" endtime="20220704 18:50:54.809"/>
</return>
<status status="PASS" starttime="20220704 18:50:54.466" endtime="20220704 18:50:54.810"/>
</kw>
<status status="PASS" starttime="20220704 18:50:54.466" endtime="20220704 18:50:54.810"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:50:53.509" endtime="20220704 18:50:54.810"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:54.813" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:54.812" endtime="20220704 18:50:54.813"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:54.813" endtime="20220704 18:50:54.813"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:54.814" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:50:54.813" endtime="20220704 18:50:54.814"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:54.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:54.814" endtime="20220704 18:50:54.986"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:54.986" endtime="20220704 18:50:54.986"/>
</return>
<msg timestamp="20220704 18:50:54.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:54.812" endtime="20220704 18:50:54.986"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:54.986" endtime="20220704 18:50:54.986"/>
</return>
<msg timestamp="20220704 18:50:54.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:54.812" endtime="20220704 18:50:54.987"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:50:54.987" endtime="20220704 18:50:54.992"/>
</kw>
<status status="PASS" starttime="20220704 18:50:54.987" endtime="20220704 18:50:54.992"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:54.993" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:54.993" endtime="20220704 18:50:54.993"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:54.993" endtime="20220704 18:50:54.994"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:54.994" level="INFO">${url} = boards/62c3368efe5899072d8c4e92</msg>
<status status="PASS" starttime="20220704 18:50:54.994" endtime="20220704 18:50:54.994"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:55.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:54.994" endtime="20220704 18:50:55.079"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.079" endtime="20220704 18:50:55.079"/>
</return>
<msg timestamp="20220704 18:50:55.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:54.993" endtime="20220704 18:50:55.079"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.079" endtime="20220704 18:50:55.079"/>
</return>
<status status="PASS" starttime="20220704 18:50:54.992" endtime="20220704 18:50:55.080"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:55.082" level="INFO">${url} = boards/62c3368efe5899072d8c4e92</msg>
<status status="PASS" starttime="20220704 18:50:55.081" endtime="20220704 18:50:55.082"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:55.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.082" endtime="20220704 18:50:55.132"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.132" endtime="20220704 18:50:55.132"/>
</return>
<msg timestamp="20220704 18:50:55.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.081" endtime="20220704 18:50:55.133"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.133" endtime="20220704 18:50:55.133"/>
</return>
<msg timestamp="20220704 18:50:55.133" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.080" endtime="20220704 18:50:55.133"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:50:55.133" endtime="20220704 18:50:55.134"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:55.136" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:55.135" endtime="20220704 18:50:55.136"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:55.136" endtime="20220704 18:50:55.136"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:55.136" level="INFO">${url} = boards/62c3368efe5899072d8c4e92</msg>
<status status="PASS" starttime="20220704 18:50:55.136" endtime="20220704 18:50:55.136"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:55.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.136" endtime="20220704 18:50:55.215"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.215" endtime="20220704 18:50:55.215"/>
</return>
<msg timestamp="20220704 18:50:55.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.135" endtime="20220704 18:50:55.215"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.215" endtime="20220704 18:50:55.215"/>
</return>
<status status="PASS" starttime="20220704 18:50:55.134" endtime="20220704 18:50:55.216"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:55.217" level="INFO">${url} = boards/62c3368efe5899072d8c4e92</msg>
<status status="PASS" starttime="20220704 18:50:55.217" endtime="20220704 18:50:55.217"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:55.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.217" endtime="20220704 18:50:55.264"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.264" endtime="20220704 18:50:55.264"/>
</return>
<msg timestamp="20220704 18:50:55.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.217" endtime="20220704 18:50:55.265"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.265" endtime="20220704 18:50:55.265"/>
</return>
<msg timestamp="20220704 18:50:55.265" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.216" endtime="20220704 18:50:55.265"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:50:55.265" endtime="20220704 18:50:55.266"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:55.268" level="INFO">${url} = boards/62c3368efe5899072d8c4e92</msg>
<status status="PASS" starttime="20220704 18:50:55.268" endtime="20220704 18:50:55.268"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:55.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.268" endtime="20220704 18:50:55.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.610" endtime="20220704 18:50:55.610"/>
</return>
<msg timestamp="20220704 18:50:55.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.267" endtime="20220704 18:50:55.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.611" endtime="20220704 18:50:55.611"/>
</return>
<status status="PASS" starttime="20220704 18:50:55.267" endtime="20220704 18:50:55.611"/>
</kw>
<status status="PASS" starttime="20220704 18:50:55.266" endtime="20220704 18:50:55.611"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:50:54.810" endtime="20220704 18:50:55.611"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 18:50:55.612" endtime="20220704 18:50:55.613"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 18:50:51.596" endtime="20220704 18:50:55.613"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 18:50:55.624" endtime="20220704 18:50:55.625"/>
</kw>
<status status="PASS" starttime="20220704 18:50:55.624" endtime="20220704 18:50:55.625"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:55.626" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:55.625" endtime="20220704 18:50:55.626"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:55.626" endtime="20220704 18:50:55.626"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:55.627" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:50:55.626" endtime="20220704 18:50:55.627"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:55.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.627" endtime="20220704 18:50:55.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.802" endtime="20220704 18:50:55.802"/>
</return>
<msg timestamp="20220704 18:50:55.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.625" endtime="20220704 18:50:55.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.802" endtime="20220704 18:50:55.802"/>
</return>
<msg timestamp="20220704 18:50:55.803" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.625" endtime="20220704 18:50:55.803"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:50:55.804" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3368f3006da6c658b4b89</msg>
<status status="PASS" starttime="20220704 18:50:55.803" endtime="20220704 18:50:55.804"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:55.805" level="INFO">${url} = boards/62c3368f3006da6c658b4b89/lists/</msg>
<status status="PASS" starttime="20220704 18:50:55.805" endtime="20220704 18:50:55.805"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:55.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.805" endtime="20220704 18:50:55.850"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.851" endtime="20220704 18:50:55.851"/>
</return>
<msg timestamp="20220704 18:50:55.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.804" endtime="20220704 18:50:55.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:55.851" endtime="20220704 18:50:55.851"/>
</return>
<msg timestamp="20220704 18:50:55.851" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.804" endtime="20220704 18:50:55.851"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:50:55.852" level="INFO">${TEST_SUITE_LIST_ID} = 62c3368f3006da6c658b4b90</msg>
<status status="PASS" starttime="20220704 18:50:55.851" endtime="20220704 18:50:55.852"/>
</kw>
<status status="PASS" starttime="20220704 18:50:55.625" endtime="20220704 18:50:55.852"/>
</kw>
<status status="PASS" starttime="20220704 18:50:55.624" endtime="20220704 18:50:55.852"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:55.854" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:55.854" endtime="20220704 18:50:55.854"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:55.854" endtime="20220704 18:50:55.854"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:55.855" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 18:50:55.855" endtime="20220704 18:50:55.855"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:56.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.855" endtime="20220704 18:50:56.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.040" endtime="20220704 18:50:56.040"/>
</return>
<msg timestamp="20220704 18:50:56.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.853" endtime="20220704 18:50:56.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.040" endtime="20220704 18:50:56.040"/>
</return>
<msg timestamp="20220704 18:50:56.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:55.853" endtime="20220704 18:50:56.040"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:50:56.041" endtime="20220704 18:50:56.046"/>
</kw>
<status status="PASS" starttime="20220704 18:50:56.040" endtime="20220704 18:50:56.046"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:56.047" endtime="20220704 18:50:56.047"/>
</return>
<msg timestamp="20220704 18:50:56.047" level="INFO">${CARD_ID} = 62c3368f70e708561ef84292</msg>
<status status="PASS" starttime="20220704 18:50:56.046" endtime="20220704 18:50:56.047"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:56.048" level="INFO">${url} = cards/62c3368f70e708561ef84292</msg>
<status status="PASS" starttime="20220704 18:50:56.048" endtime="20220704 18:50:56.048"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:56.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.049" endtime="20220704 18:50:56.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.098" endtime="20220704 18:50:56.098"/>
</return>
<msg timestamp="20220704 18:50:56.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.048" endtime="20220704 18:50:56.098"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.098" endtime="20220704 18:50:56.098"/>
</return>
<msg timestamp="20220704 18:50:56.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.047" endtime="20220704 18:50:56.098"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:56.099" endtime="20220704 18:50:56.099"/>
</return>
<msg timestamp="20220704 18:50:56.100" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 18:50:56.098" endtime="20220704 18:50:56.100"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:50:56.100" endtime="20220704 18:50:56.100"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:56.102" level="INFO">${url} = cards/62c3368f70e708561ef84292</msg>
<status status="PASS" starttime="20220704 18:50:56.101" endtime="20220704 18:50:56.102"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:56.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.102" endtime="20220704 18:50:56.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.245" endtime="20220704 18:50:56.245"/>
</return>
<msg timestamp="20220704 18:50:56.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.101" endtime="20220704 18:50:56.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.245" endtime="20220704 18:50:56.245"/>
</return>
<status status="PASS" starttime="20220704 18:50:56.100" endtime="20220704 18:50:56.245"/>
</kw>
<status status="PASS" starttime="20220704 18:50:56.100" endtime="20220704 18:50:56.245"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:50:55.852" endtime="20220704 18:50:56.245"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:56.248" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:56.248" endtime="20220704 18:50:56.248"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:56.248" endtime="20220704 18:50:56.249"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:56.249" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 18:50:56.249" endtime="20220704 18:50:56.249"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:56.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.249" endtime="20220704 18:50:56.383"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.383" endtime="20220704 18:50:56.383"/>
</return>
<msg timestamp="20220704 18:50:56.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.247" endtime="20220704 18:50:56.383"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.383" endtime="20220704 18:50:56.383"/>
</return>
<msg timestamp="20220704 18:50:56.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.247" endtime="20220704 18:50:56.384"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:56.384" endtime="20220704 18:50:56.384"/>
</return>
<msg timestamp="20220704 18:50:56.385" level="INFO">${CARD_ID} = 62c3369008786f2087ddb1ee</msg>
<status status="PASS" starttime="20220704 18:50:56.384" endtime="20220704 18:50:56.385"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:56.387" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:56.387" endtime="20220704 18:50:56.387"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:56.388" endtime="20220704 18:50:56.388"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:56.388" level="INFO">${url} = cards/62c3369008786f2087ddb1ee</msg>
<status status="PASS" starttime="20220704 18:50:56.388" endtime="20220704 18:50:56.388"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:56.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.388" endtime="20220704 18:50:56.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.504" endtime="20220704 18:50:56.504"/>
</return>
<msg timestamp="20220704 18:50:56.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.387" endtime="20220704 18:50:56.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.504" endtime="20220704 18:50:56.504"/>
</return>
<msg timestamp="20220704 18:50:56.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.386" endtime="20220704 18:50:56.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.504" endtime="20220704 18:50:56.504"/>
</return>
<status status="PASS" starttime="20220704 18:50:56.385" endtime="20220704 18:50:56.505"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:56.506" level="INFO">${url} = cards/62c3369008786f2087ddb1ee</msg>
<status status="PASS" starttime="20220704 18:50:56.506" endtime="20220704 18:50:56.506"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:56.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.506" endtime="20220704 18:50:56.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.555" endtime="20220704 18:50:56.555"/>
</return>
<msg timestamp="20220704 18:50:56.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.505" endtime="20220704 18:50:56.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.555" endtime="20220704 18:50:56.555"/>
</return>
<msg timestamp="20220704 18:50:56.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.505" endtime="20220704 18:50:56.555"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:56.556" endtime="20220704 18:50:56.556"/>
</return>
<msg timestamp="20220704 18:50:56.557" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 18:50:56.556" endtime="20220704 18:50:56.557"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 18:50:56.557" endtime="20220704 18:50:56.557"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:56.559" level="INFO">${url} = cards/62c3369008786f2087ddb1ee</msg>
<status status="PASS" starttime="20220704 18:50:56.559" endtime="20220704 18:50:56.559"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:56.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.559" endtime="20220704 18:50:56.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.691" endtime="20220704 18:50:56.692"/>
</return>
<msg timestamp="20220704 18:50:56.692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.558" endtime="20220704 18:50:56.692"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.692" endtime="20220704 18:50:56.692"/>
</return>
<status status="PASS" starttime="20220704 18:50:56.558" endtime="20220704 18:50:56.692"/>
</kw>
<status status="PASS" starttime="20220704 18:50:56.558" endtime="20220704 18:50:56.692"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 18:50:56.246" endtime="20220704 18:50:56.692"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:56.695" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:56.695" endtime="20220704 18:50:56.695"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:56.695" endtime="20220704 18:50:56.695"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:56.696" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 18:50:56.695" endtime="20220704 18:50:56.696"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:56.840" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.696" endtime="20220704 18:50:56.840"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.840" endtime="20220704 18:50:56.840"/>
</return>
<msg timestamp="20220704 18:50:56.840" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.694" endtime="20220704 18:50:56.840"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.840" endtime="20220704 18:50:56.840"/>
</return>
<msg timestamp="20220704 18:50:56.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.693" endtime="20220704 18:50:56.841"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:56.841" endtime="20220704 18:50:56.841"/>
</return>
<msg timestamp="20220704 18:50:56.842" level="INFO">${CARD_ID} = 62c33690500fa78f72a210d4</msg>
<status status="PASS" starttime="20220704 18:50:56.841" endtime="20220704 18:50:56.842"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:56.843" level="INFO">${url} = cards/62c33690500fa78f72a210d4</msg>
<status status="PASS" starttime="20220704 18:50:56.843" endtime="20220704 18:50:56.843"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:56.998" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.843" endtime="20220704 18:50:56.998"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.998" endtime="20220704 18:50:56.998"/>
</return>
<msg timestamp="20220704 18:50:56.999" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.842" endtime="20220704 18:50:56.999"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:56.999" endtime="20220704 18:50:56.999"/>
</return>
<msg timestamp="20220704 18:50:56.999" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:56.842" endtime="20220704 18:50:56.999"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:50:57.000" endtime="20220704 18:50:57.002"/>
</kw>
<status status="PASS" starttime="20220704 18:50:56.999" endtime="20220704 18:50:57.002"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:57.003" level="INFO">${url} = cards/62c33690500fa78f72a210d4</msg>
<status status="PASS" starttime="20220704 18:50:57.003" endtime="20220704 18:50:57.003"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:57.038" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:50:57.003" endtime="20220704 18:50:57.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:57.038" endtime="20220704 18:50:57.038"/>
</return>
<msg timestamp="20220704 18:50:57.038" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:50:57.002" endtime="20220704 18:50:57.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:57.038" endtime="20220704 18:50:57.038"/>
</return>
<status status="PASS" starttime="20220704 18:50:57.002" endtime="20220704 18:50:57.038"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:50:56.693" endtime="20220704 18:50:57.038"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:57.041" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:57.041" endtime="20220704 18:50:57.041"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:57.041" endtime="20220704 18:50:57.041"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:57.042" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 18:50:57.042" endtime="20220704 18:50:57.042"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:57.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.042" endtime="20220704 18:50:57.200"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:57.201" endtime="20220704 18:50:57.201"/>
</return>
<msg timestamp="20220704 18:50:57.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.040" endtime="20220704 18:50:57.201"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:57.201" endtime="20220704 18:50:57.201"/>
</return>
<msg timestamp="20220704 18:50:57.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.039" endtime="20220704 18:50:57.201"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:57.202" endtime="20220704 18:50:57.202"/>
</return>
<msg timestamp="20220704 18:50:57.203" level="INFO">${CARD_ID} = 62c336915d5d11657006d954</msg>
<status status="PASS" starttime="20220704 18:50:57.201" endtime="20220704 18:50:57.203"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:57.204" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:57.204" endtime="20220704 18:50:57.204"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:57.204" endtime="20220704 18:50:57.204"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:57.205" level="INFO">${url} = cards/62c336915d5d11657006d954</msg>
<status status="PASS" starttime="20220704 18:50:57.204" endtime="20220704 18:50:57.205"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:57.345" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.205" endtime="20220704 18:50:57.345"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:57.345" endtime="20220704 18:50:57.345"/>
</return>
<msg timestamp="20220704 18:50:57.345" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.203" endtime="20220704 18:50:57.346"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:57.346" endtime="20220704 18:50:57.346"/>
</return>
<msg timestamp="20220704 18:50:57.346" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.203" endtime="20220704 18:50:57.346"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:50:57.346" endtime="20220704 18:50:57.351"/>
</kw>
<status status="PASS" starttime="20220704 18:50:57.346" endtime="20220704 18:50:57.352"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:57.353" level="INFO">${url} = cards/62c336915d5d11657006d954</msg>
<status status="PASS" starttime="20220704 18:50:57.353" endtime="20220704 18:50:57.353"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:57.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.353" endtime="20220704 18:50:57.424"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:57.424" endtime="20220704 18:50:57.424"/>
</return>
<msg timestamp="20220704 18:50:57.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.352" endtime="20220704 18:50:57.424"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:57.424" endtime="20220704 18:50:57.424"/>
</return>
<msg timestamp="20220704 18:50:57.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.352" endtime="20220704 18:50:57.424"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:57.425" endtime="20220704 18:50:57.425"/>
</return>
<msg timestamp="20220704 18:50:57.426" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 18:50:57.424" endtime="20220704 18:50:57.426"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:57.426" endtime="20220704 18:50:57.426"/>
</return>
<msg timestamp="20220704 18:50:57.427" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 18:50:57.426" endtime="20220704 18:50:57.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:50:57.427" endtime="20220704 18:50:57.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:50:57.427" endtime="20220704 18:50:57.428"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:57.429" level="INFO">${url} = cards/62c336915d5d11657006d954</msg>
<status status="PASS" starttime="20220704 18:50:57.429" endtime="20220704 18:50:57.429"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:57.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.429" endtime="20220704 18:50:57.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:57.595" endtime="20220704 18:50:57.595"/>
</return>
<msg timestamp="20220704 18:50:57.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.428" endtime="20220704 18:50:57.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:57.595" endtime="20220704 18:50:57.595"/>
</return>
<status status="PASS" starttime="20220704 18:50:57.428" endtime="20220704 18:50:57.595"/>
</kw>
<status status="PASS" starttime="20220704 18:50:57.428" endtime="20220704 18:50:57.595"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 18:50:57.039" endtime="20220704 18:50:57.595"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:57.599" level="INFO">${url} = boards/62c3368f3006da6c658b4b89</msg>
<status status="PASS" starttime="20220704 18:50:57.599" endtime="20220704 18:50:57.599"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:57.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.599" endtime="20220704 18:50:57.899"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:57.899" endtime="20220704 18:50:57.900"/>
</return>
<msg timestamp="20220704 18:50:57.900" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.598" endtime="20220704 18:50:57.900"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:57.900" endtime="20220704 18:50:57.900"/>
</return>
<status status="PASS" starttime="20220704 18:50:57.597" endtime="20220704 18:50:57.900"/>
</kw>
<status status="PASS" starttime="20220704 18:50:57.597" endtime="20220704 18:50:57.900"/>
</kw>
<status status="PASS" starttime="20220704 18:50:57.597" endtime="20220704 18:50:57.900"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 18:50:57.900" endtime="20220704 18:50:57.902"/>
</kw>
<status status="PASS" starttime="20220704 18:50:57.596" endtime="20220704 18:50:57.902"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 18:50:55.614" endtime="20220704 18:50:57.902"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 18:50:57.913" endtime="20220704 18:50:57.913"/>
</kw>
<status status="PASS" starttime="20220704 18:50:57.912" endtime="20220704 18:50:57.913"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:57.914" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:57.914" endtime="20220704 18:50:57.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:57.914" endtime="20220704 18:50:57.914"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:57.915" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:50:57.914" endtime="20220704 18:50:57.915"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:58.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.915" endtime="20220704 18:50:58.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.115" endtime="20220704 18:50:58.116"/>
</return>
<msg timestamp="20220704 18:50:58.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.914" endtime="20220704 18:50:58.116"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.116" endtime="20220704 18:50:58.116"/>
</return>
<msg timestamp="20220704 18:50:58.116" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:57.913" endtime="20220704 18:50:58.116"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:50:58.117" level="INFO">${TEST_SUITE_BOARD_ID} = 62c336919a8e1b8a9ee9cffc</msg>
<status status="PASS" starttime="20220704 18:50:58.116" endtime="20220704 18:50:58.117"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:58.118" level="INFO">${url} = boards/62c336919a8e1b8a9ee9cffc/lists/</msg>
<status status="PASS" starttime="20220704 18:50:58.118" endtime="20220704 18:50:58.118"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:58.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.119" endtime="20220704 18:50:58.171"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.171" endtime="20220704 18:50:58.171"/>
</return>
<msg timestamp="20220704 18:50:58.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.118" endtime="20220704 18:50:58.172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.172" endtime="20220704 18:50:58.172"/>
</return>
<msg timestamp="20220704 18:50:58.172" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.117" endtime="20220704 18:50:58.172"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:50:58.173" level="INFO">${TEST_SUITE_LIST_ID} = 62c336919a8e1b8a9ee9d003</msg>
<status status="PASS" starttime="20220704 18:50:58.172" endtime="20220704 18:50:58.173"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:58.175" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:58.174" endtime="20220704 18:50:58.175"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:58.175" endtime="20220704 18:50:58.175"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:58.176" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 18:50:58.175" endtime="20220704 18:50:58.176"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:58.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.176" endtime="20220704 18:50:58.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.338" endtime="20220704 18:50:58.338"/>
</return>
<msg timestamp="20220704 18:50:58.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.174" endtime="20220704 18:50:58.339"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.339" endtime="20220704 18:50:58.339"/>
</return>
<msg timestamp="20220704 18:50:58.339" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.173" endtime="20220704 18:50:58.339"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:50:58.340" level="INFO">${TEST_SUITE_CARD_ID} = 62c3369261deeb73694d4446</msg>
<status status="PASS" starttime="20220704 18:50:58.339" endtime="20220704 18:50:58.340"/>
</kw>
<status status="PASS" starttime="20220704 18:50:57.913" endtime="20220704 18:50:58.340"/>
</kw>
<status status="PASS" starttime="20220704 18:50:57.912" endtime="20220704 18:50:58.340"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:58.343" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:58.342" endtime="20220704 18:50:58.343"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:58.343" endtime="20220704 18:50:58.343"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:58.344" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 18:50:58.343" endtime="20220704 18:50:58.344"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:58.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.344" endtime="20220704 18:50:58.441"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.441" endtime="20220704 18:50:58.441"/>
</return>
<msg timestamp="20220704 18:50:58.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.342" endtime="20220704 18:50:58.441"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.442" endtime="20220704 18:50:58.442"/>
</return>
<msg timestamp="20220704 18:50:58.442" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.341" endtime="20220704 18:50:58.442"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:58.442" endtime="20220704 18:50:58.442"/>
</return>
<msg timestamp="20220704 18:50:58.443" level="INFO">${checklist_id} = 62c3369218d978160f26151e</msg>
<status status="PASS" starttime="20220704 18:50:58.442" endtime="20220704 18:50:58.443"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:58.445" level="INFO">${url} = checklists/62c3369218d978160f26151e</msg>
<status status="PASS" starttime="20220704 18:50:58.444" endtime="20220704 18:50:58.445"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:58.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.445" endtime="20220704 18:50:58.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.499" endtime="20220704 18:50:58.499"/>
</return>
<msg timestamp="20220704 18:50:58.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.444" endtime="20220704 18:50:58.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.499" endtime="20220704 18:50:58.499"/>
</return>
<msg timestamp="20220704 18:50:58.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.443" endtime="20220704 18:50:58.499"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:58.500" endtime="20220704 18:50:58.500"/>
</return>
<msg timestamp="20220704 18:50:58.500" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 18:50:58.499" endtime="20220704 18:50:58.501"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:50:58.501" endtime="20220704 18:50:58.501"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:58.502" level="INFO">${url} = checklists/62c3369218d978160f26151e</msg>
<status status="PASS" starttime="20220704 18:50:58.502" endtime="20220704 18:50:58.502"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:58.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.502" endtime="20220704 18:50:58.597"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.597" endtime="20220704 18:50:58.597"/>
</return>
<msg timestamp="20220704 18:50:58.597" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.502" endtime="20220704 18:50:58.597"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.597" endtime="20220704 18:50:58.597"/>
</return>
<status status="PASS" starttime="20220704 18:50:58.501" endtime="20220704 18:50:58.597"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:50:58.341" endtime="20220704 18:50:58.597"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:58.600" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:58.600" endtime="20220704 18:50:58.600"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:58.600" endtime="20220704 18:50:58.600"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:58.601" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 18:50:58.601" endtime="20220704 18:50:58.601"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:58.712" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.601" endtime="20220704 18:50:58.712"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.713" endtime="20220704 18:50:58.713"/>
</return>
<msg timestamp="20220704 18:50:58.713" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.599" endtime="20220704 18:50:58.713"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.713" endtime="20220704 18:50:58.713"/>
</return>
<msg timestamp="20220704 18:50:58.713" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.598" endtime="20220704 18:50:58.713"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:58.714" endtime="20220704 18:50:58.714"/>
</return>
<msg timestamp="20220704 18:50:58.715" level="INFO">${checklist_id} = 62c33692e868b770b670e8b7</msg>
<status status="PASS" starttime="20220704 18:50:58.713" endtime="20220704 18:50:58.715"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:58.716" level="INFO">${url} = checklists/62c33692e868b770b670e8b7</msg>
<status status="PASS" starttime="20220704 18:50:58.716" endtime="20220704 18:50:58.716"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:58.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.717" endtime="20220704 18:50:58.824"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.824" endtime="20220704 18:50:58.825"/>
</return>
<msg timestamp="20220704 18:50:58.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.716" endtime="20220704 18:50:58.825"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.825" endtime="20220704 18:50:58.825"/>
</return>
<msg timestamp="20220704 18:50:58.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.715" endtime="20220704 18:50:58.825"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:50:58.826" endtime="20220704 18:50:58.828"/>
</kw>
<status status="PASS" starttime="20220704 18:50:58.825" endtime="20220704 18:50:58.828"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:58.829" level="INFO">${url} = checklists/62c33692e868b770b670e8b7</msg>
<status status="PASS" starttime="20220704 18:50:58.829" endtime="20220704 18:50:58.829"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:58.865" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:50:58.829" endtime="20220704 18:50:58.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.865" endtime="20220704 18:50:58.865"/>
</return>
<msg timestamp="20220704 18:50:58.866" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:50:58.828" endtime="20220704 18:50:58.866"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.866" endtime="20220704 18:50:58.866"/>
</return>
<status status="PASS" starttime="20220704 18:50:58.828" endtime="20220704 18:50:58.866"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:50:58.598" endtime="20220704 18:50:58.866"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:58.870" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:58.869" endtime="20220704 18:50:58.870"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:58.870" endtime="20220704 18:50:58.871"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:58.872" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 18:50:58.871" endtime="20220704 18:50:58.872"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:58.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.872" endtime="20220704 18:50:58.981"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.981" endtime="20220704 18:50:58.981"/>
</return>
<msg timestamp="20220704 18:50:58.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.868" endtime="20220704 18:50:58.981"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:58.981" endtime="20220704 18:50:58.981"/>
</return>
<msg timestamp="20220704 18:50:58.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.867" endtime="20220704 18:50:58.982"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:58.982" endtime="20220704 18:50:58.982"/>
</return>
<msg timestamp="20220704 18:50:58.983" level="INFO">${checklist_id} = 62c336927dbfe48514831aa1</msg>
<status status="PASS" starttime="20220704 18:50:58.982" endtime="20220704 18:50:58.983"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:58.984" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:58.984" endtime="20220704 18:50:58.984"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:58.984" endtime="20220704 18:50:58.985"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:58.985" level="INFO">${url} = checklists/62c336927dbfe48514831aa1</msg>
<status status="PASS" starttime="20220704 18:50:58.985" endtime="20220704 18:50:58.985"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:59.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.985" endtime="20220704 18:50:59.072"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.072" endtime="20220704 18:50:59.072"/>
</return>
<msg timestamp="20220704 18:50:59.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.983" endtime="20220704 18:50:59.072"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.072" endtime="20220704 18:50:59.072"/>
</return>
<msg timestamp="20220704 18:50:59.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:58.983" endtime="20220704 18:50:59.073"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:59.074" level="INFO">${url} = checklists/62c336927dbfe48514831aa1</msg>
<status status="PASS" starttime="20220704 18:50:59.074" endtime="20220704 18:50:59.074"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:59.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.074" endtime="20220704 18:50:59.125"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.125" endtime="20220704 18:50:59.125"/>
</return>
<msg timestamp="20220704 18:50:59.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.073" endtime="20220704 18:50:59.125"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.125" endtime="20220704 18:50:59.125"/>
</return>
<msg timestamp="20220704 18:50:59.126" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.073" endtime="20220704 18:50:59.126"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:59.126" endtime="20220704 18:50:59.126"/>
</return>
<msg timestamp="20220704 18:50:59.127" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 18:50:59.126" endtime="20220704 18:50:59.127"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:50:59.127" endtime="20220704 18:50:59.127"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:59.140" level="INFO">${url} = checklists/62c336927dbfe48514831aa1</msg>
<status status="PASS" starttime="20220704 18:50:59.140" endtime="20220704 18:50:59.140"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:59.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.140" endtime="20220704 18:50:59.240"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.240" endtime="20220704 18:50:59.240"/>
</return>
<msg timestamp="20220704 18:50:59.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.140" endtime="20220704 18:50:59.240"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.241" endtime="20220704 18:50:59.241"/>
</return>
<status status="PASS" starttime="20220704 18:50:59.127" endtime="20220704 18:50:59.241"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 18:50:58.866" endtime="20220704 18:50:59.241"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:59.243" level="INFO">${url} = boards/62c336919a8e1b8a9ee9cffc</msg>
<status status="PASS" starttime="20220704 18:50:59.243" endtime="20220704 18:50:59.244"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:50:59.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.244" endtime="20220704 18:50:59.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.556" endtime="20220704 18:50:59.556"/>
</return>
<msg timestamp="20220704 18:50:59.556" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.243" endtime="20220704 18:50:59.556"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.556" endtime="20220704 18:50:59.556"/>
</return>
<status status="PASS" starttime="20220704 18:50:59.242" endtime="20220704 18:50:59.556"/>
</kw>
<status status="PASS" starttime="20220704 18:50:59.242" endtime="20220704 18:50:59.556"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 18:50:59.557" endtime="20220704 18:50:59.558"/>
</kw>
<status status="PASS" starttime="20220704 18:50:59.241" endtime="20220704 18:50:59.558"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 18:50:57.903" endtime="20220704 18:50:59.558"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 18:50:59.569" endtime="20220704 18:50:59.569"/>
</kw>
<status status="PASS" starttime="20220704 18:50:59.569" endtime="20220704 18:50:59.569"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:59.570" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:59.570" endtime="20220704 18:50:59.570"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:59.570" endtime="20220704 18:50:59.571"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:59.571" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:50:59.571" endtime="20220704 18:50:59.571"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:59.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.571" endtime="20220704 18:50:59.761"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.761" endtime="20220704 18:50:59.761"/>
</return>
<msg timestamp="20220704 18:50:59.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.570" endtime="20220704 18:50:59.761"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.762" endtime="20220704 18:50:59.762"/>
</return>
<msg timestamp="20220704 18:50:59.762" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.570" endtime="20220704 18:50:59.762"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:50:59.763" level="INFO">${TEST_SUITE_BOARD_ID} = 62c33693db20612a90e19200</msg>
<status status="PASS" starttime="20220704 18:50:59.762" endtime="20220704 18:50:59.763"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:59.813" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.763" endtime="20220704 18:50:59.813"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:50:59.814" level="INFO">${TEST_SUITE_LIST_ID} = 62c33693db20612a90e19207</msg>
<status status="PASS" starttime="20220704 18:50:59.813" endtime="20220704 18:50:59.814"/>
</kw>
<status status="PASS" starttime="20220704 18:50:59.569" endtime="20220704 18:50:59.814"/>
</kw>
<status status="PASS" starttime="20220704 18:50:59.568" endtime="20220704 18:50:59.814"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:50:59.816" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:50:59.816" endtime="20220704 18:50:59.816"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:50:59.816" endtime="20220704 18:50:59.816"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:59.817" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 18:50:59.817" endtime="20220704 18:50:59.817"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:50:59.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.817" endtime="20220704 18:50:59.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.906" endtime="20220704 18:50:59.906"/>
</return>
<msg timestamp="20220704 18:50:59.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.815" endtime="20220704 18:50:59.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.906" endtime="20220704 18:50:59.906"/>
</return>
<msg timestamp="20220704 18:50:59.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.815" endtime="20220704 18:50:59.906"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:50:59.907" endtime="20220704 18:50:59.909"/>
</kw>
<status status="PASS" starttime="20220704 18:50:59.907" endtime="20220704 18:50:59.909"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:59.910" endtime="20220704 18:50:59.910"/>
</return>
<msg timestamp="20220704 18:50:59.910" level="INFO">${LABEL_ID} = 62c33693fb181d7c557af388</msg>
<status status="PASS" starttime="20220704 18:50:59.909" endtime="20220704 18:50:59.910"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:59.911" level="INFO">${url} = labels/62c33693fb181d7c557af388</msg>
<status status="PASS" starttime="20220704 18:50:59.911" endtime="20220704 18:50:59.911"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:50:59.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.912" endtime="20220704 18:50:59.960"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.960" endtime="20220704 18:50:59.961"/>
</return>
<msg timestamp="20220704 18:50:59.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.911" endtime="20220704 18:50:59.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:50:59.961" endtime="20220704 18:50:59.961"/>
</return>
<msg timestamp="20220704 18:50:59.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.910" endtime="20220704 18:50:59.961"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:59.962" endtime="20220704 18:50:59.962"/>
</return>
<msg timestamp="20220704 18:50:59.962" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 18:50:59.961" endtime="20220704 18:50:59.962"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:50:59.963" endtime="20220704 18:50:59.963"/>
</return>
<msg timestamp="20220704 18:50:59.963" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 18:50:59.962" endtime="20220704 18:50:59.963"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:50:59.963" endtime="20220704 18:50:59.964"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:50:59.964" endtime="20220704 18:50:59.964"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:50:59.965" level="INFO">${url} = labels/62c33693fb181d7c557af388</msg>
<status status="PASS" starttime="20220704 18:50:59.965" endtime="20220704 18:50:59.965"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:51:00.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.965" endtime="20220704 18:51:00.076"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.076" endtime="20220704 18:51:00.076"/>
</return>
<msg timestamp="20220704 18:51:00.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:50:59.965" endtime="20220704 18:51:00.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.077" endtime="20220704 18:51:00.077"/>
</return>
<status status="PASS" starttime="20220704 18:50:59.964" endtime="20220704 18:51:00.077"/>
</kw>
<status status="PASS" starttime="20220704 18:50:59.964" endtime="20220704 18:51:00.077"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:50:59.814" endtime="20220704 18:51:00.077"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:51:00.079" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:51:00.079" endtime="20220704 18:51:00.080"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:51:00.080" endtime="20220704 18:51:00.080"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:00.081" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 18:51:00.080" endtime="20220704 18:51:00.081"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:51:00.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.081" endtime="20220704 18:51:00.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.163" endtime="20220704 18:51:00.164"/>
</return>
<msg timestamp="20220704 18:51:00.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.079" endtime="20220704 18:51:00.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.164" endtime="20220704 18:51:00.164"/>
</return>
<msg timestamp="20220704 18:51:00.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.078" endtime="20220704 18:51:00.164"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:51:00.165" endtime="20220704 18:51:00.167"/>
</kw>
<status status="PASS" starttime="20220704 18:51:00.164" endtime="20220704 18:51:00.167"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:51:00.167" endtime="20220704 18:51:00.167"/>
</return>
<msg timestamp="20220704 18:51:00.168" level="INFO">${LABEL_ID} = 62c336940102dd12f5883350</msg>
<status status="PASS" starttime="20220704 18:51:00.167" endtime="20220704 18:51:00.168"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:51:00.169" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:51:00.169" endtime="20220704 18:51:00.169"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:51:00.169" endtime="20220704 18:51:00.169"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:00.170" level="INFO">${url} = labels/62c336940102dd12f5883350</msg>
<status status="PASS" starttime="20220704 18:51:00.169" endtime="20220704 18:51:00.170"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:51:00.275" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.170" endtime="20220704 18:51:00.275"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.275" endtime="20220704 18:51:00.275"/>
</return>
<msg timestamp="20220704 18:51:00.276" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.168" endtime="20220704 18:51:00.276"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.276" endtime="20220704 18:51:00.276"/>
</return>
<msg timestamp="20220704 18:51:00.276" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.168" endtime="20220704 18:51:00.276"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:51:00.276" endtime="20220704 18:51:00.277"/>
</return>
<msg timestamp="20220704 18:51:00.277" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 18:51:00.276" endtime="20220704 18:51:00.277"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:51:00.278" endtime="20220704 18:51:00.278"/>
</return>
<msg timestamp="20220704 18:51:00.278" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 18:51:00.277" endtime="20220704 18:51:00.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:51:00.278" endtime="20220704 18:51:00.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:51:00.279" endtime="20220704 18:51:00.279"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:00.281" level="INFO">${url} = labels/62c336940102dd12f5883350</msg>
<status status="PASS" starttime="20220704 18:51:00.281" endtime="20220704 18:51:00.281"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:51:00.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.281" endtime="20220704 18:51:00.382"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.382" endtime="20220704 18:51:00.382"/>
</return>
<msg timestamp="20220704 18:51:00.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.280" endtime="20220704 18:51:00.382"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.382" endtime="20220704 18:51:00.383"/>
</return>
<status status="PASS" starttime="20220704 18:51:00.279" endtime="20220704 18:51:00.383"/>
</kw>
<status status="PASS" starttime="20220704 18:51:00.279" endtime="20220704 18:51:00.383"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:51:00.077" endtime="20220704 18:51:00.383"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:51:00.385" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:51:00.385" endtime="20220704 18:51:00.385"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:51:00.385" endtime="20220704 18:51:00.385"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:00.386" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 18:51:00.386" endtime="20220704 18:51:00.386"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:51:00.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.386" endtime="20220704 18:51:00.478"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.478" endtime="20220704 18:51:00.478"/>
</return>
<msg timestamp="20220704 18:51:00.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.384" endtime="20220704 18:51:00.478"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.478" endtime="20220704 18:51:00.478"/>
</return>
<msg timestamp="20220704 18:51:00.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.384" endtime="20220704 18:51:00.478"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:51:00.479" endtime="20220704 18:51:00.479"/>
</return>
<msg timestamp="20220704 18:51:00.480" level="INFO">${LABEL_ID} = 62c336947deb7743c9fd7e44</msg>
<status status="PASS" starttime="20220704 18:51:00.478" endtime="20220704 18:51:00.480"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:00.481" level="INFO">${url} = labels/62c336947deb7743c9fd7e44</msg>
<status status="PASS" starttime="20220704 18:51:00.481" endtime="20220704 18:51:00.482"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:51:00.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.482" endtime="20220704 18:51:00.586"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.586" endtime="20220704 18:51:00.587"/>
</return>
<msg timestamp="20220704 18:51:00.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.481" endtime="20220704 18:51:00.587"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.587" endtime="20220704 18:51:00.587"/>
</return>
<status status="PASS" starttime="20220704 18:51:00.480" endtime="20220704 18:51:00.587"/>
</kw>
<status status="PASS" starttime="20220704 18:51:00.480" endtime="20220704 18:51:00.587"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:00.589" level="INFO">${url} = labels/62c336947deb7743c9fd7e44</msg>
<status status="PASS" starttime="20220704 18:51:00.588" endtime="20220704 18:51:00.589"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:51:00.624" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:51:00.589" endtime="20220704 18:51:00.624"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.624" endtime="20220704 18:51:00.624"/>
</return>
<msg timestamp="20220704 18:51:00.625" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:51:00.588" endtime="20220704 18:51:00.625"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.625" endtime="20220704 18:51:00.625"/>
</return>
<status status="PASS" starttime="20220704 18:51:00.587" endtime="20220704 18:51:00.625"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:51:00.383" endtime="20220704 18:51:00.625"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:00.628" level="INFO">${url} = boards/62c33693db20612a90e19200</msg>
<status status="PASS" starttime="20220704 18:51:00.627" endtime="20220704 18:51:00.628"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:51:00.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.628" endtime="20220704 18:51:00.978"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.978" endtime="20220704 18:51:00.978"/>
</return>
<msg timestamp="20220704 18:51:00.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.627" endtime="20220704 18:51:00.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:00.979" endtime="20220704 18:51:00.979"/>
</return>
<status status="PASS" starttime="20220704 18:51:00.626" endtime="20220704 18:51:00.979"/>
</kw>
<status status="PASS" starttime="20220704 18:51:00.626" endtime="20220704 18:51:00.979"/>
</kw>
<status status="PASS" starttime="20220704 18:51:00.626" endtime="20220704 18:51:00.979"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 18:51:00.979" endtime="20220704 18:51:00.981"/>
</kw>
<status status="PASS" starttime="20220704 18:51:00.626" endtime="20220704 18:51:00.981"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 18:50:59.560" endtime="20220704 18:51:00.981"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 18:51:00.990" endtime="20220704 18:51:00.991"/>
</kw>
<status status="PASS" starttime="20220704 18:51:00.990" endtime="20220704 18:51:00.991"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:51:00.992" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:51:00.992" endtime="20220704 18:51:00.992"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:51:00.992" endtime="20220704 18:51:00.992"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:00.993" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:51:00.992" endtime="20220704 18:51:00.993"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:51:01.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.993" endtime="20220704 18:51:01.216"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.216" endtime="20220704 18:51:01.216"/>
</return>
<msg timestamp="20220704 18:51:01.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.991" endtime="20220704 18:51:01.216"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.216" endtime="20220704 18:51:01.216"/>
</return>
<msg timestamp="20220704 18:51:01.216" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:00.991" endtime="20220704 18:51:01.216"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:51:01.218" level="INFO">${TEST_SUITE_BOARD_ID} = 62c33695d59d9e5af6d194b7</msg>
<status status="PASS" starttime="20220704 18:51:01.217" endtime="20220704 18:51:01.218"/>
</kw>
<status status="PASS" starttime="20220704 18:51:01.217" endtime="20220704 18:51:01.218"/>
</kw>
<status status="PASS" starttime="20220704 18:51:00.991" endtime="20220704 18:51:01.218"/>
</kw>
<status status="PASS" starttime="20220704 18:51:00.990" endtime="20220704 18:51:01.218"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:51:01.220" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:51:01.219" endtime="20220704 18:51:01.220"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:51:01.220" endtime="20220704 18:51:01.220"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:01.221" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 18:51:01.220" endtime="20220704 18:51:01.221"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:51:01.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.221" endtime="20220704 18:51:01.341"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.341" endtime="20220704 18:51:01.341"/>
</return>
<msg timestamp="20220704 18:51:01.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.219" endtime="20220704 18:51:01.341"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.341" endtime="20220704 18:51:01.341"/>
</return>
<msg timestamp="20220704 18:51:01.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.219" endtime="20220704 18:51:01.341"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:51:01.342" endtime="20220704 18:51:01.344"/>
</kw>
<status status="PASS" starttime="20220704 18:51:01.342" endtime="20220704 18:51:01.344"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:51:01.218" endtime="20220704 18:51:01.344"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:51:01.346" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:51:01.346" endtime="20220704 18:51:01.346"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:51:01.346" endtime="20220704 18:51:01.347"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:01.347" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 18:51:01.347" endtime="20220704 18:51:01.347"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:51:01.442" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.348" endtime="20220704 18:51:01.442"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.442" endtime="20220704 18:51:01.442"/>
</return>
<msg timestamp="20220704 18:51:01.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.346" endtime="20220704 18:51:01.443"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.443" endtime="20220704 18:51:01.443"/>
</return>
<msg timestamp="20220704 18:51:01.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.345" endtime="20220704 18:51:01.443"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:51:01.444" endtime="20220704 18:51:01.445"/>
</kw>
<status status="PASS" starttime="20220704 18:51:01.443" endtime="20220704 18:51:01.446"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:51:01.448" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:51:01.447" endtime="20220704 18:51:01.448"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:51:01.448" endtime="20220704 18:51:01.448"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:01.448" level="INFO">${url} = lists/62c33695f6455949fee984a9</msg>
<status status="PASS" starttime="20220704 18:51:01.448" endtime="20220704 18:51:01.448"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:51:01.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.449" endtime="20220704 18:51:01.522"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.522" endtime="20220704 18:51:01.522"/>
</return>
<msg timestamp="20220704 18:51:01.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.447" endtime="20220704 18:51:01.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.523" endtime="20220704 18:51:01.523"/>
</return>
<status status="PASS" starttime="20220704 18:51:01.446" endtime="20220704 18:51:01.523"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:01.525" level="INFO">${url} = lists/62c33695f6455949fee984a9</msg>
<status status="PASS" starttime="20220704 18:51:01.524" endtime="20220704 18:51:01.525"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:51:01.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.525" endtime="20220704 18:51:01.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.566" endtime="20220704 18:51:01.566"/>
</return>
<msg timestamp="20220704 18:51:01.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.524" endtime="20220704 18:51:01.566"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.566" endtime="20220704 18:51:01.566"/>
</return>
<msg timestamp="20220704 18:51:01.566" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.523" endtime="20220704 18:51:01.566"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:51:01.567" endtime="20220704 18:51:01.568"/>
</kw>
<status status="PASS" starttime="20220704 18:51:01.566" endtime="20220704 18:51:01.569"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:51:01.569" endtime="20220704 18:51:01.569"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 18:51:01.345" endtime="20220704 18:51:01.570"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:51:01.573" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:51:01.573" endtime="20220704 18:51:01.573"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:51:01.573" endtime="20220704 18:51:01.573"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:01.574" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 18:51:01.573" endtime="20220704 18:51:01.574"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:51:01.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.574" endtime="20220704 18:51:01.670"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.670" endtime="20220704 18:51:01.670"/>
</return>
<msg timestamp="20220704 18:51:01.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.572" endtime="20220704 18:51:01.671"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.671" endtime="20220704 18:51:01.671"/>
</return>
<msg timestamp="20220704 18:51:01.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.570" endtime="20220704 18:51:01.671"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:51:01.673" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:51:01.673" endtime="20220704 18:51:01.673"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:51:01.673" endtime="20220704 18:51:01.673"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:01.674" level="INFO">${url} = lists/62c3369567da2d701b27fbbc/closed</msg>
<status status="PASS" starttime="20220704 18:51:01.673" endtime="20220704 18:51:01.674"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:51:01.754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.674" endtime="20220704 18:51:01.754"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.754" endtime="20220704 18:51:01.754"/>
</return>
<msg timestamp="20220704 18:51:01.754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.672" endtime="20220704 18:51:01.754"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.754" endtime="20220704 18:51:01.755"/>
</return>
<status status="PASS" starttime="20220704 18:51:01.671" endtime="20220704 18:51:01.755"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:01.757" level="INFO">${url} = lists/62c3369567da2d701b27fbbc</msg>
<status status="PASS" starttime="20220704 18:51:01.756" endtime="20220704 18:51:01.757"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:51:01.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.757" endtime="20220704 18:51:01.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.803" endtime="20220704 18:51:01.803"/>
</return>
<msg timestamp="20220704 18:51:01.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.756" endtime="20220704 18:51:01.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:01.803" endtime="20220704 18:51:01.803"/>
</return>
<msg timestamp="20220704 18:51:01.804" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.755" endtime="20220704 18:51:01.804"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 18:51:01.804" endtime="20220704 18:51:01.805"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 18:51:01.570" endtime="20220704 18:51:01.805"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:51:01.807" level="INFO">${url} = boards/62c33695d59d9e5af6d194b7</msg>
<status status="PASS" starttime="20220704 18:51:01.807" endtime="20220704 18:51:01.807"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:51:02.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.807" endtime="20220704 18:51:02.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:02.116" endtime="20220704 18:51:02.116"/>
</return>
<msg timestamp="20220704 18:51:02.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:51:01.807" endtime="20220704 18:51:02.116"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:51:02.116" endtime="20220704 18:51:02.116"/>
</return>
<status status="PASS" starttime="20220704 18:51:01.806" endtime="20220704 18:51:02.116"/>
</kw>
<status status="PASS" starttime="20220704 18:51:01.806" endtime="20220704 18:51:02.116"/>
</kw>
<status status="PASS" starttime="20220704 18:51:01.805" endtime="20220704 18:51:02.116"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 18:51:02.116" endtime="20220704 18:51:02.118"/>
</kw>
<status status="PASS" starttime="20220704 18:51:01.805" endtime="20220704 18:51:02.118"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 18:51:00.982" endtime="20220704 18:51:02.118"/>
</suite>
<status status="PASS" starttime="20220704 18:50:51.593" endtime="20220704 18:51:02.119"/>
</suite>
<status status="PASS" starttime="20220704 18:50:51.577" endtime="20220704 18:51:02.121"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
