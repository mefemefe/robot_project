<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 15:25:51.598" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:25:51.720" endtime="20220704 15:25:51.721"/>
</kw>
<status status="PASS" starttime="20220704 15:25:51.719" endtime="20220704 15:25:51.721"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:51.723" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:51.722" endtime="20220704 15:25:51.723"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:51.723" endtime="20220704 15:25:51.723"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:51.724" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:51.723" endtime="20220704 15:25:51.724"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:51.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:51.724" endtime="20220704 15:25:51.986"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:51.986" endtime="20220704 15:25:51.986"/>
</return>
<msg timestamp="20220704 15:25:51.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:51.722" endtime="20220704 15:25:51.986"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:51.986" endtime="20220704 15:25:51.986"/>
</return>
<msg timestamp="20220704 15:25:51.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:51.722" endtime="20220704 15:25:51.986"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:51.987" endtime="20220704 15:25:51.991"/>
</kw>
<status status="PASS" starttime="20220704 15:25:51.986" endtime="20220704 15:25:51.991"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:51.993" level="INFO">${url} = boards/62c3067f5a465c8abb7d5e87</msg>
<status status="PASS" starttime="20220704 15:25:51.993" endtime="20220704 15:25:51.993"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:52.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:51.993" endtime="20220704 15:25:52.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.333" endtime="20220704 15:25:52.333"/>
</return>
<msg timestamp="20220704 15:25:52.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:51.992" endtime="20220704 15:25:52.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.333" endtime="20220704 15:25:52.333"/>
</return>
<status status="PASS" starttime="20220704 15:25:51.992" endtime="20220704 15:25:52.333"/>
</kw>
<status status="PASS" starttime="20220704 15:25:51.991" endtime="20220704 15:25:52.333"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:51.721" endtime="20220704 15:25:52.333"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:52.336" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:52.336" endtime="20220704 15:25:52.337"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:52.337" endtime="20220704 15:25:52.337"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:52.338" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:52.337" endtime="20220704 15:25:52.338"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:52.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.338" endtime="20220704 15:25:52.546"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.547" endtime="20220704 15:25:52.547"/>
</return>
<msg timestamp="20220704 15:25:52.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.336" endtime="20220704 15:25:52.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.547" endtime="20220704 15:25:52.547"/>
</return>
<msg timestamp="20220704 15:25:52.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.335" endtime="20220704 15:25:52.547"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:52.548" endtime="20220704 15:25:52.551"/>
</kw>
<status status="PASS" starttime="20220704 15:25:52.547" endtime="20220704 15:25:52.551"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:52.553" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:52.553" endtime="20220704 15:25:52.553"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:52.553" endtime="20220704 15:25:52.553"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:52.554" level="INFO">${url} = boards/62c306805dbbac26de834185</msg>
<status status="PASS" starttime="20220704 15:25:52.553" endtime="20220704 15:25:52.554"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:52.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.554" endtime="20220704 15:25:52.642"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.642" endtime="20220704 15:25:52.642"/>
</return>
<msg timestamp="20220704 15:25:52.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.552" endtime="20220704 15:25:52.642"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.642" endtime="20220704 15:25:52.642"/>
</return>
<status status="PASS" starttime="20220704 15:25:52.552" endtime="20220704 15:25:52.642"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:52.644" level="INFO">${url} = boards/62c306805dbbac26de834185</msg>
<status status="PASS" starttime="20220704 15:25:52.644" endtime="20220704 15:25:52.644"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:52.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.644" endtime="20220704 15:25:52.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.691" endtime="20220704 15:25:52.691"/>
</return>
<msg timestamp="20220704 15:25:52.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.643" endtime="20220704 15:25:52.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.691" endtime="20220704 15:25:52.691"/>
</return>
<msg timestamp="20220704 15:25:52.691" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.643" endtime="20220704 15:25:52.691"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:52.692" endtime="20220704 15:25:52.695"/>
</kw>
<status status="PASS" starttime="20220704 15:25:52.691" endtime="20220704 15:25:52.695"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:52.696" endtime="20220704 15:25:52.696"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:52.698" level="INFO">${url} = boards/62c306805dbbac26de834185</msg>
<status status="PASS" starttime="20220704 15:25:52.698" endtime="20220704 15:25:52.698"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:53.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.698" endtime="20220704 15:25:53.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.024" endtime="20220704 15:25:53.024"/>
</return>
<msg timestamp="20220704 15:25:53.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.697" endtime="20220704 15:25:53.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.024" endtime="20220704 15:25:53.024"/>
</return>
<status status="PASS" starttime="20220704 15:25:52.697" endtime="20220704 15:25:53.024"/>
</kw>
<status status="PASS" starttime="20220704 15:25:52.696" endtime="20220704 15:25:53.024"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:52.335" endtime="20220704 15:25:53.024"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:53.027" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:53.027" endtime="20220704 15:25:53.027"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:53.027" endtime="20220704 15:25:53.027"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:53.028" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:53.027" endtime="20220704 15:25:53.028"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:53.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.028" endtime="20220704 15:25:53.282"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.282" endtime="20220704 15:25:53.282"/>
</return>
<msg timestamp="20220704 15:25:53.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.026" endtime="20220704 15:25:53.282"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.282" endtime="20220704 15:25:53.282"/>
</return>
<msg timestamp="20220704 15:25:53.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.026" endtime="20220704 15:25:53.282"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:53.284" level="INFO">${url} = boards/62c306817b9fca55f688b192</msg>
<status status="PASS" starttime="20220704 15:25:53.284" endtime="20220704 15:25:53.284"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:53.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.284" endtime="20220704 15:25:53.581"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.581" endtime="20220704 15:25:53.581"/>
</return>
<msg timestamp="20220704 15:25:53.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.283" endtime="20220704 15:25:53.582"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.582" endtime="20220704 15:25:53.582"/>
</return>
<status status="PASS" starttime="20220704 15:25:53.282" endtime="20220704 15:25:53.582"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:53.584" level="INFO">${url} = boards/62c306817b9fca55f688b192</msg>
<status status="PASS" starttime="20220704 15:25:53.583" endtime="20220704 15:25:53.584"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:53.627" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:25:53.584" endtime="20220704 15:25:53.627"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.627" endtime="20220704 15:25:53.627"/>
</return>
<msg timestamp="20220704 15:25:53.627" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:25:53.583" endtime="20220704 15:25:53.627"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.627" endtime="20220704 15:25:53.627"/>
</return>
<status status="PASS" starttime="20220704 15:25:53.582" endtime="20220704 15:25:53.627"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:53.025" endtime="20220704 15:25:53.627"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:53.630" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:53.630" endtime="20220704 15:25:53.630"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:53.630" endtime="20220704 15:25:53.630"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:53.631" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:53.630" endtime="20220704 15:25:53.631"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:53.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.631" endtime="20220704 15:25:53.852"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.852" endtime="20220704 15:25:53.852"/>
</return>
<msg timestamp="20220704 15:25:53.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.629" endtime="20220704 15:25:53.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.853" endtime="20220704 15:25:53.853"/>
</return>
<msg timestamp="20220704 15:25:53.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.629" endtime="20220704 15:25:53.853"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:53.853" endtime="20220704 15:25:53.857"/>
</kw>
<status status="PASS" starttime="20220704 15:25:53.853" endtime="20220704 15:25:53.857"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:53.859" level="INFO">${url} = boards/62c306812f26fd3bc14f522d</msg>
<status status="PASS" starttime="20220704 15:25:53.859" endtime="20220704 15:25:53.859"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:53.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.859" endtime="20220704 15:25:53.913"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.913" endtime="20220704 15:25:53.913"/>
</return>
<msg timestamp="20220704 15:25:53.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.858" endtime="20220704 15:25:53.914"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.914" endtime="20220704 15:25:53.914"/>
</return>
<msg timestamp="20220704 15:25:53.914" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.857" endtime="20220704 15:25:53.914"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:53.914" endtime="20220704 15:25:53.918"/>
</kw>
<status status="PASS" starttime="20220704 15:25:53.914" endtime="20220704 15:25:53.918"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:53.918" endtime="20220704 15:25:53.919"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:53.921" level="INFO">${url} = boards/62c306812f26fd3bc14f522d</msg>
<status status="PASS" starttime="20220704 15:25:53.920" endtime="20220704 15:25:53.921"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:54.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.921" endtime="20220704 15:25:54.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.297" endtime="20220704 15:25:54.297"/>
</return>
<msg timestamp="20220704 15:25:54.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.920" endtime="20220704 15:25:54.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.297" endtime="20220704 15:25:54.297"/>
</return>
<status status="PASS" starttime="20220704 15:25:53.919" endtime="20220704 15:25:54.298"/>
</kw>
<status status="PASS" starttime="20220704 15:25:53.919" endtime="20220704 15:25:54.298"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:53.628" endtime="20220704 15:25:54.298"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:54.300" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:54.299" endtime="20220704 15:25:54.300"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:54.300" endtime="20220704 15:25:54.300"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:54.301" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:54.300" endtime="20220704 15:25:54.301"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:54.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.301" endtime="20220704 15:25:54.465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.465" endtime="20220704 15:25:54.465"/>
</return>
<msg timestamp="20220704 15:25:54.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.299" endtime="20220704 15:25:54.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.466" endtime="20220704 15:25:54.466"/>
</return>
<msg timestamp="20220704 15:25:54.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.299" endtime="20220704 15:25:54.466"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:54.466" endtime="20220704 15:25:54.470"/>
</kw>
<status status="PASS" starttime="20220704 15:25:54.466" endtime="20220704 15:25:54.471"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:54.472" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:54.472" endtime="20220704 15:25:54.472"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:54.472" endtime="20220704 15:25:54.472"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:54.473" level="INFO">${url} = boards/62c3068230ed988d649977ac</msg>
<status status="PASS" starttime="20220704 15:25:54.472" endtime="20220704 15:25:54.473"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:54.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.473" endtime="20220704 15:25:54.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.591" endtime="20220704 15:25:54.591"/>
</return>
<msg timestamp="20220704 15:25:54.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.471" endtime="20220704 15:25:54.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.591" endtime="20220704 15:25:54.591"/>
</return>
<status status="PASS" starttime="20220704 15:25:54.471" endtime="20220704 15:25:54.591"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:54.593" level="INFO">${url} = boards/62c3068230ed988d649977ac</msg>
<status status="PASS" starttime="20220704 15:25:54.593" endtime="20220704 15:25:54.593"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:54.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.593" endtime="20220704 15:25:54.645"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.645" endtime="20220704 15:25:54.645"/>
</return>
<msg timestamp="20220704 15:25:54.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.592" endtime="20220704 15:25:54.645"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.645" endtime="20220704 15:25:54.645"/>
</return>
<msg timestamp="20220704 15:25:54.645" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.592" endtime="20220704 15:25:54.645"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:54.645" endtime="20220704 15:25:54.646"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:54.648" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:54.648" endtime="20220704 15:25:54.648"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:54.648" endtime="20220704 15:25:54.648"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:54.648" level="INFO">${url} = boards/62c3068230ed988d649977ac</msg>
<status status="PASS" starttime="20220704 15:25:54.648" endtime="20220704 15:25:54.649"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:54.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.649" endtime="20220704 15:25:54.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.737" endtime="20220704 15:25:54.737"/>
</return>
<msg timestamp="20220704 15:25:54.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.647" endtime="20220704 15:25:54.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.737" endtime="20220704 15:25:54.738"/>
</return>
<status status="PASS" starttime="20220704 15:25:54.646" endtime="20220704 15:25:54.738"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:54.739" level="INFO">${url} = boards/62c3068230ed988d649977ac</msg>
<status status="PASS" starttime="20220704 15:25:54.739" endtime="20220704 15:25:54.739"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:54.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.739" endtime="20220704 15:25:54.788"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.788" endtime="20220704 15:25:54.788"/>
</return>
<msg timestamp="20220704 15:25:54.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.739" endtime="20220704 15:25:54.788"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.788" endtime="20220704 15:25:54.788"/>
</return>
<msg timestamp="20220704 15:25:54.789" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.738" endtime="20220704 15:25:54.789"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:54.789" endtime="20220704 15:25:54.789"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:54.791" level="INFO">${url} = boards/62c3068230ed988d649977ac</msg>
<status status="PASS" starttime="20220704 15:25:54.791" endtime="20220704 15:25:54.791"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:55.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.791" endtime="20220704 15:25:55.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.099" endtime="20220704 15:25:55.099"/>
</return>
<msg timestamp="20220704 15:25:55.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.791" endtime="20220704 15:25:55.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.099" endtime="20220704 15:25:55.099"/>
</return>
<status status="PASS" starttime="20220704 15:25:54.790" endtime="20220704 15:25:55.100"/>
</kw>
<status status="PASS" starttime="20220704 15:25:54.790" endtime="20220704 15:25:55.100"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:54.298" endtime="20220704 15:25:55.100"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 15:25:55.101" endtime="20220704 15:25:55.102"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 15:25:51.617" endtime="20220704 15:25:55.102"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:25:55.113" endtime="20220704 15:25:55.113"/>
</kw>
<status status="PASS" starttime="20220704 15:25:55.113" endtime="20220704 15:25:55.113"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:55.114" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:55.114" endtime="20220704 15:25:55.114"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:55.114" endtime="20220704 15:25:55.114"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:55.115" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:55.114" endtime="20220704 15:25:55.115"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:55.310" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.115" endtime="20220704 15:25:55.310"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.310" endtime="20220704 15:25:55.310"/>
</return>
<msg timestamp="20220704 15:25:55.310" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.114" endtime="20220704 15:25:55.310"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.310" endtime="20220704 15:25:55.310"/>
</return>
<msg timestamp="20220704 15:25:55.310" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.113" endtime="20220704 15:25:55.310"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:25:55.311" level="INFO">${TEST_SUITE_BOARD_ID} = 62c30683f31e817593048ca1</msg>
<status status="PASS" starttime="20220704 15:25:55.310" endtime="20220704 15:25:55.311"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:55.312" level="INFO">${url} = boards/62c30683f31e817593048ca1/lists/</msg>
<status status="PASS" starttime="20220704 15:25:55.312" endtime="20220704 15:25:55.312"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:55.360" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.312" endtime="20220704 15:25:55.360"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.360" endtime="20220704 15:25:55.360"/>
</return>
<msg timestamp="20220704 15:25:55.360" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.312" endtime="20220704 15:25:55.360"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.360" endtime="20220704 15:25:55.360"/>
</return>
<msg timestamp="20220704 15:25:55.361" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.311" endtime="20220704 15:25:55.361"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:25:55.361" level="INFO">${TEST_SUITE_LIST_ID} = 62c30683f31e817593048ca8</msg>
<status status="PASS" starttime="20220704 15:25:55.361" endtime="20220704 15:25:55.361"/>
</kw>
<status status="PASS" starttime="20220704 15:25:55.113" endtime="20220704 15:25:55.361"/>
</kw>
<status status="PASS" starttime="20220704 15:25:55.112" endtime="20220704 15:25:55.362"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:55.363" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:55.363" endtime="20220704 15:25:55.363"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:55.363" endtime="20220704 15:25:55.364"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:55.364" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:25:55.364" endtime="20220704 15:25:55.364"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:55.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.364" endtime="20220704 15:25:55.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.552" endtime="20220704 15:25:55.552"/>
</return>
<msg timestamp="20220704 15:25:55.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.363" endtime="20220704 15:25:55.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.552" endtime="20220704 15:25:55.552"/>
</return>
<msg timestamp="20220704 15:25:55.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.362" endtime="20220704 15:25:55.553"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:55.553" endtime="20220704 15:25:55.558"/>
</kw>
<status status="PASS" starttime="20220704 15:25:55.553" endtime="20220704 15:25:55.558"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:55.558" endtime="20220704 15:25:55.558"/>
</return>
<msg timestamp="20220704 15:25:55.559" level="INFO">${CARD_ID} = 62c306834955fd7fbd0fee80</msg>
<status status="PASS" starttime="20220704 15:25:55.558" endtime="20220704 15:25:55.559"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:55.560" level="INFO">${url} = cards/62c306834955fd7fbd0fee80</msg>
<status status="PASS" starttime="20220704 15:25:55.560" endtime="20220704 15:25:55.560"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:55.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.560" endtime="20220704 15:25:55.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.617" endtime="20220704 15:25:55.617"/>
</return>
<msg timestamp="20220704 15:25:55.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.559" endtime="20220704 15:25:55.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.618" endtime="20220704 15:25:55.618"/>
</return>
<msg timestamp="20220704 15:25:55.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.559" endtime="20220704 15:25:55.618"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:55.618" endtime="20220704 15:25:55.618"/>
</return>
<msg timestamp="20220704 15:25:55.619" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 15:25:55.618" endtime="20220704 15:25:55.619"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:55.619" endtime="20220704 15:25:55.619"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:55.621" level="INFO">${url} = cards/62c306834955fd7fbd0fee80</msg>
<status status="PASS" starttime="20220704 15:25:55.620" endtime="20220704 15:25:55.621"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:55.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.621" endtime="20220704 15:25:55.799"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.799" endtime="20220704 15:25:55.799"/>
</return>
<msg timestamp="20220704 15:25:55.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.620" endtime="20220704 15:25:55.799"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.799" endtime="20220704 15:25:55.799"/>
</return>
<status status="PASS" starttime="20220704 15:25:55.620" endtime="20220704 15:25:55.799"/>
</kw>
<status status="PASS" starttime="20220704 15:25:55.619" endtime="20220704 15:25:55.799"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:55.362" endtime="20220704 15:25:55.799"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:55.801" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:55.801" endtime="20220704 15:25:55.801"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:55.802" endtime="20220704 15:25:55.802"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:55.802" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:25:55.802" endtime="20220704 15:25:55.802"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:56.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.803" endtime="20220704 15:25:56.131"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.131" endtime="20220704 15:25:56.131"/>
</return>
<msg timestamp="20220704 15:25:56.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.801" endtime="20220704 15:25:56.131"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.131" endtime="20220704 15:25:56.131"/>
</return>
<msg timestamp="20220704 15:25:56.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.800" endtime="20220704 15:25:56.132"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:56.132" endtime="20220704 15:25:56.132"/>
</return>
<msg timestamp="20220704 15:25:56.133" level="INFO">${CARD_ID} = 62c306844f34b45a0966c09b</msg>
<status status="PASS" starttime="20220704 15:25:56.132" endtime="20220704 15:25:56.133"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:56.135" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:56.134" endtime="20220704 15:25:56.135"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:56.135" endtime="20220704 15:25:56.135"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:56.135" level="INFO">${url} = cards/62c306844f34b45a0966c09b</msg>
<status status="PASS" starttime="20220704 15:25:56.135" endtime="20220704 15:25:56.135"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:56.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.135" endtime="20220704 15:25:56.263"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.263" endtime="20220704 15:25:56.263"/>
</return>
<msg timestamp="20220704 15:25:56.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.134" endtime="20220704 15:25:56.263"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.263" endtime="20220704 15:25:56.263"/>
</return>
<msg timestamp="20220704 15:25:56.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.133" endtime="20220704 15:25:56.264"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.264" endtime="20220704 15:25:56.264"/>
</return>
<status status="PASS" starttime="20220704 15:25:56.133" endtime="20220704 15:25:56.264"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:56.265" level="INFO">${url} = cards/62c306844f34b45a0966c09b</msg>
<status status="PASS" starttime="20220704 15:25:56.265" endtime="20220704 15:25:56.265"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:56.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.265" endtime="20220704 15:25:56.318"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.318" endtime="20220704 15:25:56.318"/>
</return>
<msg timestamp="20220704 15:25:56.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.264" endtime="20220704 15:25:56.318"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.318" endtime="20220704 15:25:56.318"/>
</return>
<msg timestamp="20220704 15:25:56.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.264" endtime="20220704 15:25:56.319"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:56.319" endtime="20220704 15:25:56.319"/>
</return>
<msg timestamp="20220704 15:25:56.320" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 15:25:56.319" endtime="20220704 15:25:56.320"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 15:25:56.320" endtime="20220704 15:25:56.320"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:56.322" level="INFO">${url} = cards/62c306844f34b45a0966c09b</msg>
<status status="PASS" starttime="20220704 15:25:56.321" endtime="20220704 15:25:56.322"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:56.470" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.322" endtime="20220704 15:25:56.470"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.470" endtime="20220704 15:25:56.470"/>
</return>
<msg timestamp="20220704 15:25:56.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.321" endtime="20220704 15:25:56.471"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.471" endtime="20220704 15:25:56.471"/>
</return>
<status status="PASS" starttime="20220704 15:25:56.321" endtime="20220704 15:25:56.471"/>
</kw>
<status status="PASS" starttime="20220704 15:25:56.320" endtime="20220704 15:25:56.471"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:25:55.800" endtime="20220704 15:25:56.471"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:56.473" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:56.473" endtime="20220704 15:25:56.473"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:56.473" endtime="20220704 15:25:56.474"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:56.474" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:25:56.474" endtime="20220704 15:25:56.474"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:56.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.474" endtime="20220704 15:25:56.643"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.644" endtime="20220704 15:25:56.644"/>
</return>
<msg timestamp="20220704 15:25:56.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.472" endtime="20220704 15:25:56.644"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.644" endtime="20220704 15:25:56.644"/>
</return>
<msg timestamp="20220704 15:25:56.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.472" endtime="20220704 15:25:56.644"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:56.645" endtime="20220704 15:25:56.645"/>
</return>
<msg timestamp="20220704 15:25:56.645" level="INFO">${CARD_ID} = 62c30684d1350c4480908634</msg>
<status status="PASS" starttime="20220704 15:25:56.644" endtime="20220704 15:25:56.645"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:56.646" level="INFO">${url} = cards/62c30684d1350c4480908634</msg>
<status status="PASS" starttime="20220704 15:25:56.646" endtime="20220704 15:25:56.646"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.647" endtime="20220704 15:25:57.041"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.041" endtime="20220704 15:25:57.041"/>
</return>
<msg timestamp="20220704 15:25:57.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.646" endtime="20220704 15:25:57.042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.042" endtime="20220704 15:25:57.042"/>
</return>
<msg timestamp="20220704 15:25:57.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.645" endtime="20220704 15:25:57.042"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:57.042" endtime="20220704 15:25:57.044"/>
</kw>
<status status="PASS" starttime="20220704 15:25:57.042" endtime="20220704 15:25:57.044"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:57.046" level="INFO">${url} = cards/62c30684d1350c4480908634</msg>
<status status="PASS" starttime="20220704 15:25:57.045" endtime="20220704 15:25:57.046"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.087" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:25:57.046" endtime="20220704 15:25:57.087"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.087" endtime="20220704 15:25:57.087"/>
</return>
<msg timestamp="20220704 15:25:57.088" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:25:57.045" endtime="20220704 15:25:57.088"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.088" endtime="20220704 15:25:57.088"/>
</return>
<status status="PASS" starttime="20220704 15:25:57.044" endtime="20220704 15:25:57.088"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:56.471" endtime="20220704 15:25:57.088"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:57.090" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:57.090" endtime="20220704 15:25:57.090"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:57.090" endtime="20220704 15:25:57.090"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:57.091" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:25:57.090" endtime="20220704 15:25:57.091"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.091" endtime="20220704 15:25:57.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.253" endtime="20220704 15:25:57.253"/>
</return>
<msg timestamp="20220704 15:25:57.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.089" endtime="20220704 15:25:57.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.253" endtime="20220704 15:25:57.254"/>
</return>
<msg timestamp="20220704 15:25:57.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.089" endtime="20220704 15:25:57.254"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:57.254" endtime="20220704 15:25:57.254"/>
</return>
<msg timestamp="20220704 15:25:57.255" level="INFO">${CARD_ID} = 62c3068516f3745a12ac5f67</msg>
<status status="PASS" starttime="20220704 15:25:57.254" endtime="20220704 15:25:57.255"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:57.256" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:57.256" endtime="20220704 15:25:57.256"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:57.256" endtime="20220704 15:25:57.256"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:57.257" level="INFO">${url} = cards/62c3068516f3745a12ac5f67</msg>
<status status="PASS" starttime="20220704 15:25:57.257" endtime="20220704 15:25:57.257"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.393" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.257" endtime="20220704 15:25:57.393"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.393" endtime="20220704 15:25:57.393"/>
</return>
<msg timestamp="20220704 15:25:57.393" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.255" endtime="20220704 15:25:57.393"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.393" endtime="20220704 15:25:57.393"/>
</return>
<msg timestamp="20220704 15:25:57.393" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.255" endtime="20220704 15:25:57.394"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:57.394" endtime="20220704 15:25:57.399"/>
</kw>
<status status="PASS" starttime="20220704 15:25:57.394" endtime="20220704 15:25:57.399"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:57.400" level="INFO">${url} = cards/62c3068516f3745a12ac5f67</msg>
<status status="PASS" starttime="20220704 15:25:57.400" endtime="20220704 15:25:57.400"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.400" endtime="20220704 15:25:57.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.453" endtime="20220704 15:25:57.453"/>
</return>
<msg timestamp="20220704 15:25:57.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.400" endtime="20220704 15:25:57.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.453" endtime="20220704 15:25:57.453"/>
</return>
<msg timestamp="20220704 15:25:57.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.399" endtime="20220704 15:25:57.454"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:57.454" endtime="20220704 15:25:57.454"/>
</return>
<msg timestamp="20220704 15:25:57.455" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 15:25:57.454" endtime="20220704 15:25:57.455"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:57.455" endtime="20220704 15:25:57.455"/>
</return>
<msg timestamp="20220704 15:25:57.456" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 15:25:57.455" endtime="20220704 15:25:57.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:57.456" endtime="20220704 15:25:57.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:57.456" endtime="20220704 15:25:57.457"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:57.458" level="INFO">${url} = cards/62c3068516f3745a12ac5f67</msg>
<status status="PASS" starttime="20220704 15:25:57.458" endtime="20220704 15:25:57.458"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.458" endtime="20220704 15:25:57.606"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.606" endtime="20220704 15:25:57.606"/>
</return>
<msg timestamp="20220704 15:25:57.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.457" endtime="20220704 15:25:57.606"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.606" endtime="20220704 15:25:57.606"/>
</return>
<status status="PASS" starttime="20220704 15:25:57.457" endtime="20220704 15:25:57.606"/>
</kw>
<status status="PASS" starttime="20220704 15:25:57.457" endtime="20220704 15:25:57.606"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:25:57.088" endtime="20220704 15:25:57.607"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:57.609" level="INFO">${url} = boards/62c30683f31e817593048ca1</msg>
<status status="PASS" starttime="20220704 15:25:57.609" endtime="20220704 15:25:57.609"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.609" endtime="20220704 15:25:57.993"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.993" endtime="20220704 15:25:57.994"/>
</return>
<msg timestamp="20220704 15:25:57.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.608" endtime="20220704 15:25:57.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.994" endtime="20220704 15:25:57.994"/>
</return>
<status status="PASS" starttime="20220704 15:25:57.608" endtime="20220704 15:25:57.994"/>
</kw>
<status status="PASS" starttime="20220704 15:25:57.608" endtime="20220704 15:25:57.994"/>
</kw>
<status status="PASS" starttime="20220704 15:25:57.607" endtime="20220704 15:25:57.994"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:25:57.994" endtime="20220704 15:25:57.995"/>
</kw>
<status status="PASS" starttime="20220704 15:25:57.607" endtime="20220704 15:25:57.995"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 15:25:55.103" endtime="20220704 15:25:57.995"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:25:58.005" endtime="20220704 15:25:58.005"/>
</kw>
<status status="PASS" starttime="20220704 15:25:58.005" endtime="20220704 15:25:58.005"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:58.006" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:58.006" endtime="20220704 15:25:58.006"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:58.007" endtime="20220704 15:25:58.007"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.007" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:58.007" endtime="20220704 15:25:58.007"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.008" endtime="20220704 15:25:58.207"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.207" endtime="20220704 15:25:58.207"/>
</return>
<msg timestamp="20220704 15:25:58.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.006" endtime="20220704 15:25:58.207"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.207" endtime="20220704 15:25:58.207"/>
</return>
<msg timestamp="20220704 15:25:58.207" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.006" endtime="20220704 15:25:58.207"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:25:58.208" level="INFO">${TEST_SUITE_BOARD_ID} = 62c30686eaf0e1105af42ba5</msg>
<status status="PASS" starttime="20220704 15:25:58.208" endtime="20220704 15:25:58.208"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.209" level="INFO">${url} = boards/62c30686eaf0e1105af42ba5/lists/</msg>
<status status="PASS" starttime="20220704 15:25:58.209" endtime="20220704 15:25:58.209"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.266" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.209" endtime="20220704 15:25:58.266"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.266" endtime="20220704 15:25:58.267"/>
</return>
<msg timestamp="20220704 15:25:58.267" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.209" endtime="20220704 15:25:58.267"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.267" endtime="20220704 15:25:58.267"/>
</return>
<msg timestamp="20220704 15:25:58.267" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.208" endtime="20220704 15:25:58.267"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:25:58.268" level="INFO">${TEST_SUITE_LIST_ID} = 62c30686eaf0e1105af42bac</msg>
<status status="PASS" starttime="20220704 15:25:58.267" endtime="20220704 15:25:58.268"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:58.269" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:58.269" endtime="20220704 15:25:58.269"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:58.269" endtime="20220704 15:25:58.270"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.270" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:25:58.270" endtime="20220704 15:25:58.270"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.270" endtime="20220704 15:25:58.512"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.512" endtime="20220704 15:25:58.512"/>
</return>
<msg timestamp="20220704 15:25:58.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.269" endtime="20220704 15:25:58.512"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.513" endtime="20220704 15:25:58.513"/>
</return>
<msg timestamp="20220704 15:25:58.513" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.268" endtime="20220704 15:25:58.513"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:25:58.514" level="INFO">${TEST_SUITE_CARD_ID} = 62c30686f0f2b752bf4da26e</msg>
<status status="PASS" starttime="20220704 15:25:58.513" endtime="20220704 15:25:58.514"/>
</kw>
<status status="PASS" starttime="20220704 15:25:58.005" endtime="20220704 15:25:58.514"/>
</kw>
<status status="PASS" starttime="20220704 15:25:58.005" endtime="20220704 15:25:58.514"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:58.516" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:58.516" endtime="20220704 15:25:58.516"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:58.516" endtime="20220704 15:25:58.516"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.517" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 15:25:58.516" endtime="20220704 15:25:58.517"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.517" endtime="20220704 15:25:58.623"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.623" endtime="20220704 15:25:58.623"/>
</return>
<msg timestamp="20220704 15:25:58.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.515" endtime="20220704 15:25:58.623"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.623" endtime="20220704 15:25:58.623"/>
</return>
<msg timestamp="20220704 15:25:58.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.515" endtime="20220704 15:25:58.623"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:58.624" endtime="20220704 15:25:58.624"/>
</return>
<msg timestamp="20220704 15:25:58.624" level="INFO">${checklist_id} = 62c30686fd8d5b185adb01a6</msg>
<status status="PASS" starttime="20220704 15:25:58.623" endtime="20220704 15:25:58.624"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.626" level="INFO">${url} = checklists/62c30686fd8d5b185adb01a6</msg>
<status status="PASS" starttime="20220704 15:25:58.625" endtime="20220704 15:25:58.626"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.626" endtime="20220704 15:25:58.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.682" endtime="20220704 15:25:58.682"/>
</return>
<msg timestamp="20220704 15:25:58.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.625" endtime="20220704 15:25:58.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.682" endtime="20220704 15:25:58.682"/>
</return>
<msg timestamp="20220704 15:25:58.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.625" endtime="20220704 15:25:58.682"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:58.683" endtime="20220704 15:25:58.683"/>
</return>
<msg timestamp="20220704 15:25:58.684" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 15:25:58.682" endtime="20220704 15:25:58.684"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:58.684" endtime="20220704 15:25:58.684"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.685" level="INFO">${url} = checklists/62c30686fd8d5b185adb01a6</msg>
<status status="PASS" starttime="20220704 15:25:58.685" endtime="20220704 15:25:58.685"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.685" endtime="20220704 15:25:58.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.787" endtime="20220704 15:25:58.787"/>
</return>
<msg timestamp="20220704 15:25:58.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.684" endtime="20220704 15:25:58.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.788" endtime="20220704 15:25:58.788"/>
</return>
<status status="PASS" starttime="20220704 15:25:58.684" endtime="20220704 15:25:58.788"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:58.514" endtime="20220704 15:25:58.788"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:58.790" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:58.790" endtime="20220704 15:25:58.790"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:58.790" endtime="20220704 15:25:58.790"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.791" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 15:25:58.791" endtime="20220704 15:25:58.791"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.791" endtime="20220704 15:25:58.924"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.924" endtime="20220704 15:25:58.924"/>
</return>
<msg timestamp="20220704 15:25:58.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.789" endtime="20220704 15:25:58.924"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.924" endtime="20220704 15:25:58.924"/>
</return>
<msg timestamp="20220704 15:25:58.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.789" endtime="20220704 15:25:58.925"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:58.925" endtime="20220704 15:25:58.925"/>
</return>
<msg timestamp="20220704 15:25:58.926" level="INFO">${checklist_id} = 62c306862be8c584df1b8b2d</msg>
<status status="PASS" starttime="20220704 15:25:58.925" endtime="20220704 15:25:58.926"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.927" level="INFO">${url} = checklists/62c306862be8c584df1b8b2d</msg>
<status status="PASS" starttime="20220704 15:25:58.927" endtime="20220704 15:25:58.927"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.927" endtime="20220704 15:25:59.041"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.041" endtime="20220704 15:25:59.041"/>
</return>
<msg timestamp="20220704 15:25:59.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.927" endtime="20220704 15:25:59.041"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.041" endtime="20220704 15:25:59.041"/>
</return>
<msg timestamp="20220704 15:25:59.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.926" endtime="20220704 15:25:59.041"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:59.042" endtime="20220704 15:25:59.043"/>
</kw>
<status status="PASS" starttime="20220704 15:25:59.041" endtime="20220704 15:25:59.043"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.045" level="INFO">${url} = checklists/62c306862be8c584df1b8b2d</msg>
<status status="PASS" starttime="20220704 15:25:59.044" endtime="20220704 15:25:59.045"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.084" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:25:59.045" endtime="20220704 15:25:59.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.084" endtime="20220704 15:25:59.084"/>
</return>
<msg timestamp="20220704 15:25:59.085" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:25:59.044" endtime="20220704 15:25:59.085"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.085" endtime="20220704 15:25:59.085"/>
</return>
<status status="PASS" starttime="20220704 15:25:59.044" endtime="20220704 15:25:59.085"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:58.788" endtime="20220704 15:25:59.085"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:59.088" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:59.087" endtime="20220704 15:25:59.088"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:59.088" endtime="20220704 15:25:59.089"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.089" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 15:25:59.089" endtime="20220704 15:25:59.089"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.090" endtime="20220704 15:25:59.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.195" endtime="20220704 15:25:59.195"/>
</return>
<msg timestamp="20220704 15:25:59.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.086" endtime="20220704 15:25:59.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.195" endtime="20220704 15:25:59.195"/>
</return>
<msg timestamp="20220704 15:25:59.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.086" endtime="20220704 15:25:59.195"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:59.196" endtime="20220704 15:25:59.196"/>
</return>
<msg timestamp="20220704 15:25:59.197" level="INFO">${checklist_id} = 62c306872ed01313e3e32407</msg>
<status status="PASS" starttime="20220704 15:25:59.196" endtime="20220704 15:25:59.197"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:59.198" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:59.198" endtime="20220704 15:25:59.198"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:59.198" endtime="20220704 15:25:59.198"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.198" level="INFO">${url} = checklists/62c306872ed01313e3e32407</msg>
<status status="PASS" starttime="20220704 15:25:59.198" endtime="20220704 15:25:59.198"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.199" endtime="20220704 15:25:59.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.284" endtime="20220704 15:25:59.284"/>
</return>
<msg timestamp="20220704 15:25:59.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.197" endtime="20220704 15:25:59.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.284" endtime="20220704 15:25:59.284"/>
</return>
<msg timestamp="20220704 15:25:59.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.197" endtime="20220704 15:25:59.284"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.285" level="INFO">${url} = checklists/62c306872ed01313e3e32407</msg>
<status status="PASS" starttime="20220704 15:25:59.285" endtime="20220704 15:25:59.285"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.286" endtime="20220704 15:25:59.342"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.342" endtime="20220704 15:25:59.342"/>
</return>
<msg timestamp="20220704 15:25:59.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.285" endtime="20220704 15:25:59.343"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.343" endtime="20220704 15:25:59.343"/>
</return>
<msg timestamp="20220704 15:25:59.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.284" endtime="20220704 15:25:59.343"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:59.343" endtime="20220704 15:25:59.343"/>
</return>
<msg timestamp="20220704 15:25:59.344" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 15:25:59.343" endtime="20220704 15:25:59.344"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:59.344" endtime="20220704 15:25:59.344"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.355" level="INFO">${url} = checklists/62c306872ed01313e3e32407</msg>
<status status="PASS" starttime="20220704 15:25:59.354" endtime="20220704 15:25:59.355"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.355" endtime="20220704 15:25:59.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.459" endtime="20220704 15:25:59.459"/>
</return>
<msg timestamp="20220704 15:25:59.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.354" endtime="20220704 15:25:59.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.459" endtime="20220704 15:25:59.459"/>
</return>
<status status="PASS" starttime="20220704 15:25:59.345" endtime="20220704 15:25:59.459"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:25:59.085" endtime="20220704 15:25:59.459"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.462" level="INFO">${url} = boards/62c30686eaf0e1105af42ba5</msg>
<status status="PASS" starttime="20220704 15:25:59.461" endtime="20220704 15:25:59.462"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.462" endtime="20220704 15:25:59.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.811" endtime="20220704 15:25:59.811"/>
</return>
<msg timestamp="20220704 15:25:59.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.461" endtime="20220704 15:25:59.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.811" endtime="20220704 15:25:59.811"/>
</return>
<status status="PASS" starttime="20220704 15:25:59.461" endtime="20220704 15:25:59.811"/>
</kw>
<status status="PASS" starttime="20220704 15:25:59.460" endtime="20220704 15:25:59.811"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:25:59.811" endtime="20220704 15:25:59.812"/>
</kw>
<status status="PASS" starttime="20220704 15:25:59.460" endtime="20220704 15:25:59.812"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 15:25:57.996" endtime="20220704 15:25:59.812"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:25:59.822" endtime="20220704 15:25:59.822"/>
</kw>
<status status="PASS" starttime="20220704 15:25:59.822" endtime="20220704 15:25:59.822"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:59.823" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:59.823" endtime="20220704 15:25:59.823"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:59.823" endtime="20220704 15:25:59.824"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.824" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:59.824" endtime="20220704 15:25:59.824"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.824" endtime="20220704 15:26:00.037"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.037" endtime="20220704 15:26:00.038"/>
</return>
<msg timestamp="20220704 15:26:00.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.823" endtime="20220704 15:26:00.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.038" endtime="20220704 15:26:00.038"/>
</return>
<msg timestamp="20220704 15:26:00.038" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.823" endtime="20220704 15:26:00.038"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:26:00.039" level="INFO">${TEST_SUITE_BOARD_ID} = 62c306877b335a58e0de3c25</msg>
<status status="PASS" starttime="20220704 15:26:00.038" endtime="20220704 15:26:00.039"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.088" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.039" endtime="20220704 15:26:00.088"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:26:00.090" level="INFO">${TEST_SUITE_LIST_ID} = 62c306877b335a58e0de3c2c</msg>
<status status="PASS" starttime="20220704 15:26:00.089" endtime="20220704 15:26:00.090"/>
</kw>
<status status="PASS" starttime="20220704 15:25:59.822" endtime="20220704 15:26:00.090"/>
</kw>
<status status="PASS" starttime="20220704 15:25:59.822" endtime="20220704 15:26:00.090"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:00.092" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:00.091" endtime="20220704 15:26:00.092"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:00.092" endtime="20220704 15:26:00.092"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.093" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 15:26:00.092" endtime="20220704 15:26:00.093"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.093" endtime="20220704 15:26:00.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.179" endtime="20220704 15:26:00.179"/>
</return>
<msg timestamp="20220704 15:26:00.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.091" endtime="20220704 15:26:00.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.179" endtime="20220704 15:26:00.179"/>
</return>
<msg timestamp="20220704 15:26:00.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.090" endtime="20220704 15:26:00.180"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:26:00.180" endtime="20220704 15:26:00.182"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.180" endtime="20220704 15:26:00.182"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.182" endtime="20220704 15:26:00.182"/>
</return>
<msg timestamp="20220704 15:26:00.183" level="INFO">${LABEL_ID} = 62c30688e837735f3a7e6ce2</msg>
<status status="PASS" starttime="20220704 15:26:00.182" endtime="20220704 15:26:00.183"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.184" level="INFO">${url} = labels/62c30688e837735f3a7e6ce2</msg>
<status status="PASS" starttime="20220704 15:26:00.184" endtime="20220704 15:26:00.184"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.184" endtime="20220704 15:26:00.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.233" endtime="20220704 15:26:00.233"/>
</return>
<msg timestamp="20220704 15:26:00.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.183" endtime="20220704 15:26:00.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.233" endtime="20220704 15:26:00.233"/>
</return>
<msg timestamp="20220704 15:26:00.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.183" endtime="20220704 15:26:00.233"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.234" endtime="20220704 15:26:00.234"/>
</return>
<msg timestamp="20220704 15:26:00.234" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 15:26:00.233" endtime="20220704 15:26:00.234"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.235" endtime="20220704 15:26:00.235"/>
</return>
<msg timestamp="20220704 15:26:00.235" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 15:26:00.234" endtime="20220704 15:26:00.235"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:26:00.236" endtime="20220704 15:26:00.236"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:26:00.236" endtime="20220704 15:26:00.236"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.237" level="INFO">${url} = labels/62c30688e837735f3a7e6ce2</msg>
<status status="PASS" starttime="20220704 15:26:00.237" endtime="20220704 15:26:00.237"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.238" endtime="20220704 15:26:00.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.347" endtime="20220704 15:26:00.347"/>
</return>
<msg timestamp="20220704 15:26:00.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.237" endtime="20220704 15:26:00.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.347" endtime="20220704 15:26:00.347"/>
</return>
<status status="PASS" starttime="20220704 15:26:00.236" endtime="20220704 15:26:00.347"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.236" endtime="20220704 15:26:00.347"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:26:00.090" endtime="20220704 15:26:00.347"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:00.350" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:00.349" endtime="20220704 15:26:00.350"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:00.350" endtime="20220704 15:26:00.350"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.351" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 15:26:00.350" endtime="20220704 15:26:00.351"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.351" endtime="20220704 15:26:00.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.457" endtime="20220704 15:26:00.457"/>
</return>
<msg timestamp="20220704 15:26:00.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.349" endtime="20220704 15:26:00.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.458" endtime="20220704 15:26:00.458"/>
</return>
<msg timestamp="20220704 15:26:00.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.349" endtime="20220704 15:26:00.458"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:26:00.458" endtime="20220704 15:26:00.460"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.458" endtime="20220704 15:26:00.460"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.461" endtime="20220704 15:26:00.461"/>
</return>
<msg timestamp="20220704 15:26:00.461" level="INFO">${LABEL_ID} = 62c306883792bc609839122d</msg>
<status status="PASS" starttime="20220704 15:26:00.460" endtime="20220704 15:26:00.461"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:00.462" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:00.462" endtime="20220704 15:26:00.462"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:00.462" endtime="20220704 15:26:00.463"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.463" level="INFO">${url} = labels/62c306883792bc609839122d</msg>
<status status="PASS" starttime="20220704 15:26:00.463" endtime="20220704 15:26:00.463"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.463" endtime="20220704 15:26:00.573"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.573" endtime="20220704 15:26:00.573"/>
</return>
<msg timestamp="20220704 15:26:00.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.462" endtime="20220704 15:26:00.573"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.573" endtime="20220704 15:26:00.573"/>
</return>
<msg timestamp="20220704 15:26:00.573" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.461" endtime="20220704 15:26:00.573"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.574" endtime="20220704 15:26:00.574"/>
</return>
<msg timestamp="20220704 15:26:00.574" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 15:26:00.573" endtime="20220704 15:26:00.574"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.575" endtime="20220704 15:26:00.575"/>
</return>
<msg timestamp="20220704 15:26:00.576" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 15:26:00.575" endtime="20220704 15:26:00.576"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:26:00.576" endtime="20220704 15:26:00.576"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:26:00.576" endtime="20220704 15:26:00.576"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.578" level="INFO">${url} = labels/62c306883792bc609839122d</msg>
<status status="PASS" starttime="20220704 15:26:00.578" endtime="20220704 15:26:00.578"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.578" endtime="20220704 15:26:00.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.690" endtime="20220704 15:26:00.690"/>
</return>
<msg timestamp="20220704 15:26:00.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.577" endtime="20220704 15:26:00.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.691" endtime="20220704 15:26:00.691"/>
</return>
<status status="PASS" starttime="20220704 15:26:00.577" endtime="20220704 15:26:00.691"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.576" endtime="20220704 15:26:00.691"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:26:00.348" endtime="20220704 15:26:00.691"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:00.693" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:00.693" endtime="20220704 15:26:00.693"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:00.693" endtime="20220704 15:26:00.693"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.694" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 15:26:00.693" endtime="20220704 15:26:00.694"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.694" endtime="20220704 15:26:00.801"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.801" endtime="20220704 15:26:00.802"/>
</return>
<msg timestamp="20220704 15:26:00.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.692" endtime="20220704 15:26:00.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.802" endtime="20220704 15:26:00.802"/>
</return>
<msg timestamp="20220704 15:26:00.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.692" endtime="20220704 15:26:00.802"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.802" endtime="20220704 15:26:00.803"/>
</return>
<msg timestamp="20220704 15:26:00.803" level="INFO">${LABEL_ID} = 62c30688f2614858ab778a5d</msg>
<status status="PASS" starttime="20220704 15:26:00.802" endtime="20220704 15:26:00.803"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.805" level="INFO">${url} = labels/62c30688f2614858ab778a5d</msg>
<status status="PASS" starttime="20220704 15:26:00.805" endtime="20220704 15:26:00.805"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.805" endtime="20220704 15:26:00.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.912" endtime="20220704 15:26:00.912"/>
</return>
<msg timestamp="20220704 15:26:00.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.804" endtime="20220704 15:26:00.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.912" endtime="20220704 15:26:00.912"/>
</return>
<status status="PASS" starttime="20220704 15:26:00.804" endtime="20220704 15:26:00.912"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.803" endtime="20220704 15:26:00.912"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.913" level="INFO">${url} = labels/62c30688f2614858ab778a5d</msg>
<status status="PASS" starttime="20220704 15:26:00.913" endtime="20220704 15:26:00.914"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.958" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:26:00.914" endtime="20220704 15:26:00.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.958" endtime="20220704 15:26:00.958"/>
</return>
<msg timestamp="20220704 15:26:00.958" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:26:00.913" endtime="20220704 15:26:00.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.958" endtime="20220704 15:26:00.958"/>
</return>
<status status="PASS" starttime="20220704 15:26:00.912" endtime="20220704 15:26:00.958"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:26:00.691" endtime="20220704 15:26:00.959"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.961" level="INFO">${url} = boards/62c306877b335a58e0de3c25</msg>
<status status="PASS" starttime="20220704 15:26:00.961" endtime="20220704 15:26:00.961"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.961" endtime="20220704 15:26:01.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.297" endtime="20220704 15:26:01.297"/>
</return>
<msg timestamp="20220704 15:26:01.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.960" endtime="20220704 15:26:01.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.298" endtime="20220704 15:26:01.298"/>
</return>
<status status="PASS" starttime="20220704 15:26:00.960" endtime="20220704 15:26:01.298"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.960" endtime="20220704 15:26:01.298"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.959" endtime="20220704 15:26:01.298"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:26:01.298" endtime="20220704 15:26:01.299"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.959" endtime="20220704 15:26:01.299"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 15:25:59.814" endtime="20220704 15:26:01.299"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:26:01.309" endtime="20220704 15:26:01.309"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.308" endtime="20220704 15:26:01.309"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:01.310" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:01.310" endtime="20220704 15:26:01.310"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:01.310" endtime="20220704 15:26:01.310"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.311" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:26:01.310" endtime="20220704 15:26:01.311"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.311" endtime="20220704 15:26:01.511"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.511" endtime="20220704 15:26:01.511"/>
</return>
<msg timestamp="20220704 15:26:01.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.309" endtime="20220704 15:26:01.511"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.511" endtime="20220704 15:26:01.511"/>
</return>
<msg timestamp="20220704 15:26:01.512" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.309" endtime="20220704 15:26:01.512"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:26:01.513" level="INFO">${TEST_SUITE_BOARD_ID} = 62c306894af7fa5790753a0d</msg>
<status status="PASS" starttime="20220704 15:26:01.512" endtime="20220704 15:26:01.513"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.512" endtime="20220704 15:26:01.513"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.309" endtime="20220704 15:26:01.513"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.308" endtime="20220704 15:26:01.513"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:01.515" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:01.514" endtime="20220704 15:26:01.515"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:01.515" endtime="20220704 15:26:01.515"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.516" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 15:26:01.515" endtime="20220704 15:26:01.516"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.516" endtime="20220704 15:26:01.609"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.609" endtime="20220704 15:26:01.609"/>
</return>
<msg timestamp="20220704 15:26:01.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.514" endtime="20220704 15:26:01.609"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.609" endtime="20220704 15:26:01.609"/>
</return>
<msg timestamp="20220704 15:26:01.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.514" endtime="20220704 15:26:01.609"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:26:01.610" endtime="20220704 15:26:01.611"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.609" endtime="20220704 15:26:01.611"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:26:01.513" endtime="20220704 15:26:01.612"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:01.614" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:01.613" endtime="20220704 15:26:01.614"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:01.614" endtime="20220704 15:26:01.614"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.615" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 15:26:01.614" endtime="20220704 15:26:01.615"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.615" endtime="20220704 15:26:01.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.709" endtime="20220704 15:26:01.709"/>
</return>
<msg timestamp="20220704 15:26:01.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.613" endtime="20220704 15:26:01.710"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.710" endtime="20220704 15:26:01.710"/>
</return>
<msg timestamp="20220704 15:26:01.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.613" endtime="20220704 15:26:01.710"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:26:01.710" endtime="20220704 15:26:01.712"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.710" endtime="20220704 15:26:01.712"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:01.714" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:01.714" endtime="20220704 15:26:01.714"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:01.714" endtime="20220704 15:26:01.714"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.714" level="INFO">${url} = lists/62c30689b08a053a978a8348</msg>
<status status="PASS" starttime="20220704 15:26:01.714" endtime="20220704 15:26:01.714"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.715" endtime="20220704 15:26:01.795"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.795" endtime="20220704 15:26:01.795"/>
</return>
<msg timestamp="20220704 15:26:01.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.713" endtime="20220704 15:26:01.795"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.795" endtime="20220704 15:26:01.795"/>
</return>
<status status="PASS" starttime="20220704 15:26:01.712" endtime="20220704 15:26:01.795"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.797" level="INFO">${url} = lists/62c30689b08a053a978a8348</msg>
<status status="PASS" starttime="20220704 15:26:01.797" endtime="20220704 15:26:01.797"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.797" endtime="20220704 15:26:01.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.849" endtime="20220704 15:26:01.849"/>
</return>
<msg timestamp="20220704 15:26:01.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.796" endtime="20220704 15:26:01.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.849" endtime="20220704 15:26:01.849"/>
</return>
<msg timestamp="20220704 15:26:01.849" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.796" endtime="20220704 15:26:01.850"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:26:01.850" endtime="20220704 15:26:01.851"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.850" endtime="20220704 15:26:01.852"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:26:01.852" endtime="20220704 15:26:01.852"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:26:01.612" endtime="20220704 15:26:01.852"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:01.855" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:01.855" endtime="20220704 15:26:01.855"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:01.855" endtime="20220704 15:26:01.856"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.856" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 15:26:01.856" endtime="20220704 15:26:01.856"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.857" endtime="20220704 15:26:01.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.964" endtime="20220704 15:26:01.964"/>
</return>
<msg timestamp="20220704 15:26:01.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.855" endtime="20220704 15:26:01.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.964" endtime="20220704 15:26:01.964"/>
</return>
<msg timestamp="20220704 15:26:01.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.853" endtime="20220704 15:26:01.965"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:01.966" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:01.966" endtime="20220704 15:26:01.966"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:01.967" endtime="20220704 15:26:01.967"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.967" level="INFO">${url} = lists/62c30689fa3b92576a399a62/closed</msg>
<status status="PASS" starttime="20220704 15:26:01.967" endtime="20220704 15:26:01.967"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:02.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.967" endtime="20220704 15:26:02.070"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:02.070" endtime="20220704 15:26:02.070"/>
</return>
<msg timestamp="20220704 15:26:02.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.966" endtime="20220704 15:26:02.071"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:02.071" endtime="20220704 15:26:02.071"/>
</return>
<status status="PASS" starttime="20220704 15:26:01.965" endtime="20220704 15:26:02.071"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:02.073" level="INFO">${url} = lists/62c30689fa3b92576a399a62</msg>
<status status="PASS" starttime="20220704 15:26:02.072" endtime="20220704 15:26:02.073"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:26:02.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:02.073" endtime="20220704 15:26:02.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:02.121" endtime="20220704 15:26:02.121"/>
</return>
<msg timestamp="20220704 15:26:02.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:02.072" endtime="20220704 15:26:02.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:02.121" endtime="20220704 15:26:02.121"/>
</return>
<msg timestamp="20220704 15:26:02.121" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:02.071" endtime="20220704 15:26:02.121"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 15:26:02.121" endtime="20220704 15:26:02.122"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:26:01.853" endtime="20220704 15:26:02.122"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:02.124" level="INFO">${url} = boards/62c306894af7fa5790753a0d</msg>
<status status="PASS" starttime="20220704 15:26:02.124" endtime="20220704 15:26:02.124"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:26:02.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:02.125" endtime="20220704 15:26:02.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:02.488" endtime="20220704 15:26:02.488"/>
</return>
<msg timestamp="20220704 15:26:02.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:02.124" endtime="20220704 15:26:02.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:02.488" endtime="20220704 15:26:02.488"/>
</return>
<status status="PASS" starttime="20220704 15:26:02.124" endtime="20220704 15:26:02.488"/>
</kw>
<status status="PASS" starttime="20220704 15:26:02.123" endtime="20220704 15:26:02.488"/>
</kw>
<status status="PASS" starttime="20220704 15:26:02.123" endtime="20220704 15:26:02.488"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:26:02.488" endtime="20220704 15:26:02.489"/>
</kw>
<status status="PASS" starttime="20220704 15:26:02.123" endtime="20220704 15:26:02.489"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 15:26:01.300" endtime="20220704 15:26:02.489"/>
</suite>
<status status="PASS" starttime="20220704 15:25:51.615" endtime="20220704 15:26:02.491"/>
</suite>
<status status="PASS" starttime="20220704 15:25:51.598" endtime="20220704 15:26:02.493"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
