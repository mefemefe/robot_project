<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 19:19:41.812" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:19:41.934" endtime="20220704 19:19:41.935"/>
</kw>
<status status="PASS" starttime="20220704 19:19:41.934" endtime="20220704 19:19:41.935"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:41.937" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:41.937" endtime="20220704 19:19:41.937"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:41.937" endtime="20220704 19:19:41.937"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:41.938" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:19:41.937" endtime="20220704 19:19:41.938"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:42.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:41.938" endtime="20220704 19:19:42.140"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:42.140" endtime="20220704 19:19:42.140"/>
</return>
<msg timestamp="20220704 19:19:42.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:41.936" endtime="20220704 19:19:42.140"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:42.141" endtime="20220704 19:19:42.141"/>
</return>
<msg timestamp="20220704 19:19:42.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:41.936" endtime="20220704 19:19:42.141"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:42.141" endtime="20220704 19:19:42.146"/>
</kw>
<status status="PASS" starttime="20220704 19:19:42.141" endtime="20220704 19:19:42.146"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:42.148" level="INFO">${url} = boards/62c33d4e6dc37702c604ea6d</msg>
<status status="PASS" starttime="20220704 19:19:42.147" endtime="20220704 19:19:42.148"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:42.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:42.148" endtime="20220704 19:19:42.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:42.469" endtime="20220704 19:19:42.469"/>
</return>
<msg timestamp="20220704 19:19:42.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:42.147" endtime="20220704 19:19:42.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:42.469" endtime="20220704 19:19:42.469"/>
</return>
<status status="PASS" starttime="20220704 19:19:42.146" endtime="20220704 19:19:42.469"/>
</kw>
<status status="PASS" starttime="20220704 19:19:42.146" endtime="20220704 19:19:42.469"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:19:41.935" endtime="20220704 19:19:42.469"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:42.472" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:42.471" endtime="20220704 19:19:42.472"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:42.472" endtime="20220704 19:19:42.472"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:42.473" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:19:42.472" endtime="20220704 19:19:42.473"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:42.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:42.473" endtime="20220704 19:19:42.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:42.638" endtime="20220704 19:19:42.638"/>
</return>
<msg timestamp="20220704 19:19:42.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:42.471" endtime="20220704 19:19:42.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:42.638" endtime="20220704 19:19:42.638"/>
</return>
<msg timestamp="20220704 19:19:42.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:42.470" endtime="20220704 19:19:42.639"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:42.639" endtime="20220704 19:19:42.643"/>
</kw>
<status status="PASS" starttime="20220704 19:19:42.639" endtime="20220704 19:19:42.644"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:42.645" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:42.645" endtime="20220704 19:19:42.645"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:42.645" endtime="20220704 19:19:42.645"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:42.646" level="INFO">${url} = boards/62c33d4e21f0a33f2b9fbb7a</msg>
<status status="PASS" starttime="20220704 19:19:42.645" endtime="20220704 19:19:42.646"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:42.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:42.646" endtime="20220704 19:19:42.726"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:42.726" endtime="20220704 19:19:42.726"/>
</return>
<msg timestamp="20220704 19:19:42.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:42.644" endtime="20220704 19:19:42.727"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:42.727" endtime="20220704 19:19:42.727"/>
</return>
<status status="PASS" starttime="20220704 19:19:42.644" endtime="20220704 19:19:42.727"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:42.728" level="INFO">${url} = boards/62c33d4e21f0a33f2b9fbb7a</msg>
<status status="PASS" starttime="20220704 19:19:42.728" endtime="20220704 19:19:42.729"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:42.792" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:42.729" endtime="20220704 19:19:42.792"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:42.792" endtime="20220704 19:19:42.792"/>
</return>
<msg timestamp="20220704 19:19:42.792" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:42.728" endtime="20220704 19:19:42.792"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:42.792" endtime="20220704 19:19:42.792"/>
</return>
<msg timestamp="20220704 19:19:42.792" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:42.727" endtime="20220704 19:19:42.792"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:42.793" endtime="20220704 19:19:42.797"/>
</kw>
<status status="PASS" starttime="20220704 19:19:42.793" endtime="20220704 19:19:42.797"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:42.797" endtime="20220704 19:19:42.798"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:42.800" level="INFO">${url} = boards/62c33d4e21f0a33f2b9fbb7a</msg>
<status status="PASS" starttime="20220704 19:19:42.799" endtime="20220704 19:19:42.800"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:43.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:42.800" endtime="20220704 19:19:43.114"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:43.115" endtime="20220704 19:19:43.115"/>
</return>
<msg timestamp="20220704 19:19:43.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:42.799" endtime="20220704 19:19:43.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:43.115" endtime="20220704 19:19:43.115"/>
</return>
<status status="PASS" starttime="20220704 19:19:42.798" endtime="20220704 19:19:43.115"/>
</kw>
<status status="PASS" starttime="20220704 19:19:42.798" endtime="20220704 19:19:43.115"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:19:42.470" endtime="20220704 19:19:43.115"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:43.120" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:43.120" endtime="20220704 19:19:43.120"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:43.120" endtime="20220704 19:19:43.121"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:43.121" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:19:43.121" endtime="20220704 19:19:43.121"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:43.257" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:43.122" endtime="20220704 19:19:43.257"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:43.257" endtime="20220704 19:19:43.257"/>
</return>
<msg timestamp="20220704 19:19:43.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:43.120" endtime="20220704 19:19:43.258"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:43.258" endtime="20220704 19:19:43.258"/>
</return>
<msg timestamp="20220704 19:19:43.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:43.116" endtime="20220704 19:19:43.258"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:43.260" level="INFO">${url} = boards/62c33d4fa2e3556dce7ed304</msg>
<status status="PASS" starttime="20220704 19:19:43.259" endtime="20220704 19:19:43.260"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:43.540" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:43.260" endtime="20220704 19:19:43.540"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:43.541" endtime="20220704 19:19:43.541"/>
</return>
<msg timestamp="20220704 19:19:43.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:43.259" endtime="20220704 19:19:43.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:43.541" endtime="20220704 19:19:43.541"/>
</return>
<status status="PASS" starttime="20220704 19:19:43.258" endtime="20220704 19:19:43.541"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:43.543" level="INFO">${url} = boards/62c33d4fa2e3556dce7ed304</msg>
<status status="PASS" starttime="20220704 19:19:43.543" endtime="20220704 19:19:43.543"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:43.570" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:19:43.543" endtime="20220704 19:19:43.570"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:43.570" endtime="20220704 19:19:43.571"/>
</return>
<msg timestamp="20220704 19:19:43.571" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:19:43.542" endtime="20220704 19:19:43.571"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:43.571" endtime="20220704 19:19:43.571"/>
</return>
<status status="PASS" starttime="20220704 19:19:43.541" endtime="20220704 19:19:43.571"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:19:43.115" endtime="20220704 19:19:43.571"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:43.573" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:43.573" endtime="20220704 19:19:43.573"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:43.573" endtime="20220704 19:19:43.573"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:43.574" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:19:43.574" endtime="20220704 19:19:43.574"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:43.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:43.574" endtime="20220704 19:19:43.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:43.743" endtime="20220704 19:19:43.743"/>
</return>
<msg timestamp="20220704 19:19:43.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:43.572" endtime="20220704 19:19:43.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:43.743" endtime="20220704 19:19:43.743"/>
</return>
<msg timestamp="20220704 19:19:43.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:43.572" endtime="20220704 19:19:43.743"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:43.744" endtime="20220704 19:19:43.748"/>
</kw>
<status status="PASS" starttime="20220704 19:19:43.743" endtime="20220704 19:19:43.748"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:43.750" level="INFO">${url} = boards/62c33d4fa0291a4938a2b640</msg>
<status status="PASS" starttime="20220704 19:19:43.750" endtime="20220704 19:19:43.750"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:43.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:43.750" endtime="20220704 19:19:43.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:43.787" endtime="20220704 19:19:43.787"/>
</return>
<msg timestamp="20220704 19:19:43.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:43.749" endtime="20220704 19:19:43.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:43.788" endtime="20220704 19:19:43.788"/>
</return>
<msg timestamp="20220704 19:19:43.788" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:43.748" endtime="20220704 19:19:43.788"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:43.788" endtime="20220704 19:19:43.792"/>
</kw>
<status status="PASS" starttime="20220704 19:19:43.788" endtime="20220704 19:19:43.792"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:43.792" endtime="20220704 19:19:43.793"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:43.795" level="INFO">${url} = boards/62c33d4fa0291a4938a2b640</msg>
<status status="PASS" starttime="20220704 19:19:43.795" endtime="20220704 19:19:43.795"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:44.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:43.795" endtime="20220704 19:19:44.098"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.098" endtime="20220704 19:19:44.098"/>
</return>
<msg timestamp="20220704 19:19:44.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:43.794" endtime="20220704 19:19:44.098"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.099" endtime="20220704 19:19:44.099"/>
</return>
<status status="PASS" starttime="20220704 19:19:43.793" endtime="20220704 19:19:44.099"/>
</kw>
<status status="PASS" starttime="20220704 19:19:43.793" endtime="20220704 19:19:44.099"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:19:43.572" endtime="20220704 19:19:44.099"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:44.101" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:44.101" endtime="20220704 19:19:44.101"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:44.101" endtime="20220704 19:19:44.101"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:44.102" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:19:44.101" endtime="20220704 19:19:44.102"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:44.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.102" endtime="20220704 19:19:44.264"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.264" endtime="20220704 19:19:44.264"/>
</return>
<msg timestamp="20220704 19:19:44.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.100" endtime="20220704 19:19:44.265"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.265" endtime="20220704 19:19:44.265"/>
</return>
<msg timestamp="20220704 19:19:44.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.100" endtime="20220704 19:19:44.265"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:44.266" endtime="20220704 19:19:44.270"/>
</kw>
<status status="PASS" starttime="20220704 19:19:44.265" endtime="20220704 19:19:44.270"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:44.272" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:44.271" endtime="20220704 19:19:44.272"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:44.272" endtime="20220704 19:19:44.272"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:44.272" level="INFO">${url} = boards/62c33d507028458d9014285d</msg>
<status status="PASS" starttime="20220704 19:19:44.272" endtime="20220704 19:19:44.272"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:44.363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.272" endtime="20220704 19:19:44.363"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.363" endtime="20220704 19:19:44.363"/>
</return>
<msg timestamp="20220704 19:19:44.363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.271" endtime="20220704 19:19:44.363"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.363" endtime="20220704 19:19:44.363"/>
</return>
<status status="PASS" starttime="20220704 19:19:44.270" endtime="20220704 19:19:44.363"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:44.365" level="INFO">${url} = boards/62c33d507028458d9014285d</msg>
<status status="PASS" starttime="20220704 19:19:44.365" endtime="20220704 19:19:44.365"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:44.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.365" endtime="20220704 19:19:44.404"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.404" endtime="20220704 19:19:44.404"/>
</return>
<msg timestamp="20220704 19:19:44.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.364" endtime="20220704 19:19:44.404"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.404" endtime="20220704 19:19:44.404"/>
</return>
<msg timestamp="20220704 19:19:44.405" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.364" endtime="20220704 19:19:44.405"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:44.405" endtime="20220704 19:19:44.406"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:44.408" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:44.407" endtime="20220704 19:19:44.408"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:44.408" endtime="20220704 19:19:44.408"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:44.408" level="INFO">${url} = boards/62c33d507028458d9014285d</msg>
<status status="PASS" starttime="20220704 19:19:44.408" endtime="20220704 19:19:44.408"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:44.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.408" endtime="20220704 19:19:44.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.488" endtime="20220704 19:19:44.488"/>
</return>
<msg timestamp="20220704 19:19:44.489" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.407" endtime="20220704 19:19:44.489"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.489" endtime="20220704 19:19:44.489"/>
</return>
<status status="PASS" starttime="20220704 19:19:44.406" endtime="20220704 19:19:44.489"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:44.491" level="INFO">${url} = boards/62c33d507028458d9014285d</msg>
<status status="PASS" starttime="20220704 19:19:44.490" endtime="20220704 19:19:44.491"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:44.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.491" endtime="20220704 19:19:44.545"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.545" endtime="20220704 19:19:44.545"/>
</return>
<msg timestamp="20220704 19:19:44.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.490" endtime="20220704 19:19:44.545"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.545" endtime="20220704 19:19:44.545"/>
</return>
<msg timestamp="20220704 19:19:44.545" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.489" endtime="20220704 19:19:44.545"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:44.545" endtime="20220704 19:19:44.546"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:44.548" level="INFO">${url} = boards/62c33d507028458d9014285d</msg>
<status status="PASS" starttime="20220704 19:19:44.548" endtime="20220704 19:19:44.548"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:44.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.548" endtime="20220704 19:19:44.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.892" endtime="20220704 19:19:44.892"/>
</return>
<msg timestamp="20220704 19:19:44.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.547" endtime="20220704 19:19:44.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:44.892" endtime="20220704 19:19:44.892"/>
</return>
<status status="PASS" starttime="20220704 19:19:44.547" endtime="20220704 19:19:44.892"/>
</kw>
<status status="PASS" starttime="20220704 19:19:44.546" endtime="20220704 19:19:44.892"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:19:44.099" endtime="20220704 19:19:44.892"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 19:19:44.893" endtime="20220704 19:19:44.894"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 19:19:41.831" endtime="20220704 19:19:44.895"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:19:44.905" endtime="20220704 19:19:44.906"/>
</kw>
<status status="PASS" starttime="20220704 19:19:44.905" endtime="20220704 19:19:44.906"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:44.907" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:44.906" endtime="20220704 19:19:44.907"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:44.907" endtime="20220704 19:19:44.907"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:44.908" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:19:44.907" endtime="20220704 19:19:44.908"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:45.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.908" endtime="20220704 19:19:45.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.077" endtime="20220704 19:19:45.077"/>
</return>
<msg timestamp="20220704 19:19:45.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.906" endtime="20220704 19:19:45.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.078" endtime="20220704 19:19:45.078"/>
</return>
<msg timestamp="20220704 19:19:45.078" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:44.906" endtime="20220704 19:19:45.078"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:19:45.079" level="INFO">${TEST_SUITE_BOARD_ID} = 62c33d501df4e18d874ba34c</msg>
<status status="PASS" starttime="20220704 19:19:45.078" endtime="20220704 19:19:45.079"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:45.080" level="INFO">${url} = boards/62c33d501df4e18d874ba34c/lists/</msg>
<status status="PASS" starttime="20220704 19:19:45.080" endtime="20220704 19:19:45.080"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:45.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.080" endtime="20220704 19:19:45.125"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.125" endtime="20220704 19:19:45.125"/>
</return>
<msg timestamp="20220704 19:19:45.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.079" endtime="20220704 19:19:45.125"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.126" endtime="20220704 19:19:45.126"/>
</return>
<msg timestamp="20220704 19:19:45.126" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.079" endtime="20220704 19:19:45.126"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:19:45.127" level="INFO">${TEST_SUITE_LIST_ID} = 62c33d501df4e18d874ba353</msg>
<status status="PASS" starttime="20220704 19:19:45.126" endtime="20220704 19:19:45.127"/>
</kw>
<status status="PASS" starttime="20220704 19:19:44.906" endtime="20220704 19:19:45.127"/>
</kw>
<status status="PASS" starttime="20220704 19:19:44.905" endtime="20220704 19:19:45.127"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:45.129" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:45.129" endtime="20220704 19:19:45.129"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:45.129" endtime="20220704 19:19:45.129"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:45.130" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:19:45.129" endtime="20220704 19:19:45.130"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:45.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.130" endtime="20220704 19:19:45.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.280" endtime="20220704 19:19:45.280"/>
</return>
<msg timestamp="20220704 19:19:45.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.128" endtime="20220704 19:19:45.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.280" endtime="20220704 19:19:45.280"/>
</return>
<msg timestamp="20220704 19:19:45.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.128" endtime="20220704 19:19:45.280"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:45.281" endtime="20220704 19:19:45.286"/>
</kw>
<status status="PASS" starttime="20220704 19:19:45.280" endtime="20220704 19:19:45.286"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:45.286" endtime="20220704 19:19:45.286"/>
</return>
<msg timestamp="20220704 19:19:45.287" level="INFO">${CARD_ID} = 62c33d510121182018e7d588</msg>
<status status="PASS" starttime="20220704 19:19:45.286" endtime="20220704 19:19:45.287"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:45.288" level="INFO">${url} = cards/62c33d510121182018e7d588</msg>
<status status="PASS" starttime="20220704 19:19:45.288" endtime="20220704 19:19:45.288"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:45.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.288" endtime="20220704 19:19:45.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.331" endtime="20220704 19:19:45.331"/>
</return>
<msg timestamp="20220704 19:19:45.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.287" endtime="20220704 19:19:45.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.331" endtime="20220704 19:19:45.331"/>
</return>
<msg timestamp="20220704 19:19:45.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.287" endtime="20220704 19:19:45.331"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:45.332" endtime="20220704 19:19:45.332"/>
</return>
<msg timestamp="20220704 19:19:45.332" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 19:19:45.331" endtime="20220704 19:19:45.333"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:45.333" endtime="20220704 19:19:45.333"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:45.334" level="INFO">${url} = cards/62c33d510121182018e7d588</msg>
<status status="PASS" starttime="20220704 19:19:45.334" endtime="20220704 19:19:45.334"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:45.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.335" endtime="20220704 19:19:45.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.466" endtime="20220704 19:19:45.466"/>
</return>
<msg timestamp="20220704 19:19:45.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.334" endtime="20220704 19:19:45.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.466" endtime="20220704 19:19:45.466"/>
</return>
<status status="PASS" starttime="20220704 19:19:45.333" endtime="20220704 19:19:45.466"/>
</kw>
<status status="PASS" starttime="20220704 19:19:45.333" endtime="20220704 19:19:45.466"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:19:45.127" endtime="20220704 19:19:45.466"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:45.468" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:45.468" endtime="20220704 19:19:45.468"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:45.469" endtime="20220704 19:19:45.469"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:45.470" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:19:45.469" endtime="20220704 19:19:45.470"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:45.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.470" endtime="20220704 19:19:45.631"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.631" endtime="20220704 19:19:45.631"/>
</return>
<msg timestamp="20220704 19:19:45.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.468" endtime="20220704 19:19:45.631"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.631" endtime="20220704 19:19:45.631"/>
</return>
<msg timestamp="20220704 19:19:45.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.467" endtime="20220704 19:19:45.631"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:45.632" endtime="20220704 19:19:45.632"/>
</return>
<msg timestamp="20220704 19:19:45.632" level="INFO">${CARD_ID} = 62c33d51fbb7d48eb047b1d9</msg>
<status status="PASS" starttime="20220704 19:19:45.631" endtime="20220704 19:19:45.632"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:45.634" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:45.634" endtime="20220704 19:19:45.634"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:45.634" endtime="20220704 19:19:45.635"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:45.635" level="INFO">${url} = cards/62c33d51fbb7d48eb047b1d9</msg>
<status status="PASS" starttime="20220704 19:19:45.635" endtime="20220704 19:19:45.635"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:45.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.635" endtime="20220704 19:19:45.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.743" endtime="20220704 19:19:45.743"/>
</return>
<msg timestamp="20220704 19:19:45.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.634" endtime="20220704 19:19:45.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.744" endtime="20220704 19:19:45.744"/>
</return>
<msg timestamp="20220704 19:19:45.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.633" endtime="20220704 19:19:45.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.744" endtime="20220704 19:19:45.744"/>
</return>
<status status="PASS" starttime="20220704 19:19:45.633" endtime="20220704 19:19:45.744"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:45.745" level="INFO">${url} = cards/62c33d51fbb7d48eb047b1d9</msg>
<status status="PASS" starttime="20220704 19:19:45.745" endtime="20220704 19:19:45.745"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:45.792" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.745" endtime="20220704 19:19:45.792"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.792" endtime="20220704 19:19:45.792"/>
</return>
<msg timestamp="20220704 19:19:45.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.745" endtime="20220704 19:19:45.793"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.793" endtime="20220704 19:19:45.793"/>
</return>
<msg timestamp="20220704 19:19:45.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.744" endtime="20220704 19:19:45.793"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:45.793" endtime="20220704 19:19:45.793"/>
</return>
<msg timestamp="20220704 19:19:45.794" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 19:19:45.793" endtime="20220704 19:19:45.794"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 19:19:45.794" endtime="20220704 19:19:45.795"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:45.796" level="INFO">${url} = cards/62c33d51fbb7d48eb047b1d9</msg>
<status status="PASS" starttime="20220704 19:19:45.796" endtime="20220704 19:19:45.796"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:45.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.796" endtime="20220704 19:19:45.920"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.921" endtime="20220704 19:19:45.921"/>
</return>
<msg timestamp="20220704 19:19:45.921" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.795" endtime="20220704 19:19:45.921"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:45.921" endtime="20220704 19:19:45.921"/>
</return>
<status status="PASS" starttime="20220704 19:19:45.795" endtime="20220704 19:19:45.921"/>
</kw>
<status status="PASS" starttime="20220704 19:19:45.795" endtime="20220704 19:19:45.921"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:19:45.467" endtime="20220704 19:19:45.921"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:45.923" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:45.923" endtime="20220704 19:19:45.923"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:45.924" endtime="20220704 19:19:45.924"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:45.924" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:19:45.924" endtime="20220704 19:19:45.924"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:46.051" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.925" endtime="20220704 19:19:46.051"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.051" endtime="20220704 19:19:46.051"/>
</return>
<msg timestamp="20220704 19:19:46.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.922" endtime="20220704 19:19:46.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.052" endtime="20220704 19:19:46.052"/>
</return>
<msg timestamp="20220704 19:19:46.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:45.922" endtime="20220704 19:19:46.052"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:46.052" endtime="20220704 19:19:46.052"/>
</return>
<msg timestamp="20220704 19:19:46.053" level="INFO">${CARD_ID} = 62c33d513a2cb245d1def251</msg>
<status status="PASS" starttime="20220704 19:19:46.052" endtime="20220704 19:19:46.053"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:46.055" level="INFO">${url} = cards/62c33d513a2cb245d1def251</msg>
<status status="PASS" starttime="20220704 19:19:46.054" endtime="20220704 19:19:46.055"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:46.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.055" endtime="20220704 19:19:46.194"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.194" endtime="20220704 19:19:46.194"/>
</return>
<msg timestamp="20220704 19:19:46.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.054" endtime="20220704 19:19:46.194"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.194" endtime="20220704 19:19:46.194"/>
</return>
<msg timestamp="20220704 19:19:46.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.053" endtime="20220704 19:19:46.194"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:46.195" endtime="20220704 19:19:46.197"/>
</kw>
<status status="PASS" starttime="20220704 19:19:46.194" endtime="20220704 19:19:46.197"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:46.198" level="INFO">${url} = cards/62c33d513a2cb245d1def251</msg>
<status status="PASS" starttime="20220704 19:19:46.198" endtime="20220704 19:19:46.198"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:46.228" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:19:46.198" endtime="20220704 19:19:46.228"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.228" endtime="20220704 19:19:46.228"/>
</return>
<msg timestamp="20220704 19:19:46.229" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:19:46.198" endtime="20220704 19:19:46.229"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.229" endtime="20220704 19:19:46.229"/>
</return>
<status status="PASS" starttime="20220704 19:19:46.197" endtime="20220704 19:19:46.229"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:19:45.921" endtime="20220704 19:19:46.229"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:46.232" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:46.232" endtime="20220704 19:19:46.232"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:46.232" endtime="20220704 19:19:46.232"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:46.233" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:19:46.232" endtime="20220704 19:19:46.233"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:46.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.233" endtime="20220704 19:19:46.383"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.383" endtime="20220704 19:19:46.383"/>
</return>
<msg timestamp="20220704 19:19:46.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.231" endtime="20220704 19:19:46.383"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.383" endtime="20220704 19:19:46.383"/>
</return>
<msg timestamp="20220704 19:19:46.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.231" endtime="20220704 19:19:46.383"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:46.384" endtime="20220704 19:19:46.384"/>
</return>
<msg timestamp="20220704 19:19:46.385" level="INFO">${CARD_ID} = 62c33d5259c4fb7b807a016d</msg>
<status status="PASS" starttime="20220704 19:19:46.383" endtime="20220704 19:19:46.385"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:46.386" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:46.386" endtime="20220704 19:19:46.386"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:46.386" endtime="20220704 19:19:46.386"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:46.386" level="INFO">${url} = cards/62c33d5259c4fb7b807a016d</msg>
<status status="PASS" starttime="20220704 19:19:46.386" endtime="20220704 19:19:46.386"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:46.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.387" endtime="20220704 19:19:46.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.518" endtime="20220704 19:19:46.518"/>
</return>
<msg timestamp="20220704 19:19:46.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.385" endtime="20220704 19:19:46.518"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.518" endtime="20220704 19:19:46.518"/>
</return>
<msg timestamp="20220704 19:19:46.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.385" endtime="20220704 19:19:46.518"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:46.519" endtime="20220704 19:19:46.524"/>
</kw>
<status status="PASS" starttime="20220704 19:19:46.518" endtime="20220704 19:19:46.524"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:46.525" level="INFO">${url} = cards/62c33d5259c4fb7b807a016d</msg>
<status status="PASS" starttime="20220704 19:19:46.525" endtime="20220704 19:19:46.525"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:46.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.525" endtime="20220704 19:19:46.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.574" endtime="20220704 19:19:46.574"/>
</return>
<msg timestamp="20220704 19:19:46.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.524" endtime="20220704 19:19:46.575"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.575" endtime="20220704 19:19:46.575"/>
</return>
<msg timestamp="20220704 19:19:46.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.524" endtime="20220704 19:19:46.575"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:46.575" endtime="20220704 19:19:46.575"/>
</return>
<msg timestamp="20220704 19:19:46.576" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 19:19:46.575" endtime="20220704 19:19:46.576"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:46.577" endtime="20220704 19:19:46.577"/>
</return>
<msg timestamp="20220704 19:19:46.577" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 19:19:46.576" endtime="20220704 19:19:46.577"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:46.578" endtime="20220704 19:19:46.578"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:46.578" endtime="20220704 19:19:46.578"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:46.580" level="INFO">${url} = cards/62c33d5259c4fb7b807a016d</msg>
<status status="PASS" starttime="20220704 19:19:46.579" endtime="20220704 19:19:46.580"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:46.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.580" endtime="20220704 19:19:46.735"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.735" endtime="20220704 19:19:46.735"/>
</return>
<msg timestamp="20220704 19:19:46.736" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.579" endtime="20220704 19:19:46.736"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:46.736" endtime="20220704 19:19:46.736"/>
</return>
<status status="PASS" starttime="20220704 19:19:46.579" endtime="20220704 19:19:46.736"/>
</kw>
<status status="PASS" starttime="20220704 19:19:46.578" endtime="20220704 19:19:46.736"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:19:46.230" endtime="20220704 19:19:46.736"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:46.739" level="INFO">${url} = boards/62c33d501df4e18d874ba34c</msg>
<status status="PASS" starttime="20220704 19:19:46.739" endtime="20220704 19:19:46.739"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:47.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.739" endtime="20220704 19:19:47.072"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.072" endtime="20220704 19:19:47.072"/>
</return>
<msg timestamp="20220704 19:19:47.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:46.738" endtime="20220704 19:19:47.072"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.072" endtime="20220704 19:19:47.072"/>
</return>
<status status="PASS" starttime="20220704 19:19:46.737" endtime="20220704 19:19:47.072"/>
</kw>
<status status="PASS" starttime="20220704 19:19:46.737" endtime="20220704 19:19:47.072"/>
</kw>
<status status="PASS" starttime="20220704 19:19:46.737" endtime="20220704 19:19:47.072"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 19:19:47.073" endtime="20220704 19:19:47.074"/>
</kw>
<status status="PASS" starttime="20220704 19:19:46.737" endtime="20220704 19:19:47.074"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 19:19:44.896" endtime="20220704 19:19:47.074"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:19:47.085" endtime="20220704 19:19:47.085"/>
</kw>
<status status="PASS" starttime="20220704 19:19:47.085" endtime="20220704 19:19:47.085"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:47.086" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:47.086" endtime="20220704 19:19:47.086"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:47.086" endtime="20220704 19:19:47.087"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:47.087" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:19:47.087" endtime="20220704 19:19:47.087"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:47.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.087" endtime="20220704 19:19:47.268"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.268" endtime="20220704 19:19:47.268"/>
</return>
<msg timestamp="20220704 19:19:47.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.086" endtime="20220704 19:19:47.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.269" endtime="20220704 19:19:47.269"/>
</return>
<msg timestamp="20220704 19:19:47.269" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.086" endtime="20220704 19:19:47.269"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:19:47.270" level="INFO">${TEST_SUITE_BOARD_ID} = 62c33d5395cff43eb3b13c1d</msg>
<status status="PASS" starttime="20220704 19:19:47.269" endtime="20220704 19:19:47.270"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:47.271" level="INFO">${url} = boards/62c33d5395cff43eb3b13c1d/lists/</msg>
<status status="PASS" starttime="20220704 19:19:47.271" endtime="20220704 19:19:47.271"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:47.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.271" endtime="20220704 19:19:47.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.307" endtime="20220704 19:19:47.307"/>
</return>
<msg timestamp="20220704 19:19:47.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.271" endtime="20220704 19:19:47.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.307" endtime="20220704 19:19:47.307"/>
</return>
<msg timestamp="20220704 19:19:47.307" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.270" endtime="20220704 19:19:47.308"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:19:47.308" level="INFO">${TEST_SUITE_LIST_ID} = 62c33d5395cff43eb3b13c24</msg>
<status status="PASS" starttime="20220704 19:19:47.308" endtime="20220704 19:19:47.308"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:47.310" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:47.310" endtime="20220704 19:19:47.310"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:47.310" endtime="20220704 19:19:47.310"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:47.311" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:19:47.311" endtime="20220704 19:19:47.311"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:47.450" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.311" endtime="20220704 19:19:47.450"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.450" endtime="20220704 19:19:47.450"/>
</return>
<msg timestamp="20220704 19:19:47.450" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.309" endtime="20220704 19:19:47.450"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.450" endtime="20220704 19:19:47.450"/>
</return>
<msg timestamp="20220704 19:19:47.450" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.309" endtime="20220704 19:19:47.451"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:19:47.451" level="INFO">${TEST_SUITE_CARD_ID} = 62c33d532ffe065694c58f24</msg>
<status status="PASS" starttime="20220704 19:19:47.451" endtime="20220704 19:19:47.452"/>
</kw>
<status status="PASS" starttime="20220704 19:19:47.085" endtime="20220704 19:19:47.452"/>
</kw>
<status status="PASS" starttime="20220704 19:19:47.084" endtime="20220704 19:19:47.452"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:47.454" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:47.454" endtime="20220704 19:19:47.454"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:47.454" endtime="20220704 19:19:47.454"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:47.455" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 19:19:47.454" endtime="20220704 19:19:47.455"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:47.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.455" endtime="20220704 19:19:47.577"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.578" endtime="20220704 19:19:47.578"/>
</return>
<msg timestamp="20220704 19:19:47.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.453" endtime="20220704 19:19:47.578"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.578" endtime="20220704 19:19:47.578"/>
</return>
<msg timestamp="20220704 19:19:47.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.453" endtime="20220704 19:19:47.578"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:47.579" endtime="20220704 19:19:47.579"/>
</return>
<msg timestamp="20220704 19:19:47.579" level="INFO">${checklist_id} = 62c33d53a1e08d2ce8623be6</msg>
<status status="PASS" starttime="20220704 19:19:47.578" endtime="20220704 19:19:47.579"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:47.581" level="INFO">${url} = checklists/62c33d53a1e08d2ce8623be6</msg>
<status status="PASS" starttime="20220704 19:19:47.580" endtime="20220704 19:19:47.581"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:47.627" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.581" endtime="20220704 19:19:47.627"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.627" endtime="20220704 19:19:47.628"/>
</return>
<msg timestamp="20220704 19:19:47.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.580" endtime="20220704 19:19:47.628"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.628" endtime="20220704 19:19:47.628"/>
</return>
<msg timestamp="20220704 19:19:47.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.579" endtime="20220704 19:19:47.628"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:47.628" endtime="20220704 19:19:47.629"/>
</return>
<msg timestamp="20220704 19:19:47.629" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 19:19:47.628" endtime="20220704 19:19:47.629"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:47.629" endtime="20220704 19:19:47.630"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:47.631" level="INFO">${url} = checklists/62c33d53a1e08d2ce8623be6</msg>
<status status="PASS" starttime="20220704 19:19:47.631" endtime="20220704 19:19:47.631"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:47.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.631" endtime="20220704 19:19:47.727"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.728" endtime="20220704 19:19:47.728"/>
</return>
<msg timestamp="20220704 19:19:47.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.630" endtime="20220704 19:19:47.728"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.728" endtime="20220704 19:19:47.728"/>
</return>
<status status="PASS" starttime="20220704 19:19:47.630" endtime="20220704 19:19:47.728"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:19:47.452" endtime="20220704 19:19:47.728"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:47.730" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:47.730" endtime="20220704 19:19:47.730"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:47.731" endtime="20220704 19:19:47.731"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:47.732" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 19:19:47.731" endtime="20220704 19:19:47.732"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:47.821" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.732" endtime="20220704 19:19:47.822"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.822" endtime="20220704 19:19:47.822"/>
</return>
<msg timestamp="20220704 19:19:47.822" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.730" endtime="20220704 19:19:47.822"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.822" endtime="20220704 19:19:47.822"/>
</return>
<msg timestamp="20220704 19:19:47.822" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.729" endtime="20220704 19:19:47.822"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:47.823" endtime="20220704 19:19:47.823"/>
</return>
<msg timestamp="20220704 19:19:47.824" level="INFO">${checklist_id} = 62c33d539205ff2cd1199db7</msg>
<status status="PASS" starttime="20220704 19:19:47.822" endtime="20220704 19:19:47.824"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:47.825" level="INFO">${url} = checklists/62c33d539205ff2cd1199db7</msg>
<status status="PASS" starttime="20220704 19:19:47.825" endtime="20220704 19:19:47.825"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:47.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.825" endtime="20220704 19:19:47.930"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.930" endtime="20220704 19:19:47.930"/>
</return>
<msg timestamp="20220704 19:19:47.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.824" endtime="20220704 19:19:47.930"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.930" endtime="20220704 19:19:47.930"/>
</return>
<msg timestamp="20220704 19:19:47.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.824" endtime="20220704 19:19:47.930"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:47.931" endtime="20220704 19:19:47.932"/>
</kw>
<status status="PASS" starttime="20220704 19:19:47.930" endtime="20220704 19:19:47.932"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:47.934" level="INFO">${url} = checklists/62c33d539205ff2cd1199db7</msg>
<status status="PASS" starttime="20220704 19:19:47.933" endtime="20220704 19:19:47.934"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:47.967" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:19:47.934" endtime="20220704 19:19:47.967"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.967" endtime="20220704 19:19:47.967"/>
</return>
<msg timestamp="20220704 19:19:47.967" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:19:47.933" endtime="20220704 19:19:47.967"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:47.967" endtime="20220704 19:19:47.967"/>
</return>
<status status="PASS" starttime="20220704 19:19:47.933" endtime="20220704 19:19:47.967"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:19:47.728" endtime="20220704 19:19:47.968"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:47.971" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:47.970" endtime="20220704 19:19:47.971"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:47.971" endtime="20220704 19:19:47.972"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:47.972" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 19:19:47.972" endtime="20220704 19:19:47.972"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:48.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.973" endtime="20220704 19:19:48.073"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.073" endtime="20220704 19:19:48.074"/>
</return>
<msg timestamp="20220704 19:19:48.074" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.969" endtime="20220704 19:19:48.074"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.074" endtime="20220704 19:19:48.074"/>
</return>
<msg timestamp="20220704 19:19:48.074" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:47.968" endtime="20220704 19:19:48.074"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:48.075" endtime="20220704 19:19:48.075"/>
</return>
<msg timestamp="20220704 19:19:48.075" level="INFO">${checklist_id} = 62c33d545912a52d9cba63af</msg>
<status status="PASS" starttime="20220704 19:19:48.074" endtime="20220704 19:19:48.075"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:48.077" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:48.077" endtime="20220704 19:19:48.077"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:48.077" endtime="20220704 19:19:48.077"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:48.078" level="INFO">${url} = checklists/62c33d545912a52d9cba63af</msg>
<status status="PASS" starttime="20220704 19:19:48.077" endtime="20220704 19:19:48.078"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:48.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.078" endtime="20220704 19:19:48.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.151" endtime="20220704 19:19:48.151"/>
</return>
<msg timestamp="20220704 19:19:48.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.076" endtime="20220704 19:19:48.152"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.152" endtime="20220704 19:19:48.152"/>
</return>
<msg timestamp="20220704 19:19:48.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.076" endtime="20220704 19:19:48.152"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:48.153" level="INFO">${url} = checklists/62c33d545912a52d9cba63af</msg>
<status status="PASS" starttime="20220704 19:19:48.153" endtime="20220704 19:19:48.153"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:48.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.154" endtime="20220704 19:19:48.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.195" endtime="20220704 19:19:48.195"/>
</return>
<msg timestamp="20220704 19:19:48.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.152" endtime="20220704 19:19:48.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.195" endtime="20220704 19:19:48.195"/>
</return>
<msg timestamp="20220704 19:19:48.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.152" endtime="20220704 19:19:48.195"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:48.196" endtime="20220704 19:19:48.196"/>
</return>
<msg timestamp="20220704 19:19:48.196" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 19:19:48.196" endtime="20220704 19:19:48.197"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:48.197" endtime="20220704 19:19:48.197"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:48.209" level="INFO">${url} = checklists/62c33d545912a52d9cba63af</msg>
<status status="PASS" starttime="20220704 19:19:48.208" endtime="20220704 19:19:48.209"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:48.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.209" endtime="20220704 19:19:48.303"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.303" endtime="20220704 19:19:48.303"/>
</return>
<msg timestamp="20220704 19:19:48.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.208" endtime="20220704 19:19:48.303"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.303" endtime="20220704 19:19:48.303"/>
</return>
<status status="PASS" starttime="20220704 19:19:48.197" endtime="20220704 19:19:48.303"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:19:47.968" endtime="20220704 19:19:48.304"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:48.306" level="INFO">${url} = boards/62c33d5395cff43eb3b13c1d</msg>
<status status="PASS" starttime="20220704 19:19:48.305" endtime="20220704 19:19:48.306"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:48.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.306" endtime="20220704 19:19:48.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.654" endtime="20220704 19:19:48.654"/>
</return>
<msg timestamp="20220704 19:19:48.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.305" endtime="20220704 19:19:48.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.654" endtime="20220704 19:19:48.655"/>
</return>
<status status="PASS" starttime="20220704 19:19:48.305" endtime="20220704 19:19:48.655"/>
</kw>
<status status="PASS" starttime="20220704 19:19:48.304" endtime="20220704 19:19:48.655"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 19:19:48.655" endtime="20220704 19:19:48.656"/>
</kw>
<status status="PASS" starttime="20220704 19:19:48.304" endtime="20220704 19:19:48.656"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 19:19:47.075" endtime="20220704 19:19:48.656"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:19:48.666" endtime="20220704 19:19:48.666"/>
</kw>
<status status="PASS" starttime="20220704 19:19:48.665" endtime="20220704 19:19:48.666"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:48.667" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:48.667" endtime="20220704 19:19:48.667"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:48.667" endtime="20220704 19:19:48.667"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:48.668" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:19:48.667" endtime="20220704 19:19:48.668"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:48.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.668" endtime="20220704 19:19:48.846"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.846" endtime="20220704 19:19:48.846"/>
</return>
<msg timestamp="20220704 19:19:48.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.666" endtime="20220704 19:19:48.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.847" endtime="20220704 19:19:48.847"/>
</return>
<msg timestamp="20220704 19:19:48.847" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.666" endtime="20220704 19:19:48.847"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:19:48.848" level="INFO">${TEST_SUITE_BOARD_ID} = 62c33d546d85e85ca2dc1cd0</msg>
<status status="PASS" starttime="20220704 19:19:48.847" endtime="20220704 19:19:48.848"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:48.890" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.848" endtime="20220704 19:19:48.890"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:19:48.891" level="INFO">${TEST_SUITE_LIST_ID} = 62c33d546d85e85ca2dc1cd7</msg>
<status status="PASS" starttime="20220704 19:19:48.890" endtime="20220704 19:19:48.891"/>
</kw>
<status status="PASS" starttime="20220704 19:19:48.666" endtime="20220704 19:19:48.892"/>
</kw>
<status status="PASS" starttime="20220704 19:19:48.665" endtime="20220704 19:19:48.892"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:48.894" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:48.893" endtime="20220704 19:19:48.894"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:48.894" endtime="20220704 19:19:48.894"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:48.895" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 19:19:48.894" endtime="20220704 19:19:48.895"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:48.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.895" endtime="20220704 19:19:48.970"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.970" endtime="20220704 19:19:48.970"/>
</return>
<msg timestamp="20220704 19:19:48.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.893" endtime="20220704 19:19:48.970"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:48.970" endtime="20220704 19:19:48.970"/>
</return>
<msg timestamp="20220704 19:19:48.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.892" endtime="20220704 19:19:48.971"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:48.971" endtime="20220704 19:19:48.973"/>
</kw>
<status status="PASS" starttime="20220704 19:19:48.971" endtime="20220704 19:19:48.973"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:48.973" endtime="20220704 19:19:48.973"/>
</return>
<msg timestamp="20220704 19:19:48.974" level="INFO">${LABEL_ID} = 62c33d5462949c3e6023bbaa</msg>
<status status="PASS" starttime="20220704 19:19:48.973" endtime="20220704 19:19:48.974"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:48.975" level="INFO">${url} = labels/62c33d5462949c3e6023bbaa</msg>
<status status="PASS" starttime="20220704 19:19:48.975" endtime="20220704 19:19:48.975"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:49.021" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.976" endtime="20220704 19:19:49.021"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.021" endtime="20220704 19:19:49.021"/>
</return>
<msg timestamp="20220704 19:19:49.021" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.975" endtime="20220704 19:19:49.021"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.021" endtime="20220704 19:19:49.021"/>
</return>
<msg timestamp="20220704 19:19:49.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:48.974" endtime="20220704 19:19:49.022"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:49.022" endtime="20220704 19:19:49.022"/>
</return>
<msg timestamp="20220704 19:19:49.023" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 19:19:49.022" endtime="20220704 19:19:49.023"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:49.023" endtime="20220704 19:19:49.023"/>
</return>
<msg timestamp="20220704 19:19:49.024" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 19:19:49.023" endtime="20220704 19:19:49.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:49.024" endtime="20220704 19:19:49.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:49.024" endtime="20220704 19:19:49.025"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:49.026" level="INFO">${url} = labels/62c33d5462949c3e6023bbaa</msg>
<status status="PASS" starttime="20220704 19:19:49.026" endtime="20220704 19:19:49.026"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:49.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.026" endtime="20220704 19:19:49.114"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.114" endtime="20220704 19:19:49.114"/>
</return>
<msg timestamp="20220704 19:19:49.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.026" endtime="20220704 19:19:49.114"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.114" endtime="20220704 19:19:49.114"/>
</return>
<status status="PASS" starttime="20220704 19:19:49.025" endtime="20220704 19:19:49.114"/>
</kw>
<status status="PASS" starttime="20220704 19:19:49.025" endtime="20220704 19:19:49.114"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:19:48.892" endtime="20220704 19:19:49.114"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:49.116" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:49.116" endtime="20220704 19:19:49.117"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:49.117" endtime="20220704 19:19:49.117"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:49.118" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 19:19:49.117" endtime="20220704 19:19:49.118"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:49.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.118" endtime="20220704 19:19:49.191"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.191" endtime="20220704 19:19:49.191"/>
</return>
<msg timestamp="20220704 19:19:49.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.116" endtime="20220704 19:19:49.191"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.192" endtime="20220704 19:19:49.192"/>
</return>
<msg timestamp="20220704 19:19:49.192" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.115" endtime="20220704 19:19:49.192"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:49.192" endtime="20220704 19:19:49.194"/>
</kw>
<status status="PASS" starttime="20220704 19:19:49.192" endtime="20220704 19:19:49.194"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:49.194" endtime="20220704 19:19:49.194"/>
</return>
<msg timestamp="20220704 19:19:49.195" level="INFO">${LABEL_ID} = 62c33d550a33268fc1a21845</msg>
<status status="PASS" starttime="20220704 19:19:49.194" endtime="20220704 19:19:49.195"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:49.196" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:49.196" endtime="20220704 19:19:49.196"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:49.196" endtime="20220704 19:19:49.196"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:49.197" level="INFO">${url} = labels/62c33d550a33268fc1a21845</msg>
<status status="PASS" starttime="20220704 19:19:49.197" endtime="20220704 19:19:49.197"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:49.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.197" endtime="20220704 19:19:49.299"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.300" endtime="20220704 19:19:49.300"/>
</return>
<msg timestamp="20220704 19:19:49.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.196" endtime="20220704 19:19:49.300"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.300" endtime="20220704 19:19:49.300"/>
</return>
<msg timestamp="20220704 19:19:49.300" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.195" endtime="20220704 19:19:49.300"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:49.301" endtime="20220704 19:19:49.301"/>
</return>
<msg timestamp="20220704 19:19:49.301" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 19:19:49.300" endtime="20220704 19:19:49.301"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:49.302" endtime="20220704 19:19:49.302"/>
</return>
<msg timestamp="20220704 19:19:49.302" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 19:19:49.301" endtime="20220704 19:19:49.303"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:49.303" endtime="20220704 19:19:49.303"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:49.303" endtime="20220704 19:19:49.303"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:49.305" level="INFO">${url} = labels/62c33d550a33268fc1a21845</msg>
<status status="PASS" starttime="20220704 19:19:49.305" endtime="20220704 19:19:49.305"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:49.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.305" endtime="20220704 19:19:49.575"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.575" endtime="20220704 19:19:49.575"/>
</return>
<msg timestamp="20220704 19:19:49.576" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.304" endtime="20220704 19:19:49.576"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.576" endtime="20220704 19:19:49.576"/>
</return>
<status status="PASS" starttime="20220704 19:19:49.304" endtime="20220704 19:19:49.576"/>
</kw>
<status status="PASS" starttime="20220704 19:19:49.303" endtime="20220704 19:19:49.576"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:19:49.115" endtime="20220704 19:19:49.576"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:49.579" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:49.579" endtime="20220704 19:19:49.579"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:49.579" endtime="20220704 19:19:49.579"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:49.580" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 19:19:49.579" endtime="20220704 19:19:49.580"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:49.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.580" endtime="20220704 19:19:49.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.656" endtime="20220704 19:19:49.656"/>
</return>
<msg timestamp="20220704 19:19:49.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.578" endtime="20220704 19:19:49.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.656" endtime="20220704 19:19:49.656"/>
</return>
<msg timestamp="20220704 19:19:49.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.578" endtime="20220704 19:19:49.657"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:19:49.657" endtime="20220704 19:19:49.657"/>
</return>
<msg timestamp="20220704 19:19:49.658" level="INFO">${LABEL_ID} = 62c33d55201c713f6480e531</msg>
<status status="PASS" starttime="20220704 19:19:49.657" endtime="20220704 19:19:49.658"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:49.660" level="INFO">${url} = labels/62c33d55201c713f6480e531</msg>
<status status="PASS" starttime="20220704 19:19:49.659" endtime="20220704 19:19:49.660"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:49.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.660" endtime="20220704 19:19:49.767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.767" endtime="20220704 19:19:49.767"/>
</return>
<msg timestamp="20220704 19:19:49.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.659" endtime="20220704 19:19:49.767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.767" endtime="20220704 19:19:49.767"/>
</return>
<status status="PASS" starttime="20220704 19:19:49.658" endtime="20220704 19:19:49.768"/>
</kw>
<status status="PASS" starttime="20220704 19:19:49.658" endtime="20220704 19:19:49.768"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:49.769" level="INFO">${url} = labels/62c33d55201c713f6480e531</msg>
<status status="PASS" starttime="20220704 19:19:49.769" endtime="20220704 19:19:49.769"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:49.797" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:19:49.769" endtime="20220704 19:19:49.797"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.797" endtime="20220704 19:19:49.797"/>
</return>
<msg timestamp="20220704 19:19:49.797" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:19:49.768" endtime="20220704 19:19:49.797"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:49.797" endtime="20220704 19:19:49.797"/>
</return>
<status status="PASS" starttime="20220704 19:19:49.768" endtime="20220704 19:19:49.798"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:19:49.576" endtime="20220704 19:19:49.798"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:49.800" level="INFO">${url} = boards/62c33d546d85e85ca2dc1cd0</msg>
<status status="PASS" starttime="20220704 19:19:49.800" endtime="20220704 19:19:49.800"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:50.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.800" endtime="20220704 19:19:50.063"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.063" endtime="20220704 19:19:50.063"/>
</return>
<msg timestamp="20220704 19:19:50.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:49.799" endtime="20220704 19:19:50.063"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.063" endtime="20220704 19:19:50.063"/>
</return>
<status status="PASS" starttime="20220704 19:19:49.799" endtime="20220704 19:19:50.063"/>
</kw>
<status status="PASS" starttime="20220704 19:19:49.799" endtime="20220704 19:19:50.063"/>
</kw>
<status status="PASS" starttime="20220704 19:19:49.799" endtime="20220704 19:19:50.063"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 19:19:50.064" endtime="20220704 19:19:50.065"/>
</kw>
<status status="PASS" starttime="20220704 19:19:49.798" endtime="20220704 19:19:50.065"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 19:19:48.657" endtime="20220704 19:19:50.065"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:19:50.075" endtime="20220704 19:19:50.075"/>
</kw>
<status status="PASS" starttime="20220704 19:19:50.075" endtime="20220704 19:19:50.075"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:50.076" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:50.076" endtime="20220704 19:19:50.076"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:50.076" endtime="20220704 19:19:50.077"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:50.077" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:19:50.077" endtime="20220704 19:19:50.077"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:50.239" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.078" endtime="20220704 19:19:50.239"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.239" endtime="20220704 19:19:50.240"/>
</return>
<msg timestamp="20220704 19:19:50.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.076" endtime="20220704 19:19:50.240"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.240" endtime="20220704 19:19:50.240"/>
</return>
<msg timestamp="20220704 19:19:50.240" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.076" endtime="20220704 19:19:50.240"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:19:50.241" level="INFO">${TEST_SUITE_BOARD_ID} = 62c33d56e52de314f26b72c3</msg>
<status status="PASS" starttime="20220704 19:19:50.241" endtime="20220704 19:19:50.241"/>
</kw>
<status status="PASS" starttime="20220704 19:19:50.240" endtime="20220704 19:19:50.241"/>
</kw>
<status status="PASS" starttime="20220704 19:19:50.075" endtime="20220704 19:19:50.242"/>
</kw>
<status status="PASS" starttime="20220704 19:19:50.074" endtime="20220704 19:19:50.242"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:50.244" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:50.243" endtime="20220704 19:19:50.244"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:50.244" endtime="20220704 19:19:50.244"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:50.245" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 19:19:50.244" endtime="20220704 19:19:50.245"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:50.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.245" endtime="20220704 19:19:50.329"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.329" endtime="20220704 19:19:50.329"/>
</return>
<msg timestamp="20220704 19:19:50.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.243" endtime="20220704 19:19:50.329"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.329" endtime="20220704 19:19:50.329"/>
</return>
<msg timestamp="20220704 19:19:50.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.242" endtime="20220704 19:19:50.329"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:50.330" endtime="20220704 19:19:50.332"/>
</kw>
<status status="PASS" starttime="20220704 19:19:50.330" endtime="20220704 19:19:50.332"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:19:50.242" endtime="20220704 19:19:50.332"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:50.334" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:50.334" endtime="20220704 19:19:50.334"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:50.334" endtime="20220704 19:19:50.335"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:50.335" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 19:19:50.335" endtime="20220704 19:19:50.335"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:50.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.335" endtime="20220704 19:19:50.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.418" endtime="20220704 19:19:50.418"/>
</return>
<msg timestamp="20220704 19:19:50.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.334" endtime="20220704 19:19:50.419"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.419" endtime="20220704 19:19:50.419"/>
</return>
<msg timestamp="20220704 19:19:50.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.333" endtime="20220704 19:19:50.419"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:50.419" endtime="20220704 19:19:50.421"/>
</kw>
<status status="PASS" starttime="20220704 19:19:50.419" endtime="20220704 19:19:50.421"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:50.423" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:50.423" endtime="20220704 19:19:50.423"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:50.423" endtime="20220704 19:19:50.423"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:50.424" level="INFO">${url} = lists/62c33d56547ffe45b26b5efe</msg>
<status status="PASS" starttime="20220704 19:19:50.423" endtime="20220704 19:19:50.424"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:50.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.424" endtime="20220704 19:19:50.492"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.492" endtime="20220704 19:19:50.492"/>
</return>
<msg timestamp="20220704 19:19:50.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.422" endtime="20220704 19:19:50.492"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.492" endtime="20220704 19:19:50.492"/>
</return>
<status status="PASS" starttime="20220704 19:19:50.421" endtime="20220704 19:19:50.493"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:50.494" level="INFO">${url} = lists/62c33d56547ffe45b26b5efe</msg>
<status status="PASS" starttime="20220704 19:19:50.494" endtime="20220704 19:19:50.494"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:50.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.494" endtime="20220704 19:19:50.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.539" endtime="20220704 19:19:50.539"/>
</return>
<msg timestamp="20220704 19:19:50.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.493" endtime="20220704 19:19:50.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.539" endtime="20220704 19:19:50.539"/>
</return>
<msg timestamp="20220704 19:19:50.539" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.493" endtime="20220704 19:19:50.539"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:19:50.540" endtime="20220704 19:19:50.542"/>
</kw>
<status status="PASS" starttime="20220704 19:19:50.540" endtime="20220704 19:19:50.542"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:19:50.542" endtime="20220704 19:19:50.542"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:19:50.332" endtime="20220704 19:19:50.543"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:50.546" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:50.546" endtime="20220704 19:19:50.546"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:50.546" endtime="20220704 19:19:50.546"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:50.547" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 19:19:50.546" endtime="20220704 19:19:50.547"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:50.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.547" endtime="20220704 19:19:50.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.657" endtime="20220704 19:19:50.657"/>
</return>
<msg timestamp="20220704 19:19:50.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.545" endtime="20220704 19:19:50.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.657" endtime="20220704 19:19:50.657"/>
</return>
<msg timestamp="20220704 19:19:50.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.543" endtime="20220704 19:19:50.657"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:19:50.659" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:19:50.659" endtime="20220704 19:19:50.659"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:19:50.659" endtime="20220704 19:19:50.659"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:50.660" level="INFO">${url} = lists/62c33d561d250b68fa479462/closed</msg>
<status status="PASS" starttime="20220704 19:19:50.659" endtime="20220704 19:19:50.660"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:19:50.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.660" endtime="20220704 19:19:50.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.766" endtime="20220704 19:19:50.766"/>
</return>
<msg timestamp="20220704 19:19:50.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.658" endtime="20220704 19:19:50.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.766" endtime="20220704 19:19:50.766"/>
</return>
<status status="PASS" starttime="20220704 19:19:50.657" endtime="20220704 19:19:50.766"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:50.768" level="INFO">${url} = lists/62c33d561d250b68fa479462</msg>
<status status="PASS" starttime="20220704 19:19:50.768" endtime="20220704 19:19:50.768"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:19:50.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.768" endtime="20220704 19:19:50.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.803" endtime="20220704 19:19:50.803"/>
</return>
<msg timestamp="20220704 19:19:50.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.768" endtime="20220704 19:19:50.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:50.804" endtime="20220704 19:19:50.804"/>
</return>
<msg timestamp="20220704 19:19:50.804" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.767" endtime="20220704 19:19:50.804"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 19:19:50.804" endtime="20220704 19:19:50.805"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:19:50.543" endtime="20220704 19:19:50.805"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:19:50.808" level="INFO">${url} = boards/62c33d56e52de314f26b72c3</msg>
<status status="PASS" starttime="20220704 19:19:50.807" endtime="20220704 19:19:50.808"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:19:51.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.808" endtime="20220704 19:19:51.123"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:51.123" endtime="20220704 19:19:51.123"/>
</return>
<msg timestamp="20220704 19:19:51.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:19:50.807" endtime="20220704 19:19:51.123"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:19:51.123" endtime="20220704 19:19:51.123"/>
</return>
<status status="PASS" starttime="20220704 19:19:50.807" endtime="20220704 19:19:51.124"/>
</kw>
<status status="PASS" starttime="20220704 19:19:50.806" endtime="20220704 19:19:51.124"/>
</kw>
<status status="PASS" starttime="20220704 19:19:50.805" endtime="20220704 19:19:51.124"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 19:19:51.124" endtime="20220704 19:19:51.125"/>
</kw>
<status status="PASS" starttime="20220704 19:19:50.805" endtime="20220704 19:19:51.125"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 19:19:50.066" endtime="20220704 19:19:51.125"/>
</suite>
<status status="PASS" starttime="20220704 19:19:41.830" endtime="20220704 19:19:51.128"/>
</suite>
<status status="PASS" starttime="20220704 19:19:41.813" endtime="20220704 19:19:51.130"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
