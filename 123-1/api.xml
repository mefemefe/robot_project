<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 20:23:40.935" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 20:23:41.057" endtime="20220704 20:23:41.057"/>
</kw>
<status status="PASS" starttime="20220704 20:23:41.056" endtime="20220704 20:23:41.057"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:41.059" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:41.059" endtime="20220704 20:23:41.059"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:41.059" endtime="20220704 20:23:41.060"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:41.060" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:23:41.060" endtime="20220704 20:23:41.060"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:41.293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.060" endtime="20220704 20:23:41.293"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:41.293" endtime="20220704 20:23:41.293"/>
</return>
<msg timestamp="20220704 20:23:41.293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.059" endtime="20220704 20:23:41.293"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:41.293" endtime="20220704 20:23:41.293"/>
</return>
<msg timestamp="20220704 20:23:41.293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.058" endtime="20220704 20:23:41.293"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:41.294" endtime="20220704 20:23:41.299"/>
</kw>
<status status="PASS" starttime="20220704 20:23:41.294" endtime="20220704 20:23:41.299"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:41.301" level="INFO">${url} = boards/62c34c4d229ab48649190d5c</msg>
<status status="PASS" starttime="20220704 20:23:41.300" endtime="20220704 20:23:41.301"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:41.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.301" endtime="20220704 20:23:41.596"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:41.596" endtime="20220704 20:23:41.596"/>
</return>
<msg timestamp="20220704 20:23:41.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.300" endtime="20220704 20:23:41.596"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:41.596" endtime="20220704 20:23:41.596"/>
</return>
<status status="PASS" starttime="20220704 20:23:41.299" endtime="20220704 20:23:41.596"/>
</kw>
<status status="PASS" starttime="20220704 20:23:41.299" endtime="20220704 20:23:41.596"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:23:41.058" endtime="20220704 20:23:41.597"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:41.599" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:41.599" endtime="20220704 20:23:41.599"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:41.599" endtime="20220704 20:23:41.599"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:41.600" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:23:41.600" endtime="20220704 20:23:41.600"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:41.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.600" endtime="20220704 20:23:41.765"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:41.765" endtime="20220704 20:23:41.765"/>
</return>
<msg timestamp="20220704 20:23:41.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.598" endtime="20220704 20:23:41.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:41.766" endtime="20220704 20:23:41.766"/>
</return>
<msg timestamp="20220704 20:23:41.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.598" endtime="20220704 20:23:41.766"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:41.767" endtime="20220704 20:23:41.770"/>
</kw>
<status status="PASS" starttime="20220704 20:23:41.766" endtime="20220704 20:23:41.770"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:41.772" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:41.772" endtime="20220704 20:23:41.772"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:41.772" endtime="20220704 20:23:41.772"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:41.773" level="INFO">${url} = boards/62c34c4d120edf131eb41d97</msg>
<status status="PASS" starttime="20220704 20:23:41.772" endtime="20220704 20:23:41.773"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:41.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.773" endtime="20220704 20:23:41.875"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:41.875" endtime="20220704 20:23:41.875"/>
</return>
<msg timestamp="20220704 20:23:41.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.771" endtime="20220704 20:23:41.875"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:41.875" endtime="20220704 20:23:41.875"/>
</return>
<status status="PASS" starttime="20220704 20:23:41.770" endtime="20220704 20:23:41.876"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:41.877" level="INFO">${url} = boards/62c34c4d120edf131eb41d97</msg>
<status status="PASS" starttime="20220704 20:23:41.877" endtime="20220704 20:23:41.877"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:41.921" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.878" endtime="20220704 20:23:41.921"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:41.921" endtime="20220704 20:23:41.922"/>
</return>
<msg timestamp="20220704 20:23:41.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.877" endtime="20220704 20:23:41.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:41.922" endtime="20220704 20:23:41.922"/>
</return>
<msg timestamp="20220704 20:23:41.922" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.876" endtime="20220704 20:23:41.922"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:41.923" endtime="20220704 20:23:41.927"/>
</kw>
<status status="PASS" starttime="20220704 20:23:41.922" endtime="20220704 20:23:41.927"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:41.927" endtime="20220704 20:23:41.928"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:41.930" level="INFO">${url} = boards/62c34c4d120edf131eb41d97</msg>
<status status="PASS" starttime="20220704 20:23:41.929" endtime="20220704 20:23:41.930"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:42.225" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.930" endtime="20220704 20:23:42.225"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:42.225" endtime="20220704 20:23:42.225"/>
</return>
<msg timestamp="20220704 20:23:42.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:41.929" endtime="20220704 20:23:42.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:42.226" endtime="20220704 20:23:42.226"/>
</return>
<status status="PASS" starttime="20220704 20:23:41.928" endtime="20220704 20:23:42.226"/>
</kw>
<status status="PASS" starttime="20220704 20:23:41.928" endtime="20220704 20:23:42.226"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:23:41.597" endtime="20220704 20:23:42.226"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:42.228" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:42.228" endtime="20220704 20:23:42.228"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:42.228" endtime="20220704 20:23:42.229"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:42.229" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:23:42.229" endtime="20220704 20:23:42.229"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:42.402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:42.229" endtime="20220704 20:23:42.402"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:42.402" endtime="20220704 20:23:42.402"/>
</return>
<msg timestamp="20220704 20:23:42.402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:42.227" endtime="20220704 20:23:42.402"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:42.402" endtime="20220704 20:23:42.402"/>
</return>
<msg timestamp="20220704 20:23:42.402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:42.227" endtime="20220704 20:23:42.402"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:42.404" level="INFO">${url} = boards/62c34c4e644b6f7424b42d4f</msg>
<status status="PASS" starttime="20220704 20:23:42.404" endtime="20220704 20:23:42.404"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:42.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:42.405" endtime="20220704 20:23:42.710"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:42.710" endtime="20220704 20:23:42.710"/>
</return>
<msg timestamp="20220704 20:23:42.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:42.404" endtime="20220704 20:23:42.711"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:42.711" endtime="20220704 20:23:42.711"/>
</return>
<status status="PASS" starttime="20220704 20:23:42.403" endtime="20220704 20:23:42.711"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:42.713" level="INFO">${url} = boards/62c34c4e644b6f7424b42d4f</msg>
<status status="PASS" starttime="20220704 20:23:42.713" endtime="20220704 20:23:42.713"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:42.746" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:23:42.713" endtime="20220704 20:23:42.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:42.746" endtime="20220704 20:23:42.746"/>
</return>
<msg timestamp="20220704 20:23:42.746" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:23:42.712" endtime="20220704 20:23:42.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:42.746" endtime="20220704 20:23:42.746"/>
</return>
<status status="PASS" starttime="20220704 20:23:42.711" endtime="20220704 20:23:42.747"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:23:42.227" endtime="20220704 20:23:42.747"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:42.749" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:42.749" endtime="20220704 20:23:42.749"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:42.749" endtime="20220704 20:23:42.749"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:42.750" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:23:42.749" endtime="20220704 20:23:42.750"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:42.903" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:42.750" endtime="20220704 20:23:42.903"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:42.903" endtime="20220704 20:23:42.903"/>
</return>
<msg timestamp="20220704 20:23:42.903" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:42.748" endtime="20220704 20:23:42.903"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:42.903" endtime="20220704 20:23:42.903"/>
</return>
<msg timestamp="20220704 20:23:42.903" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:42.748" endtime="20220704 20:23:42.903"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:42.904" endtime="20220704 20:23:42.908"/>
</kw>
<status status="PASS" starttime="20220704 20:23:42.904" endtime="20220704 20:23:42.908"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:42.909" level="INFO">${url} = boards/62c34c4ef019d4182ce49dd2</msg>
<status status="PASS" starttime="20220704 20:23:42.909" endtime="20220704 20:23:42.909"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:42.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:42.909" endtime="20220704 20:23:42.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:42.964" endtime="20220704 20:23:42.964"/>
</return>
<msg timestamp="20220704 20:23:42.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:42.909" endtime="20220704 20:23:42.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:42.964" endtime="20220704 20:23:42.964"/>
</return>
<msg timestamp="20220704 20:23:42.964" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:42.908" endtime="20220704 20:23:42.964"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:42.965" endtime="20220704 20:23:42.969"/>
</kw>
<status status="PASS" starttime="20220704 20:23:42.964" endtime="20220704 20:23:42.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:42.969" endtime="20220704 20:23:42.970"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:42.972" level="INFO">${url} = boards/62c34c4ef019d4182ce49dd2</msg>
<status status="PASS" starttime="20220704 20:23:42.971" endtime="20220704 20:23:42.972"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:43.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:42.972" endtime="20220704 20:23:43.246"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:43.247" endtime="20220704 20:23:43.247"/>
</return>
<msg timestamp="20220704 20:23:43.247" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:42.971" endtime="20220704 20:23:43.247"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:43.247" endtime="20220704 20:23:43.247"/>
</return>
<status status="PASS" starttime="20220704 20:23:42.970" endtime="20220704 20:23:43.247"/>
</kw>
<status status="PASS" starttime="20220704 20:23:42.970" endtime="20220704 20:23:43.247"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:23:42.747" endtime="20220704 20:23:43.247"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:43.249" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:43.249" endtime="20220704 20:23:43.249"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:43.249" endtime="20220704 20:23:43.249"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:43.250" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:23:43.250" endtime="20220704 20:23:43.250"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:43.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.250" endtime="20220704 20:23:43.404"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:43.404" endtime="20220704 20:23:43.405"/>
</return>
<msg timestamp="20220704 20:23:43.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.249" endtime="20220704 20:23:43.405"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:43.405" endtime="20220704 20:23:43.405"/>
</return>
<msg timestamp="20220704 20:23:43.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.248" endtime="20220704 20:23:43.405"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:43.406" endtime="20220704 20:23:43.410"/>
</kw>
<status status="PASS" starttime="20220704 20:23:43.405" endtime="20220704 20:23:43.410"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:43.412" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:43.411" endtime="20220704 20:23:43.412"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:43.412" endtime="20220704 20:23:43.412"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:43.412" level="INFO">${url} = boards/62c34c4fb6a66350faba6ce7</msg>
<status status="PASS" starttime="20220704 20:23:43.412" endtime="20220704 20:23:43.412"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:43.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.412" endtime="20220704 20:23:43.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:43.503" endtime="20220704 20:23:43.503"/>
</return>
<msg timestamp="20220704 20:23:43.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.411" endtime="20220704 20:23:43.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:43.504" endtime="20220704 20:23:43.504"/>
</return>
<status status="PASS" starttime="20220704 20:23:43.410" endtime="20220704 20:23:43.504"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:43.506" level="INFO">${url} = boards/62c34c4fb6a66350faba6ce7</msg>
<status status="PASS" starttime="20220704 20:23:43.505" endtime="20220704 20:23:43.506"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:43.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.506" endtime="20220704 20:23:43.569"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:43.569" endtime="20220704 20:23:43.569"/>
</return>
<msg timestamp="20220704 20:23:43.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.505" endtime="20220704 20:23:43.569"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:43.570" endtime="20220704 20:23:43.570"/>
</return>
<msg timestamp="20220704 20:23:43.570" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.504" endtime="20220704 20:23:43.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:43.570" endtime="20220704 20:23:43.571"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:43.573" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:43.572" endtime="20220704 20:23:43.573"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:43.573" endtime="20220704 20:23:43.573"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:43.573" level="INFO">${url} = boards/62c34c4fb6a66350faba6ce7</msg>
<status status="PASS" starttime="20220704 20:23:43.573" endtime="20220704 20:23:43.573"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:43.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.573" endtime="20220704 20:23:43.677"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:43.677" endtime="20220704 20:23:43.677"/>
</return>
<msg timestamp="20220704 20:23:43.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.572" endtime="20220704 20:23:43.677"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:43.677" endtime="20220704 20:23:43.677"/>
</return>
<status status="PASS" starttime="20220704 20:23:43.571" endtime="20220704 20:23:43.677"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:43.679" level="INFO">${url} = boards/62c34c4fb6a66350faba6ce7</msg>
<status status="PASS" starttime="20220704 20:23:43.679" endtime="20220704 20:23:43.679"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:43.722" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.679" endtime="20220704 20:23:43.722"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:43.722" endtime="20220704 20:23:43.722"/>
</return>
<msg timestamp="20220704 20:23:43.722" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.678" endtime="20220704 20:23:43.722"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:43.722" endtime="20220704 20:23:43.722"/>
</return>
<msg timestamp="20220704 20:23:43.723" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.678" endtime="20220704 20:23:43.723"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:43.723" endtime="20220704 20:23:43.724"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:43.726" level="INFO">${url} = boards/62c34c4fb6a66350faba6ce7</msg>
<status status="PASS" starttime="20220704 20:23:43.725" endtime="20220704 20:23:43.726"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:44.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.726" endtime="20220704 20:23:44.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.052" endtime="20220704 20:23:44.052"/>
</return>
<msg timestamp="20220704 20:23:44.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:43.725" endtime="20220704 20:23:44.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.052" endtime="20220704 20:23:44.052"/>
</return>
<status status="PASS" starttime="20220704 20:23:43.724" endtime="20220704 20:23:44.052"/>
</kw>
<status status="PASS" starttime="20220704 20:23:43.724" endtime="20220704 20:23:44.052"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:23:43.248" endtime="20220704 20:23:44.052"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 20:23:44.053" endtime="20220704 20:23:44.054"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 20:23:40.954" endtime="20220704 20:23:44.055"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 20:23:44.066" endtime="20220704 20:23:44.066"/>
</kw>
<status status="PASS" starttime="20220704 20:23:44.066" endtime="20220704 20:23:44.066"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:44.067" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:44.067" endtime="20220704 20:23:44.067"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:44.068" endtime="20220704 20:23:44.068"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:44.068" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:23:44.068" endtime="20220704 20:23:44.068"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:44.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.069" endtime="20220704 20:23:44.286"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.286" endtime="20220704 20:23:44.286"/>
</return>
<msg timestamp="20220704 20:23:44.287" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.067" endtime="20220704 20:23:44.287"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.287" endtime="20220704 20:23:44.287"/>
</return>
<msg timestamp="20220704 20:23:44.287" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.067" endtime="20220704 20:23:44.287"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:23:44.288" level="INFO">${TEST_SUITE_BOARD_ID} = 62c34c502ee25f6364e6a193</msg>
<status status="PASS" starttime="20220704 20:23:44.287" endtime="20220704 20:23:44.288"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:44.289" level="INFO">${url} = boards/62c34c502ee25f6364e6a193/lists/</msg>
<status status="PASS" starttime="20220704 20:23:44.289" endtime="20220704 20:23:44.289"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:44.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.289" endtime="20220704 20:23:44.348"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.348" endtime="20220704 20:23:44.348"/>
</return>
<msg timestamp="20220704 20:23:44.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.288" endtime="20220704 20:23:44.348"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.348" endtime="20220704 20:23:44.348"/>
</return>
<msg timestamp="20220704 20:23:44.349" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.288" endtime="20220704 20:23:44.349"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:23:44.350" level="INFO">${TEST_SUITE_LIST_ID} = 62c34c502ee25f6364e6a19a</msg>
<status status="PASS" starttime="20220704 20:23:44.349" endtime="20220704 20:23:44.350"/>
</kw>
<status status="PASS" starttime="20220704 20:23:44.067" endtime="20220704 20:23:44.350"/>
</kw>
<status status="PASS" starttime="20220704 20:23:44.066" endtime="20220704 20:23:44.350"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:44.352" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:44.352" endtime="20220704 20:23:44.352"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:44.352" endtime="20220704 20:23:44.352"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:44.353" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 20:23:44.352" endtime="20220704 20:23:44.353"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:44.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.353" endtime="20220704 20:23:44.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.517" endtime="20220704 20:23:44.518"/>
</return>
<msg timestamp="20220704 20:23:44.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.351" endtime="20220704 20:23:44.518"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.518" endtime="20220704 20:23:44.518"/>
</return>
<msg timestamp="20220704 20:23:44.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.351" endtime="20220704 20:23:44.518"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:44.519" endtime="20220704 20:23:44.523"/>
</kw>
<status status="PASS" starttime="20220704 20:23:44.518" endtime="20220704 20:23:44.524"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:44.524" endtime="20220704 20:23:44.524"/>
</return>
<msg timestamp="20220704 20:23:44.525" level="INFO">${CARD_ID} = 62c34c502923393efa078bf8</msg>
<status status="PASS" starttime="20220704 20:23:44.524" endtime="20220704 20:23:44.525"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:44.526" level="INFO">${url} = cards/62c34c502923393efa078bf8</msg>
<status status="PASS" starttime="20220704 20:23:44.526" endtime="20220704 20:23:44.526"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:44.576" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.526" endtime="20220704 20:23:44.577"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.577" endtime="20220704 20:23:44.577"/>
</return>
<msg timestamp="20220704 20:23:44.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.525" endtime="20220704 20:23:44.577"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.577" endtime="20220704 20:23:44.577"/>
</return>
<msg timestamp="20220704 20:23:44.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.525" endtime="20220704 20:23:44.577"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:44.578" endtime="20220704 20:23:44.578"/>
</return>
<msg timestamp="20220704 20:23:44.578" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 20:23:44.577" endtime="20220704 20:23:44.578"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:44.579" endtime="20220704 20:23:44.579"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:44.580" level="INFO">${url} = cards/62c34c502923393efa078bf8</msg>
<status status="PASS" starttime="20220704 20:23:44.580" endtime="20220704 20:23:44.580"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:44.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.581" endtime="20220704 20:23:44.723"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.723" endtime="20220704 20:23:44.723"/>
</return>
<msg timestamp="20220704 20:23:44.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.580" endtime="20220704 20:23:44.723"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.724" endtime="20220704 20:23:44.724"/>
</return>
<status status="PASS" starttime="20220704 20:23:44.579" endtime="20220704 20:23:44.724"/>
</kw>
<status status="PASS" starttime="20220704 20:23:44.579" endtime="20220704 20:23:44.724"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:23:44.350" endtime="20220704 20:23:44.724"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:44.727" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:44.726" endtime="20220704 20:23:44.727"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:44.727" endtime="20220704 20:23:44.727"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:44.728" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 20:23:44.727" endtime="20220704 20:23:44.728"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:44.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.728" endtime="20220704 20:23:44.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.847" endtime="20220704 20:23:44.847"/>
</return>
<msg timestamp="20220704 20:23:44.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.726" endtime="20220704 20:23:44.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.847" endtime="20220704 20:23:44.847"/>
</return>
<msg timestamp="20220704 20:23:44.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.725" endtime="20220704 20:23:44.847"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:44.848" endtime="20220704 20:23:44.848"/>
</return>
<msg timestamp="20220704 20:23:44.849" level="INFO">${CARD_ID} = 62c34c50f234e9563c088fba</msg>
<status status="PASS" starttime="20220704 20:23:44.847" endtime="20220704 20:23:44.849"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:44.851" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:44.851" endtime="20220704 20:23:44.851"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:44.851" endtime="20220704 20:23:44.851"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:44.852" level="INFO">${url} = cards/62c34c50f234e9563c088fba</msg>
<status status="PASS" starttime="20220704 20:23:44.851" endtime="20220704 20:23:44.852"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:44.980" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.852" endtime="20220704 20:23:44.980"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.980" endtime="20220704 20:23:44.980"/>
</return>
<msg timestamp="20220704 20:23:44.980" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.850" endtime="20220704 20:23:44.980"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.980" endtime="20220704 20:23:44.980"/>
</return>
<msg timestamp="20220704 20:23:44.980" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.849" endtime="20220704 20:23:44.980"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:44.980" endtime="20220704 20:23:44.981"/>
</return>
<status status="PASS" starttime="20220704 20:23:44.849" endtime="20220704 20:23:44.981"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:44.982" level="INFO">${url} = cards/62c34c50f234e9563c088fba</msg>
<status status="PASS" starttime="20220704 20:23:44.982" endtime="20220704 20:23:44.982"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:45.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.982" endtime="20220704 20:23:45.036"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.036" endtime="20220704 20:23:45.036"/>
</return>
<msg timestamp="20220704 20:23:45.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.981" endtime="20220704 20:23:45.037"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.037" endtime="20220704 20:23:45.037"/>
</return>
<msg timestamp="20220704 20:23:45.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:44.981" endtime="20220704 20:23:45.037"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:45.037" endtime="20220704 20:23:45.037"/>
</return>
<msg timestamp="20220704 20:23:45.038" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 20:23:45.037" endtime="20220704 20:23:45.038"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 20:23:45.038" endtime="20220704 20:23:45.039"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:45.040" level="INFO">${url} = cards/62c34c50f234e9563c088fba</msg>
<status status="PASS" starttime="20220704 20:23:45.040" endtime="20220704 20:23:45.040"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:45.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.040" endtime="20220704 20:23:45.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.175" endtime="20220704 20:23:45.175"/>
</return>
<msg timestamp="20220704 20:23:45.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.039" endtime="20220704 20:23:45.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.176" endtime="20220704 20:23:45.176"/>
</return>
<status status="PASS" starttime="20220704 20:23:45.039" endtime="20220704 20:23:45.176"/>
</kw>
<status status="PASS" starttime="20220704 20:23:45.039" endtime="20220704 20:23:45.176"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 20:23:44.724" endtime="20220704 20:23:45.176"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:45.179" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:45.179" endtime="20220704 20:23:45.179"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:45.179" endtime="20220704 20:23:45.179"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:45.180" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 20:23:45.179" endtime="20220704 20:23:45.180"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:45.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.180" endtime="20220704 20:23:45.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.332" endtime="20220704 20:23:45.332"/>
</return>
<msg timestamp="20220704 20:23:45.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.178" endtime="20220704 20:23:45.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.332" endtime="20220704 20:23:45.332"/>
</return>
<msg timestamp="20220704 20:23:45.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.177" endtime="20220704 20:23:45.332"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:45.333" endtime="20220704 20:23:45.333"/>
</return>
<msg timestamp="20220704 20:23:45.334" level="INFO">${CARD_ID} = 62c34c513994b217ed8b145c</msg>
<status status="PASS" starttime="20220704 20:23:45.333" endtime="20220704 20:23:45.334"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:45.335" level="INFO">${url} = cards/62c34c513994b217ed8b145c</msg>
<status status="PASS" starttime="20220704 20:23:45.335" endtime="20220704 20:23:45.335"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:45.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.335" endtime="20220704 20:23:45.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.507" endtime="20220704 20:23:45.507"/>
</return>
<msg timestamp="20220704 20:23:45.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.334" endtime="20220704 20:23:45.508"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.508" endtime="20220704 20:23:45.508"/>
</return>
<msg timestamp="20220704 20:23:45.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.334" endtime="20220704 20:23:45.508"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:45.509" endtime="20220704 20:23:45.510"/>
</kw>
<status status="PASS" starttime="20220704 20:23:45.508" endtime="20220704 20:23:45.511"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:45.512" level="INFO">${url} = cards/62c34c513994b217ed8b145c</msg>
<status status="PASS" starttime="20220704 20:23:45.512" endtime="20220704 20:23:45.512"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:45.547" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:23:45.512" endtime="20220704 20:23:45.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.547" endtime="20220704 20:23:45.547"/>
</return>
<msg timestamp="20220704 20:23:45.547" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:23:45.511" endtime="20220704 20:23:45.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.547" endtime="20220704 20:23:45.547"/>
</return>
<status status="PASS" starttime="20220704 20:23:45.511" endtime="20220704 20:23:45.548"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:23:45.176" endtime="20220704 20:23:45.548"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:45.550" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:45.550" endtime="20220704 20:23:45.550"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:45.550" endtime="20220704 20:23:45.550"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:45.551" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 20:23:45.550" endtime="20220704 20:23:45.551"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:45.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.551" endtime="20220704 20:23:45.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.704" endtime="20220704 20:23:45.704"/>
</return>
<msg timestamp="20220704 20:23:45.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.549" endtime="20220704 20:23:45.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.705" endtime="20220704 20:23:45.705"/>
</return>
<msg timestamp="20220704 20:23:45.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.549" endtime="20220704 20:23:45.705"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:45.705" endtime="20220704 20:23:45.705"/>
</return>
<msg timestamp="20220704 20:23:45.706" level="INFO">${CARD_ID} = 62c34c51cbef3f2086696759</msg>
<status status="PASS" starttime="20220704 20:23:45.705" endtime="20220704 20:23:45.706"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:45.708" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:45.707" endtime="20220704 20:23:45.708"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:45.708" endtime="20220704 20:23:45.708"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:45.708" level="INFO">${url} = cards/62c34c51cbef3f2086696759</msg>
<status status="PASS" starttime="20220704 20:23:45.708" endtime="20220704 20:23:45.708"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:45.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.708" endtime="20220704 20:23:45.844"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.844" endtime="20220704 20:23:45.844"/>
</return>
<msg timestamp="20220704 20:23:45.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.707" endtime="20220704 20:23:45.844"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.844" endtime="20220704 20:23:45.844"/>
</return>
<msg timestamp="20220704 20:23:45.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.706" endtime="20220704 20:23:45.844"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:45.845" endtime="20220704 20:23:45.851"/>
</kw>
<status status="PASS" starttime="20220704 20:23:45.845" endtime="20220704 20:23:45.851"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:45.852" level="INFO">${url} = cards/62c34c51cbef3f2086696759</msg>
<status status="PASS" starttime="20220704 20:23:45.852" endtime="20220704 20:23:45.852"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:45.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.852" endtime="20220704 20:23:45.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.908" endtime="20220704 20:23:45.908"/>
</return>
<msg timestamp="20220704 20:23:45.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.851" endtime="20220704 20:23:45.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:45.908" endtime="20220704 20:23:45.908"/>
</return>
<msg timestamp="20220704 20:23:45.909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.851" endtime="20220704 20:23:45.909"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:45.909" endtime="20220704 20:23:45.909"/>
</return>
<msg timestamp="20220704 20:23:45.910" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 20:23:45.909" endtime="20220704 20:23:45.910"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:45.910" endtime="20220704 20:23:45.910"/>
</return>
<msg timestamp="20220704 20:23:45.911" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 20:23:45.910" endtime="20220704 20:23:45.911"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:45.911" endtime="20220704 20:23:45.911"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:45.912" endtime="20220704 20:23:45.912"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:45.913" level="INFO">${url} = cards/62c34c51cbef3f2086696759</msg>
<status status="PASS" starttime="20220704 20:23:45.913" endtime="20220704 20:23:45.913"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:46.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.913" endtime="20220704 20:23:46.093"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:46.093" endtime="20220704 20:23:46.093"/>
</return>
<msg timestamp="20220704 20:23:46.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:45.913" endtime="20220704 20:23:46.093"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:46.093" endtime="20220704 20:23:46.093"/>
</return>
<status status="PASS" starttime="20220704 20:23:45.912" endtime="20220704 20:23:46.093"/>
</kw>
<status status="PASS" starttime="20220704 20:23:45.912" endtime="20220704 20:23:46.093"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 20:23:45.548" endtime="20220704 20:23:46.093"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:46.097" level="INFO">${url} = boards/62c34c502ee25f6364e6a193</msg>
<status status="PASS" starttime="20220704 20:23:46.097" endtime="20220704 20:23:46.097"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:46.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.097" endtime="20220704 20:23:46.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:46.454" endtime="20220704 20:23:46.454"/>
</return>
<msg timestamp="20220704 20:23:46.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.096" endtime="20220704 20:23:46.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:46.454" endtime="20220704 20:23:46.454"/>
</return>
<status status="PASS" starttime="20220704 20:23:46.095" endtime="20220704 20:23:46.454"/>
</kw>
<status status="PASS" starttime="20220704 20:23:46.095" endtime="20220704 20:23:46.454"/>
</kw>
<status status="PASS" starttime="20220704 20:23:46.095" endtime="20220704 20:23:46.454"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 20:23:46.455" endtime="20220704 20:23:46.456"/>
</kw>
<status status="PASS" starttime="20220704 20:23:46.095" endtime="20220704 20:23:46.456"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 20:23:44.056" endtime="20220704 20:23:46.456"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 20:23:46.467" endtime="20220704 20:23:46.468"/>
</kw>
<status status="PASS" starttime="20220704 20:23:46.467" endtime="20220704 20:23:46.468"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:46.469" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:46.469" endtime="20220704 20:23:46.469"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:46.469" endtime="20220704 20:23:46.469"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:46.470" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:23:46.469" endtime="20220704 20:23:46.470"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:46.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.470" endtime="20220704 20:23:46.670"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:46.670" endtime="20220704 20:23:46.670"/>
</return>
<msg timestamp="20220704 20:23:46.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.468" endtime="20220704 20:23:46.670"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:46.670" endtime="20220704 20:23:46.670"/>
</return>
<msg timestamp="20220704 20:23:46.671" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.468" endtime="20220704 20:23:46.671"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:23:46.671" level="INFO">${TEST_SUITE_BOARD_ID} = 62c34c5276c32085ff72febb</msg>
<status status="PASS" starttime="20220704 20:23:46.671" endtime="20220704 20:23:46.672"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:46.673" level="INFO">${url} = boards/62c34c5276c32085ff72febb/lists/</msg>
<status status="PASS" starttime="20220704 20:23:46.672" endtime="20220704 20:23:46.673"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:46.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.673" endtime="20220704 20:23:46.726"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:46.727" endtime="20220704 20:23:46.727"/>
</return>
<msg timestamp="20220704 20:23:46.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.672" endtime="20220704 20:23:46.727"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:46.727" endtime="20220704 20:23:46.727"/>
</return>
<msg timestamp="20220704 20:23:46.727" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.672" endtime="20220704 20:23:46.727"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:23:46.728" level="INFO">${TEST_SUITE_LIST_ID} = 62c34c5276c32085ff72fec2</msg>
<status status="PASS" starttime="20220704 20:23:46.727" endtime="20220704 20:23:46.728"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:46.730" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:46.730" endtime="20220704 20:23:46.730"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:46.730" endtime="20220704 20:23:46.730"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:46.731" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 20:23:46.730" endtime="20220704 20:23:46.731"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:46.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.731" endtime="20220704 20:23:46.894"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:46.895" endtime="20220704 20:23:46.895"/>
</return>
<msg timestamp="20220704 20:23:46.895" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.729" endtime="20220704 20:23:46.895"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:46.895" endtime="20220704 20:23:46.895"/>
</return>
<msg timestamp="20220704 20:23:46.895" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.728" endtime="20220704 20:23:46.895"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:23:46.896" level="INFO">${TEST_SUITE_CARD_ID} = 62c34c527fc6572363a07856</msg>
<status status="PASS" starttime="20220704 20:23:46.895" endtime="20220704 20:23:46.896"/>
</kw>
<status status="PASS" starttime="20220704 20:23:46.468" endtime="20220704 20:23:46.896"/>
</kw>
<status status="PASS" starttime="20220704 20:23:46.467" endtime="20220704 20:23:46.896"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:46.899" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:46.899" endtime="20220704 20:23:46.899"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:46.899" endtime="20220704 20:23:46.899"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:46.900" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 20:23:46.899" endtime="20220704 20:23:46.900"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:47.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.900" endtime="20220704 20:23:47.002"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.002" endtime="20220704 20:23:47.002"/>
</return>
<msg timestamp="20220704 20:23:47.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.898" endtime="20220704 20:23:47.002"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.002" endtime="20220704 20:23:47.002"/>
</return>
<msg timestamp="20220704 20:23:47.003" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:46.898" endtime="20220704 20:23:47.003"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:47.003" endtime="20220704 20:23:47.003"/>
</return>
<msg timestamp="20220704 20:23:47.004" level="INFO">${checklist_id} = 62c34c52f0309d858be4280a</msg>
<status status="PASS" starttime="20220704 20:23:47.003" endtime="20220704 20:23:47.004"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:47.005" level="INFO">${url} = checklists/62c34c52f0309d858be4280a</msg>
<status status="PASS" starttime="20220704 20:23:47.005" endtime="20220704 20:23:47.005"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:47.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.005" endtime="20220704 20:23:47.053"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.053" endtime="20220704 20:23:47.053"/>
</return>
<msg timestamp="20220704 20:23:47.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.004" endtime="20220704 20:23:47.053"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.053" endtime="20220704 20:23:47.053"/>
</return>
<msg timestamp="20220704 20:23:47.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.004" endtime="20220704 20:23:47.054"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:47.054" endtime="20220704 20:23:47.054"/>
</return>
<msg timestamp="20220704 20:23:47.055" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 20:23:47.054" endtime="20220704 20:23:47.055"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:47.055" endtime="20220704 20:23:47.055"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:47.057" level="INFO">${url} = checklists/62c34c52f0309d858be4280a</msg>
<status status="PASS" starttime="20220704 20:23:47.057" endtime="20220704 20:23:47.057"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:47.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.057" endtime="20220704 20:23:47.152"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.152" endtime="20220704 20:23:47.152"/>
</return>
<msg timestamp="20220704 20:23:47.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.056" endtime="20220704 20:23:47.152"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.152" endtime="20220704 20:23:47.152"/>
</return>
<status status="PASS" starttime="20220704 20:23:47.056" endtime="20220704 20:23:47.152"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:23:46.897" endtime="20220704 20:23:47.152"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:47.155" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:47.155" endtime="20220704 20:23:47.155"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:47.156" endtime="20220704 20:23:47.156"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:47.157" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 20:23:47.156" endtime="20220704 20:23:47.157"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:47.353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.157" endtime="20220704 20:23:47.353"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.353" endtime="20220704 20:23:47.354"/>
</return>
<msg timestamp="20220704 20:23:47.354" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.155" endtime="20220704 20:23:47.354"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.354" endtime="20220704 20:23:47.354"/>
</return>
<msg timestamp="20220704 20:23:47.354" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.154" endtime="20220704 20:23:47.354"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:47.355" endtime="20220704 20:23:47.355"/>
</return>
<msg timestamp="20220704 20:23:47.356" level="INFO">${checklist_id} = 62c34c53e70c475b7081c876</msg>
<status status="PASS" starttime="20220704 20:23:47.354" endtime="20220704 20:23:47.356"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:47.357" level="INFO">${url} = checklists/62c34c53e70c475b7081c876</msg>
<status status="PASS" starttime="20220704 20:23:47.357" endtime="20220704 20:23:47.357"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:47.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.357" endtime="20220704 20:23:47.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.469" endtime="20220704 20:23:47.469"/>
</return>
<msg timestamp="20220704 20:23:47.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.356" endtime="20220704 20:23:47.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.469" endtime="20220704 20:23:47.469"/>
</return>
<msg timestamp="20220704 20:23:47.470" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.356" endtime="20220704 20:23:47.470"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:47.470" endtime="20220704 20:23:47.472"/>
</kw>
<status status="PASS" starttime="20220704 20:23:47.470" endtime="20220704 20:23:47.472"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:47.474" level="INFO">${url} = checklists/62c34c53e70c475b7081c876</msg>
<status status="PASS" starttime="20220704 20:23:47.473" endtime="20220704 20:23:47.474"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:47.506" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:23:47.474" endtime="20220704 20:23:47.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.506" endtime="20220704 20:23:47.506"/>
</return>
<msg timestamp="20220704 20:23:47.506" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:23:47.473" endtime="20220704 20:23:47.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.506" endtime="20220704 20:23:47.507"/>
</return>
<status status="PASS" starttime="20220704 20:23:47.472" endtime="20220704 20:23:47.507"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:23:47.153" endtime="20220704 20:23:47.507"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:47.510" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:47.509" endtime="20220704 20:23:47.510"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:47.510" endtime="20220704 20:23:47.511"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:47.511" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 20:23:47.511" endtime="20220704 20:23:47.511"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:47.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.511" endtime="20220704 20:23:47.608"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.608" endtime="20220704 20:23:47.608"/>
</return>
<msg timestamp="20220704 20:23:47.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.508" endtime="20220704 20:23:47.608"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.608" endtime="20220704 20:23:47.608"/>
</return>
<msg timestamp="20220704 20:23:47.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.508" endtime="20220704 20:23:47.609"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:47.609" endtime="20220704 20:23:47.609"/>
</return>
<msg timestamp="20220704 20:23:47.610" level="INFO">${checklist_id} = 62c34c531c207e550fd35568</msg>
<status status="PASS" starttime="20220704 20:23:47.609" endtime="20220704 20:23:47.610"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:47.611" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:47.611" endtime="20220704 20:23:47.611"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:47.611" endtime="20220704 20:23:47.611"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:47.612" level="INFO">${url} = checklists/62c34c531c207e550fd35568</msg>
<status status="PASS" starttime="20220704 20:23:47.611" endtime="20220704 20:23:47.612"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:47.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.612" endtime="20220704 20:23:47.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.695" endtime="20220704 20:23:47.695"/>
</return>
<msg timestamp="20220704 20:23:47.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.610" endtime="20220704 20:23:47.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.695" endtime="20220704 20:23:47.695"/>
</return>
<msg timestamp="20220704 20:23:47.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.610" endtime="20220704 20:23:47.696"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:47.697" level="INFO">${url} = checklists/62c34c531c207e550fd35568</msg>
<status status="PASS" starttime="20220704 20:23:47.697" endtime="20220704 20:23:47.697"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:47.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.697" endtime="20220704 20:23:47.748"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.748" endtime="20220704 20:23:47.748"/>
</return>
<msg timestamp="20220704 20:23:47.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.696" endtime="20220704 20:23:47.748"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.748" endtime="20220704 20:23:47.748"/>
</return>
<msg timestamp="20220704 20:23:47.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.696" endtime="20220704 20:23:47.749"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:47.749" endtime="20220704 20:23:47.749"/>
</return>
<msg timestamp="20220704 20:23:47.750" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 20:23:47.749" endtime="20220704 20:23:47.750"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:47.750" endtime="20220704 20:23:47.750"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:47.763" level="INFO">${url} = checklists/62c34c531c207e550fd35568</msg>
<status status="PASS" starttime="20220704 20:23:47.762" endtime="20220704 20:23:47.763"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:47.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.763" endtime="20220704 20:23:47.869"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.870" endtime="20220704 20:23:47.870"/>
</return>
<msg timestamp="20220704 20:23:47.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.762" endtime="20220704 20:23:47.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:47.870" endtime="20220704 20:23:47.870"/>
</return>
<status status="PASS" starttime="20220704 20:23:47.751" endtime="20220704 20:23:47.870"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 20:23:47.507" endtime="20220704 20:23:47.870"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:47.872" level="INFO">${url} = boards/62c34c5276c32085ff72febb</msg>
<status status="PASS" starttime="20220704 20:23:47.872" endtime="20220704 20:23:47.872"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:48.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.873" endtime="20220704 20:23:48.211"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.211" endtime="20220704 20:23:48.211"/>
</return>
<msg timestamp="20220704 20:23:48.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:47.872" endtime="20220704 20:23:48.212"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.212" endtime="20220704 20:23:48.212"/>
</return>
<status status="PASS" starttime="20220704 20:23:47.871" endtime="20220704 20:23:48.212"/>
</kw>
<status status="PASS" starttime="20220704 20:23:47.871" endtime="20220704 20:23:48.212"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 20:23:48.212" endtime="20220704 20:23:48.213"/>
</kw>
<status status="PASS" starttime="20220704 20:23:47.871" endtime="20220704 20:23:48.214"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 20:23:46.457" endtime="20220704 20:23:48.214"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 20:23:48.224" endtime="20220704 20:23:48.225"/>
</kw>
<status status="PASS" starttime="20220704 20:23:48.224" endtime="20220704 20:23:48.225"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:48.226" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:48.226" endtime="20220704 20:23:48.226"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:48.226" endtime="20220704 20:23:48.226"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:48.227" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:23:48.226" endtime="20220704 20:23:48.227"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:48.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.227" endtime="20220704 20:23:48.435"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.435" endtime="20220704 20:23:48.435"/>
</return>
<msg timestamp="20220704 20:23:48.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.225" endtime="20220704 20:23:48.435"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.435" endtime="20220704 20:23:48.435"/>
</return>
<msg timestamp="20220704 20:23:48.436" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.225" endtime="20220704 20:23:48.436"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:23:48.437" level="INFO">${TEST_SUITE_BOARD_ID} = 62c34c5444773a811855cb5e</msg>
<status status="PASS" starttime="20220704 20:23:48.436" endtime="20220704 20:23:48.437"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:48.484" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.437" endtime="20220704 20:23:48.484"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:23:48.486" level="INFO">${TEST_SUITE_LIST_ID} = 62c34c5444773a811855cb65</msg>
<status status="PASS" starttime="20220704 20:23:48.485" endtime="20220704 20:23:48.486"/>
</kw>
<status status="PASS" starttime="20220704 20:23:48.225" endtime="20220704 20:23:48.486"/>
</kw>
<status status="PASS" starttime="20220704 20:23:48.224" endtime="20220704 20:23:48.486"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:48.487" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:48.487" endtime="20220704 20:23:48.488"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:48.488" endtime="20220704 20:23:48.488"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:48.488" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 20:23:48.488" endtime="20220704 20:23:48.489"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:48.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.489" endtime="20220704 20:23:48.573"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.573" endtime="20220704 20:23:48.573"/>
</return>
<msg timestamp="20220704 20:23:48.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.487" endtime="20220704 20:23:48.573"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.573" endtime="20220704 20:23:48.573"/>
</return>
<msg timestamp="20220704 20:23:48.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.487" endtime="20220704 20:23:48.574"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:48.574" endtime="20220704 20:23:48.576"/>
</kw>
<status status="PASS" starttime="20220704 20:23:48.574" endtime="20220704 20:23:48.576"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:48.577" endtime="20220704 20:23:48.577"/>
</return>
<msg timestamp="20220704 20:23:48.577" level="INFO">${LABEL_ID} = 62c34c5465524b39fac44779</msg>
<status status="PASS" starttime="20220704 20:23:48.576" endtime="20220704 20:23:48.577"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:48.578" level="INFO">${url} = labels/62c34c5465524b39fac44779</msg>
<status status="PASS" starttime="20220704 20:23:48.578" endtime="20220704 20:23:48.578"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:48.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.579" endtime="20220704 20:23:48.624"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.624" endtime="20220704 20:23:48.624"/>
</return>
<msg timestamp="20220704 20:23:48.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.578" endtime="20220704 20:23:48.624"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.624" endtime="20220704 20:23:48.624"/>
</return>
<msg timestamp="20220704 20:23:48.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.577" endtime="20220704 20:23:48.625"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:48.625" endtime="20220704 20:23:48.625"/>
</return>
<msg timestamp="20220704 20:23:48.626" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 20:23:48.625" endtime="20220704 20:23:48.626"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:48.626" endtime="20220704 20:23:48.626"/>
</return>
<msg timestamp="20220704 20:23:48.627" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 20:23:48.626" endtime="20220704 20:23:48.627"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:48.627" endtime="20220704 20:23:48.627"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:48.628" endtime="20220704 20:23:48.628"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:48.629" level="INFO">${url} = labels/62c34c5465524b39fac44779</msg>
<status status="PASS" starttime="20220704 20:23:48.629" endtime="20220704 20:23:48.629"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:48.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.629" endtime="20220704 20:23:48.747"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.747" endtime="20220704 20:23:48.747"/>
</return>
<msg timestamp="20220704 20:23:48.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.629" endtime="20220704 20:23:48.747"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.747" endtime="20220704 20:23:48.747"/>
</return>
<status status="PASS" starttime="20220704 20:23:48.628" endtime="20220704 20:23:48.747"/>
</kw>
<status status="PASS" starttime="20220704 20:23:48.628" endtime="20220704 20:23:48.747"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:23:48.486" endtime="20220704 20:23:48.747"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:48.750" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:48.749" endtime="20220704 20:23:48.750"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:48.750" endtime="20220704 20:23:48.750"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:48.751" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 20:23:48.750" endtime="20220704 20:23:48.751"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:48.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.751" endtime="20220704 20:23:48.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.835" endtime="20220704 20:23:48.835"/>
</return>
<msg timestamp="20220704 20:23:48.836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.749" endtime="20220704 20:23:48.836"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.836" endtime="20220704 20:23:48.836"/>
</return>
<msg timestamp="20220704 20:23:48.836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.748" endtime="20220704 20:23:48.836"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:48.836" endtime="20220704 20:23:48.838"/>
</kw>
<status status="PASS" starttime="20220704 20:23:48.836" endtime="20220704 20:23:48.838"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:48.839" endtime="20220704 20:23:48.839"/>
</return>
<msg timestamp="20220704 20:23:48.840" level="INFO">${LABEL_ID} = 62c34c5498d75255693efe71</msg>
<status status="PASS" starttime="20220704 20:23:48.839" endtime="20220704 20:23:48.840"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:48.841" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:48.841" endtime="20220704 20:23:48.841"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:48.841" endtime="20220704 20:23:48.841"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:48.842" level="INFO">${url} = labels/62c34c5498d75255693efe71</msg>
<status status="PASS" starttime="20220704 20:23:48.841" endtime="20220704 20:23:48.842"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:48.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.842" endtime="20220704 20:23:48.938"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.939" endtime="20220704 20:23:48.939"/>
</return>
<msg timestamp="20220704 20:23:48.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.840" endtime="20220704 20:23:48.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:48.939" endtime="20220704 20:23:48.939"/>
</return>
<msg timestamp="20220704 20:23:48.939" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.840" endtime="20220704 20:23:48.939"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:48.940" endtime="20220704 20:23:48.940"/>
</return>
<msg timestamp="20220704 20:23:48.940" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 20:23:48.939" endtime="20220704 20:23:48.940"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:48.941" endtime="20220704 20:23:48.941"/>
</return>
<msg timestamp="20220704 20:23:48.942" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 20:23:48.940" endtime="20220704 20:23:48.942"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:48.942" endtime="20220704 20:23:48.942"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:48.942" endtime="20220704 20:23:48.942"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:48.944" level="INFO">${url} = labels/62c34c5498d75255693efe71</msg>
<status status="PASS" starttime="20220704 20:23:48.944" endtime="20220704 20:23:48.944"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:49.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.944" endtime="20220704 20:23:49.048"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.048" endtime="20220704 20:23:49.048"/>
</return>
<msg timestamp="20220704 20:23:49.049" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:48.943" endtime="20220704 20:23:49.049"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.049" endtime="20220704 20:23:49.049"/>
</return>
<status status="PASS" starttime="20220704 20:23:48.943" endtime="20220704 20:23:49.049"/>
</kw>
<status status="PASS" starttime="20220704 20:23:48.943" endtime="20220704 20:23:49.049"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:23:48.748" endtime="20220704 20:23:49.049"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:49.051" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:49.051" endtime="20220704 20:23:49.051"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:49.051" endtime="20220704 20:23:49.052"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:49.052" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 20:23:49.052" endtime="20220704 20:23:49.052"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:49.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.052" endtime="20220704 20:23:49.136"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.136" endtime="20220704 20:23:49.136"/>
</return>
<msg timestamp="20220704 20:23:49.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.051" endtime="20220704 20:23:49.136"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.136" endtime="20220704 20:23:49.136"/>
</return>
<msg timestamp="20220704 20:23:49.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.050" endtime="20220704 20:23:49.137"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:23:49.137" endtime="20220704 20:23:49.137"/>
</return>
<msg timestamp="20220704 20:23:49.138" level="INFO">${LABEL_ID} = 62c34c55d7594d2e4a04f68b</msg>
<status status="PASS" starttime="20220704 20:23:49.137" endtime="20220704 20:23:49.138"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:49.140" level="INFO">${url} = labels/62c34c55d7594d2e4a04f68b</msg>
<status status="PASS" starttime="20220704 20:23:49.139" endtime="20220704 20:23:49.140"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:49.239" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.140" endtime="20220704 20:23:49.239"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.239" endtime="20220704 20:23:49.240"/>
</return>
<msg timestamp="20220704 20:23:49.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.139" endtime="20220704 20:23:49.240"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.240" endtime="20220704 20:23:49.240"/>
</return>
<status status="PASS" starttime="20220704 20:23:49.138" endtime="20220704 20:23:49.240"/>
</kw>
<status status="PASS" starttime="20220704 20:23:49.138" endtime="20220704 20:23:49.240"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:49.242" level="INFO">${url} = labels/62c34c55d7594d2e4a04f68b</msg>
<status status="PASS" starttime="20220704 20:23:49.241" endtime="20220704 20:23:49.242"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:49.277" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:23:49.242" endtime="20220704 20:23:49.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.278" endtime="20220704 20:23:49.278"/>
</return>
<msg timestamp="20220704 20:23:49.278" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:23:49.241" endtime="20220704 20:23:49.278"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.278" endtime="20220704 20:23:49.278"/>
</return>
<status status="PASS" starttime="20220704 20:23:49.240" endtime="20220704 20:23:49.278"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:23:49.049" endtime="20220704 20:23:49.278"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:49.281" level="INFO">${url} = boards/62c34c5444773a811855cb5e</msg>
<status status="PASS" starttime="20220704 20:23:49.280" endtime="20220704 20:23:49.281"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:49.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.281" endtime="20220704 20:23:49.615"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.615" endtime="20220704 20:23:49.615"/>
</return>
<msg timestamp="20220704 20:23:49.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.280" endtime="20220704 20:23:49.615"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.615" endtime="20220704 20:23:49.615"/>
</return>
<status status="PASS" starttime="20220704 20:23:49.280" endtime="20220704 20:23:49.615"/>
</kw>
<status status="PASS" starttime="20220704 20:23:49.280" endtime="20220704 20:23:49.615"/>
</kw>
<status status="PASS" starttime="20220704 20:23:49.279" endtime="20220704 20:23:49.615"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 20:23:49.616" endtime="20220704 20:23:49.617"/>
</kw>
<status status="PASS" starttime="20220704 20:23:49.279" endtime="20220704 20:23:49.617"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 20:23:48.215" endtime="20220704 20:23:49.617"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 20:23:49.627" endtime="20220704 20:23:49.628"/>
</kw>
<status status="PASS" starttime="20220704 20:23:49.627" endtime="20220704 20:23:49.628"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:49.629" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:49.629" endtime="20220704 20:23:49.629"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:49.629" endtime="20220704 20:23:49.629"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:49.630" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:23:49.629" endtime="20220704 20:23:49.630"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:49.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.630" endtime="20220704 20:23:49.808"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.808" endtime="20220704 20:23:49.808"/>
</return>
<msg timestamp="20220704 20:23:49.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.628" endtime="20220704 20:23:49.808"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.808" endtime="20220704 20:23:49.808"/>
</return>
<msg timestamp="20220704 20:23:49.809" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.628" endtime="20220704 20:23:49.809"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:23:49.810" level="INFO">${TEST_SUITE_BOARD_ID} = 62c34c557db028809f677912</msg>
<status status="PASS" starttime="20220704 20:23:49.809" endtime="20220704 20:23:49.810"/>
</kw>
<status status="PASS" starttime="20220704 20:23:49.809" endtime="20220704 20:23:49.810"/>
</kw>
<status status="PASS" starttime="20220704 20:23:49.628" endtime="20220704 20:23:49.810"/>
</kw>
<status status="PASS" starttime="20220704 20:23:49.627" endtime="20220704 20:23:49.810"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:49.812" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:49.812" endtime="20220704 20:23:49.812"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:49.812" endtime="20220704 20:23:49.812"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:49.813" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 20:23:49.813" endtime="20220704 20:23:49.813"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:49.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.813" endtime="20220704 20:23:49.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.939" endtime="20220704 20:23:49.939"/>
</return>
<msg timestamp="20220704 20:23:49.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.811" endtime="20220704 20:23:49.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:49.939" endtime="20220704 20:23:49.940"/>
</return>
<msg timestamp="20220704 20:23:49.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.811" endtime="20220704 20:23:49.940"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:49.940" endtime="20220704 20:23:49.942"/>
</kw>
<status status="PASS" starttime="20220704 20:23:49.940" endtime="20220704 20:23:49.942"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:23:49.810" endtime="20220704 20:23:49.942"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:49.945" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:49.945" endtime="20220704 20:23:49.945"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:49.945" endtime="20220704 20:23:49.945"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:49.946" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 20:23:49.945" endtime="20220704 20:23:49.946"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:50.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.946" endtime="20220704 20:23:50.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.038" endtime="20220704 20:23:50.038"/>
</return>
<msg timestamp="20220704 20:23:50.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.944" endtime="20220704 20:23:50.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.039" endtime="20220704 20:23:50.039"/>
</return>
<msg timestamp="20220704 20:23:50.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:49.944" endtime="20220704 20:23:50.039"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:50.039" endtime="20220704 20:23:50.041"/>
</kw>
<status status="PASS" starttime="20220704 20:23:50.039" endtime="20220704 20:23:50.041"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:50.043" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:50.042" endtime="20220704 20:23:50.043"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:50.043" endtime="20220704 20:23:50.043"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:50.043" level="INFO">${url} = lists/62c34c569ce12514c4daebf4</msg>
<status status="PASS" starttime="20220704 20:23:50.043" endtime="20220704 20:23:50.043"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:50.126" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.043" endtime="20220704 20:23:50.126"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.126" endtime="20220704 20:23:50.126"/>
</return>
<msg timestamp="20220704 20:23:50.126" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.042" endtime="20220704 20:23:50.126"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.126" endtime="20220704 20:23:50.126"/>
</return>
<status status="PASS" starttime="20220704 20:23:50.041" endtime="20220704 20:23:50.127"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:50.128" level="INFO">${url} = lists/62c34c569ce12514c4daebf4</msg>
<status status="PASS" starttime="20220704 20:23:50.128" endtime="20220704 20:23:50.128"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:50.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.129" endtime="20220704 20:23:50.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.175" endtime="20220704 20:23:50.175"/>
</return>
<msg timestamp="20220704 20:23:50.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.128" endtime="20220704 20:23:50.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.176" endtime="20220704 20:23:50.176"/>
</return>
<msg timestamp="20220704 20:23:50.176" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.127" endtime="20220704 20:23:50.176"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:23:50.176" endtime="20220704 20:23:50.178"/>
</kw>
<status status="PASS" starttime="20220704 20:23:50.176" endtime="20220704 20:23:50.178"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:23:50.178" endtime="20220704 20:23:50.179"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 20:23:49.943" endtime="20220704 20:23:50.179"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:50.182" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:50.182" endtime="20220704 20:23:50.182"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:50.182" endtime="20220704 20:23:50.182"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:50.183" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 20:23:50.183" endtime="20220704 20:23:50.183"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:50.274" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.183" endtime="20220704 20:23:50.274"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.274" endtime="20220704 20:23:50.274"/>
</return>
<msg timestamp="20220704 20:23:50.274" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.181" endtime="20220704 20:23:50.274"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.274" endtime="20220704 20:23:50.274"/>
</return>
<msg timestamp="20220704 20:23:50.274" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.180" endtime="20220704 20:23:50.274"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:23:50.276" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:23:50.276" endtime="20220704 20:23:50.276"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:23:50.276" endtime="20220704 20:23:50.277"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:50.277" level="INFO">${url} = lists/62c34c5680650a212eca2f2b/closed</msg>
<status status="PASS" starttime="20220704 20:23:50.277" endtime="20220704 20:23:50.277"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:23:50.361" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.277" endtime="20220704 20:23:50.361"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.362" endtime="20220704 20:23:50.362"/>
</return>
<msg timestamp="20220704 20:23:50.362" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.275" endtime="20220704 20:23:50.362"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.362" endtime="20220704 20:23:50.362"/>
</return>
<status status="PASS" starttime="20220704 20:23:50.274" endtime="20220704 20:23:50.362"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:50.364" level="INFO">${url} = lists/62c34c5680650a212eca2f2b</msg>
<status status="PASS" starttime="20220704 20:23:50.364" endtime="20220704 20:23:50.364"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:23:50.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.364" endtime="20220704 20:23:50.408"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.408" endtime="20220704 20:23:50.409"/>
</return>
<msg timestamp="20220704 20:23:50.409" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.363" endtime="20220704 20:23:50.409"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.409" endtime="20220704 20:23:50.409"/>
</return>
<msg timestamp="20220704 20:23:50.409" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.362" endtime="20220704 20:23:50.409"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 20:23:50.409" endtime="20220704 20:23:50.410"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 20:23:50.179" endtime="20220704 20:23:50.410"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:23:50.413" level="INFO">${url} = boards/62c34c557db028809f677912</msg>
<status status="PASS" starttime="20220704 20:23:50.413" endtime="20220704 20:23:50.413"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:23:50.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.413" endtime="20220704 20:23:50.726"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.726" endtime="20220704 20:23:50.727"/>
</return>
<msg timestamp="20220704 20:23:50.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:23:50.412" endtime="20220704 20:23:50.727"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:23:50.727" endtime="20220704 20:23:50.727"/>
</return>
<status status="PASS" starttime="20220704 20:23:50.412" endtime="20220704 20:23:50.727"/>
</kw>
<status status="PASS" starttime="20220704 20:23:50.412" endtime="20220704 20:23:50.727"/>
</kw>
<status status="PASS" starttime="20220704 20:23:50.411" endtime="20220704 20:23:50.727"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 20:23:50.727" endtime="20220704 20:23:50.728"/>
</kw>
<status status="PASS" starttime="20220704 20:23:50.411" endtime="20220704 20:23:50.729"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 20:23:49.618" endtime="20220704 20:23:50.729"/>
</suite>
<status status="PASS" starttime="20220704 20:23:40.953" endtime="20220704 20:23:50.730"/>
</suite>
<status status="PASS" starttime="20220704 20:23:40.936" endtime="20220704 20:23:50.732"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
