<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220707 04:02:49.673" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:02:49.805" endtime="20220707 04:02:49.805"/>
</kw>
<status status="PASS" starttime="20220707 04:02:49.804" endtime="20220707 04:02:49.805"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:49.807" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:49.807" endtime="20220707 04:02:49.807"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:49.808" endtime="20220707 04:02:49.808"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:49.809" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:02:49.808" endtime="20220707 04:02:49.809"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:50.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:49.809" endtime="20220707 04:02:50.008"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:50.008" endtime="20220707 04:02:50.008"/>
</return>
<msg timestamp="20220707 04:02:50.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:49.807" endtime="20220707 04:02:50.008"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:50.008" endtime="20220707 04:02:50.008"/>
</return>
<msg timestamp="20220707 04:02:50.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:49.806" endtime="20220707 04:02:50.009"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:50.010" endtime="20220707 04:02:50.015"/>
</kw>
<status status="PASS" starttime="20220707 04:02:50.009" endtime="20220707 04:02:50.015"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:50.018" level="INFO">${url} = boards/62c65ae99430a180a87aa1af</msg>
<status status="PASS" starttime="20220707 04:02:50.017" endtime="20220707 04:02:50.018"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:50.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:50.018" endtime="20220707 04:02:50.335"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:50.335" endtime="20220707 04:02:50.335"/>
</return>
<msg timestamp="20220707 04:02:50.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:50.017" endtime="20220707 04:02:50.335"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:50.335" endtime="20220707 04:02:50.335"/>
</return>
<status status="PASS" starttime="20220707 04:02:50.016" endtime="20220707 04:02:50.336"/>
</kw>
<status status="PASS" starttime="20220707 04:02:50.016" endtime="20220707 04:02:50.336"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:02:49.806" endtime="20220707 04:02:50.336"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:50.338" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:50.338" endtime="20220707 04:02:50.338"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:50.338" endtime="20220707 04:02:50.338"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:50.339" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:02:50.338" endtime="20220707 04:02:50.339"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:50.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:50.339" endtime="20220707 04:02:50.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:50.523" endtime="20220707 04:02:50.523"/>
</return>
<msg timestamp="20220707 04:02:50.524" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:50.337" endtime="20220707 04:02:50.524"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:50.524" endtime="20220707 04:02:50.524"/>
</return>
<msg timestamp="20220707 04:02:50.524" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:50.337" endtime="20220707 04:02:50.524"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:50.525" endtime="20220707 04:02:50.531"/>
</kw>
<status status="PASS" starttime="20220707 04:02:50.524" endtime="20220707 04:02:50.531"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:50.533" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:50.533" endtime="20220707 04:02:50.533"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:50.533" endtime="20220707 04:02:50.533"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:50.534" level="INFO">${url} = boards/62c65aea0162485ca6cc5ed6</msg>
<status status="PASS" starttime="20220707 04:02:50.533" endtime="20220707 04:02:50.534"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:50.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:50.534" endtime="20220707 04:02:50.616"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:50.616" endtime="20220707 04:02:50.616"/>
</return>
<msg timestamp="20220707 04:02:50.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:50.532" endtime="20220707 04:02:50.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:50.617" endtime="20220707 04:02:50.617"/>
</return>
<status status="PASS" starttime="20220707 04:02:50.531" endtime="20220707 04:02:50.617"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:50.620" level="INFO">${url} = boards/62c65aea0162485ca6cc5ed6</msg>
<status status="PASS" starttime="20220707 04:02:50.620" endtime="20220707 04:02:50.620"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:50.669" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:50.620" endtime="20220707 04:02:50.669"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:50.669" endtime="20220707 04:02:50.669"/>
</return>
<msg timestamp="20220707 04:02:50.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:50.619" endtime="20220707 04:02:50.670"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:50.670" endtime="20220707 04:02:50.670"/>
</return>
<msg timestamp="20220707 04:02:50.670" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:50.617" endtime="20220707 04:02:50.670"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:50.671" endtime="20220707 04:02:50.675"/>
</kw>
<status status="PASS" starttime="20220707 04:02:50.670" endtime="20220707 04:02:50.675"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:02:50.675" endtime="20220707 04:02:50.676"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:50.678" level="INFO">${url} = boards/62c65aea0162485ca6cc5ed6</msg>
<status status="PASS" starttime="20220707 04:02:50.678" endtime="20220707 04:02:50.678"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:51.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:50.678" endtime="20220707 04:02:51.001"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:51.001" endtime="20220707 04:02:51.001"/>
</return>
<msg timestamp="20220707 04:02:51.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:50.677" endtime="20220707 04:02:51.001"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:51.001" endtime="20220707 04:02:51.001"/>
</return>
<status status="PASS" starttime="20220707 04:02:50.676" endtime="20220707 04:02:51.002"/>
</kw>
<status status="PASS" starttime="20220707 04:02:50.676" endtime="20220707 04:02:51.002"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:02:50.336" endtime="20220707 04:02:51.002"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:51.005" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:51.005" endtime="20220707 04:02:51.005"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:51.005" endtime="20220707 04:02:51.005"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:51.006" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:02:51.005" endtime="20220707 04:02:51.006"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:51.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:51.006" endtime="20220707 04:02:51.171"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:51.171" endtime="20220707 04:02:51.172"/>
</return>
<msg timestamp="20220707 04:02:51.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:51.004" endtime="20220707 04:02:51.172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:51.172" endtime="20220707 04:02:51.172"/>
</return>
<msg timestamp="20220707 04:02:51.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:51.003" endtime="20220707 04:02:51.172"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:51.176" level="INFO">${url} = boards/62c65aeb2a14d625f02fc935</msg>
<status status="PASS" starttime="20220707 04:02:51.175" endtime="20220707 04:02:51.176"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:52.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:51.176" endtime="20220707 04:02:52.834"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:52.834" endtime="20220707 04:02:52.834"/>
</return>
<msg timestamp="20220707 04:02:52.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:51.174" endtime="20220707 04:02:52.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:52.835" endtime="20220707 04:02:52.835"/>
</return>
<status status="PASS" starttime="20220707 04:02:51.173" endtime="20220707 04:02:52.835"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:52.838" level="INFO">${url} = boards/62c65aeb2a14d625f02fc935</msg>
<status status="PASS" starttime="20220707 04:02:52.838" endtime="20220707 04:02:52.838"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:52.869" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:02:52.838" endtime="20220707 04:02:52.869"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:52.869" endtime="20220707 04:02:52.869"/>
</return>
<msg timestamp="20220707 04:02:52.870" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:02:52.837" endtime="20220707 04:02:52.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:52.870" endtime="20220707 04:02:52.870"/>
</return>
<status status="PASS" starttime="20220707 04:02:52.835" endtime="20220707 04:02:52.870"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:02:51.003" endtime="20220707 04:02:52.870"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:52.873" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:52.873" endtime="20220707 04:02:52.873"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:52.874" endtime="20220707 04:02:52.874"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:52.875" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:02:52.874" endtime="20220707 04:02:52.875"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:53.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:52.876" endtime="20220707 04:02:53.033"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.033" endtime="20220707 04:02:53.033"/>
</return>
<msg timestamp="20220707 04:02:53.033" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:52.872" endtime="20220707 04:02:53.033"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.033" endtime="20220707 04:02:53.033"/>
</return>
<msg timestamp="20220707 04:02:53.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:52.872" endtime="20220707 04:02:53.034"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:53.035" endtime="20220707 04:02:53.042"/>
</kw>
<status status="PASS" starttime="20220707 04:02:53.034" endtime="20220707 04:02:53.042"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:53.044" level="INFO">${url} = boards/62c65aecdb9c093772e030bb</msg>
<status status="PASS" starttime="20220707 04:02:53.043" endtime="20220707 04:02:53.044"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:53.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.044" endtime="20220707 04:02:53.089"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.089" endtime="20220707 04:02:53.089"/>
</return>
<msg timestamp="20220707 04:02:53.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.043" endtime="20220707 04:02:53.089"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.089" endtime="20220707 04:02:53.089"/>
</return>
<msg timestamp="20220707 04:02:53.090" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.042" endtime="20220707 04:02:53.090"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:53.091" endtime="20220707 04:02:53.094"/>
</kw>
<status status="PASS" starttime="20220707 04:02:53.090" endtime="20220707 04:02:53.094"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:02:53.094" endtime="20220707 04:02:53.095"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:53.097" level="INFO">${url} = boards/62c65aecdb9c093772e030bb</msg>
<status status="PASS" starttime="20220707 04:02:53.096" endtime="20220707 04:02:53.097"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:53.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.097" endtime="20220707 04:02:53.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.390" endtime="20220707 04:02:53.390"/>
</return>
<msg timestamp="20220707 04:02:53.391" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.096" endtime="20220707 04:02:53.391"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.391" endtime="20220707 04:02:53.391"/>
</return>
<status status="PASS" starttime="20220707 04:02:53.095" endtime="20220707 04:02:53.391"/>
</kw>
<status status="PASS" starttime="20220707 04:02:53.095" endtime="20220707 04:02:53.392"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:02:52.871" endtime="20220707 04:02:53.392"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:53.395" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:53.395" endtime="20220707 04:02:53.395"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:53.396" endtime="20220707 04:02:53.396"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:53.397" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:02:53.396" endtime="20220707 04:02:53.397"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:53.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.397" endtime="20220707 04:02:53.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.547" endtime="20220707 04:02:53.547"/>
</return>
<msg timestamp="20220707 04:02:53.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.394" endtime="20220707 04:02:53.548"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.548" endtime="20220707 04:02:53.548"/>
</return>
<msg timestamp="20220707 04:02:53.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.393" endtime="20220707 04:02:53.548"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:53.548" endtime="20220707 04:02:53.552"/>
</kw>
<status status="PASS" starttime="20220707 04:02:53.548" endtime="20220707 04:02:53.552"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:53.554" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:53.554" endtime="20220707 04:02:53.554"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:53.554" endtime="20220707 04:02:53.554"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:53.555" level="INFO">${url} = boards/62c65aedf0ae3d57bfd6dd3f</msg>
<status status="PASS" starttime="20220707 04:02:53.555" endtime="20220707 04:02:53.555"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:53.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.555" endtime="20220707 04:02:53.651"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.651" endtime="20220707 04:02:53.651"/>
</return>
<msg timestamp="20220707 04:02:53.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.553" endtime="20220707 04:02:53.651"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.651" endtime="20220707 04:02:53.651"/>
</return>
<status status="PASS" starttime="20220707 04:02:53.553" endtime="20220707 04:02:53.652"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:53.655" level="INFO">${url} = boards/62c65aedf0ae3d57bfd6dd3f</msg>
<status status="PASS" starttime="20220707 04:02:53.654" endtime="20220707 04:02:53.655"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:53.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.655" endtime="20220707 04:02:53.701"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.701" endtime="20220707 04:02:53.701"/>
</return>
<msg timestamp="20220707 04:02:53.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.653" endtime="20220707 04:02:53.702"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.702" endtime="20220707 04:02:53.702"/>
</return>
<msg timestamp="20220707 04:02:53.702" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.652" endtime="20220707 04:02:53.702"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:02:53.702" endtime="20220707 04:02:53.704"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:53.707" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:53.707" endtime="20220707 04:02:53.707"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:53.707" endtime="20220707 04:02:53.708"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:53.708" level="INFO">${url} = boards/62c65aedf0ae3d57bfd6dd3f</msg>
<status status="PASS" starttime="20220707 04:02:53.708" endtime="20220707 04:02:53.708"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:53.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.709" endtime="20220707 04:02:53.808"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.808" endtime="20220707 04:02:53.808"/>
</return>
<msg timestamp="20220707 04:02:53.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.705" endtime="20220707 04:02:53.808"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.809" endtime="20220707 04:02:53.809"/>
</return>
<status status="PASS" starttime="20220707 04:02:53.704" endtime="20220707 04:02:53.809"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:53.811" level="INFO">${url} = boards/62c65aedf0ae3d57bfd6dd3f</msg>
<status status="PASS" starttime="20220707 04:02:53.811" endtime="20220707 04:02:53.811"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:53.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.811" endtime="20220707 04:02:53.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.847" endtime="20220707 04:02:53.847"/>
</return>
<msg timestamp="20220707 04:02:53.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.811" endtime="20220707 04:02:53.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:53.847" endtime="20220707 04:02:53.847"/>
</return>
<msg timestamp="20220707 04:02:53.848" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.809" endtime="20220707 04:02:53.848"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:02:53.848" endtime="20220707 04:02:53.849"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:53.851" level="INFO">${url} = boards/62c65aedf0ae3d57bfd6dd3f</msg>
<status status="PASS" starttime="20220707 04:02:53.851" endtime="20220707 04:02:53.851"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:54.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.852" endtime="20220707 04:02:54.171"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.171" endtime="20220707 04:02:54.171"/>
</return>
<msg timestamp="20220707 04:02:54.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:53.851" endtime="20220707 04:02:54.172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.172" endtime="20220707 04:02:54.172"/>
</return>
<status status="PASS" starttime="20220707 04:02:53.849" endtime="20220707 04:02:54.172"/>
</kw>
<status status="PASS" starttime="20220707 04:02:53.849" endtime="20220707 04:02:54.172"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:02:53.392" endtime="20220707 04:02:54.172"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220707 04:02:54.175" endtime="20220707 04:02:54.176"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220707 04:02:49.693" endtime="20220707 04:02:54.176"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:02:54.190" endtime="20220707 04:02:54.190"/>
</kw>
<status status="PASS" starttime="20220707 04:02:54.189" endtime="20220707 04:02:54.190"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:54.192" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:54.191" endtime="20220707 04:02:54.192"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:54.192" endtime="20220707 04:02:54.192"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:54.193" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:02:54.192" endtime="20220707 04:02:54.193"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:54.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.193" endtime="20220707 04:02:54.349"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.350" endtime="20220707 04:02:54.350"/>
</return>
<msg timestamp="20220707 04:02:54.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.191" endtime="20220707 04:02:54.350"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.350" endtime="20220707 04:02:54.350"/>
</return>
<msg timestamp="20220707 04:02:54.351" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.191" endtime="20220707 04:02:54.351"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:02:54.352" level="INFO">${TEST_SUITE_BOARD_ID} = 62c65aeecaf3de02aa20b44b</msg>
<status status="PASS" starttime="20220707 04:02:54.351" endtime="20220707 04:02:54.352"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:54.355" level="INFO">${url} = boards/62c65aeecaf3de02aa20b44b/lists/</msg>
<status status="PASS" starttime="20220707 04:02:54.354" endtime="20220707 04:02:54.355"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:54.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.355" endtime="20220707 04:02:54.404"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.404" endtime="20220707 04:02:54.404"/>
</return>
<msg timestamp="20220707 04:02:54.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.353" endtime="20220707 04:02:54.404"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.405" endtime="20220707 04:02:54.405"/>
</return>
<msg timestamp="20220707 04:02:54.405" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.353" endtime="20220707 04:02:54.405"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:02:54.406" level="INFO">${TEST_SUITE_LIST_ID} = 62c65aeecaf3de02aa20b452</msg>
<status status="PASS" starttime="20220707 04:02:54.405" endtime="20220707 04:02:54.406"/>
</kw>
<status status="PASS" starttime="20220707 04:02:54.190" endtime="20220707 04:02:54.407"/>
</kw>
<status status="PASS" starttime="20220707 04:02:54.189" endtime="20220707 04:02:54.407"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:54.409" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:54.409" endtime="20220707 04:02:54.409"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:54.409" endtime="20220707 04:02:54.409"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:54.410" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 04:02:54.409" endtime="20220707 04:02:54.410"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:54.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.410" endtime="20220707 04:02:54.568"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.568" endtime="20220707 04:02:54.568"/>
</return>
<msg timestamp="20220707 04:02:54.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.408" endtime="20220707 04:02:54.569"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.569" endtime="20220707 04:02:54.569"/>
</return>
<msg timestamp="20220707 04:02:54.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.408" endtime="20220707 04:02:54.569"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:54.570" endtime="20220707 04:02:54.575"/>
</kw>
<status status="PASS" starttime="20220707 04:02:54.569" endtime="20220707 04:02:54.575"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:54.576" endtime="20220707 04:02:54.576"/>
</return>
<msg timestamp="20220707 04:02:54.576" level="INFO">${CARD_ID} = 62c65aee4c8f1953b7eb4198</msg>
<status status="PASS" starttime="20220707 04:02:54.575" endtime="20220707 04:02:54.576"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:54.578" level="INFO">${url} = cards/62c65aee4c8f1953b7eb4198</msg>
<status status="PASS" starttime="20220707 04:02:54.577" endtime="20220707 04:02:54.578"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:54.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.578" endtime="20220707 04:02:54.628"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.628" endtime="20220707 04:02:54.628"/>
</return>
<msg timestamp="20220707 04:02:54.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.577" endtime="20220707 04:02:54.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.629" endtime="20220707 04:02:54.629"/>
</return>
<msg timestamp="20220707 04:02:54.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.576" endtime="20220707 04:02:54.629"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:54.630" endtime="20220707 04:02:54.630"/>
</return>
<msg timestamp="20220707 04:02:54.630" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220707 04:02:54.629" endtime="20220707 04:02:54.631"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:02:54.631" endtime="20220707 04:02:54.631"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:54.633" level="INFO">${url} = cards/62c65aee4c8f1953b7eb4198</msg>
<status status="PASS" starttime="20220707 04:02:54.632" endtime="20220707 04:02:54.633"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:54.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.633" endtime="20220707 04:02:54.791"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.791" endtime="20220707 04:02:54.791"/>
</return>
<msg timestamp="20220707 04:02:54.792" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.632" endtime="20220707 04:02:54.792"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.792" endtime="20220707 04:02:54.792"/>
</return>
<status status="PASS" starttime="20220707 04:02:54.631" endtime="20220707 04:02:54.792"/>
</kw>
<status status="PASS" starttime="20220707 04:02:54.631" endtime="20220707 04:02:54.792"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:02:54.407" endtime="20220707 04:02:54.792"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:54.795" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:54.795" endtime="20220707 04:02:54.795"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:54.795" endtime="20220707 04:02:54.795"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:54.796" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 04:02:54.795" endtime="20220707 04:02:54.796"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:54.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.796" endtime="20220707 04:02:54.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.946" endtime="20220707 04:02:54.946"/>
</return>
<msg timestamp="20220707 04:02:54.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.794" endtime="20220707 04:02:54.947"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:54.947" endtime="20220707 04:02:54.947"/>
</return>
<msg timestamp="20220707 04:02:54.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.793" endtime="20220707 04:02:54.947"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:54.947" endtime="20220707 04:02:54.947"/>
</return>
<msg timestamp="20220707 04:02:54.948" level="INFO">${CARD_ID} = 62c65aee7b0b6d233b1698ec</msg>
<status status="PASS" starttime="20220707 04:02:54.947" endtime="20220707 04:02:54.948"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:54.951" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:54.950" endtime="20220707 04:02:54.951"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:54.951" endtime="20220707 04:02:54.951"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:54.951" level="INFO">${url} = cards/62c65aee7b0b6d233b1698ec</msg>
<status status="PASS" starttime="20220707 04:02:54.951" endtime="20220707 04:02:54.951"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:55.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.951" endtime="20220707 04:02:55.061"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.061" endtime="20220707 04:02:55.061"/>
</return>
<msg timestamp="20220707 04:02:55.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.950" endtime="20220707 04:02:55.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.062" endtime="20220707 04:02:55.062"/>
</return>
<msg timestamp="20220707 04:02:55.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:54.949" endtime="20220707 04:02:55.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.062" endtime="20220707 04:02:55.063"/>
</return>
<status status="PASS" starttime="20220707 04:02:54.948" endtime="20220707 04:02:55.063"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:55.065" level="INFO">${url} = cards/62c65aee7b0b6d233b1698ec</msg>
<status status="PASS" starttime="20220707 04:02:55.065" endtime="20220707 04:02:55.065"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:55.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.065" endtime="20220707 04:02:55.113"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.113" endtime="20220707 04:02:55.113"/>
</return>
<msg timestamp="20220707 04:02:55.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.064" endtime="20220707 04:02:55.114"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.114" endtime="20220707 04:02:55.114"/>
</return>
<msg timestamp="20220707 04:02:55.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.063" endtime="20220707 04:02:55.114"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:55.115" endtime="20220707 04:02:55.115"/>
</return>
<msg timestamp="20220707 04:02:55.116" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220707 04:02:55.115" endtime="20220707 04:02:55.116"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 04:02:55.116" endtime="20220707 04:02:55.116"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:55.118" level="INFO">${url} = cards/62c65aee7b0b6d233b1698ec</msg>
<status status="PASS" starttime="20220707 04:02:55.118" endtime="20220707 04:02:55.118"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:55.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.118" endtime="20220707 04:02:55.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.313" endtime="20220707 04:02:55.313"/>
</return>
<msg timestamp="20220707 04:02:55.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.117" endtime="20220707 04:02:55.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.313" endtime="20220707 04:02:55.313"/>
</return>
<status status="PASS" starttime="20220707 04:02:55.117" endtime="20220707 04:02:55.314"/>
</kw>
<status status="PASS" starttime="20220707 04:02:55.117" endtime="20220707 04:02:55.314"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:02:54.793" endtime="20220707 04:02:55.314"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:55.318" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:55.318" endtime="20220707 04:02:55.318"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:55.319" endtime="20220707 04:02:55.319"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:55.320" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 04:02:55.319" endtime="20220707 04:02:55.320"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:55.467" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.320" endtime="20220707 04:02:55.467"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.468" endtime="20220707 04:02:55.468"/>
</return>
<msg timestamp="20220707 04:02:55.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.316" endtime="20220707 04:02:55.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.468" endtime="20220707 04:02:55.468"/>
</return>
<msg timestamp="20220707 04:02:55.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.316" endtime="20220707 04:02:55.469"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:55.469" endtime="20220707 04:02:55.469"/>
</return>
<msg timestamp="20220707 04:02:55.471" level="INFO">${CARD_ID} = 62c65aeff0e49c1e07c4a73f</msg>
<status status="PASS" starttime="20220707 04:02:55.469" endtime="20220707 04:02:55.471"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:55.472" level="INFO">${url} = cards/62c65aeff0e49c1e07c4a73f</msg>
<status status="PASS" starttime="20220707 04:02:55.472" endtime="20220707 04:02:55.472"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:55.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.472" endtime="20220707 04:02:55.625"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.625" endtime="20220707 04:02:55.625"/>
</return>
<msg timestamp="20220707 04:02:55.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.472" endtime="20220707 04:02:55.625"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.625" endtime="20220707 04:02:55.625"/>
</return>
<msg timestamp="20220707 04:02:55.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.471" endtime="20220707 04:02:55.626"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:55.627" endtime="20220707 04:02:55.630"/>
</kw>
<status status="PASS" starttime="20220707 04:02:55.626" endtime="20220707 04:02:55.630"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:55.633" level="INFO">${url} = cards/62c65aeff0e49c1e07c4a73f</msg>
<status status="PASS" starttime="20220707 04:02:55.632" endtime="20220707 04:02:55.633"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:55.663" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:02:55.633" endtime="20220707 04:02:55.663"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.663" endtime="20220707 04:02:55.663"/>
</return>
<msg timestamp="20220707 04:02:55.664" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:02:55.631" endtime="20220707 04:02:55.664"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.664" endtime="20220707 04:02:55.664"/>
</return>
<status status="PASS" starttime="20220707 04:02:55.631" endtime="20220707 04:02:55.664"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:02:55.315" endtime="20220707 04:02:55.664"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:55.667" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:55.667" endtime="20220707 04:02:55.667"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:55.667" endtime="20220707 04:02:55.668"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:55.669" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 04:02:55.668" endtime="20220707 04:02:55.669"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:55.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.669" endtime="20220707 04:02:55.809"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.809" endtime="20220707 04:02:55.809"/>
</return>
<msg timestamp="20220707 04:02:55.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.666" endtime="20220707 04:02:55.810"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.810" endtime="20220707 04:02:55.810"/>
</return>
<msg timestamp="20220707 04:02:55.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.665" endtime="20220707 04:02:55.810"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:55.811" endtime="20220707 04:02:55.811"/>
</return>
<msg timestamp="20220707 04:02:55.812" level="INFO">${CARD_ID} = 62c65aef04f9da7d1a454d11</msg>
<status status="PASS" starttime="20220707 04:02:55.810" endtime="20220707 04:02:55.812"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:55.815" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:55.815" endtime="20220707 04:02:55.815"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:55.815" endtime="20220707 04:02:55.815"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:55.816" level="INFO">${url} = cards/62c65aef04f9da7d1a454d11</msg>
<status status="PASS" starttime="20220707 04:02:55.815" endtime="20220707 04:02:55.816"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:55.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.816" endtime="20220707 04:02:55.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.994" endtime="20220707 04:02:55.994"/>
</return>
<msg timestamp="20220707 04:02:55.995" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.813" endtime="20220707 04:02:55.995"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:55.995" endtime="20220707 04:02:55.995"/>
</return>
<msg timestamp="20220707 04:02:55.995" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:55.813" endtime="20220707 04:02:55.995"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:55.996" endtime="20220707 04:02:56.002"/>
</kw>
<status status="PASS" starttime="20220707 04:02:55.995" endtime="20220707 04:02:56.002"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:56.003" level="INFO">${url} = cards/62c65aef04f9da7d1a454d11</msg>
<status status="PASS" starttime="20220707 04:02:56.003" endtime="20220707 04:02:56.003"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:56.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.003" endtime="20220707 04:02:56.048"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:56.048" endtime="20220707 04:02:56.048"/>
</return>
<msg timestamp="20220707 04:02:56.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.002" endtime="20220707 04:02:56.048"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:56.048" endtime="20220707 04:02:56.048"/>
</return>
<msg timestamp="20220707 04:02:56.049" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.002" endtime="20220707 04:02:56.049"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:56.049" endtime="20220707 04:02:56.049"/>
</return>
<msg timestamp="20220707 04:02:56.050" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220707 04:02:56.049" endtime="20220707 04:02:56.050"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:56.050" endtime="20220707 04:02:56.050"/>
</return>
<msg timestamp="20220707 04:02:56.051" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220707 04:02:56.050" endtime="20220707 04:02:56.051"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:02:56.051" endtime="20220707 04:02:56.051"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:02:56.051" endtime="20220707 04:02:56.052"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:56.053" level="INFO">${url} = cards/62c65aef04f9da7d1a454d11</msg>
<status status="PASS" starttime="20220707 04:02:56.053" endtime="20220707 04:02:56.053"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:56.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.053" endtime="20220707 04:02:56.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:56.195" endtime="20220707 04:02:56.195"/>
</return>
<msg timestamp="20220707 04:02:56.196" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.052" endtime="20220707 04:02:56.196"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:56.196" endtime="20220707 04:02:56.196"/>
</return>
<status status="PASS" starttime="20220707 04:02:56.052" endtime="20220707 04:02:56.196"/>
</kw>
<status status="PASS" starttime="20220707 04:02:56.052" endtime="20220707 04:02:56.196"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:02:55.665" endtime="20220707 04:02:56.196"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:56.201" level="INFO">${url} = boards/62c65aeecaf3de02aa20b44b</msg>
<status status="PASS" starttime="20220707 04:02:56.200" endtime="20220707 04:02:56.201"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:56.500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.201" endtime="20220707 04:02:56.500"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:56.500" endtime="20220707 04:02:56.500"/>
</return>
<msg timestamp="20220707 04:02:56.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.200" endtime="20220707 04:02:56.501"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:56.501" endtime="20220707 04:02:56.501"/>
</return>
<status status="PASS" starttime="20220707 04:02:56.198" endtime="20220707 04:02:56.501"/>
</kw>
<status status="PASS" starttime="20220707 04:02:56.198" endtime="20220707 04:02:56.501"/>
</kw>
<status status="PASS" starttime="20220707 04:02:56.198" endtime="20220707 04:02:56.502"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:02:56.502" endtime="20220707 04:02:56.503"/>
</kw>
<status status="PASS" starttime="20220707 04:02:56.197" endtime="20220707 04:02:56.504"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220707 04:02:54.178" endtime="20220707 04:02:56.504"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:02:56.515" endtime="20220707 04:02:56.515"/>
</kw>
<status status="PASS" starttime="20220707 04:02:56.515" endtime="20220707 04:02:56.515"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:56.516" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:56.516" endtime="20220707 04:02:56.516"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:56.516" endtime="20220707 04:02:56.517"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:56.517" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:02:56.517" endtime="20220707 04:02:56.517"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:56.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.517" endtime="20220707 04:02:56.671"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:56.671" endtime="20220707 04:02:56.671"/>
</return>
<msg timestamp="20220707 04:02:56.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.516" endtime="20220707 04:02:56.672"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:56.672" endtime="20220707 04:02:56.672"/>
</return>
<msg timestamp="20220707 04:02:56.672" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.515" endtime="20220707 04:02:56.672"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:02:56.674" level="INFO">${TEST_SUITE_BOARD_ID} = 62c65af0e0eb1c0c73563423</msg>
<status status="PASS" starttime="20220707 04:02:56.672" endtime="20220707 04:02:56.674"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:56.676" level="INFO">${url} = boards/62c65af0e0eb1c0c73563423/lists/</msg>
<status status="PASS" starttime="20220707 04:02:56.675" endtime="20220707 04:02:56.676"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:56.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.676" endtime="20220707 04:02:56.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:56.720" endtime="20220707 04:02:56.720"/>
</return>
<msg timestamp="20220707 04:02:56.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.675" endtime="20220707 04:02:56.721"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:56.721" endtime="20220707 04:02:56.721"/>
</return>
<msg timestamp="20220707 04:02:56.721" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.674" endtime="20220707 04:02:56.721"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:02:56.723" level="INFO">${TEST_SUITE_LIST_ID} = 62c65af0e0eb1c0c7356342a</msg>
<status status="PASS" starttime="20220707 04:02:56.722" endtime="20220707 04:02:56.723"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:56.726" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:56.725" endtime="20220707 04:02:56.726"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:56.726" endtime="20220707 04:02:56.727"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:56.727" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 04:02:56.727" endtime="20220707 04:02:56.727"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:56.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.728" endtime="20220707 04:02:56.887"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:56.887" endtime="20220707 04:02:56.887"/>
</return>
<msg timestamp="20220707 04:02:56.888" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.725" endtime="20220707 04:02:56.888"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:56.888" endtime="20220707 04:02:56.888"/>
</return>
<msg timestamp="20220707 04:02:56.888" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.723" endtime="20220707 04:02:56.888"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:02:56.889" level="INFO">${TEST_SUITE_CARD_ID} = 62c65af0ce42e5148e71bdc7</msg>
<status status="PASS" starttime="20220707 04:02:56.888" endtime="20220707 04:02:56.889"/>
</kw>
<status status="PASS" starttime="20220707 04:02:56.515" endtime="20220707 04:02:56.889"/>
</kw>
<status status="PASS" starttime="20220707 04:02:56.514" endtime="20220707 04:02:56.889"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:56.892" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:56.891" endtime="20220707 04:02:56.892"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:56.892" endtime="20220707 04:02:56.892"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:56.892" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 04:02:56.892" endtime="20220707 04:02:56.893"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:57.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.893" endtime="20220707 04:02:57.013"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.014" endtime="20220707 04:02:57.014"/>
</return>
<msg timestamp="20220707 04:02:57.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.891" endtime="20220707 04:02:57.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.014" endtime="20220707 04:02:57.014"/>
</return>
<msg timestamp="20220707 04:02:57.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:56.890" endtime="20220707 04:02:57.015"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:57.015" endtime="20220707 04:02:57.016"/>
</return>
<msg timestamp="20220707 04:02:57.017" level="INFO">${checklist_id} = 62c65af00c325587e1046d8e</msg>
<status status="PASS" starttime="20220707 04:02:57.015" endtime="20220707 04:02:57.017"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:57.019" level="INFO">${url} = checklists/62c65af00c325587e1046d8e</msg>
<status status="PASS" starttime="20220707 04:02:57.019" endtime="20220707 04:02:57.019"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:57.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.020" endtime="20220707 04:02:57.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.068" endtime="20220707 04:02:57.068"/>
</return>
<msg timestamp="20220707 04:02:57.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.018" endtime="20220707 04:02:57.068"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.068" endtime="20220707 04:02:57.068"/>
</return>
<msg timestamp="20220707 04:02:57.069" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.017" endtime="20220707 04:02:57.069"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:57.070" endtime="20220707 04:02:57.070"/>
</return>
<msg timestamp="20220707 04:02:57.071" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220707 04:02:57.069" endtime="20220707 04:02:57.071"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:02:57.071" endtime="20220707 04:02:57.071"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:57.073" level="INFO">${url} = checklists/62c65af00c325587e1046d8e</msg>
<status status="PASS" starttime="20220707 04:02:57.072" endtime="20220707 04:02:57.073"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:57.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.073" endtime="20220707 04:02:57.199"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.199" endtime="20220707 04:02:57.199"/>
</return>
<msg timestamp="20220707 04:02:57.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.072" endtime="20220707 04:02:57.199"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.199" endtime="20220707 04:02:57.199"/>
</return>
<status status="PASS" starttime="20220707 04:02:57.072" endtime="20220707 04:02:57.200"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:02:56.890" endtime="20220707 04:02:57.200"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:57.204" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:57.204" endtime="20220707 04:02:57.204"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:57.205" endtime="20220707 04:02:57.205"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:57.206" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 04:02:57.205" endtime="20220707 04:02:57.207"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:57.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.207" endtime="20220707 04:02:57.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.307" endtime="20220707 04:02:57.307"/>
</return>
<msg timestamp="20220707 04:02:57.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.203" endtime="20220707 04:02:57.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.308" endtime="20220707 04:02:57.308"/>
</return>
<msg timestamp="20220707 04:02:57.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.202" endtime="20220707 04:02:57.308"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:57.309" endtime="20220707 04:02:57.309"/>
</return>
<msg timestamp="20220707 04:02:57.311" level="INFO">${checklist_id} = 62c65af1c6cd6423a3e77525</msg>
<status status="PASS" starttime="20220707 04:02:57.308" endtime="20220707 04:02:57.311"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:57.313" level="INFO">${url} = checklists/62c65af1c6cd6423a3e77525</msg>
<status status="PASS" starttime="20220707 04:02:57.313" endtime="20220707 04:02:57.313"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:57.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.313" endtime="20220707 04:02:57.412"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.412" endtime="20220707 04:02:57.412"/>
</return>
<msg timestamp="20220707 04:02:57.413" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.312" endtime="20220707 04:02:57.413"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.413" endtime="20220707 04:02:57.413"/>
</return>
<msg timestamp="20220707 04:02:57.413" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.311" endtime="20220707 04:02:57.413"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:57.414" endtime="20220707 04:02:57.417"/>
</kw>
<status status="PASS" starttime="20220707 04:02:57.414" endtime="20220707 04:02:57.417"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:57.418" level="INFO">${url} = checklists/62c65af1c6cd6423a3e77525</msg>
<status status="PASS" starttime="20220707 04:02:57.418" endtime="20220707 04:02:57.418"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:57.446" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:02:57.418" endtime="20220707 04:02:57.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.447" endtime="20220707 04:02:57.447"/>
</return>
<msg timestamp="20220707 04:02:57.447" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:02:57.417" endtime="20220707 04:02:57.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.447" endtime="20220707 04:02:57.447"/>
</return>
<status status="PASS" starttime="20220707 04:02:57.417" endtime="20220707 04:02:57.448"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:02:57.201" endtime="20220707 04:02:57.448"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:57.452" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:57.451" endtime="20220707 04:02:57.452"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:57.452" endtime="20220707 04:02:57.453"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:57.454" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 04:02:57.453" endtime="20220707 04:02:57.454"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:57.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.454" endtime="20220707 04:02:57.587"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.587" endtime="20220707 04:02:57.587"/>
</return>
<msg timestamp="20220707 04:02:57.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.450" endtime="20220707 04:02:57.588"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.588" endtime="20220707 04:02:57.588"/>
</return>
<msg timestamp="20220707 04:02:57.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.450" endtime="20220707 04:02:57.588"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:57.589" endtime="20220707 04:02:57.589"/>
</return>
<msg timestamp="20220707 04:02:57.590" level="INFO">${checklist_id} = 62c65af18f7f491655ba8c92</msg>
<status status="PASS" starttime="20220707 04:02:57.589" endtime="20220707 04:02:57.590"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:57.591" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:57.591" endtime="20220707 04:02:57.591"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:57.591" endtime="20220707 04:02:57.591"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:57.591" level="INFO">${url} = checklists/62c65af18f7f491655ba8c92</msg>
<status status="PASS" starttime="20220707 04:02:57.591" endtime="20220707 04:02:57.591"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:57.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.592" endtime="20220707 04:02:57.655"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.655" endtime="20220707 04:02:57.655"/>
</return>
<msg timestamp="20220707 04:02:57.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.590" endtime="20220707 04:02:57.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.656" endtime="20220707 04:02:57.656"/>
</return>
<msg timestamp="20220707 04:02:57.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.590" endtime="20220707 04:02:57.656"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:57.658" level="INFO">${url} = checklists/62c65af18f7f491655ba8c92</msg>
<status status="PASS" starttime="20220707 04:02:57.658" endtime="20220707 04:02:57.658"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:57.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.659" endtime="20220707 04:02:57.701"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.701" endtime="20220707 04:02:57.701"/>
</return>
<msg timestamp="20220707 04:02:57.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.657" endtime="20220707 04:02:57.701"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.701" endtime="20220707 04:02:57.701"/>
</return>
<msg timestamp="20220707 04:02:57.702" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.656" endtime="20220707 04:02:57.702"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:57.702" endtime="20220707 04:02:57.703"/>
</return>
<msg timestamp="20220707 04:02:57.704" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220707 04:02:57.702" endtime="20220707 04:02:57.704"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:02:57.704" endtime="20220707 04:02:57.705"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:57.719" level="INFO">${url} = checklists/62c65af18f7f491655ba8c92</msg>
<status status="PASS" starttime="20220707 04:02:57.718" endtime="20220707 04:02:57.719"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:57.816" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.719" endtime="20220707 04:02:57.816"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.816" endtime="20220707 04:02:57.817"/>
</return>
<msg timestamp="20220707 04:02:57.817" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.718" endtime="20220707 04:02:57.817"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:57.817" endtime="20220707 04:02:57.817"/>
</return>
<status status="PASS" starttime="20220707 04:02:57.705" endtime="20220707 04:02:57.817"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:02:57.448" endtime="20220707 04:02:57.818"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:57.821" level="INFO">${url} = boards/62c65af0e0eb1c0c73563423</msg>
<status status="PASS" starttime="20220707 04:02:57.821" endtime="20220707 04:02:57.821"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:58.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.821" endtime="20220707 04:02:58.142"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.142" endtime="20220707 04:02:58.142"/>
</return>
<msg timestamp="20220707 04:02:58.143" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:57.820" endtime="20220707 04:02:58.143"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.143" endtime="20220707 04:02:58.143"/>
</return>
<status status="PASS" starttime="20220707 04:02:57.820" endtime="20220707 04:02:58.143"/>
</kw>
<status status="PASS" starttime="20220707 04:02:57.820" endtime="20220707 04:02:58.144"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:02:58.144" endtime="20220707 04:02:58.145"/>
</kw>
<status status="PASS" starttime="20220707 04:02:57.819" endtime="20220707 04:02:58.145"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220707 04:02:56.505" endtime="20220707 04:02:58.146"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:02:58.157" endtime="20220707 04:02:58.157"/>
</kw>
<status status="PASS" starttime="20220707 04:02:58.157" endtime="20220707 04:02:58.157"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:58.158" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:58.158" endtime="20220707 04:02:58.158"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:58.159" endtime="20220707 04:02:58.159"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:58.160" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:02:58.159" endtime="20220707 04:02:58.160"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:58.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.160" endtime="20220707 04:02:58.326"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.326" endtime="20220707 04:02:58.326"/>
</return>
<msg timestamp="20220707 04:02:58.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.158" endtime="20220707 04:02:58.327"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.327" endtime="20220707 04:02:58.327"/>
</return>
<msg timestamp="20220707 04:02:58.327" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.157" endtime="20220707 04:02:58.327"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:02:58.328" level="INFO">${TEST_SUITE_BOARD_ID} = 62c65af2e93e4a872be083e1</msg>
<status status="PASS" starttime="20220707 04:02:58.327" endtime="20220707 04:02:58.328"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:58.374" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.328" endtime="20220707 04:02:58.374"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:02:58.376" level="INFO">${TEST_SUITE_LIST_ID} = 62c65af2e93e4a872be083e8</msg>
<status status="PASS" starttime="20220707 04:02:58.374" endtime="20220707 04:02:58.376"/>
</kw>
<status status="PASS" starttime="20220707 04:02:58.157" endtime="20220707 04:02:58.376"/>
</kw>
<status status="PASS" starttime="20220707 04:02:58.156" endtime="20220707 04:02:58.376"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:58.379" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:58.379" endtime="20220707 04:02:58.379"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:58.379" endtime="20220707 04:02:58.379"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:58.380" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 04:02:58.379" endtime="20220707 04:02:58.380"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:58.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.380" endtime="20220707 04:02:58.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.460" endtime="20220707 04:02:58.460"/>
</return>
<msg timestamp="20220707 04:02:58.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.378" endtime="20220707 04:02:58.461"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.461" endtime="20220707 04:02:58.461"/>
</return>
<msg timestamp="20220707 04:02:58.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.378" endtime="20220707 04:02:58.461"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:58.461" endtime="20220707 04:02:58.463"/>
</kw>
<status status="PASS" starttime="20220707 04:02:58.461" endtime="20220707 04:02:58.463"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:58.464" endtime="20220707 04:02:58.464"/>
</return>
<msg timestamp="20220707 04:02:58.465" level="INFO">${LABEL_ID} = 62c65af2598bfa53edc50ab5</msg>
<status status="PASS" starttime="20220707 04:02:58.464" endtime="20220707 04:02:58.465"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:58.466" level="INFO">${url} = labels/62c65af2598bfa53edc50ab5</msg>
<status status="PASS" starttime="20220707 04:02:58.466" endtime="20220707 04:02:58.466"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:58.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.466" endtime="20220707 04:02:58.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.506" endtime="20220707 04:02:58.506"/>
</return>
<msg timestamp="20220707 04:02:58.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.465" endtime="20220707 04:02:58.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.507" endtime="20220707 04:02:58.507"/>
</return>
<msg timestamp="20220707 04:02:58.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.465" endtime="20220707 04:02:58.507"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:58.508" endtime="20220707 04:02:58.508"/>
</return>
<msg timestamp="20220707 04:02:58.509" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220707 04:02:58.507" endtime="20220707 04:02:58.509"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:58.510" endtime="20220707 04:02:58.510"/>
</return>
<msg timestamp="20220707 04:02:58.511" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220707 04:02:58.509" endtime="20220707 04:02:58.511"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:02:58.511" endtime="20220707 04:02:58.511"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:02:58.511" endtime="20220707 04:02:58.512"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:58.513" level="INFO">${url} = labels/62c65af2598bfa53edc50ab5</msg>
<status status="PASS" starttime="20220707 04:02:58.513" endtime="20220707 04:02:58.513"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:58.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.513" endtime="20220707 04:02:58.609"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.609" endtime="20220707 04:02:58.610"/>
</return>
<msg timestamp="20220707 04:02:58.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.512" endtime="20220707 04:02:58.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.610" endtime="20220707 04:02:58.610"/>
</return>
<status status="PASS" starttime="20220707 04:02:58.512" endtime="20220707 04:02:58.610"/>
</kw>
<status status="PASS" starttime="20220707 04:02:58.512" endtime="20220707 04:02:58.611"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:02:58.377" endtime="20220707 04:02:58.611"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:58.613" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:58.613" endtime="20220707 04:02:58.613"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:58.614" endtime="20220707 04:02:58.614"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:58.615" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 04:02:58.614" endtime="20220707 04:02:58.615"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:58.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.615" endtime="20220707 04:02:58.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.686" endtime="20220707 04:02:58.686"/>
</return>
<msg timestamp="20220707 04:02:58.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.613" endtime="20220707 04:02:58.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.686" endtime="20220707 04:02:58.687"/>
</return>
<msg timestamp="20220707 04:02:58.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.612" endtime="20220707 04:02:58.687"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:58.688" endtime="20220707 04:02:58.691"/>
</kw>
<status status="PASS" starttime="20220707 04:02:58.687" endtime="20220707 04:02:58.691"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:58.692" endtime="20220707 04:02:58.692"/>
</return>
<msg timestamp="20220707 04:02:58.693" level="INFO">${LABEL_ID} = 62c65af2f4957b320f535a21</msg>
<status status="PASS" starttime="20220707 04:02:58.691" endtime="20220707 04:02:58.693"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:58.694" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:58.694" endtime="20220707 04:02:58.694"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:58.694" endtime="20220707 04:02:58.694"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:58.695" level="INFO">${url} = labels/62c65af2f4957b320f535a21</msg>
<status status="PASS" starttime="20220707 04:02:58.695" endtime="20220707 04:02:58.695"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:58.792" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.695" endtime="20220707 04:02:58.792"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.793" endtime="20220707 04:02:58.793"/>
</return>
<msg timestamp="20220707 04:02:58.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.693" endtime="20220707 04:02:58.793"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.793" endtime="20220707 04:02:58.793"/>
</return>
<msg timestamp="20220707 04:02:58.793" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.693" endtime="20220707 04:02:58.793"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:58.794" endtime="20220707 04:02:58.794"/>
</return>
<msg timestamp="20220707 04:02:58.795" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220707 04:02:58.794" endtime="20220707 04:02:58.795"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:58.795" endtime="20220707 04:02:58.795"/>
</return>
<msg timestamp="20220707 04:02:58.795" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220707 04:02:58.795" endtime="20220707 04:02:58.795"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:02:58.796" endtime="20220707 04:02:58.796"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:02:58.796" endtime="20220707 04:02:58.796"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:58.798" level="INFO">${url} = labels/62c65af2f4957b320f535a21</msg>
<status status="PASS" starttime="20220707 04:02:58.797" endtime="20220707 04:02:58.798"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:58.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.798" endtime="20220707 04:02:58.905"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.905" endtime="20220707 04:02:58.905"/>
</return>
<msg timestamp="20220707 04:02:58.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.797" endtime="20220707 04:02:58.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.906" endtime="20220707 04:02:58.906"/>
</return>
<status status="PASS" starttime="20220707 04:02:58.796" endtime="20220707 04:02:58.906"/>
</kw>
<status status="PASS" starttime="20220707 04:02:58.796" endtime="20220707 04:02:58.906"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:02:58.611" endtime="20220707 04:02:58.906"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:58.908" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:58.908" endtime="20220707 04:02:58.908"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:58.909" endtime="20220707 04:02:58.909"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:58.910" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 04:02:58.909" endtime="20220707 04:02:58.910"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:58.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.910" endtime="20220707 04:02:58.988"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.988" endtime="20220707 04:02:58.988"/>
</return>
<msg timestamp="20220707 04:02:58.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.908" endtime="20220707 04:02:58.988"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:58.988" endtime="20220707 04:02:58.988"/>
</return>
<msg timestamp="20220707 04:02:58.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.907" endtime="20220707 04:02:58.989"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:02:58.989" endtime="20220707 04:02:58.989"/>
</return>
<msg timestamp="20220707 04:02:58.990" level="INFO">${LABEL_ID} = 62c65af2768b6004c031b059</msg>
<status status="PASS" starttime="20220707 04:02:58.989" endtime="20220707 04:02:58.991"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:58.993" level="INFO">${url} = labels/62c65af2768b6004c031b059</msg>
<status status="PASS" starttime="20220707 04:02:58.993" endtime="20220707 04:02:58.993"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:59.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.993" endtime="20220707 04:02:59.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.103" endtime="20220707 04:02:59.103"/>
</return>
<msg timestamp="20220707 04:02:59.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:58.992" endtime="20220707 04:02:59.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.104" endtime="20220707 04:02:59.104"/>
</return>
<status status="PASS" starttime="20220707 04:02:58.991" endtime="20220707 04:02:59.104"/>
</kw>
<status status="PASS" starttime="20220707 04:02:58.991" endtime="20220707 04:02:59.104"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:59.106" level="INFO">${url} = labels/62c65af2768b6004c031b059</msg>
<status status="PASS" starttime="20220707 04:02:59.106" endtime="20220707 04:02:59.106"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:02:59.137" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:02:59.107" endtime="20220707 04:02:59.137"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.138" endtime="20220707 04:02:59.138"/>
</return>
<msg timestamp="20220707 04:02:59.138" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:02:59.105" endtime="20220707 04:02:59.138"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.138" endtime="20220707 04:02:59.138"/>
</return>
<status status="PASS" starttime="20220707 04:02:59.104" endtime="20220707 04:02:59.138"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:02:58.907" endtime="20220707 04:02:59.138"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:59.141" level="INFO">${url} = boards/62c65af2e93e4a872be083e1</msg>
<status status="PASS" starttime="20220707 04:02:59.140" endtime="20220707 04:02:59.141"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:02:59.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.141" endtime="20220707 04:02:59.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.448" endtime="20220707 04:02:59.448"/>
</return>
<msg timestamp="20220707 04:02:59.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.140" endtime="20220707 04:02:59.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.448" endtime="20220707 04:02:59.448"/>
</return>
<status status="PASS" starttime="20220707 04:02:59.140" endtime="20220707 04:02:59.449"/>
</kw>
<status status="PASS" starttime="20220707 04:02:59.139" endtime="20220707 04:02:59.449"/>
</kw>
<status status="PASS" starttime="20220707 04:02:59.139" endtime="20220707 04:02:59.449"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:02:59.449" endtime="20220707 04:02:59.450"/>
</kw>
<status status="PASS" starttime="20220707 04:02:59.139" endtime="20220707 04:02:59.450"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220707 04:02:58.147" endtime="20220707 04:02:59.450"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:02:59.461" endtime="20220707 04:02:59.462"/>
</kw>
<status status="PASS" starttime="20220707 04:02:59.461" endtime="20220707 04:02:59.462"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:59.463" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:59.463" endtime="20220707 04:02:59.463"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:59.463" endtime="20220707 04:02:59.463"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:59.464" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:02:59.463" endtime="20220707 04:02:59.464"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:59.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.464" endtime="20220707 04:02:59.692"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.692" endtime="20220707 04:02:59.692"/>
</return>
<msg timestamp="20220707 04:02:59.692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.462" endtime="20220707 04:02:59.692"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.692" endtime="20220707 04:02:59.692"/>
</return>
<msg timestamp="20220707 04:02:59.693" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.462" endtime="20220707 04:02:59.693"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:02:59.695" level="INFO">${TEST_SUITE_BOARD_ID} = 62c65af38a4c035a7320a03d</msg>
<status status="PASS" starttime="20220707 04:02:59.693" endtime="20220707 04:02:59.695"/>
</kw>
<status status="PASS" starttime="20220707 04:02:59.693" endtime="20220707 04:02:59.695"/>
</kw>
<status status="PASS" starttime="20220707 04:02:59.462" endtime="20220707 04:02:59.696"/>
</kw>
<status status="PASS" starttime="20220707 04:02:59.461" endtime="20220707 04:02:59.696"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:59.698" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:59.698" endtime="20220707 04:02:59.698"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:59.698" endtime="20220707 04:02:59.699"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:59.699" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 04:02:59.699" endtime="20220707 04:02:59.700"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:59.800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.700" endtime="20220707 04:02:59.800"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.800" endtime="20220707 04:02:59.800"/>
</return>
<msg timestamp="20220707 04:02:59.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.697" endtime="20220707 04:02:59.801"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.801" endtime="20220707 04:02:59.801"/>
</return>
<msg timestamp="20220707 04:02:59.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.697" endtime="20220707 04:02:59.801"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:59.802" endtime="20220707 04:02:59.805"/>
</kw>
<status status="PASS" starttime="20220707 04:02:59.801" endtime="20220707 04:02:59.805"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:02:59.696" endtime="20220707 04:02:59.806"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:59.809" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:59.809" endtime="20220707 04:02:59.809"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:59.809" endtime="20220707 04:02:59.809"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:59.810" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 04:02:59.810" endtime="20220707 04:02:59.810"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:59.903" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.810" endtime="20220707 04:02:59.903"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.903" endtime="20220707 04:02:59.903"/>
</return>
<msg timestamp="20220707 04:02:59.904" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.808" endtime="20220707 04:02:59.904"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.904" endtime="20220707 04:02:59.904"/>
</return>
<msg timestamp="20220707 04:02:59.904" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.808" endtime="20220707 04:02:59.904"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:02:59.905" endtime="20220707 04:02:59.908"/>
</kw>
<status status="PASS" starttime="20220707 04:02:59.904" endtime="20220707 04:02:59.908"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:02:59.911" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:02:59.911" endtime="20220707 04:02:59.911"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:02:59.911" endtime="20220707 04:02:59.911"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:59.912" level="INFO">${url} = lists/62c65af3360cb150caea589e</msg>
<status status="PASS" starttime="20220707 04:02:59.911" endtime="20220707 04:02:59.912"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:02:59.990" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.912" endtime="20220707 04:02:59.990"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.990" endtime="20220707 04:02:59.990"/>
</return>
<msg timestamp="20220707 04:02:59.990" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.910" endtime="20220707 04:02:59.990"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:02:59.990" endtime="20220707 04:02:59.990"/>
</return>
<status status="PASS" starttime="20220707 04:02:59.908" endtime="20220707 04:02:59.990"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:02:59.992" level="INFO">${url} = lists/62c65af3360cb150caea589e</msg>
<status status="PASS" starttime="20220707 04:02:59.992" endtime="20220707 04:02:59.992"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:03:00.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.992" endtime="20220707 04:03:00.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:03:00.026" endtime="20220707 04:03:00.026"/>
</return>
<msg timestamp="20220707 04:03:00.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.991" endtime="20220707 04:03:00.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:03:00.027" endtime="20220707 04:03:00.027"/>
</return>
<msg timestamp="20220707 04:03:00.027" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:02:59.990" endtime="20220707 04:03:00.027"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:03:00.027" endtime="20220707 04:03:00.029"/>
</kw>
<status status="PASS" starttime="20220707 04:03:00.027" endtime="20220707 04:03:00.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:03:00.029" endtime="20220707 04:03:00.030"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:02:59.806" endtime="20220707 04:03:00.030"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:03:00.034" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:03:00.033" endtime="20220707 04:03:00.034"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:03:00.034" endtime="20220707 04:03:00.034"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:03:00.035" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 04:03:00.034" endtime="20220707 04:03:00.035"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:03:00.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:03:00.035" endtime="20220707 04:03:00.124"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:03:00.124" endtime="20220707 04:03:00.124"/>
</return>
<msg timestamp="20220707 04:03:00.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:03:00.033" endtime="20220707 04:03:00.125"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:03:00.125" endtime="20220707 04:03:00.125"/>
</return>
<msg timestamp="20220707 04:03:00.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:03:00.031" endtime="20220707 04:03:00.125"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:03:00.127" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:03:00.127" endtime="20220707 04:03:00.127"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:03:00.127" endtime="20220707 04:03:00.127"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:03:00.128" level="INFO">${url} = lists/62c65af46f75632427c875e6/closed</msg>
<status status="PASS" starttime="20220707 04:03:00.127" endtime="20220707 04:03:00.128"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:03:00.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:03:00.128" endtime="20220707 04:03:00.201"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:03:00.201" endtime="20220707 04:03:00.201"/>
</return>
<msg timestamp="20220707 04:03:00.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:03:00.126" endtime="20220707 04:03:00.201"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:03:00.201" endtime="20220707 04:03:00.201"/>
</return>
<status status="PASS" starttime="20220707 04:03:00.125" endtime="20220707 04:03:00.202"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:03:00.205" level="INFO">${url} = lists/62c65af46f75632427c875e6</msg>
<status status="PASS" starttime="20220707 04:03:00.204" endtime="20220707 04:03:00.205"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:03:00.242" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:03:00.205" endtime="20220707 04:03:00.242"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:03:00.242" endtime="20220707 04:03:00.243"/>
</return>
<msg timestamp="20220707 04:03:00.243" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:03:00.203" endtime="20220707 04:03:00.243"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:03:00.243" endtime="20220707 04:03:00.243"/>
</return>
<msg timestamp="20220707 04:03:00.243" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:03:00.202" endtime="20220707 04:03:00.243"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 04:03:00.244" endtime="20220707 04:03:00.245"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:03:00.031" endtime="20220707 04:03:00.245"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:03:00.248" level="INFO">${url} = boards/62c65af38a4c035a7320a03d</msg>
<status status="PASS" starttime="20220707 04:03:00.248" endtime="20220707 04:03:00.248"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:03:00.613" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:03:00.248" endtime="20220707 04:03:00.613"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:03:00.613" endtime="20220707 04:03:00.613"/>
</return>
<msg timestamp="20220707 04:03:00.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:03:00.247" endtime="20220707 04:03:00.614"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:03:00.614" endtime="20220707 04:03:00.614"/>
</return>
<status status="PASS" starttime="20220707 04:03:00.247" endtime="20220707 04:03:00.614"/>
</kw>
<status status="PASS" starttime="20220707 04:03:00.247" endtime="20220707 04:03:00.614"/>
</kw>
<status status="PASS" starttime="20220707 04:03:00.246" endtime="20220707 04:03:00.615"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:03:00.615" endtime="20220707 04:03:00.616"/>
</kw>
<status status="PASS" starttime="20220707 04:03:00.246" endtime="20220707 04:03:00.616"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220707 04:02:59.452" endtime="20220707 04:03:00.617"/>
</suite>
<status status="PASS" starttime="20220707 04:02:49.692" endtime="20220707 04:03:00.622"/>
</suite>
<status status="PASS" starttime="20220707 04:02:49.674" endtime="20220707 04:03:00.625"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
