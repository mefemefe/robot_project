<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220707 04:03:42.633" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Gui" source="/trello/gui">
<suite id="s1-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:03:42.903" endtime="20220707 04:03:42.903"/>
</kw>
<status status="PASS" starttime="20220707 04:03:42.903" endtime="20220707 04:03:42.904"/>
</kw>
<status status="PASS" starttime="20220707 04:03:42.902" endtime="20220707 04:03:42.904"/>
</kw>
<test id="s1-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:03:42.906" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:03:42.906" endtime="20220707 04:03:44.872"/>
</kw>
<status status="PASS" starttime="20220707 04:03:42.905" endtime="20220707 04:03:44.873"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:03:44.873" endtime="20220707 04:03:44.873"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:03:44.873" endtime="20220707 04:03:44.873"/>
</branch>
<status status="PASS" starttime="20220707 04:03:42.905" endtime="20220707 04:03:44.873"/>
</if>
<status status="PASS" starttime="20220707 04:03:42.905" endtime="20220707 04:03:44.873"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:03:44.873" endtime="20220707 04:03:44.999"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:03:45.024" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:03:45.000" endtime="20220707 04:03:45.024"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:03:45.024" endtime="20220707 04:03:45.024"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:03:45.024" endtime="20220707 04:03:45.024"/>
</branch>
<status status="PASS" starttime="20220707 04:03:45.024" endtime="20220707 04:03:45.024"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:03:45.025" endtime="20220707 04:03:45.086"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:45.087" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:03:45.087" endtime="20220707 04:03:45.223"/>
</kw>
<status status="PASS" starttime="20220707 04:03:45.025" endtime="20220707 04:03:45.224"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:03:45.224" endtime="20220707 04:03:45.794"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:03:45.809" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:03:45.794" endtime="20220707 04:03:45.809"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:03:45.810" endtime="20220707 04:03:45.890"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:45.890" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:03:45.890" endtime="20220707 04:03:46.799"/>
</kw>
<status status="PASS" starttime="20220707 04:03:45.810" endtime="20220707 04:03:46.799"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:03:46.800" endtime="20220707 04:03:46.800"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:03:46.800" endtime="20220707 04:03:46.800"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:03:46.799" endtime="20220707 04:03:46.800"/>
</branch>
<status status="PASS" starttime="20220707 04:03:45.810" endtime="20220707 04:03:46.800"/>
</if>
<status status="PASS" starttime="20220707 04:03:45.794" endtime="20220707 04:03:46.800"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:03:46.801" endtime="20220707 04:03:46.830"/>
</kw>
<status status="PASS" starttime="20220707 04:03:46.800" endtime="20220707 04:03:46.830"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:03:46.831" endtime="20220707 04:03:46.899"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:46.899" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:03:46.962" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:03:47.052" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:03:46.899" endtime="20220707 04:03:47.052"/>
</kw>
<status status="PASS" starttime="20220707 04:03:46.830" endtime="20220707 04:03:47.053"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:03:47.096" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c65b...</msg>
<status status="PASS" starttime="20220707 04:03:47.053" endtime="20220707 04:03:47.096"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:03:47.097" endtime="20220707 04:03:47.097"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:03:47.097" endtime="20220707 04:03:47.097"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:03:47.096" endtime="20220707 04:03:47.097"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:03:47.097" endtime="20220707 04:03:47.170"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:47.171" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:03:47.170" endtime="20220707 04:03:47.283"/>
</kw>
<status status="PASS" starttime="20220707 04:03:47.097" endtime="20220707 04:03:47.283"/>
</branch>
<status status="PASS" starttime="20220707 04:03:47.096" endtime="20220707 04:03:47.283"/>
</if>
<status status="PASS" starttime="20220707 04:03:47.053" endtime="20220707 04:03:47.284"/>
</kw>
<status status="PASS" starttime="20220707 04:03:44.999" endtime="20220707 04:03:47.284"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:03:47.284" endtime="20220707 04:03:50.382"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:50.383" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220707 04:03:50.383" endtime="20220707 04:03:50.520"/>
</kw>
<status status="PASS" starttime="20220707 04:03:50.382" endtime="20220707 04:03:50.520"/>
</kw>
<status status="PASS" starttime="20220707 04:03:47.284" endtime="20220707 04:03:50.520"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:03:50.521" endtime="20220707 04:03:50.880"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:50.880" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220707 04:03:50.880" endtime="20220707 04:03:51.064"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:03:51.064" endtime="20220707 04:03:51.135"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:51.135" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220707 04:03:51.135" endtime="20220707 04:03:51.243"/>
</kw>
<status status="PASS" starttime="20220707 04:03:50.520" endtime="20220707 04:03:51.243"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:03:51.244" endtime="20220707 04:03:52.633"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 04:03:52.634" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220707 04:03:52.633" endtime="20220707 04:03:52.730"/>
</kw>
<status status="PASS" starttime="20220707 04:03:51.243" endtime="20220707 04:03:52.730"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:03:52.731" endtime="20220707 04:03:52.813"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:52.814" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 04:03:52.814" endtime="20220707 04:03:52.974"/>
</kw>
<status status="PASS" starttime="20220707 04:03:52.731" endtime="20220707 04:03:52.975"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:03:52.975" endtime="20220707 04:03:53.034"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:53.035" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220707 04:03:53.035" endtime="20220707 04:03:53.206"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:03:53.207" endtime="20220707 04:03:53.529"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:53.529" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220707 04:03:53.529" endtime="20220707 04:03:53.616"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:03:53.616" endtime="20220707 04:03:53.673"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:53.673" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220707 04:03:53.673" endtime="20220707 04:03:53.802"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:03:53.802" endtime="20220707 04:03:54.118"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:54.120" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220707 04:03:54.120" endtime="20220707 04:03:54.194"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:03:54.195" endtime="20220707 04:03:54.257"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:54.258" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220707 04:03:54.258" endtime="20220707 04:03:54.328"/>
</kw>
<status status="PASS" starttime="20220707 04:03:52.975" endtime="20220707 04:03:54.329"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:03:54.329" endtime="20220707 04:03:54.425"/>
</kw>
<status status="PASS" starttime="20220707 04:03:52.731" endtime="20220707 04:03:54.425"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:03:42.904" endtime="20220707 04:03:54.425"/>
</test>
<test id="s1-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:03:54.432" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:03:54.432" endtime="20220707 04:03:54.432"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:03:54.432" endtime="20220707 04:03:54.433"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:03:54.434" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:03:54.433" endtime="20220707 04:03:54.434"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:03:54.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:03:54.434" endtime="20220707 04:03:54.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:03:54.617" endtime="20220707 04:03:54.617"/>
</return>
<msg timestamp="20220707 04:03:54.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:03:54.431" endtime="20220707 04:03:54.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:03:54.617" endtime="20220707 04:03:54.617"/>
</return>
<msg timestamp="20220707 04:03:54.618" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:03:54.431" endtime="20220707 04:03:54.618"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:03:54.619" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:03:54.618" endtime="20220707 04:03:55.729"/>
</kw>
<status status="PASS" starttime="20220707 04:03:54.618" endtime="20220707 04:03:55.729"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:03:55.730" endtime="20220707 04:03:55.730"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:03:55.729" endtime="20220707 04:03:55.730"/>
</branch>
<status status="PASS" starttime="20220707 04:03:54.618" endtime="20220707 04:03:55.730"/>
</if>
<status status="PASS" starttime="20220707 04:03:54.618" endtime="20220707 04:03:55.730"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:03:55.730" endtime="20220707 04:03:55.854"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:03:55.867" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:03:55.855" endtime="20220707 04:03:55.867"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:03:55.868" endtime="20220707 04:03:55.868"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:03:55.868" endtime="20220707 04:03:55.868"/>
</branch>
<status status="PASS" starttime="20220707 04:03:55.867" endtime="20220707 04:03:55.868"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:03:55.869" endtime="20220707 04:03:55.917"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:55.917" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:03:55.917" endtime="20220707 04:03:56.035"/>
</kw>
<status status="PASS" starttime="20220707 04:03:55.868" endtime="20220707 04:03:56.035"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:03:56.035" endtime="20220707 04:03:56.601"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:03:56.610" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:03:56.601" endtime="20220707 04:03:56.610"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:03:56.611" endtime="20220707 04:03:56.673"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:56.673" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:03:56.673" endtime="20220707 04:03:57.558"/>
</kw>
<status status="PASS" starttime="20220707 04:03:56.610" endtime="20220707 04:03:57.558"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:03:57.559" endtime="20220707 04:03:57.559"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:03:57.559" endtime="20220707 04:03:57.559"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:03:57.558" endtime="20220707 04:03:57.559"/>
</branch>
<status status="PASS" starttime="20220707 04:03:56.610" endtime="20220707 04:03:57.559"/>
</if>
<status status="PASS" starttime="20220707 04:03:56.601" endtime="20220707 04:03:57.559"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:03:57.560" endtime="20220707 04:03:57.585"/>
</kw>
<status status="PASS" starttime="20220707 04:03:57.559" endtime="20220707 04:03:57.586"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:03:57.586" endtime="20220707 04:03:57.637"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:57.638" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:03:57.711" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:03:57.800" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:03:57.637" endtime="20220707 04:03:57.800"/>
</kw>
<status status="PASS" starttime="20220707 04:03:57.586" endtime="20220707 04:03:57.800"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:03:57.815" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c65b...</msg>
<status status="PASS" starttime="20220707 04:03:57.800" endtime="20220707 04:03:57.815"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:03:57.816" endtime="20220707 04:03:57.816"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:03:57.816" endtime="20220707 04:03:57.816"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:03:57.816" endtime="20220707 04:03:57.816"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:03:57.816" endtime="20220707 04:03:57.882"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:03:57.883" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:03:57.883" endtime="20220707 04:03:58.046"/>
</kw>
<status status="PASS" starttime="20220707 04:03:57.816" endtime="20220707 04:03:58.046"/>
</branch>
<status status="PASS" starttime="20220707 04:03:57.815" endtime="20220707 04:03:58.046"/>
</if>
<status status="PASS" starttime="20220707 04:03:57.800" endtime="20220707 04:03:58.047"/>
</kw>
<status status="PASS" starttime="20220707 04:03:55.855" endtime="20220707 04:03:58.047"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:03:58.048" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220707 04:03:58.047" endtime="20220707 04:03:58.048"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:03:58.048" endtime="20220707 04:04:00.997"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:00.998" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220707 04:04:00.997" endtime="20220707 04:04:01.420"/>
</kw>
<status status="PASS" starttime="20220707 04:03:58.047" endtime="20220707 04:04:01.420"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:01.421" endtime="20220707 04:04:01.948"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 04:04:01.949" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220707 04:04:01.948" endtime="20220707 04:04:02.088"/>
</kw>
<status status="PASS" starttime="20220707 04:04:01.421" endtime="20220707 04:04:02.088"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:02.089" endtime="20220707 04:04:02.143"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:02.144" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 04:04:02.143" endtime="20220707 04:04:02.224"/>
</kw>
<status status="PASS" starttime="20220707 04:04:02.089" endtime="20220707 04:04:02.224"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:02.225" endtime="20220707 04:04:02.419"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:02.420" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220707 04:04:02.419" endtime="20220707 04:04:02.591"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:02.591" endtime="20220707 04:04:02.648"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:02.648" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220707 04:04:02.648" endtime="20220707 04:04:02.731"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:02.731" endtime="20220707 04:04:02.856"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:02.856" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220707 04:04:02.856" endtime="20220707 04:04:02.972"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:02.973" endtime="20220707 04:04:03.281"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:03.281" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220707 04:04:03.281" endtime="20220707 04:04:03.361"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:03.361" endtime="20220707 04:04:03.404"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:03.404" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220707 04:04:03.404" endtime="20220707 04:04:03.510"/>
</kw>
<status status="PASS" starttime="20220707 04:04:02.225" endtime="20220707 04:04:03.511"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:04:03.511" endtime="20220707 04:04:03.612"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220707 04:04:03.613" endtime="20220707 04:04:03.613"/>
</kw>
<status status="PASS" starttime="20220707 04:04:03.511" endtime="20220707 04:04:03.613"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:03:54.430" endtime="20220707 04:04:03.613"/>
</test>
<test id="s1-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:04:03.617" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:04:03.617" endtime="20220707 04:04:03.617"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:04:03.617" endtime="20220707 04:04:03.617"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:03.618" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:04:03.617" endtime="20220707 04:04:03.618"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:04:03.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:03.619" endtime="20220707 04:04:03.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:03.787" endtime="20220707 04:04:03.787"/>
</return>
<msg timestamp="20220707 04:04:03.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:03.616" endtime="20220707 04:04:03.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:03.787" endtime="20220707 04:04:03.787"/>
</return>
<msg timestamp="20220707 04:04:03.788" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:03.616" endtime="20220707 04:04:03.788"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:04:03.790" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:04:03.789" endtime="20220707 04:04:04.848"/>
</kw>
<status status="PASS" starttime="20220707 04:04:03.789" endtime="20220707 04:04:04.849"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:04.849" endtime="20220707 04:04:04.849"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:04.849" endtime="20220707 04:04:04.849"/>
</branch>
<status status="PASS" starttime="20220707 04:04:03.789" endtime="20220707 04:04:04.849"/>
</if>
<status status="PASS" starttime="20220707 04:04:03.788" endtime="20220707 04:04:04.849"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:04:04.849" endtime="20220707 04:04:04.994"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:04:05.005" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:04:04.995" endtime="20220707 04:04:05.005"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:05.006" endtime="20220707 04:04:05.006"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:05.006" endtime="20220707 04:04:05.006"/>
</branch>
<status status="PASS" starttime="20220707 04:04:05.006" endtime="20220707 04:04:05.006"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:05.007" endtime="20220707 04:04:05.047"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:05.047" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:04:05.047" endtime="20220707 04:04:05.182"/>
</kw>
<status status="PASS" starttime="20220707 04:04:05.006" endtime="20220707 04:04:05.182"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:04:05.182" endtime="20220707 04:04:05.944"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:04:05.954" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:04:05.945" endtime="20220707 04:04:05.954"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:04:05.955" endtime="20220707 04:04:06.024"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:06.024" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:04:06.024" endtime="20220707 04:04:06.881"/>
</kw>
<status status="PASS" starttime="20220707 04:04:05.955" endtime="20220707 04:04:06.881"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:04:06.882" endtime="20220707 04:04:06.882"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:06.882" endtime="20220707 04:04:06.882"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:06.881" endtime="20220707 04:04:06.882"/>
</branch>
<status status="PASS" starttime="20220707 04:04:05.954" endtime="20220707 04:04:06.882"/>
</if>
<status status="PASS" starttime="20220707 04:04:05.944" endtime="20220707 04:04:06.882"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:04:06.883" endtime="20220707 04:04:06.906"/>
</kw>
<status status="PASS" starttime="20220707 04:04:06.882" endtime="20220707 04:04:06.906"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:06.907" endtime="20220707 04:04:06.971"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:06.972" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:04:07.050" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:04:07.146" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:04:06.972" endtime="20220707 04:04:07.146"/>
</kw>
<status status="PASS" starttime="20220707 04:04:06.906" endtime="20220707 04:04:07.146"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:04:07.159" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c65b...</msg>
<status status="PASS" starttime="20220707 04:04:07.146" endtime="20220707 04:04:07.159"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:04:07.159" endtime="20220707 04:04:07.159"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:07.160" endtime="20220707 04:04:07.160"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:07.159" endtime="20220707 04:04:07.160"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:04:07.160" endtime="20220707 04:04:07.228"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:07.228" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:04:07.228" endtime="20220707 04:04:07.345"/>
</kw>
<status status="PASS" starttime="20220707 04:04:07.160" endtime="20220707 04:04:07.345"/>
</branch>
<status status="PASS" starttime="20220707 04:04:07.159" endtime="20220707 04:04:07.345"/>
</if>
<status status="PASS" starttime="20220707 04:04:07.146" endtime="20220707 04:04:07.345"/>
</kw>
<status status="PASS" starttime="20220707 04:04:04.994" endtime="20220707 04:04:07.345"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:07.346" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220707 04:04:07.346" endtime="20220707 04:04:07.346"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:07.346" endtime="20220707 04:04:10.283"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:10.284" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220707 04:04:10.283" endtime="20220707 04:04:10.708"/>
</kw>
<status status="PASS" starttime="20220707 04:04:07.345" endtime="20220707 04:04:10.709"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:10.709" endtime="20220707 04:04:11.265"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 04:04:11.266" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220707 04:04:11.265" endtime="20220707 04:04:11.311"/>
</kw>
<status status="PASS" starttime="20220707 04:04:10.709" endtime="20220707 04:04:11.312"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:11.312" endtime="20220707 04:04:11.354"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:11.355" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 04:04:11.354" endtime="20220707 04:04:11.447"/>
</kw>
<status status="PASS" starttime="20220707 04:04:11.312" endtime="20220707 04:04:11.447"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:11.448" endtime="20220707 04:04:11.625"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:11.626" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220707 04:04:11.625" endtime="20220707 04:04:11.722"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:11.723" endtime="20220707 04:04:11.828"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:11.829" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220707 04:04:11.828" endtime="20220707 04:04:11.929"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:11.930" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220707 04:04:11.930" endtime="20220707 04:04:12.077"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:12.077" endtime="20220707 04:04:12.118"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:12.119" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220707 04:04:12.118" endtime="20220707 04:04:12.235"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:12.236" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220707 04:04:12.235" endtime="20220707 04:04:12.380"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:12.380" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220707 04:04:12.380" endtime="20220707 04:04:12.469"/>
</kw>
<status status="PASS" starttime="20220707 04:04:11.447" endtime="20220707 04:04:12.469"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:04:12.470" endtime="20220707 04:04:12.560"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:12.564" level="INFO">${url} = boards/62c65b338837da6204d283c3</msg>
<status status="PASS" starttime="20220707 04:04:12.564" endtime="20220707 04:04:12.564"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:04:12.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:12.564" endtime="20220707 04:04:12.907"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:12.907" endtime="20220707 04:04:12.907"/>
</return>
<msg timestamp="20220707 04:04:12.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:12.563" endtime="20220707 04:04:12.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:12.908" endtime="20220707 04:04:12.908"/>
</return>
<status status="PASS" starttime="20220707 04:04:12.561" endtime="20220707 04:04:12.908"/>
</kw>
<status status="PASS" starttime="20220707 04:04:12.561" endtime="20220707 04:04:12.908"/>
</kw>
<status status="PASS" starttime="20220707 04:04:12.469" endtime="20220707 04:04:12.908"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:04:03.615" endtime="20220707 04:04:12.908"/>
</test>
<test id="s1-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:04:12.914" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:04:12.914" endtime="20220707 04:04:12.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:04:12.914" endtime="20220707 04:04:12.915"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:12.916" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:04:12.915" endtime="20220707 04:04:12.916"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:04:13.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:12.916" endtime="20220707 04:04:13.064"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:13.065" endtime="20220707 04:04:13.065"/>
</return>
<msg timestamp="20220707 04:04:13.065" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:12.913" endtime="20220707 04:04:13.065"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:13.065" endtime="20220707 04:04:13.065"/>
</return>
<msg timestamp="20220707 04:04:13.065" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:12.912" endtime="20220707 04:04:13.065"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:04:13.067" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:04:13.066" endtime="20220707 04:04:14.108"/>
</kw>
<status status="PASS" starttime="20220707 04:04:13.066" endtime="20220707 04:04:14.108"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:14.108" endtime="20220707 04:04:14.108"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:14.108" endtime="20220707 04:04:14.108"/>
</branch>
<status status="PASS" starttime="20220707 04:04:13.066" endtime="20220707 04:04:14.108"/>
</if>
<status status="PASS" starttime="20220707 04:04:13.065" endtime="20220707 04:04:14.109"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:04:14.109" endtime="20220707 04:04:14.233"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:04:14.258" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:04:14.234" endtime="20220707 04:04:14.259"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:14.259" endtime="20220707 04:04:14.259"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:14.259" endtime="20220707 04:04:14.259"/>
</branch>
<status status="PASS" starttime="20220707 04:04:14.259" endtime="20220707 04:04:14.259"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:14.260" endtime="20220707 04:04:14.322"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:14.322" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:04:14.322" endtime="20220707 04:04:14.474"/>
</kw>
<status status="PASS" starttime="20220707 04:04:14.259" endtime="20220707 04:04:14.474"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:04:14.474" endtime="20220707 04:04:15.229"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:04:15.236" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:04:15.229" endtime="20220707 04:04:15.236"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:04:15.237" endtime="20220707 04:04:15.278"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:15.279" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:04:15.278" endtime="20220707 04:04:16.120"/>
</kw>
<status status="PASS" starttime="20220707 04:04:15.236" endtime="20220707 04:04:16.120"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:04:16.120" endtime="20220707 04:04:16.120"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:16.120" endtime="20220707 04:04:16.121"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:16.120" endtime="20220707 04:04:16.121"/>
</branch>
<status status="PASS" starttime="20220707 04:04:15.236" endtime="20220707 04:04:16.121"/>
</if>
<status status="PASS" starttime="20220707 04:04:15.229" endtime="20220707 04:04:16.121"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:04:16.121" endtime="20220707 04:04:16.136"/>
</kw>
<status status="PASS" starttime="20220707 04:04:16.121" endtime="20220707 04:04:16.136"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:16.137" endtime="20220707 04:04:16.203"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:16.204" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:04:16.265" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:04:16.345" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:04:16.204" endtime="20220707 04:04:16.345"/>
</kw>
<status status="PASS" starttime="20220707 04:04:16.136" endtime="20220707 04:04:16.345"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:04:16.358" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c65b...</msg>
<status status="PASS" starttime="20220707 04:04:16.346" endtime="20220707 04:04:16.358"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:04:16.359" endtime="20220707 04:04:16.359"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:16.359" endtime="20220707 04:04:16.359"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:16.359" endtime="20220707 04:04:16.359"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:04:16.359" endtime="20220707 04:04:16.428"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:16.429" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:04:16.428" endtime="20220707 04:04:16.525"/>
</kw>
<status status="PASS" starttime="20220707 04:04:16.359" endtime="20220707 04:04:16.525"/>
</branch>
<status status="PASS" starttime="20220707 04:04:16.358" endtime="20220707 04:04:16.525"/>
</if>
<status status="PASS" starttime="20220707 04:04:16.346" endtime="20220707 04:04:16.525"/>
</kw>
<status status="PASS" starttime="20220707 04:04:14.233" endtime="20220707 04:04:16.526"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:16.527" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220707 04:04:16.526" endtime="20220707 04:04:16.527"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:16.527" endtime="20220707 04:04:19.551"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:19.551" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220707 04:04:19.551" endtime="20220707 04:04:19.966"/>
</kw>
<status status="PASS" starttime="20220707 04:04:16.526" endtime="20220707 04:04:19.967"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:19.967" endtime="20220707 04:04:20.517"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 04:04:20.517" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220707 04:04:20.517" endtime="20220707 04:04:20.624"/>
</kw>
<status status="PASS" starttime="20220707 04:04:19.967" endtime="20220707 04:04:20.624"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:20.625" endtime="20220707 04:04:20.669"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:20.698" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220707 04:04:20.669" endtime="20220707 04:04:20.698"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220707 04:04:20.698" level="INFO">Length is 8</msg>
<msg timestamp="20220707 04:04:20.698" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220707 04:04:20.698" endtime="20220707 04:04:20.698"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:20.699" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220707 04:04:20.699" endtime="20220707 04:04:20.771"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:04:20.772" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:04:21.178" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:04:20.771" endtime="20220707 04:04:21.193"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220707 04:04:21.194" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:04:21.195" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:04:21.502" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:04:21.194" endtime="20220707 04:04:21.522"/>
</kw>
<msg timestamp="20220707 04:04:21.522" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:04:21.523" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:04:21.831" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:04:21.522" endtime="20220707 04:04:21.845"/>
</kw>
<msg timestamp="20220707 04:04:21.845" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:04:21.846" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:04:22.128" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:04:21.845" endtime="20220707 04:04:22.143"/>
</kw>
<msg timestamp="20220707 04:04:22.143" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:04:22.144" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:04:22.430" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:04:22.143" endtime="20220707 04:04:22.445"/>
</kw>
<msg timestamp="20220707 04:04:22.445" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:04:22.446" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:04:22.734" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:04:22.445" endtime="20220707 04:04:22.750"/>
</kw>
<msg timestamp="20220707 04:04:22.750" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:04:22.751" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:04:23.040" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:04:22.750" endtime="20220707 04:04:23.060"/>
</kw>
<msg timestamp="20220707 04:04:23.060" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:04:23.061" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:04:23.356" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:04:23.061" endtime="20220707 04:04:23.371"/>
</kw>
<msg timestamp="20220707 04:04:23.371" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:04:23.372" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:04:23.658" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:04:23.372" endtime="20220707 04:04:23.692"/>
</kw>
<status status="PASS" starttime="20220707 04:04:21.193" endtime="20220707 04:04:23.692"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:04:23.693" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:04:23.975" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220707 04:04:23.692" endtime="20220707 04:04:24.149"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:04:24.150" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:04:24.433" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:04:24.149" endtime="20220707 04:04:24.535"/>
</kw>
<status status="PASS" starttime="20220707 04:04:20.624" endtime="20220707 04:04:24.535"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:24.536" endtime="20220707 04:04:24.589"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 04:04:24.589" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220707 04:04:24.589" endtime="20220707 04:04:24.690"/>
</kw>
<status status="PASS" starttime="20220707 04:04:24.535" endtime="20220707 04:04:24.690"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:04:24.691" endtime="20220707 04:04:24.808"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:24.811" level="INFO">${url} = boards/62c65b3cb74de76eaf1458a6</msg>
<status status="PASS" starttime="20220707 04:04:24.811" endtime="20220707 04:04:24.811"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:04:25.162" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:24.812" endtime="20220707 04:04:25.162"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:25.162" endtime="20220707 04:04:25.162"/>
</return>
<msg timestamp="20220707 04:04:25.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:24.811" endtime="20220707 04:04:25.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:25.163" endtime="20220707 04:04:25.163"/>
</return>
<status status="PASS" starttime="20220707 04:04:24.809" endtime="20220707 04:04:25.163"/>
</kw>
<status status="PASS" starttime="20220707 04:04:24.808" endtime="20220707 04:04:25.163"/>
</kw>
<status status="PASS" starttime="20220707 04:04:24.690" endtime="20220707 04:04:25.163"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:04:12.911" endtime="20220707 04:04:25.163"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:04:25.166" endtime="20220707 04:04:25.167"/>
</kw>
<status status="PASS" starttime="20220707 04:04:25.165" endtime="20220707 04:04:25.168"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220707 04:03:42.652" endtime="20220707 04:04:25.168"/>
</suite>
<suite id="s1-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:04:25.188" endtime="20220707 04:04:25.188"/>
</kw>
<status status="PASS" starttime="20220707 04:04:25.187" endtime="20220707 04:04:25.188"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:04:25.189" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:04:25.189" endtime="20220707 04:04:25.189"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:04:25.189" endtime="20220707 04:04:25.189"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:25.191" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:04:25.190" endtime="20220707 04:04:25.191"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:04:25.401" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:25.191" endtime="20220707 04:04:25.401"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:25.401" endtime="20220707 04:04:25.401"/>
</return>
<msg timestamp="20220707 04:04:25.402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:25.188" endtime="20220707 04:04:25.402"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:25.402" endtime="20220707 04:04:25.402"/>
</return>
<msg timestamp="20220707 04:04:25.402" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:25.188" endtime="20220707 04:04:25.402"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:04:25.405" level="INFO">${TEST_SUITE_BOARD_ID} = 62c65b498d14250e1906829e</msg>
<status status="PASS" starttime="20220707 04:04:25.403" endtime="20220707 04:04:25.405"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:04:25.407" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:04:25.407" endtime="20220707 04:04:26.506"/>
</kw>
<status status="PASS" starttime="20220707 04:04:25.406" endtime="20220707 04:04:26.506"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:26.506" endtime="20220707 04:04:26.506"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:26.506" endtime="20220707 04:04:26.506"/>
</branch>
<status status="PASS" starttime="20220707 04:04:25.406" endtime="20220707 04:04:26.506"/>
</if>
<status status="PASS" starttime="20220707 04:04:25.406" endtime="20220707 04:04:26.507"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:04:26.507" endtime="20220707 04:04:26.625"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:04:26.636" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:04:26.626" endtime="20220707 04:04:26.636"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:26.636" endtime="20220707 04:04:26.636"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:26.636" endtime="20220707 04:04:26.636"/>
</branch>
<status status="PASS" starttime="20220707 04:04:26.636" endtime="20220707 04:04:26.636"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:26.637" endtime="20220707 04:04:26.675"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:26.676" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:04:26.675" endtime="20220707 04:04:26.794"/>
</kw>
<status status="PASS" starttime="20220707 04:04:26.637" endtime="20220707 04:04:26.794"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:04:26.795" endtime="20220707 04:04:27.534"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:04:27.542" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:04:27.534" endtime="20220707 04:04:27.542"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:04:27.542" endtime="20220707 04:04:27.587"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:27.588" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:04:27.587" endtime="20220707 04:04:28.376"/>
</kw>
<status status="PASS" starttime="20220707 04:04:27.542" endtime="20220707 04:04:28.376"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:04:28.377" endtime="20220707 04:04:28.377"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:28.377" endtime="20220707 04:04:28.377"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:28.376" endtime="20220707 04:04:28.377"/>
</branch>
<status status="PASS" starttime="20220707 04:04:27.542" endtime="20220707 04:04:28.377"/>
</if>
<status status="PASS" starttime="20220707 04:04:27.534" endtime="20220707 04:04:28.377"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:04:28.378" endtime="20220707 04:04:28.388"/>
</kw>
<status status="PASS" starttime="20220707 04:04:28.377" endtime="20220707 04:04:28.388"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:28.389" endtime="20220707 04:04:28.676"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:28.677" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:04:28.725" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:04:28.806" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:04:28.677" endtime="20220707 04:04:28.806"/>
</kw>
<status status="PASS" starttime="20220707 04:04:28.388" endtime="20220707 04:04:28.806"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:04:28.828" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c65b...</msg>
<status status="PASS" starttime="20220707 04:04:28.807" endtime="20220707 04:04:28.828"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:04:28.828" endtime="20220707 04:04:28.828"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:28.828" endtime="20220707 04:04:28.828"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:28.828" endtime="20220707 04:04:28.828"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:04:28.828" endtime="20220707 04:04:28.898"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:28.899" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:04:28.899" endtime="20220707 04:04:29.013"/>
</kw>
<status status="PASS" starttime="20220707 04:04:28.828" endtime="20220707 04:04:29.013"/>
</branch>
<status status="PASS" starttime="20220707 04:04:28.828" endtime="20220707 04:04:29.013"/>
</if>
<status status="PASS" starttime="20220707 04:04:28.806" endtime="20220707 04:04:29.013"/>
</kw>
<status status="PASS" starttime="20220707 04:04:26.625" endtime="20220707 04:04:29.013"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:29.014" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220707 04:04:29.013" endtime="20220707 04:04:29.014"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:29.014" endtime="20220707 04:04:32.039"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:32.039" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220707 04:04:32.039" endtime="20220707 04:04:32.476"/>
</kw>
<status status="PASS" starttime="20220707 04:04:29.013" endtime="20220707 04:04:32.476"/>
</kw>
<status status="PASS" starttime="20220707 04:04:25.187" endtime="20220707 04:04:32.476"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:32.478" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 04:04:32.477" endtime="20220707 04:04:32.478"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:32.478" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 04:04:32.478" endtime="20220707 04:04:32.478"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:32.480" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:04:32.479" endtime="20220707 04:04:32.480"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:32.480" endtime="20220707 04:04:32.967"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:32.968" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:04:32.967" endtime="20220707 04:04:33.137"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:33.138" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:04:33.137" endtime="20220707 04:04:33.138"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:33.138" endtime="20220707 04:04:33.175"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:33.175" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:33.175" endtime="20220707 04:04:33.237"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:04:33.237" endtime="20220707 04:04:33.357"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:33.357" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:33.357" endtime="20220707 04:04:33.501"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:33.502" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:04:33.502" endtime="20220707 04:04:33.502"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:33.503" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:04:33.502" endtime="20220707 04:04:33.618"/>
</kw>
<status status="PASS" starttime="20220707 04:04:32.479" endtime="20220707 04:04:33.619"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:33.620" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:04:33.619" endtime="20220707 04:04:33.620"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 04:04:33.710" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220707 04:04:33.620" endtime="20220707 04:04:33.710"/>
</kw>
<status status="PASS" starttime="20220707 04:04:33.619" endtime="20220707 04:04:33.710"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:33.712" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:04:33.711" endtime="20220707 04:04:33.712"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:33.712" endtime="20220707 04:04:33.742"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:33.743" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 04:04:33.742" endtime="20220707 04:04:33.857"/>
</kw>
<status status="PASS" starttime="20220707 04:04:33.711" endtime="20220707 04:04:33.857"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 04:04:33.910" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 04:04:33.859" endtime="20220707 04:04:33.910"/>
</kw>
<msg timestamp="20220707 04:04:33.910" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 04:04:33.858" endtime="20220707 04:04:33.910"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:33.911" endtime="20220707 04:04:34.255"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:34.255" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 04:04:34.255" endtime="20220707 04:04:34.424"/>
</kw>
<status status="PASS" starttime="20220707 04:04:33.911" endtime="20220707 04:04:34.424"/>
</kw>
<status status="PASS" starttime="20220707 04:04:33.910" endtime="20220707 04:04:34.425"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:34.425" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:04:34.425" endtime="20220707 04:04:34.520"/>
</kw>
<status status="PASS" starttime="20220707 04:04:34.425" endtime="20220707 04:04:34.520"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:34.520" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:04:34.520" endtime="20220707 04:04:34.738"/>
</kw>
<status status="PASS" starttime="20220707 04:04:33.858" endtime="20220707 04:04:34.738"/>
</kw>
<status status="PASS" starttime="20220707 04:04:33.711" endtime="20220707 04:04:34.738"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:04:32.476" endtime="20220707 04:04:34.738"/>
</test>
<test id="s1-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:34.741" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 04:04:34.740" endtime="20220707 04:04:34.741"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:34.741" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 04:04:34.741" endtime="20220707 04:04:34.741"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:34.742" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:04:34.742" endtime="20220707 04:04:34.742"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:34.742" endtime="20220707 04:04:34.778"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:34.779" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:04:34.779" endtime="20220707 04:04:34.836"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:34.837" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:04:34.836" endtime="20220707 04:04:34.837"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:34.837" endtime="20220707 04:04:34.883"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:34.884" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:34.884" endtime="20220707 04:04:34.951"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:04:34.951" endtime="20220707 04:04:34.993"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:34.994" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:34.993" endtime="20220707 04:04:35.084"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:35.084" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:04:35.084" endtime="20220707 04:04:35.084"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:35.085" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:04:35.085" endtime="20220707 04:04:35.174"/>
</kw>
<status status="PASS" starttime="20220707 04:04:34.741" endtime="20220707 04:04:35.175"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:35.175" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220707 04:04:35.175" endtime="20220707 04:04:35.175"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:35.177" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:04:35.176" endtime="20220707 04:04:35.177"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:35.177" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220707 04:04:35.177" endtime="20220707 04:04:35.177"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:35.177" endtime="20220707 04:04:35.227"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220707 04:04:35.228" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 04:04:35.227" endtime="20220707 04:04:35.522"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 04:04:35.522" endtime="20220707 04:04:35.547"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:35.548" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220707 04:04:35.547" endtime="20220707 04:04:35.625"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:35.625" endtime="20220707 04:04:35.685"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:35.685" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220707 04:04:35.685" endtime="20220707 04:04:35.767"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:04:35.767" endtime="20220707 04:04:35.809"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:35.810" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220707 04:04:35.810" endtime="20220707 04:04:35.943"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:35.944" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220707 04:04:35.943" endtime="20220707 04:04:36.040"/>
</kw>
<status status="PASS" starttime="20220707 04:04:35.175" endtime="20220707 04:04:36.041"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:36.042" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220707 04:04:36.042" endtime="20220707 04:04:36.043"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 04:04:36.089" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220707 04:04:36.043" endtime="20220707 04:04:36.089"/>
</kw>
<status status="PASS" starttime="20220707 04:04:36.041" endtime="20220707 04:04:36.089"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:36.091" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220707 04:04:36.091" endtime="20220707 04:04:36.091"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:36.091" endtime="20220707 04:04:36.130"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:36.131" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220707 04:04:36.131" endtime="20220707 04:04:36.211"/>
</kw>
<status status="PASS" starttime="20220707 04:04:36.090" endtime="20220707 04:04:36.211"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 04:04:36.463" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 04:04:36.212" endtime="20220707 04:04:36.463"/>
</kw>
<msg timestamp="20220707 04:04:36.463" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 04:04:36.212" endtime="20220707 04:04:36.463"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:36.464" endtime="20220707 04:04:36.512"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:36.513" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 04:04:36.512" endtime="20220707 04:04:36.614"/>
</kw>
<status status="PASS" starttime="20220707 04:04:36.464" endtime="20220707 04:04:36.614"/>
</kw>
<status status="PASS" starttime="20220707 04:04:36.464" endtime="20220707 04:04:36.614"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:36.615" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:04:36.615" endtime="20220707 04:04:36.686"/>
</kw>
<status status="PASS" starttime="20220707 04:04:36.614" endtime="20220707 04:04:36.686"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:36.686" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:04:36.686" endtime="20220707 04:04:36.897"/>
</kw>
<status status="PASS" starttime="20220707 04:04:36.211" endtime="20220707 04:04:36.898"/>
</kw>
<status status="PASS" starttime="20220707 04:04:36.090" endtime="20220707 04:04:36.898"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:04:34.740" endtime="20220707 04:04:36.898"/>
</test>
<test id="s1-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:36.901" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 04:04:36.900" endtime="20220707 04:04:36.901"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:36.901" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 04:04:36.901" endtime="20220707 04:04:36.901"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:36.902" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:04:36.902" endtime="20220707 04:04:36.902"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:36.902" endtime="20220707 04:04:36.967"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:36.968" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:04:36.968" endtime="20220707 04:04:37.058"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:37.058" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:04:37.058" endtime="20220707 04:04:37.058"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:37.059" endtime="20220707 04:04:37.112"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:37.112" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:37.112" endtime="20220707 04:04:37.180"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:04:37.180" endtime="20220707 04:04:37.215"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:37.216" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:37.216" endtime="20220707 04:04:37.297"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:37.298" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:04:37.298" endtime="20220707 04:04:37.298"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:37.299" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:04:37.298" endtime="20220707 04:04:37.392"/>
</kw>
<status status="PASS" starttime="20220707 04:04:36.901" endtime="20220707 04:04:37.392"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:37.393" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:04:37.393" endtime="20220707 04:04:37.393"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:37.393" endtime="20220707 04:04:37.458"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:37.459" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 04:04:37.458" endtime="20220707 04:04:37.521"/>
</kw>
<status status="PASS" starttime="20220707 04:04:37.392" endtime="20220707 04:04:37.522"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 04:04:37.785" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 04:04:37.522" endtime="20220707 04:04:37.785"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 04:04:37.785" endtime="20220707 04:04:37.785"/>
</return>
<msg timestamp="20220707 04:04:37.785" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220707 04:04:37.522" endtime="20220707 04:04:37.785"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:37.786" endtime="20220707 04:04:37.829"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:37.830" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220707 04:04:37.829" endtime="20220707 04:04:37.892"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:04:37.892" endtime="20220707 04:04:37.936"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:37.936" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220707 04:04:37.936" endtime="20220707 04:04:38.100"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:38.101" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220707 04:04:38.100" endtime="20220707 04:04:38.260"/>
</kw>
<status status="PASS" starttime="20220707 04:04:37.785" endtime="20220707 04:04:38.260"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 04:04:38.297" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220707 04:04:38.261" endtime="20220707 04:04:38.297"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 04:04:38.297" endtime="20220707 04:04:38.297"/>
</return>
<msg timestamp="20220707 04:04:38.297" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220707 04:04:38.261" endtime="20220707 04:04:38.297"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 04:04:38.297" endtime="20220707 04:04:38.299"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 04:04:38.353" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 04:04:38.299" endtime="20220707 04:04:38.353"/>
</kw>
<msg timestamp="20220707 04:04:38.353" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 04:04:38.299" endtime="20220707 04:04:38.353"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:38.354" endtime="20220707 04:04:38.390"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:38.390" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 04:04:38.390" endtime="20220707 04:04:38.474"/>
</kw>
<status status="PASS" starttime="20220707 04:04:38.354" endtime="20220707 04:04:38.475"/>
</kw>
<status status="PASS" starttime="20220707 04:04:38.353" endtime="20220707 04:04:38.475"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:38.475" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:04:38.475" endtime="20220707 04:04:38.625"/>
</kw>
<status status="PASS" starttime="20220707 04:04:38.475" endtime="20220707 04:04:38.625"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:38.626" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:04:38.625" endtime="20220707 04:04:38.823"/>
</kw>
<status status="PASS" starttime="20220707 04:04:38.299" endtime="20220707 04:04:38.823"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:04:36.899" endtime="20220707 04:04:38.823"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:38.827" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 04:04:38.826" endtime="20220707 04:04:38.827"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:38.827" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 04:04:38.827" endtime="20220707 04:04:38.827"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:38.829" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220707 04:04:38.828" endtime="20220707 04:04:38.829"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 04:04:38.850" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 04:04:38.829" endtime="20220707 04:04:38.850"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 04:04:38.850" endtime="20220707 04:04:38.850"/>
</return>
<msg timestamp="20220707 04:04:38.851" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220707 04:04:38.827" endtime="20220707 04:04:38.851"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:38.853" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:04:38.852" endtime="20220707 04:04:38.853"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:38.853" endtime="20220707 04:04:38.891"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:38.892" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:04:38.891" endtime="20220707 04:04:38.953"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:38.953" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:04:38.953" endtime="20220707 04:04:38.953"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:38.954" endtime="20220707 04:04:38.991"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:38.992" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:38.992" endtime="20220707 04:04:39.044"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:04:39.044" endtime="20220707 04:04:39.083"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:39.084" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:39.083" endtime="20220707 04:04:39.175"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:39.176" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:04:39.176" endtime="20220707 04:04:39.176"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:39.177" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:04:39.176" endtime="20220707 04:04:39.291"/>
</kw>
<status status="PASS" starttime="20220707 04:04:38.851" endtime="20220707 04:04:39.292"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:39.293" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:04:39.292" endtime="20220707 04:04:39.293"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:39.293" endtime="20220707 04:04:39.340"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:39.341" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 04:04:39.341" endtime="20220707 04:04:39.398"/>
</kw>
<status status="PASS" starttime="20220707 04:04:39.292" endtime="20220707 04:04:39.398"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 04:04:39.652" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 04:04:39.399" endtime="20220707 04:04:39.652"/>
</kw>
<msg timestamp="20220707 04:04:39.653" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 04:04:39.399" endtime="20220707 04:04:39.653"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:39.654" endtime="20220707 04:04:39.693"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:39.693" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 04:04:39.693" endtime="20220707 04:04:39.789"/>
</kw>
<status status="PASS" starttime="20220707 04:04:39.654" endtime="20220707 04:04:39.789"/>
</kw>
<status status="PASS" starttime="20220707 04:04:39.653" endtime="20220707 04:04:39.789"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:39.790" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:04:39.790" endtime="20220707 04:04:39.929"/>
</kw>
<status status="PASS" starttime="20220707 04:04:39.790" endtime="20220707 04:04:39.929"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:39.930" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:04:39.929" endtime="20220707 04:04:40.209"/>
</kw>
<status status="PASS" starttime="20220707 04:04:39.398" endtime="20220707 04:04:40.209"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:40.210" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220707 04:04:40.210" endtime="20220707 04:04:40.210"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 04:04:40.281" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 04:04:40.211" endtime="20220707 04:04:40.281"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 04:04:40.281" endtime="20220707 04:04:40.281"/>
</return>
<msg timestamp="20220707 04:04:40.281" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220707 04:04:40.209" endtime="20220707 04:04:40.282"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 04:04:40.282" endtime="20220707 04:04:40.282"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:04:38.825" endtime="20220707 04:04:40.282"/>
</test>
<test id="s1-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:40.284" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 04:04:40.284" endtime="20220707 04:04:40.284"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:40.284" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 04:04:40.284" endtime="20220707 04:04:40.285"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:40.286" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:04:40.285" endtime="20220707 04:04:40.286"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:40.286" endtime="20220707 04:04:40.371"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:40.372" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:04:40.371" endtime="20220707 04:04:40.475"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:40.475" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:04:40.475" endtime="20220707 04:04:40.475"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:40.476" endtime="20220707 04:04:40.553"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:40.554" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:40.553" endtime="20220707 04:04:40.732"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:04:40.732" endtime="20220707 04:04:40.826"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:40.827" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:40.827" endtime="20220707 04:04:40.969"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:40.969" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:04:40.969" endtime="20220707 04:04:40.969"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:40.970" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:04:40.970" endtime="20220707 04:04:41.217"/>
</kw>
<status status="PASS" starttime="20220707 04:04:40.285" endtime="20220707 04:04:41.217"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:41.218" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220707 04:04:41.218" endtime="20220707 04:04:41.218"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:41.219" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:04:41.219" endtime="20220707 04:04:41.219"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:41.220" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220707 04:04:41.219" endtime="20220707 04:04:41.220"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:41.220" endtime="20220707 04:04:41.370"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220707 04:04:41.370" endtime="20220707 04:04:42.178"/>
</kw>
<status status="PASS" starttime="20220707 04:04:41.218" endtime="20220707 04:04:42.179"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:42.180" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:04:42.179" endtime="20220707 04:04:42.180"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 04:04:42.241" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220707 04:04:42.180" endtime="20220707 04:04:42.241"/>
</kw>
<status status="PASS" starttime="20220707 04:04:42.179" endtime="20220707 04:04:42.241"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:42.243" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:04:42.242" endtime="20220707 04:04:42.243"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:42.243" endtime="20220707 04:04:42.281"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:42.282" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 04:04:42.281" endtime="20220707 04:04:42.332"/>
</kw>
<status status="PASS" starttime="20220707 04:04:42.242" endtime="20220707 04:04:42.333"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 04:04:42.711" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 04:04:42.333" endtime="20220707 04:04:42.711"/>
</kw>
<msg timestamp="20220707 04:04:42.711" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 04:04:42.333" endtime="20220707 04:04:42.711"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:42.712" endtime="20220707 04:04:42.757"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:42.758" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 04:04:42.758" endtime="20220707 04:04:42.902"/>
</kw>
<status status="PASS" starttime="20220707 04:04:42.711" endtime="20220707 04:04:42.902"/>
</kw>
<status status="PASS" starttime="20220707 04:04:42.711" endtime="20220707 04:04:42.902"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:42.903" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:04:42.903" endtime="20220707 04:04:43.091"/>
</kw>
<status status="PASS" starttime="20220707 04:04:42.902" endtime="20220707 04:04:43.091"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:43.091" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:04:43.091" endtime="20220707 04:04:43.385"/>
</kw>
<status status="PASS" starttime="20220707 04:04:42.333" endtime="20220707 04:04:43.386"/>
</kw>
<status status="PASS" starttime="20220707 04:04:42.242" endtime="20220707 04:04:43.386"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:04:40.283" endtime="20220707 04:04:43.386"/>
</test>
<test id="s1-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:04:43.389" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:04:43.388" endtime="20220707 04:04:43.389"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:04:43.389" endtime="20220707 04:04:43.389"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:43.391" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:04:43.389" endtime="20220707 04:04:43.391"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:04:43.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:43.391" endtime="20220707 04:04:43.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:43.539" endtime="20220707 04:04:43.540"/>
</return>
<msg timestamp="20220707 04:04:43.540" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:43.388" endtime="20220707 04:04:43.540"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:43.540" endtime="20220707 04:04:43.540"/>
</return>
<msg timestamp="20220707 04:04:43.540" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:43.387" endtime="20220707 04:04:43.540"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:04:43.541" endtime="20220707 04:04:43.660"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:43.660" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220707 04:04:43.660" endtime="20220707 04:04:43.882"/>
</kw>
<status status="PASS" starttime="20220707 04:04:43.540" endtime="20220707 04:04:43.882"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:43.883" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220707 04:04:43.883" endtime="20220707 04:04:43.883"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:43.883" endtime="20220707 04:04:44.293"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:44.293" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220707 04:04:44.293" endtime="20220707 04:04:44.570"/>
</kw>
<status status="PASS" starttime="20220707 04:04:43.882" endtime="20220707 04:04:44.571"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:44.571" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 04:04:44.571" endtime="20220707 04:04:44.571"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:04:44.572" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220707 04:04:44.572" endtime="20220707 04:04:44.572"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:44.573" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:04:44.572" endtime="20220707 04:04:44.573"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:44.573" endtime="20220707 04:04:45.351"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:45.351" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:04:45.351" endtime="20220707 04:04:45.425"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:45.426" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:04:45.425" endtime="20220707 04:04:45.426"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:45.426" endtime="20220707 04:04:45.459"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:45.460" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:45.460" endtime="20220707 04:04:45.512"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:04:45.513" endtime="20220707 04:04:45.551"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:45.552" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:45.552" endtime="20220707 04:04:45.661"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:45.661" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:04:45.661" endtime="20220707 04:04:45.661"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:45.662" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:04:45.662" endtime="20220707 04:04:45.758"/>
</kw>
<status status="PASS" starttime="20220707 04:04:44.572" endtime="20220707 04:04:45.758"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:45.760" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220707 04:04:45.759" endtime="20220707 04:04:45.760"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:45.760" endtime="20220707 04:04:45.831"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:45.832" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220707 04:04:45.832" endtime="20220707 04:04:45.881"/>
</kw>
<status status="PASS" starttime="20220707 04:04:45.758" endtime="20220707 04:04:45.881"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:45.882" endtime="20220707 04:04:46.166"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:46.167" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220707 04:04:46.166" endtime="20220707 04:04:46.264"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220707 04:04:46.264" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220707 04:04:46.264" endtime="20220707 04:04:46.370"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:04:46.371" endtime="20220707 04:04:46.644"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:46.644" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220707 04:04:46.644" endtime="20220707 04:04:46.819"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:04:46.820" endtime="20220707 04:04:46.836"/>
</kw>
<status status="PASS" starttime="20220707 04:04:45.881" endtime="20220707 04:04:46.836"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:46.837" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220707 04:04:46.837" endtime="20220707 04:04:46.838"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 04:04:46.859" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 04:04:46.838" endtime="20220707 04:04:46.859"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 04:04:46.859" endtime="20220707 04:04:46.859"/>
</return>
<msg timestamp="20220707 04:04:46.859" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220707 04:04:46.837" endtime="20220707 04:04:46.859"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220707 04:04:46.859" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220707 04:04:46.859" endtime="20220707 04:04:46.860"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:04:46.860" endtime="20220707 04:04:46.860"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:04:46.860" endtime="20220707 04:04:46.942"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:46.946" level="INFO">${url} = boards/62c65b5b721768108fbccf18</msg>
<status status="PASS" starttime="20220707 04:04:46.946" endtime="20220707 04:04:46.946"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:04:46.983" level="INFO">${response} = None</msg>
<msg timestamp="20220707 04:04:46.983" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220707 04:04:46.946" endtime="20220707 04:04:46.983"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:46.983" endtime="20220707 04:04:46.983"/>
</return>
<msg timestamp="20220707 04:04:46.984" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220707 04:04:46.945" endtime="20220707 04:04:46.984"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:46.984" endtime="20220707 04:04:46.984"/>
</return>
<status status="FAIL" starttime="20220707 04:04:46.943" endtime="20220707 04:04:46.984"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:49.990" level="INFO">${url} = boards/62c65b5b721768108fbccf18</msg>
<status status="PASS" starttime="20220707 04:04:49.989" endtime="20220707 04:04:49.990"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:04:50.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:49.990" endtime="20220707 04:04:50.305"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:50.305" endtime="20220707 04:04:50.306"/>
</return>
<msg timestamp="20220707 04:04:50.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:49.988" endtime="20220707 04:04:50.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:50.306" endtime="20220707 04:04:50.306"/>
</return>
<status status="PASS" starttime="20220707 04:04:49.985" endtime="20220707 04:04:50.307"/>
</kw>
<status status="PASS" starttime="20220707 04:04:46.943" endtime="20220707 04:04:50.307"/>
</kw>
<status status="PASS" starttime="20220707 04:04:46.860" endtime="20220707 04:04:50.307"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:04:43.387" endtime="20220707 04:04:50.307"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:50.311" level="INFO">${url} = boards/62c65b498d14250e1906829e</msg>
<status status="PASS" starttime="20220707 04:04:50.310" endtime="20220707 04:04:50.311"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:04:50.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:50.311" endtime="20220707 04:04:50.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:50.647" endtime="20220707 04:04:50.647"/>
</return>
<msg timestamp="20220707 04:04:50.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:50.309" endtime="20220707 04:04:50.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:50.647" endtime="20220707 04:04:50.648"/>
</return>
<status status="PASS" starttime="20220707 04:04:50.309" endtime="20220707 04:04:50.648"/>
</kw>
<status status="PASS" starttime="20220707 04:04:50.308" endtime="20220707 04:04:50.648"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:04:50.648" endtime="20220707 04:04:50.650"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220707 04:04:50.650" endtime="20220707 04:04:50.651"/>
</kw>
<status status="PASS" starttime="20220707 04:04:50.308" endtime="20220707 04:04:50.651"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220707 04:04:25.171" endtime="20220707 04:04:50.651"/>
</suite>
<suite id="s1-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:04:50.671" endtime="20220707 04:04:50.671"/>
</kw>
<status status="PASS" starttime="20220707 04:04:50.670" endtime="20220707 04:04:50.671"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:04:50.672" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:04:50.672" endtime="20220707 04:04:50.672"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:04:50.673" endtime="20220707 04:04:50.673"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:50.674" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:04:50.673" endtime="20220707 04:04:50.674"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:04:50.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:50.674" endtime="20220707 04:04:50.834"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:50.834" endtime="20220707 04:04:50.834"/>
</return>
<msg timestamp="20220707 04:04:50.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:50.672" endtime="20220707 04:04:50.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:04:50.835" endtime="20220707 04:04:50.835"/>
</return>
<msg timestamp="20220707 04:04:50.835" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:04:50.671" endtime="20220707 04:04:50.835"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:04:50.837" level="INFO">${TEST_SUITE_BOARD_ID} = 62c65b623749073fe4bb5328</msg>
<status status="PASS" starttime="20220707 04:04:50.835" endtime="20220707 04:04:50.837"/>
</kw>
<status status="PASS" starttime="20220707 04:04:50.671" endtime="20220707 04:04:50.837"/>
</kw>
<status status="PASS" starttime="20220707 04:04:50.670" endtime="20220707 04:04:50.837"/>
</kw>
<test id="s1-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:04:50.839" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:04:50.839" endtime="20220707 04:04:51.902"/>
</kw>
<status status="PASS" starttime="20220707 04:04:50.838" endtime="20220707 04:04:51.902"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:51.902" endtime="20220707 04:04:51.902"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:51.902" endtime="20220707 04:04:51.902"/>
</branch>
<status status="PASS" starttime="20220707 04:04:50.838" endtime="20220707 04:04:51.902"/>
</if>
<status status="PASS" starttime="20220707 04:04:50.838" endtime="20220707 04:04:51.903"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:04:51.903" endtime="20220707 04:04:52.013"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:04:52.032" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:04:52.014" endtime="20220707 04:04:52.032"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:52.033" endtime="20220707 04:04:52.033"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:52.032" endtime="20220707 04:04:52.033"/>
</branch>
<status status="PASS" starttime="20220707 04:04:52.032" endtime="20220707 04:04:52.033"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:52.033" endtime="20220707 04:04:52.085"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:52.086" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:04:52.086" endtime="20220707 04:04:52.201"/>
</kw>
<status status="PASS" starttime="20220707 04:04:52.033" endtime="20220707 04:04:52.201"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:04:52.202" endtime="20220707 04:04:52.934"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:04:52.944" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:04:52.935" endtime="20220707 04:04:52.945"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:04:52.945" endtime="20220707 04:04:53.018"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:53.019" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:04:53.018" endtime="20220707 04:04:53.874"/>
</kw>
<status status="PASS" starttime="20220707 04:04:52.945" endtime="20220707 04:04:53.874"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:04:53.874" endtime="20220707 04:04:53.875"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:53.875" endtime="20220707 04:04:53.875"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:53.874" endtime="20220707 04:04:53.875"/>
</branch>
<status status="PASS" starttime="20220707 04:04:52.945" endtime="20220707 04:04:53.875"/>
</if>
<status status="PASS" starttime="20220707 04:04:52.934" endtime="20220707 04:04:53.875"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:04:53.875" endtime="20220707 04:04:53.900"/>
</kw>
<status status="PASS" starttime="20220707 04:04:53.875" endtime="20220707 04:04:53.900"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:53.901" endtime="20220707 04:04:53.947"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:53.948" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:04:54.009" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:04:54.088" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:04:53.947" endtime="20220707 04:04:54.088"/>
</kw>
<status status="PASS" starttime="20220707 04:04:53.900" endtime="20220707 04:04:54.089"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:04:54.102" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c65b...</msg>
<status status="PASS" starttime="20220707 04:04:54.089" endtime="20220707 04:04:54.102"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:04:54.102" endtime="20220707 04:04:54.102"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:04:54.102" endtime="20220707 04:04:54.102"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:04:54.102" endtime="20220707 04:04:54.102"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:04:54.103" endtime="20220707 04:04:54.150"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:54.151" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:04:54.151" endtime="20220707 04:04:54.245"/>
</kw>
<status status="PASS" starttime="20220707 04:04:54.103" endtime="20220707 04:04:54.245"/>
</branch>
<status status="PASS" starttime="20220707 04:04:54.102" endtime="20220707 04:04:54.245"/>
</if>
<status status="PASS" starttime="20220707 04:04:54.089" endtime="20220707 04:04:54.245"/>
</kw>
<status status="PASS" starttime="20220707 04:04:52.013" endtime="20220707 04:04:54.245"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:54.246" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 04:04:54.246" endtime="20220707 04:04:54.246"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:54.247" endtime="20220707 04:04:57.506"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:57.507" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 04:04:57.507" endtime="20220707 04:04:57.930"/>
</kw>
<status status="PASS" starttime="20220707 04:04:54.246" endtime="20220707 04:04:57.930"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:57.932" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:04:57.931" endtime="20220707 04:04:57.932"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:57.932" endtime="20220707 04:04:58.405"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:58.405" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:04:58.405" endtime="20220707 04:04:58.562"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:58.563" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:04:58.562" endtime="20220707 04:04:58.563"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:58.563" endtime="20220707 04:04:58.623"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:58.623" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:58.623" endtime="20220707 04:04:58.685"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:04:58.685" endtime="20220707 04:04:58.751"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:58.751" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:04:58.751" endtime="20220707 04:04:58.903"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:58.904" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:04:58.903" endtime="20220707 04:04:58.904"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:04:58.904" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:04:58.904" endtime="20220707 04:04:58.999"/>
</kw>
<status status="PASS" starttime="20220707 04:04:57.931" endtime="20220707 04:04:58.999"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:59.000" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220707 04:04:58.999" endtime="20220707 04:04:59.000"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:04:59.001" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220707 04:04:59.000" endtime="20220707 04:04:59.001"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:04:59.001" endtime="20220707 04:04:59.076"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220707 04:05:04.077" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220707 04:04:59.077" endtime="20220707 04:05:04.077"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220707 04:05:04.078" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220707 04:05:04.078" endtime="20220707 04:05:04.402"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220707 04:05:09.403" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220707 04:05:04.403" endtime="20220707 04:05:09.404"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 04:05:09.404" endtime="20220707 04:05:09.423"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:09.424" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220707 04:05:09.424" endtime="20220707 04:05:09.523"/>
</kw>
<status status="PASS" starttime="20220707 04:04:58.999" endtime="20220707 04:05:09.523"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:09.524" endtime="20220707 04:05:09.588"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:09.589" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220707 04:05:09.588" endtime="20220707 04:05:09.671"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:09.671" endtime="20220707 04:05:09.752"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:09.753" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220707 04:05:09.753" endtime="20220707 04:05:09.809"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:09.809" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220707 04:05:09.809" endtime="20220707 04:05:09.900"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:09.900" endtime="20220707 04:05:09.939"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:05:09.939" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220707 04:05:10.216" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 04:05:10.216" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 04:05:09.939" endtime="20220707 04:05:10.260"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:05:10.260" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220707 04:05:10.261" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220707 04:05:10.261" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220707 04:05:10.260" endtime="20220707 04:05:10.275"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:05:10.276" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220707 04:05:10.277" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220707 04:05:10.277" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220707 04:05:10.276" endtime="20220707 04:05:10.294"/>
</kw>
<status status="PASS" starttime="20220707 04:05:09.523" endtime="20220707 04:05:10.294"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:10.295" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:05:10.295" endtime="20220707 04:05:10.295"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:10.295" endtime="20220707 04:05:10.333"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:10.334" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:05:10.333" endtime="20220707 04:05:10.427"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:10.428" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:05:10.427" endtime="20220707 04:05:10.428"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:10.428" endtime="20220707 04:05:10.482"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:10.483" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:05:10.482" endtime="20220707 04:05:10.541"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:05:10.541" endtime="20220707 04:05:10.573"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:10.574" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:05:10.573" endtime="20220707 04:05:10.644"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:10.645" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:05:10.645" endtime="20220707 04:05:10.645"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:10.646" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:05:10.646" endtime="20220707 04:05:10.709"/>
</kw>
<status status="PASS" starttime="20220707 04:05:10.294" endtime="20220707 04:05:10.709"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:10.710" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:05:10.710" endtime="20220707 04:05:10.710"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:10.710" endtime="20220707 04:05:10.760"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:10.761" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:05:10.761" endtime="20220707 04:05:10.821"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:10.821" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:05:10.821" endtime="20220707 04:05:10.822"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:10.822" endtime="20220707 04:05:10.894"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:10.894" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:05:10.894" endtime="20220707 04:05:10.947"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:05:10.947" endtime="20220707 04:05:10.981"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:10.982" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:05:10.981" endtime="20220707 04:05:11.076"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:11.077" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:05:11.076" endtime="20220707 04:05:11.077"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:11.077" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:05:11.077" endtime="20220707 04:05:11.162"/>
</kw>
<status status="PASS" starttime="20220707 04:05:10.709" endtime="20220707 04:05:11.162"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:11.163" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220707 04:05:11.163" endtime="20220707 04:05:11.270"/>
</kw>
<status status="PASS" starttime="20220707 04:05:11.163" endtime="20220707 04:05:11.270"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:11.271" endtime="20220707 04:05:11.581"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:11.582" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220707 04:05:11.582" endtime="20220707 04:05:11.736"/>
</kw>
<status status="PASS" starttime="20220707 04:05:11.271" endtime="20220707 04:05:11.736"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:11.737" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220707 04:05:11.737" endtime="20220707 04:05:11.737"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 04:05:11.802" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220707 04:05:11.737" endtime="20220707 04:05:11.802"/>
</kw>
<status status="PASS" starttime="20220707 04:05:11.736" endtime="20220707 04:05:11.802"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:11.803" endtime="20220707 04:05:11.839"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:11.840" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220707 04:05:11.839" endtime="20220707 04:05:11.956"/>
</kw>
<status status="PASS" starttime="20220707 04:05:11.802" endtime="20220707 04:05:11.957"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:11.958" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220707 04:05:11.957" endtime="20220707 04:05:11.958"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 04:05:11.990" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220707 04:05:11.958" endtime="20220707 04:05:11.990"/>
</kw>
<status status="PASS" starttime="20220707 04:05:11.957" endtime="20220707 04:05:11.990"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:05:11.990" endtime="20220707 04:05:12.084"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:04:50.837" endtime="20220707 04:05:12.084"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:12.088" level="INFO">${url} = boards/62c65b623749073fe4bb5328</msg>
<status status="PASS" starttime="20220707 04:05:12.088" endtime="20220707 04:05:12.088"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:05:12.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:05:12.088" endtime="20220707 04:05:12.405"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:05:12.405" endtime="20220707 04:05:12.405"/>
</return>
<msg timestamp="20220707 04:05:12.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:05:12.087" endtime="20220707 04:05:12.405"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:05:12.405" endtime="20220707 04:05:12.405"/>
</return>
<status status="PASS" starttime="20220707 04:05:12.087" endtime="20220707 04:05:12.406"/>
</kw>
<status status="PASS" starttime="20220707 04:05:12.086" endtime="20220707 04:05:12.406"/>
</kw>
<status status="PASS" starttime="20220707 04:05:12.086" endtime="20220707 04:05:12.406"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:05:12.406" endtime="20220707 04:05:12.407"/>
</kw>
<status status="PASS" starttime="20220707 04:05:12.086" endtime="20220707 04:05:12.407"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220707 04:04:50.654" endtime="20220707 04:05:12.407"/>
</suite>
<suite id="s1-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:05:12.421" endtime="20220707 04:05:12.422"/>
</kw>
<status status="PASS" starttime="20220707 04:05:12.421" endtime="20220707 04:05:12.422"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:05:12.423" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:05:12.423" endtime="20220707 04:05:12.423"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:05:12.423" endtime="20220707 04:05:12.423"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:12.424" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:05:12.424" endtime="20220707 04:05:12.424"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:05:12.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:05:12.425" endtime="20220707 04:05:12.616"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:05:12.616" endtime="20220707 04:05:12.616"/>
</return>
<msg timestamp="20220707 04:05:12.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:05:12.422" endtime="20220707 04:05:12.616"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:05:12.617" endtime="20220707 04:05:12.617"/>
</return>
<msg timestamp="20220707 04:05:12.617" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:05:12.422" endtime="20220707 04:05:12.617"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:05:12.619" level="INFO">${TEST_SUITE_BOARD_ID} = 62c65b78f0a0210ec325e4bd</msg>
<status status="PASS" starttime="20220707 04:05:12.617" endtime="20220707 04:05:12.619"/>
</kw>
<status status="PASS" starttime="20220707 04:05:12.422" endtime="20220707 04:05:12.619"/>
</kw>
<status status="PASS" starttime="20220707 04:05:12.421" endtime="20220707 04:05:12.619"/>
</kw>
<test id="s1-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:05:12.621" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:05:12.621" endtime="20220707 04:05:13.682"/>
</kw>
<status status="PASS" starttime="20220707 04:05:12.621" endtime="20220707 04:05:13.682"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:13.682" endtime="20220707 04:05:13.682"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:13.682" endtime="20220707 04:05:13.682"/>
</branch>
<status status="PASS" starttime="20220707 04:05:12.620" endtime="20220707 04:05:13.682"/>
</if>
<status status="PASS" starttime="20220707 04:05:12.620" endtime="20220707 04:05:13.682"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:05:13.682" endtime="20220707 04:05:13.798"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:05:13.824" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:05:13.799" endtime="20220707 04:05:13.824"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:13.825" endtime="20220707 04:05:13.825"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:13.825" endtime="20220707 04:05:13.825"/>
</branch>
<status status="PASS" starttime="20220707 04:05:13.824" endtime="20220707 04:05:13.825"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:13.826" endtime="20220707 04:05:13.866"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:13.867" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:05:13.866" endtime="20220707 04:05:13.970"/>
</kw>
<status status="PASS" starttime="20220707 04:05:13.825" endtime="20220707 04:05:13.970"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:05:13.971" endtime="20220707 04:05:14.696"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:05:14.703" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:05:14.696" endtime="20220707 04:05:14.703"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:14.703" endtime="20220707 04:05:14.742"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:14.742" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:05:14.742" endtime="20220707 04:05:15.535"/>
</kw>
<status status="PASS" starttime="20220707 04:05:14.703" endtime="20220707 04:05:15.535"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:05:15.536" endtime="20220707 04:05:15.536"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:15.536" endtime="20220707 04:05:15.536"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:15.535" endtime="20220707 04:05:15.536"/>
</branch>
<status status="PASS" starttime="20220707 04:05:14.703" endtime="20220707 04:05:15.536"/>
</if>
<status status="PASS" starttime="20220707 04:05:14.696" endtime="20220707 04:05:15.536"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:05:15.537" endtime="20220707 04:05:15.549"/>
</kw>
<status status="PASS" starttime="20220707 04:05:15.536" endtime="20220707 04:05:15.549"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:15.550" endtime="20220707 04:05:15.597"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:15.598" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:05:15.674" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:05:15.741" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:05:15.597" endtime="20220707 04:05:15.741"/>
</kw>
<status status="PASS" starttime="20220707 04:05:15.549" endtime="20220707 04:05:15.741"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:05:15.749" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c65b...</msg>
<status status="PASS" starttime="20220707 04:05:15.742" endtime="20220707 04:05:15.749"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:05:15.750" endtime="20220707 04:05:15.750"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:15.750" endtime="20220707 04:05:15.750"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:15.749" endtime="20220707 04:05:15.750"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:15.750" endtime="20220707 04:05:15.810"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:15.811" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:05:15.810" endtime="20220707 04:05:15.920"/>
</kw>
<status status="PASS" starttime="20220707 04:05:15.750" endtime="20220707 04:05:15.920"/>
</branch>
<status status="PASS" starttime="20220707 04:05:15.749" endtime="20220707 04:05:15.920"/>
</if>
<status status="PASS" starttime="20220707 04:05:15.741" endtime="20220707 04:05:15.920"/>
</kw>
<status status="PASS" starttime="20220707 04:05:13.798" endtime="20220707 04:05:15.920"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:15.921" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 04:05:15.921" endtime="20220707 04:05:15.921"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:15.922" endtime="20220707 04:05:18.976"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:18.976" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 04:05:18.976" endtime="20220707 04:05:19.393"/>
</kw>
<status status="PASS" starttime="20220707 04:05:15.921" endtime="20220707 04:05:19.393"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 04:05:19.394" endtime="20220707 04:05:19.844"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:19.844" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220707 04:05:19.844" endtime="20220707 04:05:20.006"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:20.007" endtime="20220707 04:05:20.111"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:20.111" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220707 04:05:20.111" endtime="20220707 04:05:20.344"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:05:20.345" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 04:05:20.657" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 04:05:20.657" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 04:05:20.345" endtime="20220707 04:05:20.693"/>
</kw>
<status status="PASS" starttime="20220707 04:05:19.394" endtime="20220707 04:05:20.694"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:20.695" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220707 04:05:20.694" endtime="20220707 04:05:20.695"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:20.695" endtime="20220707 04:05:20.738"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220707 04:05:20.753" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220707 04:05:20.738" endtime="20220707 04:05:20.753"/>
</kw>
<status status="PASS" starttime="20220707 04:05:20.694" endtime="20220707 04:05:20.753"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:20.754" endtime="20220707 04:05:20.832"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:20.832" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 04:05:20.832" endtime="20220707 04:05:20.929"/>
</kw>
<status status="PASS" starttime="20220707 04:05:20.832" endtime="20220707 04:05:20.929"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:20.930" endtime="20220707 04:05:20.993"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:20.994" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220707 04:05:20.994" endtime="20220707 04:05:21.067"/>
</kw>
<status status="PASS" starttime="20220707 04:05:20.993" endtime="20220707 04:05:21.067"/>
</kw>
<status status="PASS" starttime="20220707 04:05:20.754" endtime="20220707 04:05:21.067"/>
</kw>
<status status="PASS" starttime="20220707 04:05:20.754" endtime="20220707 04:05:21.067"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:05:21.067" endtime="20220707 04:05:21.183"/>
</kw>
<status status="PASS" starttime="20220707 04:05:20.753" endtime="20220707 04:05:21.184"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:05:12.619" endtime="20220707 04:05:21.184"/>
</test>
<test id="s1-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:05:21.187" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:05:21.187" endtime="20220707 04:05:22.292"/>
</kw>
<status status="PASS" starttime="20220707 04:05:21.187" endtime="20220707 04:05:22.292"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:22.292" endtime="20220707 04:05:22.292"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:22.292" endtime="20220707 04:05:22.292"/>
</branch>
<status status="PASS" starttime="20220707 04:05:21.187" endtime="20220707 04:05:22.292"/>
</if>
<status status="PASS" starttime="20220707 04:05:21.186" endtime="20220707 04:05:22.292"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:05:22.293" endtime="20220707 04:05:22.414"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:05:22.424" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:05:22.416" endtime="20220707 04:05:22.424"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:22.425" endtime="20220707 04:05:22.425"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:22.425" endtime="20220707 04:05:22.425"/>
</branch>
<status status="PASS" starttime="20220707 04:05:22.424" endtime="20220707 04:05:22.425"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:22.425" endtime="20220707 04:05:22.458"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:22.458" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:05:22.458" endtime="20220707 04:05:22.578"/>
</kw>
<status status="PASS" starttime="20220707 04:05:22.425" endtime="20220707 04:05:22.578"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:05:22.578" endtime="20220707 04:05:23.309"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:05:23.319" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:05:23.310" endtime="20220707 04:05:23.319"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:23.320" endtime="20220707 04:05:23.360"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:23.361" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:05:23.360" endtime="20220707 04:05:24.253"/>
</kw>
<status status="PASS" starttime="20220707 04:05:23.319" endtime="20220707 04:05:24.253"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:05:24.253" endtime="20220707 04:05:24.254"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:24.254" endtime="20220707 04:05:24.254"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:24.253" endtime="20220707 04:05:24.254"/>
</branch>
<status status="PASS" starttime="20220707 04:05:23.319" endtime="20220707 04:05:24.254"/>
</if>
<status status="PASS" starttime="20220707 04:05:23.309" endtime="20220707 04:05:24.254"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:05:24.254" endtime="20220707 04:05:24.279"/>
</kw>
<status status="PASS" starttime="20220707 04:05:24.254" endtime="20220707 04:05:24.279"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:24.280" endtime="20220707 04:05:24.352"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:24.352" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:05:24.440" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:05:24.520" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:05:24.352" endtime="20220707 04:05:24.520"/>
</kw>
<status status="PASS" starttime="20220707 04:05:24.279" endtime="20220707 04:05:24.520"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:05:24.536" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c65b...</msg>
<status status="PASS" starttime="20220707 04:05:24.521" endtime="20220707 04:05:24.536"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:05:24.537" endtime="20220707 04:05:24.537"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:24.537" endtime="20220707 04:05:24.537"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:24.536" endtime="20220707 04:05:24.537"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:24.537" endtime="20220707 04:05:24.583"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:24.584" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:05:24.584" endtime="20220707 04:05:24.689"/>
</kw>
<status status="PASS" starttime="20220707 04:05:24.537" endtime="20220707 04:05:24.689"/>
</branch>
<status status="PASS" starttime="20220707 04:05:24.536" endtime="20220707 04:05:24.689"/>
</if>
<status status="PASS" starttime="20220707 04:05:24.521" endtime="20220707 04:05:24.689"/>
</kw>
<status status="PASS" starttime="20220707 04:05:22.415" endtime="20220707 04:05:24.690"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:24.691" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 04:05:24.690" endtime="20220707 04:05:24.691"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:24.691" endtime="20220707 04:05:27.719"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:27.720" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 04:05:27.720" endtime="20220707 04:05:28.138"/>
</kw>
<status status="PASS" starttime="20220707 04:05:24.690" endtime="20220707 04:05:28.139"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 04:05:28.139" endtime="20220707 04:05:28.611"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:28.611" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220707 04:05:28.611" endtime="20220707 04:05:28.808"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:28.808" endtime="20220707 04:05:28.883"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:28.884" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220707 04:05:28.884" endtime="20220707 04:05:29.092"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:05:29.092" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 04:05:29.379" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 04:05:29.379" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 04:05:29.092" endtime="20220707 04:05:29.409"/>
</kw>
<status status="PASS" starttime="20220707 04:05:28.139" endtime="20220707 04:05:29.410"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:29.411" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220707 04:05:29.410" endtime="20220707 04:05:29.411"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:29.411" endtime="20220707 04:05:29.474"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:29.475" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220707 04:05:29.475" endtime="20220707 04:05:29.570"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:29.570" endtime="20220707 04:05:29.611"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:05:29.612" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 04:05:29.908" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220707 04:05:29.908" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220707 04:05:29.611" endtime="20220707 04:05:29.923"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:29.925" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220707 04:05:29.924" endtime="20220707 04:05:30.051"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:05:30.051" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220707 04:05:30.051" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220707 04:05:30.051" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 04:05:30.051" endtime="20220707 04:05:30.080"/>
</kw>
<status status="PASS" starttime="20220707 04:05:29.410" endtime="20220707 04:05:30.080"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:30.082" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220707 04:05:30.081" endtime="20220707 04:05:30.082"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:30.082" endtime="20220707 04:05:30.136"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220707 04:05:30.165" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220707 04:05:30.136" endtime="20220707 04:05:30.165"/>
</kw>
<status status="PASS" starttime="20220707 04:05:30.081" endtime="20220707 04:05:30.166"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:30.167" endtime="20220707 04:05:30.215"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:30.216" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 04:05:30.215" endtime="20220707 04:05:30.281"/>
</kw>
<status status="PASS" starttime="20220707 04:05:30.215" endtime="20220707 04:05:30.282"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:30.282" endtime="20220707 04:05:30.354"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:30.355" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220707 04:05:30.355" endtime="20220707 04:05:30.447"/>
</kw>
<status status="PASS" starttime="20220707 04:05:30.354" endtime="20220707 04:05:30.447"/>
</kw>
<status status="PASS" starttime="20220707 04:05:30.167" endtime="20220707 04:05:30.447"/>
</kw>
<status status="PASS" starttime="20220707 04:05:30.166" endtime="20220707 04:05:30.447"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:05:30.447" endtime="20220707 04:05:30.558"/>
</kw>
<status status="PASS" starttime="20220707 04:05:30.166" endtime="20220707 04:05:30.558"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:05:21.185" endtime="20220707 04:05:30.559"/>
</test>
<test id="s1-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:05:30.563" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:05:30.562" endtime="20220707 04:05:33.284"/>
</kw>
<status status="PASS" starttime="20220707 04:05:30.562" endtime="20220707 04:05:33.284"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:33.285" endtime="20220707 04:05:33.285"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:33.284" endtime="20220707 04:05:33.285"/>
</branch>
<status status="PASS" starttime="20220707 04:05:30.562" endtime="20220707 04:05:33.285"/>
</if>
<status status="PASS" starttime="20220707 04:05:30.562" endtime="20220707 04:05:33.285"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:05:33.285" endtime="20220707 04:05:33.393"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:05:33.403" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:05:33.394" endtime="20220707 04:05:33.403"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:33.404" endtime="20220707 04:05:33.404"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:33.404" endtime="20220707 04:05:33.404"/>
</branch>
<status status="PASS" starttime="20220707 04:05:33.403" endtime="20220707 04:05:33.404"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:33.404" endtime="20220707 04:05:33.439"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:33.439" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:05:33.439" endtime="20220707 04:05:33.572"/>
</kw>
<status status="PASS" starttime="20220707 04:05:33.404" endtime="20220707 04:05:33.573"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:05:33.573" endtime="20220707 04:05:34.286"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:05:34.292" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:05:34.286" endtime="20220707 04:05:34.292"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:34.293" endtime="20220707 04:05:34.333"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:34.334" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:05:34.333" endtime="20220707 04:05:35.238"/>
</kw>
<status status="PASS" starttime="20220707 04:05:34.293" endtime="20220707 04:05:35.238"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:05:35.238" endtime="20220707 04:05:35.238"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:35.239" endtime="20220707 04:05:35.239"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:35.238" endtime="20220707 04:05:35.239"/>
</branch>
<status status="PASS" starttime="20220707 04:05:34.293" endtime="20220707 04:05:35.239"/>
</if>
<status status="PASS" starttime="20220707 04:05:34.286" endtime="20220707 04:05:35.239"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:05:35.240" endtime="20220707 04:05:35.252"/>
</kw>
<status status="PASS" starttime="20220707 04:05:35.239" endtime="20220707 04:05:35.252"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:35.252" endtime="20220707 04:05:35.293"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:35.293" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:05:35.364" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:05:35.469" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:05:35.293" endtime="20220707 04:05:35.469"/>
</kw>
<status status="PASS" starttime="20220707 04:05:35.252" endtime="20220707 04:05:35.469"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:05:35.477" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c65b...</msg>
<status status="PASS" starttime="20220707 04:05:35.470" endtime="20220707 04:05:35.477"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:05:35.478" endtime="20220707 04:05:35.478"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:35.478" endtime="20220707 04:05:35.478"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:35.477" endtime="20220707 04:05:35.478"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:35.478" endtime="20220707 04:05:35.557"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:35.558" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:05:35.558" endtime="20220707 04:05:35.648"/>
</kw>
<status status="PASS" starttime="20220707 04:05:35.478" endtime="20220707 04:05:35.648"/>
</branch>
<status status="PASS" starttime="20220707 04:05:35.477" endtime="20220707 04:05:35.648"/>
</if>
<status status="PASS" starttime="20220707 04:05:35.470" endtime="20220707 04:05:35.648"/>
</kw>
<status status="PASS" starttime="20220707 04:05:33.394" endtime="20220707 04:05:35.648"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:35.649" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 04:05:35.649" endtime="20220707 04:05:35.649"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:35.650" endtime="20220707 04:05:38.491"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:38.492" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 04:05:38.492" endtime="20220707 04:05:38.924"/>
</kw>
<status status="PASS" starttime="20220707 04:05:35.649" endtime="20220707 04:05:38.925"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 04:05:38.925" endtime="20220707 04:05:39.377"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:39.377" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220707 04:05:39.377" endtime="20220707 04:05:39.577"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:39.577" endtime="20220707 04:05:39.632"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:39.632" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220707 04:05:39.632" endtime="20220707 04:05:39.971"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:05:39.971" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 04:05:40.277" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 04:05:40.277" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 04:05:39.971" endtime="20220707 04:05:40.315"/>
</kw>
<status status="PASS" starttime="20220707 04:05:38.925" endtime="20220707 04:05:40.315"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:40.316" endtime="20220707 04:05:40.371"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:40.372" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 04:05:40.372" endtime="20220707 04:05:40.455"/>
</kw>
<status status="PASS" starttime="20220707 04:05:40.372" endtime="20220707 04:05:40.456"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:40.456" endtime="20220707 04:05:40.538"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:40.539" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220707 04:05:40.539" endtime="20220707 04:05:40.610"/>
</kw>
<status status="PASS" starttime="20220707 04:05:40.538" endtime="20220707 04:05:40.610"/>
</kw>
<status status="PASS" starttime="20220707 04:05:40.316" endtime="20220707 04:05:40.610"/>
</kw>
<status status="PASS" starttime="20220707 04:05:40.315" endtime="20220707 04:05:40.610"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:40.611" endtime="20220707 04:05:40.662"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:40.663" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 04:05:40.663" endtime="20220707 04:05:40.770"/>
</kw>
<status status="PASS" starttime="20220707 04:05:40.611" endtime="20220707 04:05:40.770"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:40.771" endtime="20220707 04:05:40.833"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:40.834" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220707 04:05:40.834" endtime="20220707 04:05:41.005"/>
</kw>
<status status="PASS" starttime="20220707 04:05:40.834" endtime="20220707 04:05:41.005"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:41.005" endtime="20220707 04:05:41.055"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:41.056" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220707 04:05:41.056" endtime="20220707 04:05:41.138"/>
</kw>
<status status="PASS" starttime="20220707 04:05:41.055" endtime="20220707 04:05:41.139"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:41.139" endtime="20220707 04:05:41.189"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:41.190" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220707 04:05:41.190" endtime="20220707 04:05:41.260"/>
</kw>
<status status="PASS" starttime="20220707 04:05:41.189" endtime="20220707 04:05:41.260"/>
</kw>
<status status="PASS" starttime="20220707 04:05:40.770" endtime="20220707 04:05:41.260"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:41.261" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220707 04:05:41.261" endtime="20220707 04:05:41.261"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:41.262" endtime="20220707 04:05:41.516"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220707 04:05:41.526" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220707 04:05:41.516" endtime="20220707 04:05:41.526"/>
</kw>
<status status="PASS" starttime="20220707 04:05:41.261" endtime="20220707 04:05:41.526"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:41.526" endtime="20220707 04:05:41.567"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:41.567" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220707 04:05:41.567" endtime="20220707 04:05:41.647"/>
</kw>
<status status="PASS" starttime="20220707 04:05:41.526" endtime="20220707 04:05:41.648"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:05:41.648" endtime="20220707 04:05:41.829"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:05:30.561" endtime="20220707 04:05:41.829"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:05:41.832" level="INFO">${url} = boards/62c65b78f0a0210ec325e4bd</msg>
<status status="PASS" starttime="20220707 04:05:41.832" endtime="20220707 04:05:41.833"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:05:42.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:05:41.833" endtime="20220707 04:05:42.137"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:05:42.137" endtime="20220707 04:05:42.138"/>
</return>
<msg timestamp="20220707 04:05:42.138" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:05:41.832" endtime="20220707 04:05:42.138"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:05:42.138" endtime="20220707 04:05:42.138"/>
</return>
<status status="PASS" starttime="20220707 04:05:41.831" endtime="20220707 04:05:42.138"/>
</kw>
<status status="PASS" starttime="20220707 04:05:41.831" endtime="20220707 04:05:42.138"/>
</kw>
<status status="PASS" starttime="20220707 04:05:41.831" endtime="20220707 04:05:42.138"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:05:42.139" endtime="20220707 04:05:42.140"/>
</kw>
<status status="PASS" starttime="20220707 04:05:41.830" endtime="20220707 04:05:42.140"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220707 04:05:12.409" endtime="20220707 04:05:42.140"/>
</suite>
<suite id="s1-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:05:42.150" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:05:42.149" endtime="20220707 04:05:43.238"/>
</kw>
<status status="PASS" starttime="20220707 04:05:42.149" endtime="20220707 04:05:43.238"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:43.238" endtime="20220707 04:05:43.238"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:43.238" endtime="20220707 04:05:43.238"/>
</branch>
<status status="PASS" starttime="20220707 04:05:42.149" endtime="20220707 04:05:43.238"/>
</if>
<status status="PASS" starttime="20220707 04:05:42.149" endtime="20220707 04:05:43.238"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:43.239" endtime="20220707 04:05:43.280"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:43.281" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:05:43.280" endtime="20220707 04:05:43.394"/>
</kw>
<status status="PASS" starttime="20220707 04:05:43.238" endtime="20220707 04:05:43.394"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:05:43.394" endtime="20220707 04:05:44.130"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:05:44.140" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:05:44.131" endtime="20220707 04:05:44.140"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:44.141" endtime="20220707 04:05:44.196"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:44.196" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:05:44.196" endtime="20220707 04:05:44.977"/>
</kw>
<status status="PASS" starttime="20220707 04:05:44.140" endtime="20220707 04:05:44.977"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:05:44.977" endtime="20220707 04:05:44.977"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:44.977" endtime="20220707 04:05:44.977"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:44.977" endtime="20220707 04:05:44.977"/>
</branch>
<status status="PASS" starttime="20220707 04:05:44.140" endtime="20220707 04:05:44.977"/>
</if>
<status status="PASS" starttime="20220707 04:05:44.131" endtime="20220707 04:05:44.977"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:05:44.978" endtime="20220707 04:05:45.017"/>
</kw>
<status status="PASS" starttime="20220707 04:05:44.978" endtime="20220707 04:05:45.017"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:45.018" endtime="20220707 04:05:45.053"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:45.054" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:05:45.103" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:05:45.176" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:05:45.053" endtime="20220707 04:05:45.177"/>
</kw>
<status status="PASS" starttime="20220707 04:05:45.017" endtime="20220707 04:05:45.177"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:05:45.194" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c65b...</msg>
<status status="PASS" starttime="20220707 04:05:45.177" endtime="20220707 04:05:45.194"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:05:45.195" endtime="20220707 04:05:45.195"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:05:45.195" endtime="20220707 04:05:45.195"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:05:45.195" endtime="20220707 04:05:45.195"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:05:45.195" endtime="20220707 04:05:45.257"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:05:45.257" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:05:45.257" endtime="20220707 04:05:45.352"/>
</kw>
<status status="PASS" starttime="20220707 04:05:45.195" endtime="20220707 04:05:45.352"/>
</branch>
<status status="PASS" starttime="20220707 04:05:45.194" endtime="20220707 04:05:45.352"/>
</if>
<status status="PASS" starttime="20220707 04:05:45.177" endtime="20220707 04:05:45.352"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:05:45.353" endtime="20220707 04:05:48.304"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:05:48.304" endtime="20220707 04:05:48.337"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 04:05:48.338" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220707 04:05:48.338" endtime="20220707 04:05:48.364"/>
</kw>
<status status="PASS" starttime="20220707 04:05:45.352" endtime="20220707 04:05:48.365"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:05:48.365" endtime="20220707 04:05:48.446"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:05:42.148" endtime="20220707 04:05:48.446"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220707 04:05:42.142" endtime="20220707 04:05:48.447"/>
</suite>
<status status="PASS" starttime="20220707 04:03:42.651" endtime="20220707 04:05:48.449"/>
</suite>
<status status="PASS" starttime="20220707 04:03:42.633" endtime="20220707 04:05:48.452"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.update.description</stat>
<stat pass="1" fail="0" skip="0">board.update.name</stat>
<stat pass="1" fail="0" skip="0">card.comment</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.drag</stat>
<stat pass="1" fail="0" skip="0">card.move</stat>
<stat pass="1" fail="0" skip="0">card.title_board</stat>
<stat pass="15" fail="0" skip="0">gui</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="2" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="4" fail="0" skip="0">regression</stat>
<stat pass="11" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="15" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1" name="Gui">Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="Trello Gui Board">Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s2" name="Trello Gui Cards">Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Trello Gui Labels">Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Gui Lists">Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Trello Gui Login">Trello.Gui.Trello Gui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
