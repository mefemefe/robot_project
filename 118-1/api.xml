<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 18:29:14.844" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 18:29:15.003" endtime="20220704 18:29:15.003"/>
</kw>
<status status="PASS" starttime="20220704 18:29:15.001" endtime="20220704 18:29:15.003"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:15.006" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:15.005" endtime="20220704 18:29:15.006"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:15.006" endtime="20220704 18:29:15.006"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:15.007" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:29:15.006" endtime="20220704 18:29:15.007"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:15.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:15.007" endtime="20220704 18:29:15.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:15.269" endtime="20220704 18:29:15.269"/>
</return>
<msg timestamp="20220704 18:29:15.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:15.005" endtime="20220704 18:29:15.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:15.269" endtime="20220704 18:29:15.270"/>
</return>
<msg timestamp="20220704 18:29:15.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:15.005" endtime="20220704 18:29:15.270"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:15.271" endtime="20220704 18:29:15.277"/>
</kw>
<status status="PASS" starttime="20220704 18:29:15.270" endtime="20220704 18:29:15.277"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:15.279" level="INFO">${url} = boards/62c3317b9843e15e675917f1</msg>
<status status="PASS" starttime="20220704 18:29:15.279" endtime="20220704 18:29:15.279"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:15.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:15.279" endtime="20220704 18:29:15.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:15.683" endtime="20220704 18:29:15.683"/>
</return>
<msg timestamp="20220704 18:29:15.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:15.278" endtime="20220704 18:29:15.684"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:15.684" endtime="20220704 18:29:15.684"/>
</return>
<status status="PASS" starttime="20220704 18:29:15.277" endtime="20220704 18:29:15.684"/>
</kw>
<status status="PASS" starttime="20220704 18:29:15.277" endtime="20220704 18:29:15.684"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:29:15.004" endtime="20220704 18:29:15.684"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:15.687" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:15.687" endtime="20220704 18:29:15.687"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:15.687" endtime="20220704 18:29:15.687"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:15.688" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:29:15.687" endtime="20220704 18:29:15.688"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:15.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:15.688" endtime="20220704 18:29:15.993"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:15.993" endtime="20220704 18:29:15.993"/>
</return>
<msg timestamp="20220704 18:29:15.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:15.686" endtime="20220704 18:29:15.993"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:15.993" endtime="20220704 18:29:15.993"/>
</return>
<msg timestamp="20220704 18:29:15.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:15.686" endtime="20220704 18:29:15.994"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:15.994" endtime="20220704 18:29:15.999"/>
</kw>
<status status="PASS" starttime="20220704 18:29:15.994" endtime="20220704 18:29:15.999"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:16.001" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:16.000" endtime="20220704 18:29:16.001"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:16.001" endtime="20220704 18:29:16.001"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:16.002" level="INFO">${url} = boards/62c3317b49f2c82c52f0565e</msg>
<status status="PASS" starttime="20220704 18:29:16.001" endtime="20220704 18:29:16.002"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:16.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:16.002" endtime="20220704 18:29:16.147"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:16.148" endtime="20220704 18:29:16.148"/>
</return>
<msg timestamp="20220704 18:29:16.148" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:16.000" endtime="20220704 18:29:16.148"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:16.148" endtime="20220704 18:29:16.148"/>
</return>
<status status="PASS" starttime="20220704 18:29:15.999" endtime="20220704 18:29:16.149"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:16.152" level="INFO">${url} = boards/62c3317b49f2c82c52f0565e</msg>
<status status="PASS" starttime="20220704 18:29:16.151" endtime="20220704 18:29:16.152"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:16.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:16.152" endtime="20220704 18:29:16.251"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:16.251" endtime="20220704 18:29:16.251"/>
</return>
<msg timestamp="20220704 18:29:16.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:16.150" endtime="20220704 18:29:16.252"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:16.252" endtime="20220704 18:29:16.252"/>
</return>
<msg timestamp="20220704 18:29:16.252" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:16.149" endtime="20220704 18:29:16.252"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:16.253" endtime="20220704 18:29:16.258"/>
</kw>
<status status="PASS" starttime="20220704 18:29:16.252" endtime="20220704 18:29:16.258"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:16.259" endtime="20220704 18:29:16.259"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:16.262" level="INFO">${url} = boards/62c3317b49f2c82c52f0565e</msg>
<status status="PASS" starttime="20220704 18:29:16.261" endtime="20220704 18:29:16.262"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:16.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:16.262" endtime="20220704 18:29:16.650"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:16.650" endtime="20220704 18:29:16.650"/>
</return>
<msg timestamp="20220704 18:29:16.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:16.261" endtime="20220704 18:29:16.651"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:16.651" endtime="20220704 18:29:16.651"/>
</return>
<status status="PASS" starttime="20220704 18:29:16.260" endtime="20220704 18:29:16.651"/>
</kw>
<status status="PASS" starttime="20220704 18:29:16.260" endtime="20220704 18:29:16.651"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:29:15.685" endtime="20220704 18:29:16.651"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:16.655" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:16.655" endtime="20220704 18:29:16.655"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:16.655" endtime="20220704 18:29:16.655"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:16.656" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:29:16.655" endtime="20220704 18:29:16.656"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:16.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:16.656" endtime="20220704 18:29:16.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:16.901" endtime="20220704 18:29:16.901"/>
</return>
<msg timestamp="20220704 18:29:16.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:16.654" endtime="20220704 18:29:16.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:16.901" endtime="20220704 18:29:16.902"/>
</return>
<msg timestamp="20220704 18:29:16.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:16.654" endtime="20220704 18:29:16.902"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:16.904" level="INFO">${url} = boards/62c3317c0c55e43eea62f0cb</msg>
<status status="PASS" starttime="20220704 18:29:16.904" endtime="20220704 18:29:16.904"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:17.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:16.904" endtime="20220704 18:29:17.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:17.291" endtime="20220704 18:29:17.291"/>
</return>
<msg timestamp="20220704 18:29:17.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:16.903" endtime="20220704 18:29:17.292"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:17.292" endtime="20220704 18:29:17.292"/>
</return>
<status status="PASS" starttime="20220704 18:29:16.902" endtime="20220704 18:29:17.292"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:17.294" level="INFO">${url} = boards/62c3317c0c55e43eea62f0cb</msg>
<status status="PASS" starttime="20220704 18:29:17.294" endtime="20220704 18:29:17.294"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:17.384" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:29:17.294" endtime="20220704 18:29:17.384"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:17.384" endtime="20220704 18:29:17.384"/>
</return>
<msg timestamp="20220704 18:29:17.385" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:29:17.293" endtime="20220704 18:29:17.385"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:17.385" endtime="20220704 18:29:17.385"/>
</return>
<status status="PASS" starttime="20220704 18:29:17.292" endtime="20220704 18:29:17.385"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:29:16.653" endtime="20220704 18:29:17.385"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:17.389" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:17.389" endtime="20220704 18:29:17.389"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:17.389" endtime="20220704 18:29:17.389"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:17.390" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:29:17.389" endtime="20220704 18:29:17.390"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:17.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:17.390" endtime="20220704 18:29:17.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:17.591" endtime="20220704 18:29:17.591"/>
</return>
<msg timestamp="20220704 18:29:17.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:17.388" endtime="20220704 18:29:17.592"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:17.592" endtime="20220704 18:29:17.592"/>
</return>
<msg timestamp="20220704 18:29:17.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:17.388" endtime="20220704 18:29:17.592"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:17.593" endtime="20220704 18:29:17.599"/>
</kw>
<status status="PASS" starttime="20220704 18:29:17.593" endtime="20220704 18:29:17.599"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:17.601" level="INFO">${url} = boards/62c3317de075b848e24efcbc</msg>
<status status="PASS" starttime="20220704 18:29:17.600" endtime="20220704 18:29:17.601"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:17.703" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:17.601" endtime="20220704 18:29:17.703"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:17.703" endtime="20220704 18:29:17.703"/>
</return>
<msg timestamp="20220704 18:29:17.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:17.600" endtime="20220704 18:29:17.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:17.704" endtime="20220704 18:29:17.704"/>
</return>
<msg timestamp="20220704 18:29:17.704" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:17.599" endtime="20220704 18:29:17.704"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:17.704" endtime="20220704 18:29:17.709"/>
</kw>
<status status="PASS" starttime="20220704 18:29:17.704" endtime="20220704 18:29:17.709"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:17.709" endtime="20220704 18:29:17.710"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:17.712" level="INFO">${url} = boards/62c3317de075b848e24efcbc</msg>
<status status="PASS" starttime="20220704 18:29:17.712" endtime="20220704 18:29:17.712"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:18.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:17.713" endtime="20220704 18:29:18.061"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:18.061" endtime="20220704 18:29:18.061"/>
</return>
<msg timestamp="20220704 18:29:18.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:17.711" endtime="20220704 18:29:18.061"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:18.062" endtime="20220704 18:29:18.062"/>
</return>
<status status="PASS" starttime="20220704 18:29:17.710" endtime="20220704 18:29:18.062"/>
</kw>
<status status="PASS" starttime="20220704 18:29:17.710" endtime="20220704 18:29:18.062"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:29:17.386" endtime="20220704 18:29:18.062"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:18.066" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:18.066" endtime="20220704 18:29:18.066"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:18.066" endtime="20220704 18:29:18.067"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:18.067" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:29:18.067" endtime="20220704 18:29:18.067"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:18.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.068" endtime="20220704 18:29:18.270"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:18.270" endtime="20220704 18:29:18.270"/>
</return>
<msg timestamp="20220704 18:29:18.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.065" endtime="20220704 18:29:18.271"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:18.271" endtime="20220704 18:29:18.271"/>
</return>
<msg timestamp="20220704 18:29:18.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.065" endtime="20220704 18:29:18.271"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:18.272" endtime="20220704 18:29:18.278"/>
</kw>
<status status="PASS" starttime="20220704 18:29:18.271" endtime="20220704 18:29:18.278"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:18.280" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:18.280" endtime="20220704 18:29:18.280"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:18.280" endtime="20220704 18:29:18.281"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:18.281" level="INFO">${url} = boards/62c3317e9b8b2a569f8ae073</msg>
<status status="PASS" starttime="20220704 18:29:18.281" endtime="20220704 18:29:18.281"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:18.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.281" endtime="20220704 18:29:18.427"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:18.427" endtime="20220704 18:29:18.428"/>
</return>
<msg timestamp="20220704 18:29:18.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.280" endtime="20220704 18:29:18.429"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:18.429" endtime="20220704 18:29:18.429"/>
</return>
<status status="PASS" starttime="20220704 18:29:18.279" endtime="20220704 18:29:18.429"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:18.432" level="INFO">${url} = boards/62c3317e9b8b2a569f8ae073</msg>
<status status="PASS" starttime="20220704 18:29:18.432" endtime="20220704 18:29:18.432"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:18.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.432" endtime="20220704 18:29:18.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:18.535" endtime="20220704 18:29:18.535"/>
</return>
<msg timestamp="20220704 18:29:18.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.431" endtime="20220704 18:29:18.535"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:18.535" endtime="20220704 18:29:18.535"/>
</return>
<msg timestamp="20220704 18:29:18.535" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.429" endtime="20220704 18:29:18.535"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:18.536" endtime="20220704 18:29:18.536"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:18.539" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:18.538" endtime="20220704 18:29:18.539"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:18.539" endtime="20220704 18:29:18.539"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:18.539" level="INFO">${url} = boards/62c3317e9b8b2a569f8ae073</msg>
<status status="PASS" starttime="20220704 18:29:18.539" endtime="20220704 18:29:18.539"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:18.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.540" endtime="20220704 18:29:18.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:18.683" endtime="20220704 18:29:18.683"/>
</return>
<msg timestamp="20220704 18:29:18.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.537" endtime="20220704 18:29:18.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:18.683" endtime="20220704 18:29:18.684"/>
</return>
<status status="PASS" starttime="20220704 18:29:18.537" endtime="20220704 18:29:18.684"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:18.686" level="INFO">${url} = boards/62c3317e9b8b2a569f8ae073</msg>
<status status="PASS" starttime="20220704 18:29:18.686" endtime="20220704 18:29:18.686"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:18.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.687" endtime="20220704 18:29:18.795"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:18.796" endtime="20220704 18:29:18.796"/>
</return>
<msg timestamp="20220704 18:29:18.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.685" endtime="20220704 18:29:18.796"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:18.796" endtime="20220704 18:29:18.796"/>
</return>
<msg timestamp="20220704 18:29:18.797" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.684" endtime="20220704 18:29:18.797"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:18.797" endtime="20220704 18:29:18.798"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:18.800" level="INFO">${url} = boards/62c3317e9b8b2a569f8ae073</msg>
<status status="PASS" starttime="20220704 18:29:18.800" endtime="20220704 18:29:18.800"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:19.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.800" endtime="20220704 18:29:19.152"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:19.152" endtime="20220704 18:29:19.152"/>
</return>
<msg timestamp="20220704 18:29:19.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:18.799" endtime="20220704 18:29:19.152"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:19.152" endtime="20220704 18:29:19.152"/>
</return>
<status status="PASS" starttime="20220704 18:29:18.798" endtime="20220704 18:29:19.153"/>
</kw>
<status status="PASS" starttime="20220704 18:29:18.798" endtime="20220704 18:29:19.153"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:29:18.064" endtime="20220704 18:29:19.153"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 18:29:19.154" endtime="20220704 18:29:19.156"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 18:29:14.875" endtime="20220704 18:29:19.156"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 18:29:19.170" endtime="20220704 18:29:19.171"/>
</kw>
<status status="PASS" starttime="20220704 18:29:19.170" endtime="20220704 18:29:19.171"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:19.172" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:19.172" endtime="20220704 18:29:19.172"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:19.172" endtime="20220704 18:29:19.172"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:19.173" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:29:19.172" endtime="20220704 18:29:19.173"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:19.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.173" endtime="20220704 18:29:19.392"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:19.392" endtime="20220704 18:29:19.392"/>
</return>
<msg timestamp="20220704 18:29:19.393" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.171" endtime="20220704 18:29:19.393"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:19.393" endtime="20220704 18:29:19.393"/>
</return>
<msg timestamp="20220704 18:29:19.393" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.171" endtime="20220704 18:29:19.393"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:29:19.395" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3317f9cc6242930b16eee</msg>
<status status="PASS" starttime="20220704 18:29:19.393" endtime="20220704 18:29:19.395"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:19.397" level="INFO">${url} = boards/62c3317f9cc6242930b16eee/lists/</msg>
<status status="PASS" starttime="20220704 18:29:19.396" endtime="20220704 18:29:19.397"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:19.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.397" endtime="20220704 18:29:19.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:19.495" endtime="20220704 18:29:19.495"/>
</return>
<msg timestamp="20220704 18:29:19.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.396" endtime="20220704 18:29:19.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:19.495" endtime="20220704 18:29:19.495"/>
</return>
<msg timestamp="20220704 18:29:19.495" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.395" endtime="20220704 18:29:19.496"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:29:19.497" level="INFO">${TEST_SUITE_LIST_ID} = 62c3317f9cc6242930b16ef5</msg>
<status status="PASS" starttime="20220704 18:29:19.496" endtime="20220704 18:29:19.497"/>
</kw>
<status status="PASS" starttime="20220704 18:29:19.171" endtime="20220704 18:29:19.497"/>
</kw>
<status status="PASS" starttime="20220704 18:29:19.169" endtime="20220704 18:29:19.497"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:19.500" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:19.500" endtime="20220704 18:29:19.500"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:19.500" endtime="20220704 18:29:19.501"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:19.502" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 18:29:19.501" endtime="20220704 18:29:19.502"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:19.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.502" endtime="20220704 18:29:19.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:19.706" endtime="20220704 18:29:19.706"/>
</return>
<msg timestamp="20220704 18:29:19.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.499" endtime="20220704 18:29:19.707"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:19.707" endtime="20220704 18:29:19.707"/>
</return>
<msg timestamp="20220704 18:29:19.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.499" endtime="20220704 18:29:19.707"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:19.708" endtime="20220704 18:29:19.716"/>
</kw>
<status status="PASS" starttime="20220704 18:29:19.708" endtime="20220704 18:29:19.716"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:19.716" endtime="20220704 18:29:19.716"/>
</return>
<msg timestamp="20220704 18:29:19.717" level="INFO">${CARD_ID} = 62c3317fc31ade8d1ad2a34f</msg>
<status status="PASS" starttime="20220704 18:29:19.716" endtime="20220704 18:29:19.717"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:19.719" level="INFO">${url} = cards/62c3317fc31ade8d1ad2a34f</msg>
<status status="PASS" starttime="20220704 18:29:19.718" endtime="20220704 18:29:19.719"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:19.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.719" endtime="20220704 18:29:19.831"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:19.831" endtime="20220704 18:29:19.831"/>
</return>
<msg timestamp="20220704 18:29:19.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.718" endtime="20220704 18:29:19.832"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:19.832" endtime="20220704 18:29:19.832"/>
</return>
<msg timestamp="20220704 18:29:19.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.717" endtime="20220704 18:29:19.832"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:19.833" endtime="20220704 18:29:19.833"/>
</return>
<msg timestamp="20220704 18:29:19.834" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 18:29:19.832" endtime="20220704 18:29:19.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:19.835" endtime="20220704 18:29:19.835"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:19.837" level="INFO">${url} = cards/62c3317fc31ade8d1ad2a34f</msg>
<status status="PASS" starttime="20220704 18:29:19.836" endtime="20220704 18:29:19.837"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:20.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.837" endtime="20220704 18:29:20.054"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:20.054" endtime="20220704 18:29:20.054"/>
</return>
<msg timestamp="20220704 18:29:20.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:19.836" endtime="20220704 18:29:20.054"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:20.054" endtime="20220704 18:29:20.054"/>
</return>
<status status="PASS" starttime="20220704 18:29:19.835" endtime="20220704 18:29:20.055"/>
</kw>
<status status="PASS" starttime="20220704 18:29:19.835" endtime="20220704 18:29:20.055"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:29:19.497" endtime="20220704 18:29:20.055"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:20.060" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:20.060" endtime="20220704 18:29:20.060"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:20.060" endtime="20220704 18:29:20.060"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:20.061" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 18:29:20.060" endtime="20220704 18:29:20.061"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:20.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.061" endtime="20220704 18:29:20.270"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:20.270" endtime="20220704 18:29:20.270"/>
</return>
<msg timestamp="20220704 18:29:20.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.059" endtime="20220704 18:29:20.271"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:20.271" endtime="20220704 18:29:20.271"/>
</return>
<msg timestamp="20220704 18:29:20.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.058" endtime="20220704 18:29:20.271"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:20.272" endtime="20220704 18:29:20.272"/>
</return>
<msg timestamp="20220704 18:29:20.274" level="INFO">${CARD_ID} = 62c33180e2323532e56dbc1b</msg>
<status status="PASS" starttime="20220704 18:29:20.272" endtime="20220704 18:29:20.274"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:20.276" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:20.276" endtime="20220704 18:29:20.276"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:20.276" endtime="20220704 18:29:20.277"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:20.277" level="INFO">${url} = cards/62c33180e2323532e56dbc1b</msg>
<status status="PASS" starttime="20220704 18:29:20.277" endtime="20220704 18:29:20.277"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:20.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.277" endtime="20220704 18:29:20.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:20.439" endtime="20220704 18:29:20.439"/>
</return>
<msg timestamp="20220704 18:29:20.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.275" endtime="20220704 18:29:20.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:20.439" endtime="20220704 18:29:20.439"/>
</return>
<msg timestamp="20220704 18:29:20.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.274" endtime="20220704 18:29:20.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:20.439" endtime="20220704 18:29:20.439"/>
</return>
<status status="PASS" starttime="20220704 18:29:20.274" endtime="20220704 18:29:20.440"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:20.441" level="INFO">${url} = cards/62c33180e2323532e56dbc1b</msg>
<status status="PASS" starttime="20220704 18:29:20.441" endtime="20220704 18:29:20.441"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:20.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.441" endtime="20220704 18:29:20.544"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:20.544" endtime="20220704 18:29:20.545"/>
</return>
<msg timestamp="20220704 18:29:20.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.440" endtime="20220704 18:29:20.545"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:20.545" endtime="20220704 18:29:20.545"/>
</return>
<msg timestamp="20220704 18:29:20.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.440" endtime="20220704 18:29:20.546"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:20.547" endtime="20220704 18:29:20.547"/>
</return>
<msg timestamp="20220704 18:29:20.548" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 18:29:20.546" endtime="20220704 18:29:20.548"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 18:29:20.548" endtime="20220704 18:29:20.549"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:20.550" level="INFO">${url} = cards/62c33180e2323532e56dbc1b</msg>
<status status="PASS" starttime="20220704 18:29:20.550" endtime="20220704 18:29:20.550"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:20.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.551" endtime="20220704 18:29:20.739"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:20.739" endtime="20220704 18:29:20.739"/>
</return>
<msg timestamp="20220704 18:29:20.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.549" endtime="20220704 18:29:20.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:20.740" endtime="20220704 18:29:20.740"/>
</return>
<status status="PASS" starttime="20220704 18:29:20.549" endtime="20220704 18:29:20.740"/>
</kw>
<status status="PASS" starttime="20220704 18:29:20.549" endtime="20220704 18:29:20.740"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 18:29:20.056" endtime="20220704 18:29:20.740"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:20.744" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:20.744" endtime="20220704 18:29:20.744"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:20.744" endtime="20220704 18:29:20.744"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:20.745" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 18:29:20.744" endtime="20220704 18:29:20.745"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:20.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.745" endtime="20220704 18:29:20.972"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:20.972" endtime="20220704 18:29:20.973"/>
</return>
<msg timestamp="20220704 18:29:20.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.743" endtime="20220704 18:29:20.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:20.973" endtime="20220704 18:29:20.973"/>
</return>
<msg timestamp="20220704 18:29:20.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.742" endtime="20220704 18:29:20.974"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:20.975" endtime="20220704 18:29:20.975"/>
</return>
<msg timestamp="20220704 18:29:20.976" level="INFO">${CARD_ID} = 62c331804f34153ae3a25511</msg>
<status status="PASS" starttime="20220704 18:29:20.974" endtime="20220704 18:29:20.976"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:20.978" level="INFO">${url} = cards/62c331804f34153ae3a25511</msg>
<status status="PASS" starttime="20220704 18:29:20.977" endtime="20220704 18:29:20.978"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:21.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.978" endtime="20220704 18:29:21.201"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:21.201" endtime="20220704 18:29:21.201"/>
</return>
<msg timestamp="20220704 18:29:21.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.977" endtime="20220704 18:29:21.201"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:21.201" endtime="20220704 18:29:21.201"/>
</return>
<msg timestamp="20220704 18:29:21.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:20.976" endtime="20220704 18:29:21.201"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:21.202" endtime="20220704 18:29:21.204"/>
</kw>
<status status="PASS" starttime="20220704 18:29:21.201" endtime="20220704 18:29:21.204"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:21.206" level="INFO">${url} = cards/62c331804f34153ae3a25511</msg>
<status status="PASS" starttime="20220704 18:29:21.206" endtime="20220704 18:29:21.206"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:21.293" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:29:21.206" endtime="20220704 18:29:21.293"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:21.293" endtime="20220704 18:29:21.293"/>
</return>
<msg timestamp="20220704 18:29:21.294" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:29:21.205" endtime="20220704 18:29:21.294"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:21.294" endtime="20220704 18:29:21.294"/>
</return>
<status status="PASS" starttime="20220704 18:29:21.205" endtime="20220704 18:29:21.294"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:29:20.741" endtime="20220704 18:29:21.295"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:21.298" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:21.298" endtime="20220704 18:29:21.298"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:21.299" endtime="20220704 18:29:21.299"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:21.300" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 18:29:21.299" endtime="20220704 18:29:21.300"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:21.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:21.300" endtime="20220704 18:29:21.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:21.495" endtime="20220704 18:29:21.495"/>
</return>
<msg timestamp="20220704 18:29:21.496" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:21.297" endtime="20220704 18:29:21.496"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:21.496" endtime="20220704 18:29:21.496"/>
</return>
<msg timestamp="20220704 18:29:21.496" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:21.297" endtime="20220704 18:29:21.496"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:21.497" endtime="20220704 18:29:21.497"/>
</return>
<msg timestamp="20220704 18:29:21.499" level="INFO">${CARD_ID} = 62c33181c72cb832b785aaf4</msg>
<status status="PASS" starttime="20220704 18:29:21.496" endtime="20220704 18:29:21.499"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:21.501" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:21.501" endtime="20220704 18:29:21.501"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:21.501" endtime="20220704 18:29:21.502"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:21.502" level="INFO">${url} = cards/62c33181c72cb832b785aaf4</msg>
<status status="PASS" starttime="20220704 18:29:21.502" endtime="20220704 18:29:21.502"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:21.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:21.502" endtime="20220704 18:29:21.700"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:21.700" endtime="20220704 18:29:21.700"/>
</return>
<msg timestamp="20220704 18:29:21.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:21.500" endtime="20220704 18:29:21.701"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:21.701" endtime="20220704 18:29:21.701"/>
</return>
<msg timestamp="20220704 18:29:21.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:21.499" endtime="20220704 18:29:21.702"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:21.703" endtime="20220704 18:29:21.709"/>
</kw>
<status status="PASS" starttime="20220704 18:29:21.702" endtime="20220704 18:29:21.709"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:21.711" level="INFO">${url} = cards/62c33181c72cb832b785aaf4</msg>
<status status="PASS" starttime="20220704 18:29:21.710" endtime="20220704 18:29:21.711"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:21.823" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:21.711" endtime="20220704 18:29:21.823"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:21.823" endtime="20220704 18:29:21.823"/>
</return>
<msg timestamp="20220704 18:29:21.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:21.710" endtime="20220704 18:29:21.824"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:21.824" endtime="20220704 18:29:21.824"/>
</return>
<msg timestamp="20220704 18:29:21.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:21.709" endtime="20220704 18:29:21.824"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:21.825" endtime="20220704 18:29:21.825"/>
</return>
<msg timestamp="20220704 18:29:21.827" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 18:29:21.825" endtime="20220704 18:29:21.827"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:21.827" endtime="20220704 18:29:21.827"/>
</return>
<msg timestamp="20220704 18:29:21.828" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 18:29:21.827" endtime="20220704 18:29:21.828"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:21.828" endtime="20220704 18:29:21.828"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:21.829" endtime="20220704 18:29:21.829"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:21.831" level="INFO">${url} = cards/62c33181c72cb832b785aaf4</msg>
<status status="PASS" starttime="20220704 18:29:21.830" endtime="20220704 18:29:21.831"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:22.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:21.831" endtime="20220704 18:29:22.034"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:22.034" endtime="20220704 18:29:22.034"/>
</return>
<msg timestamp="20220704 18:29:22.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:21.830" endtime="20220704 18:29:22.034"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:22.034" endtime="20220704 18:29:22.035"/>
</return>
<status status="PASS" starttime="20220704 18:29:21.829" endtime="20220704 18:29:22.035"/>
</kw>
<status status="PASS" starttime="20220704 18:29:21.829" endtime="20220704 18:29:22.035"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 18:29:21.296" endtime="20220704 18:29:22.035"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:22.038" level="INFO">${url} = boards/62c3317f9cc6242930b16eee</msg>
<status status="PASS" starttime="20220704 18:29:22.038" endtime="20220704 18:29:22.039"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:22.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:22.039" endtime="20220704 18:29:22.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:22.499" endtime="20220704 18:29:22.499"/>
</return>
<msg timestamp="20220704 18:29:22.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:22.038" endtime="20220704 18:29:22.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:22.499" endtime="20220704 18:29:22.499"/>
</return>
<status status="PASS" starttime="20220704 18:29:22.037" endtime="20220704 18:29:22.499"/>
</kw>
<status status="PASS" starttime="20220704 18:29:22.037" endtime="20220704 18:29:22.500"/>
</kw>
<status status="PASS" starttime="20220704 18:29:22.036" endtime="20220704 18:29:22.500"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 18:29:22.500" endtime="20220704 18:29:22.502"/>
</kw>
<status status="PASS" starttime="20220704 18:29:22.035" endtime="20220704 18:29:22.502"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 18:29:19.158" endtime="20220704 18:29:22.502"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 18:29:22.517" endtime="20220704 18:29:22.517"/>
</kw>
<status status="PASS" starttime="20220704 18:29:22.516" endtime="20220704 18:29:22.517"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:22.518" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:22.518" endtime="20220704 18:29:22.518"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:22.519" endtime="20220704 18:29:22.519"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:22.520" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:29:22.519" endtime="20220704 18:29:22.520"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:22.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:22.520" endtime="20220704 18:29:22.761"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:22.761" endtime="20220704 18:29:22.761"/>
</return>
<msg timestamp="20220704 18:29:22.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:22.518" endtime="20220704 18:29:22.761"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:22.761" endtime="20220704 18:29:22.761"/>
</return>
<msg timestamp="20220704 18:29:22.762" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:22.517" endtime="20220704 18:29:22.762"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:29:22.763" level="INFO">${TEST_SUITE_BOARD_ID} = 62c331821ddc1a3ed0ce663f</msg>
<status status="PASS" starttime="20220704 18:29:22.762" endtime="20220704 18:29:22.763"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:22.764" level="INFO">${url} = boards/62c331821ddc1a3ed0ce663f/lists/</msg>
<status status="PASS" starttime="20220704 18:29:22.764" endtime="20220704 18:29:22.764"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:22.867" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:22.764" endtime="20220704 18:29:22.867"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:22.867" endtime="20220704 18:29:22.867"/>
</return>
<msg timestamp="20220704 18:29:22.867" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:22.763" endtime="20220704 18:29:22.867"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:22.867" endtime="20220704 18:29:22.867"/>
</return>
<msg timestamp="20220704 18:29:22.868" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:22.763" endtime="20220704 18:29:22.868"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:29:22.869" level="INFO">${TEST_SUITE_LIST_ID} = 62c331821ddc1a3ed0ce6646</msg>
<status status="PASS" starttime="20220704 18:29:22.868" endtime="20220704 18:29:22.869"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:22.872" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:22.871" endtime="20220704 18:29:22.872"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:22.872" endtime="20220704 18:29:22.872"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:22.873" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 18:29:22.872" endtime="20220704 18:29:22.873"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:23.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:22.873" endtime="20220704 18:29:23.111"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:23.111" endtime="20220704 18:29:23.111"/>
</return>
<msg timestamp="20220704 18:29:23.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:22.870" endtime="20220704 18:29:23.111"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:23.111" endtime="20220704 18:29:23.111"/>
</return>
<msg timestamp="20220704 18:29:23.112" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:22.869" endtime="20220704 18:29:23.112"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:29:23.113" level="INFO">${TEST_SUITE_CARD_ID} = 62c331824072125256142d98</msg>
<status status="PASS" starttime="20220704 18:29:23.112" endtime="20220704 18:29:23.114"/>
</kw>
<status status="PASS" starttime="20220704 18:29:22.517" endtime="20220704 18:29:23.114"/>
</kw>
<status status="PASS" starttime="20220704 18:29:22.516" endtime="20220704 18:29:23.114"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:23.117" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:23.117" endtime="20220704 18:29:23.117"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:23.117" endtime="20220704 18:29:23.118"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:23.119" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 18:29:23.118" endtime="20220704 18:29:23.119"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:23.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.119" endtime="20220704 18:29:23.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:23.313" endtime="20220704 18:29:23.313"/>
</return>
<msg timestamp="20220704 18:29:23.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.116" endtime="20220704 18:29:23.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:23.313" endtime="20220704 18:29:23.313"/>
</return>
<msg timestamp="20220704 18:29:23.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.115" endtime="20220704 18:29:23.314"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:23.315" endtime="20220704 18:29:23.315"/>
</return>
<msg timestamp="20220704 18:29:23.316" level="INFO">${checklist_id} = 62c331831da73c275ceac95b</msg>
<status status="PASS" starttime="20220704 18:29:23.314" endtime="20220704 18:29:23.316"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:23.319" level="INFO">${url} = checklists/62c331831da73c275ceac95b</msg>
<status status="PASS" starttime="20220704 18:29:23.318" endtime="20220704 18:29:23.319"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:23.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.319" endtime="20220704 18:29:23.431"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:23.431" endtime="20220704 18:29:23.431"/>
</return>
<msg timestamp="20220704 18:29:23.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.317" endtime="20220704 18:29:23.432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:23.432" endtime="20220704 18:29:23.432"/>
</return>
<msg timestamp="20220704 18:29:23.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.316" endtime="20220704 18:29:23.433"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:23.433" endtime="20220704 18:29:23.433"/>
</return>
<msg timestamp="20220704 18:29:23.434" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 18:29:23.433" endtime="20220704 18:29:23.434"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:23.434" endtime="20220704 18:29:23.435"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:23.436" level="INFO">${url} = checklists/62c331831da73c275ceac95b</msg>
<status status="PASS" starttime="20220704 18:29:23.436" endtime="20220704 18:29:23.436"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:23.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.436" endtime="20220704 18:29:23.596"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:23.597" endtime="20220704 18:29:23.597"/>
</return>
<msg timestamp="20220704 18:29:23.597" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.435" endtime="20220704 18:29:23.597"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:23.597" endtime="20220704 18:29:23.597"/>
</return>
<status status="PASS" starttime="20220704 18:29:23.435" endtime="20220704 18:29:23.597"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:29:23.114" endtime="20220704 18:29:23.597"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:23.601" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:23.601" endtime="20220704 18:29:23.601"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:23.602" endtime="20220704 18:29:23.602"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:23.603" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 18:29:23.602" endtime="20220704 18:29:23.603"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:23.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.603" endtime="20220704 18:29:23.777"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:23.777" endtime="20220704 18:29:23.777"/>
</return>
<msg timestamp="20220704 18:29:23.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.600" endtime="20220704 18:29:23.777"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:23.777" endtime="20220704 18:29:23.777"/>
</return>
<msg timestamp="20220704 18:29:23.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.599" endtime="20220704 18:29:23.777"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:23.778" endtime="20220704 18:29:23.778"/>
</return>
<msg timestamp="20220704 18:29:23.779" level="INFO">${checklist_id} = 62c33183500fa78f729eab60</msg>
<status status="PASS" starttime="20220704 18:29:23.778" endtime="20220704 18:29:23.779"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:23.782" level="INFO">${url} = checklists/62c33183500fa78f729eab60</msg>
<status status="PASS" starttime="20220704 18:29:23.781" endtime="20220704 18:29:23.782"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:23.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.782" endtime="20220704 18:29:23.941"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:23.942" endtime="20220704 18:29:23.942"/>
</return>
<msg timestamp="20220704 18:29:23.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.780" endtime="20220704 18:29:23.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:23.942" endtime="20220704 18:29:23.942"/>
</return>
<msg timestamp="20220704 18:29:23.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:23.780" endtime="20220704 18:29:23.942"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:23.943" endtime="20220704 18:29:23.945"/>
</kw>
<status status="PASS" starttime="20220704 18:29:23.942" endtime="20220704 18:29:23.945"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:23.946" level="INFO">${url} = checklists/62c33183500fa78f729eab60</msg>
<status status="PASS" starttime="20220704 18:29:23.946" endtime="20220704 18:29:23.946"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:24.033" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:29:23.947" endtime="20220704 18:29:24.033"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:24.033" endtime="20220704 18:29:24.033"/>
</return>
<msg timestamp="20220704 18:29:24.033" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:29:23.946" endtime="20220704 18:29:24.033"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:24.033" endtime="20220704 18:29:24.033"/>
</return>
<status status="PASS" starttime="20220704 18:29:23.945" endtime="20220704 18:29:24.033"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:29:23.598" endtime="20220704 18:29:24.034"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:24.038" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:24.036" endtime="20220704 18:29:24.038"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:24.039" endtime="20220704 18:29:24.039"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:24.040" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 18:29:24.039" endtime="20220704 18:29:24.040"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:24.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:24.040" endtime="20220704 18:29:24.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:24.226" endtime="20220704 18:29:24.227"/>
</return>
<msg timestamp="20220704 18:29:24.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:24.036" endtime="20220704 18:29:24.227"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:24.227" endtime="20220704 18:29:24.227"/>
</return>
<msg timestamp="20220704 18:29:24.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:24.035" endtime="20220704 18:29:24.227"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:24.228" endtime="20220704 18:29:24.228"/>
</return>
<msg timestamp="20220704 18:29:24.229" level="INFO">${checklist_id} = 62c331842fcff53fb0b7b5ea</msg>
<status status="PASS" starttime="20220704 18:29:24.227" endtime="20220704 18:29:24.229"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:24.230" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:24.230" endtime="20220704 18:29:24.230"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:24.230" endtime="20220704 18:29:24.231"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:24.231" level="INFO">${url} = checklists/62c331842fcff53fb0b7b5ea</msg>
<status status="PASS" starttime="20220704 18:29:24.231" endtime="20220704 18:29:24.231"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:24.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:24.231" endtime="20220704 18:29:24.368"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:24.368" endtime="20220704 18:29:24.368"/>
</return>
<msg timestamp="20220704 18:29:24.369" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:24.229" endtime="20220704 18:29:24.369"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:24.369" endtime="20220704 18:29:24.369"/>
</return>
<msg timestamp="20220704 18:29:24.369" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:24.229" endtime="20220704 18:29:24.369"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:24.372" level="INFO">${url} = checklists/62c331842fcff53fb0b7b5ea</msg>
<status status="PASS" starttime="20220704 18:29:24.371" endtime="20220704 18:29:24.372"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:24.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:24.372" endtime="20220704 18:29:24.483"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:24.483" endtime="20220704 18:29:24.483"/>
</return>
<msg timestamp="20220704 18:29:24.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:24.370" endtime="20220704 18:29:24.484"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:24.484" endtime="20220704 18:29:24.484"/>
</return>
<msg timestamp="20220704 18:29:24.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:24.369" endtime="20220704 18:29:24.484"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:24.485" endtime="20220704 18:29:24.485"/>
</return>
<msg timestamp="20220704 18:29:24.485" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 18:29:24.484" endtime="20220704 18:29:24.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:24.486" endtime="20220704 18:29:24.486"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:24.501" level="INFO">${url} = checklists/62c331842fcff53fb0b7b5ea</msg>
<status status="PASS" starttime="20220704 18:29:24.500" endtime="20220704 18:29:24.501"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:24.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:24.501" endtime="20220704 18:29:24.655"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:24.655" endtime="20220704 18:29:24.655"/>
</return>
<msg timestamp="20220704 18:29:24.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:24.500" endtime="20220704 18:29:24.655"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:24.655" endtime="20220704 18:29:24.655"/>
</return>
<status status="PASS" starttime="20220704 18:29:24.486" endtime="20220704 18:29:24.656"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 18:29:24.034" endtime="20220704 18:29:24.656"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:24.659" level="INFO">${url} = boards/62c331821ddc1a3ed0ce663f</msg>
<status status="PASS" starttime="20220704 18:29:24.658" endtime="20220704 18:29:24.659"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:25.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:24.659" endtime="20220704 18:29:25.072"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:25.072" endtime="20220704 18:29:25.073"/>
</return>
<msg timestamp="20220704 18:29:25.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:24.658" endtime="20220704 18:29:25.073"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:25.073" endtime="20220704 18:29:25.073"/>
</return>
<status status="PASS" starttime="20220704 18:29:24.657" endtime="20220704 18:29:25.074"/>
</kw>
<status status="PASS" starttime="20220704 18:29:24.657" endtime="20220704 18:29:25.074"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 18:29:25.074" endtime="20220704 18:29:25.076"/>
</kw>
<status status="PASS" starttime="20220704 18:29:24.656" endtime="20220704 18:29:25.076"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 18:29:22.505" endtime="20220704 18:29:25.076"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 18:29:25.089" endtime="20220704 18:29:25.090"/>
</kw>
<status status="PASS" starttime="20220704 18:29:25.089" endtime="20220704 18:29:25.090"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:25.091" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:25.091" endtime="20220704 18:29:25.091"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:25.091" endtime="20220704 18:29:25.092"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:25.092" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:29:25.092" endtime="20220704 18:29:25.092"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:25.352" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.093" endtime="20220704 18:29:25.352"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:25.352" endtime="20220704 18:29:25.352"/>
</return>
<msg timestamp="20220704 18:29:25.353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.091" endtime="20220704 18:29:25.353"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:25.353" endtime="20220704 18:29:25.353"/>
</return>
<msg timestamp="20220704 18:29:25.353" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.090" endtime="20220704 18:29:25.353"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:29:25.354" level="INFO">${TEST_SUITE_BOARD_ID} = 62c33185b155dc0ab530a74d</msg>
<status status="PASS" starttime="20220704 18:29:25.353" endtime="20220704 18:29:25.354"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:25.452" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.354" endtime="20220704 18:29:25.452"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:29:25.453" level="INFO">${TEST_SUITE_LIST_ID} = 62c33185b155dc0ab530a754</msg>
<status status="PASS" starttime="20220704 18:29:25.452" endtime="20220704 18:29:25.453"/>
</kw>
<status status="PASS" starttime="20220704 18:29:25.090" endtime="20220704 18:29:25.454"/>
</kw>
<status status="PASS" starttime="20220704 18:29:25.089" endtime="20220704 18:29:25.454"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:25.457" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:25.456" endtime="20220704 18:29:25.457"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:25.457" endtime="20220704 18:29:25.457"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:25.458" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 18:29:25.457" endtime="20220704 18:29:25.458"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:25.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.458" endtime="20220704 18:29:25.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:25.595" endtime="20220704 18:29:25.595"/>
</return>
<msg timestamp="20220704 18:29:25.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.456" endtime="20220704 18:29:25.596"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:25.596" endtime="20220704 18:29:25.596"/>
</return>
<msg timestamp="20220704 18:29:25.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.455" endtime="20220704 18:29:25.596"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:25.597" endtime="20220704 18:29:25.600"/>
</kw>
<status status="PASS" starttime="20220704 18:29:25.597" endtime="20220704 18:29:25.600"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:25.600" endtime="20220704 18:29:25.600"/>
</return>
<msg timestamp="20220704 18:29:25.601" level="INFO">${LABEL_ID} = 62c33185a99bd96f5021844b</msg>
<status status="PASS" starttime="20220704 18:29:25.600" endtime="20220704 18:29:25.601"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:25.603" level="INFO">${url} = labels/62c33185a99bd96f5021844b</msg>
<status status="PASS" starttime="20220704 18:29:25.602" endtime="20220704 18:29:25.603"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:25.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.603" endtime="20220704 18:29:25.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:25.706" endtime="20220704 18:29:25.706"/>
</return>
<msg timestamp="20220704 18:29:25.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.602" endtime="20220704 18:29:25.707"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:25.707" endtime="20220704 18:29:25.707"/>
</return>
<msg timestamp="20220704 18:29:25.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.601" endtime="20220704 18:29:25.707"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:25.708" endtime="20220704 18:29:25.708"/>
</return>
<msg timestamp="20220704 18:29:25.709" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 18:29:25.707" endtime="20220704 18:29:25.709"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:25.709" endtime="20220704 18:29:25.709"/>
</return>
<msg timestamp="20220704 18:29:25.710" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 18:29:25.709" endtime="20220704 18:29:25.710"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:25.710" endtime="20220704 18:29:25.711"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:25.711" endtime="20220704 18:29:25.713"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:25.715" level="INFO">${url} = labels/62c33185a99bd96f5021844b</msg>
<status status="PASS" starttime="20220704 18:29:25.715" endtime="20220704 18:29:25.715"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:25.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.716" endtime="20220704 18:29:25.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:25.892" endtime="20220704 18:29:25.892"/>
</return>
<msg timestamp="20220704 18:29:25.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.715" endtime="20220704 18:29:25.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:25.892" endtime="20220704 18:29:25.893"/>
</return>
<status status="PASS" starttime="20220704 18:29:25.714" endtime="20220704 18:29:25.893"/>
</kw>
<status status="PASS" starttime="20220704 18:29:25.714" endtime="20220704 18:29:25.893"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:29:25.454" endtime="20220704 18:29:25.893"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:25.895" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:25.895" endtime="20220704 18:29:25.896"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:25.896" endtime="20220704 18:29:25.896"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:25.897" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 18:29:25.896" endtime="20220704 18:29:25.897"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:26.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.897" endtime="20220704 18:29:26.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:26.040" endtime="20220704 18:29:26.040"/>
</return>
<msg timestamp="20220704 18:29:26.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.895" endtime="20220704 18:29:26.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:26.040" endtime="20220704 18:29:26.040"/>
</return>
<msg timestamp="20220704 18:29:26.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:25.894" endtime="20220704 18:29:26.040"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:26.041" endtime="20220704 18:29:26.043"/>
</kw>
<status status="PASS" starttime="20220704 18:29:26.040" endtime="20220704 18:29:26.043"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:26.044" endtime="20220704 18:29:26.044"/>
</return>
<msg timestamp="20220704 18:29:26.045" level="INFO">${LABEL_ID} = 62c33185d945ab3399de04aa</msg>
<status status="PASS" starttime="20220704 18:29:26.044" endtime="20220704 18:29:26.045"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:26.046" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:26.046" endtime="20220704 18:29:26.046"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:26.046" endtime="20220704 18:29:26.046"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:26.047" level="INFO">${url} = labels/62c33185d945ab3399de04aa</msg>
<status status="PASS" starttime="20220704 18:29:26.047" endtime="20220704 18:29:26.047"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:26.205" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:26.047" endtime="20220704 18:29:26.205"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:26.205" endtime="20220704 18:29:26.205"/>
</return>
<msg timestamp="20220704 18:29:26.205" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:26.045" endtime="20220704 18:29:26.205"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:26.205" endtime="20220704 18:29:26.205"/>
</return>
<msg timestamp="20220704 18:29:26.206" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:26.045" endtime="20220704 18:29:26.206"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:26.206" endtime="20220704 18:29:26.206"/>
</return>
<msg timestamp="20220704 18:29:26.207" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 18:29:26.206" endtime="20220704 18:29:26.207"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:26.208" endtime="20220704 18:29:26.208"/>
</return>
<msg timestamp="20220704 18:29:26.208" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 18:29:26.207" endtime="20220704 18:29:26.208"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:26.209" endtime="20220704 18:29:26.209"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:26.209" endtime="20220704 18:29:26.209"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:26.211" level="INFO">${url} = labels/62c33185d945ab3399de04aa</msg>
<status status="PASS" starttime="20220704 18:29:26.211" endtime="20220704 18:29:26.211"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:26.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:26.211" endtime="20220704 18:29:26.372"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:26.372" endtime="20220704 18:29:26.372"/>
</return>
<msg timestamp="20220704 18:29:26.373" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:26.210" endtime="20220704 18:29:26.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:26.373" endtime="20220704 18:29:26.373"/>
</return>
<status status="PASS" starttime="20220704 18:29:26.210" endtime="20220704 18:29:26.373"/>
</kw>
<status status="PASS" starttime="20220704 18:29:26.210" endtime="20220704 18:29:26.373"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:29:25.893" endtime="20220704 18:29:26.373"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:26.375" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:26.375" endtime="20220704 18:29:26.375"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:26.375" endtime="20220704 18:29:26.376"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:26.377" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 18:29:26.376" endtime="20220704 18:29:26.377"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:26.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:26.377" endtime="20220704 18:29:26.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:26.537" endtime="20220704 18:29:26.537"/>
</return>
<msg timestamp="20220704 18:29:26.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:26.375" endtime="20220704 18:29:26.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:26.537" endtime="20220704 18:29:26.537"/>
</return>
<msg timestamp="20220704 18:29:26.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:26.374" endtime="20220704 18:29:26.538"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 18:29:26.538" endtime="20220704 18:29:26.538"/>
</return>
<msg timestamp="20220704 18:29:26.539" level="INFO">${LABEL_ID} = 62c331866226cc0b66b4e3fe</msg>
<status status="PASS" starttime="20220704 18:29:26.538" endtime="20220704 18:29:26.539"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:26.541" level="INFO">${url} = labels/62c331866226cc0b66b4e3fe</msg>
<status status="PASS" starttime="20220704 18:29:26.541" endtime="20220704 18:29:26.541"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:26.697" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:26.541" endtime="20220704 18:29:26.697"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:26.697" endtime="20220704 18:29:26.697"/>
</return>
<msg timestamp="20220704 18:29:26.698" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:26.540" endtime="20220704 18:29:26.698"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:26.698" endtime="20220704 18:29:26.698"/>
</return>
<status status="PASS" starttime="20220704 18:29:26.540" endtime="20220704 18:29:26.700"/>
</kw>
<status status="PASS" starttime="20220704 18:29:26.539" endtime="20220704 18:29:26.701"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:26.702" level="INFO">${url} = labels/62c331866226cc0b66b4e3fe</msg>
<status status="PASS" starttime="20220704 18:29:26.702" endtime="20220704 18:29:26.702"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:26.798" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:29:26.702" endtime="20220704 18:29:26.798"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:26.799" endtime="20220704 18:29:26.799"/>
</return>
<msg timestamp="20220704 18:29:26.799" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 18:29:26.701" endtime="20220704 18:29:26.799"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:26.799" endtime="20220704 18:29:26.799"/>
</return>
<status status="PASS" starttime="20220704 18:29:26.701" endtime="20220704 18:29:26.799"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:29:26.373" endtime="20220704 18:29:26.799"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:26.802" level="INFO">${url} = boards/62c33185b155dc0ab530a74d</msg>
<status status="PASS" starttime="20220704 18:29:26.802" endtime="20220704 18:29:26.802"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:27.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:26.803" endtime="20220704 18:29:27.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:27.189" endtime="20220704 18:29:27.189"/>
</return>
<msg timestamp="20220704 18:29:27.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:26.802" endtime="20220704 18:29:27.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:27.190" endtime="20220704 18:29:27.190"/>
</return>
<status status="PASS" starttime="20220704 18:29:26.801" endtime="20220704 18:29:27.190"/>
</kw>
<status status="PASS" starttime="20220704 18:29:26.801" endtime="20220704 18:29:27.190"/>
</kw>
<status status="PASS" starttime="20220704 18:29:26.800" endtime="20220704 18:29:27.190"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 18:29:27.190" endtime="20220704 18:29:27.191"/>
</kw>
<status status="PASS" starttime="20220704 18:29:26.800" endtime="20220704 18:29:27.192"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 18:29:25.079" endtime="20220704 18:29:27.192"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 18:29:27.204" endtime="20220704 18:29:27.204"/>
</kw>
<status status="PASS" starttime="20220704 18:29:27.203" endtime="20220704 18:29:27.204"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:27.206" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:27.206" endtime="20220704 18:29:27.206"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:27.206" endtime="20220704 18:29:27.207"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:27.208" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 18:29:27.207" endtime="20220704 18:29:27.208"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:27.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:27.208" endtime="20220704 18:29:27.625"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:27.625" endtime="20220704 18:29:27.625"/>
</return>
<msg timestamp="20220704 18:29:27.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:27.205" endtime="20220704 18:29:27.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:27.626" endtime="20220704 18:29:27.626"/>
</return>
<msg timestamp="20220704 18:29:27.626" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:27.205" endtime="20220704 18:29:27.626"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 18:29:27.628" level="INFO">${TEST_SUITE_BOARD_ID} = 62c331870d9f653082ec23fd</msg>
<status status="PASS" starttime="20220704 18:29:27.627" endtime="20220704 18:29:27.628"/>
</kw>
<status status="PASS" starttime="20220704 18:29:27.627" endtime="20220704 18:29:27.629"/>
</kw>
<status status="PASS" starttime="20220704 18:29:27.205" endtime="20220704 18:29:27.629"/>
</kw>
<status status="PASS" starttime="20220704 18:29:27.203" endtime="20220704 18:29:27.629"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:27.632" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:27.632" endtime="20220704 18:29:27.632"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:27.633" endtime="20220704 18:29:27.633"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:27.634" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 18:29:27.633" endtime="20220704 18:29:27.634"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:27.963" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:27.634" endtime="20220704 18:29:27.963"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:27.963" endtime="20220704 18:29:27.963"/>
</return>
<msg timestamp="20220704 18:29:27.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:27.631" endtime="20220704 18:29:27.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:27.964" endtime="20220704 18:29:27.964"/>
</return>
<msg timestamp="20220704 18:29:27.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:27.630" endtime="20220704 18:29:27.964"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:27.965" endtime="20220704 18:29:27.968"/>
</kw>
<status status="PASS" starttime="20220704 18:29:27.964" endtime="20220704 18:29:27.968"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 18:29:27.629" endtime="20220704 18:29:27.968"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:27.970" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:27.970" endtime="20220704 18:29:27.971"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:27.971" endtime="20220704 18:29:27.971"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:27.972" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 18:29:27.971" endtime="20220704 18:29:27.972"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:28.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:27.972" endtime="20220704 18:29:28.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:28.334" endtime="20220704 18:29:28.334"/>
</return>
<msg timestamp="20220704 18:29:28.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:27.970" endtime="20220704 18:29:28.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:28.334" endtime="20220704 18:29:28.334"/>
</return>
<msg timestamp="20220704 18:29:28.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:27.969" endtime="20220704 18:29:28.335"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:28.335" endtime="20220704 18:29:28.338"/>
</kw>
<status status="PASS" starttime="20220704 18:29:28.335" endtime="20220704 18:29:28.338"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:28.340" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:28.340" endtime="20220704 18:29:28.340"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:28.341" endtime="20220704 18:29:28.341"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:28.341" level="INFO">${url} = lists/62c33188768ea03e76219042</msg>
<status status="PASS" starttime="20220704 18:29:28.341" endtime="20220704 18:29:28.341"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:28.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.342" endtime="20220704 18:29:28.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:28.466" endtime="20220704 18:29:28.466"/>
</return>
<msg timestamp="20220704 18:29:28.467" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.339" endtime="20220704 18:29:28.467"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:28.467" endtime="20220704 18:29:28.467"/>
</return>
<status status="PASS" starttime="20220704 18:29:28.338" endtime="20220704 18:29:28.467"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:28.471" level="INFO">${url} = lists/62c33188768ea03e76219042</msg>
<status status="PASS" starttime="20220704 18:29:28.470" endtime="20220704 18:29:28.471"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:28.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.471" endtime="20220704 18:29:28.570"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:28.570" endtime="20220704 18:29:28.570"/>
</return>
<msg timestamp="20220704 18:29:28.571" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.469" endtime="20220704 18:29:28.571"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:28.571" endtime="20220704 18:29:28.571"/>
</return>
<msg timestamp="20220704 18:29:28.571" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.468" endtime="20220704 18:29:28.571"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 18:29:28.572" endtime="20220704 18:29:28.575"/>
</kw>
<status status="PASS" starttime="20220704 18:29:28.571" endtime="20220704 18:29:28.575"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 18:29:28.576" endtime="20220704 18:29:28.577"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 18:29:27.969" endtime="20220704 18:29:28.577"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:28.581" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:28.579" endtime="20220704 18:29:28.581"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:28.581" endtime="20220704 18:29:28.583"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:28.584" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 18:29:28.583" endtime="20220704 18:29:28.584"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:28.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.584" endtime="20220704 18:29:28.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:28.732" endtime="20220704 18:29:28.732"/>
</return>
<msg timestamp="20220704 18:29:28.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.578" endtime="20220704 18:29:28.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:28.733" endtime="20220704 18:29:28.733"/>
</return>
<msg timestamp="20220704 18:29:28.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.578" endtime="20220704 18:29:28.733"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 18:29:28.735" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 18:29:28.735" endtime="20220704 18:29:28.735"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 18:29:28.735" endtime="20220704 18:29:28.736"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:28.736" level="INFO">${url} = lists/62c33188a73f2e28c89e8a6a/closed</msg>
<status status="PASS" starttime="20220704 18:29:28.736" endtime="20220704 18:29:28.736"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 18:29:28.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.736" endtime="20220704 18:29:28.881"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:28.881" endtime="20220704 18:29:28.881"/>
</return>
<msg timestamp="20220704 18:29:28.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.734" endtime="20220704 18:29:28.882"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:28.882" endtime="20220704 18:29:28.882"/>
</return>
<status status="PASS" starttime="20220704 18:29:28.733" endtime="20220704 18:29:28.883"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:28.885" level="INFO">${url} = lists/62c33188a73f2e28c89e8a6a</msg>
<status status="PASS" starttime="20220704 18:29:28.885" endtime="20220704 18:29:28.885"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 18:29:28.985" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.885" endtime="20220704 18:29:28.985"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:28.985" endtime="20220704 18:29:28.985"/>
</return>
<msg timestamp="20220704 18:29:28.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.884" endtime="20220704 18:29:28.986"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:28.986" endtime="20220704 18:29:28.986"/>
</return>
<msg timestamp="20220704 18:29:28.986" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.883" endtime="20220704 18:29:28.986"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 18:29:28.987" endtime="20220704 18:29:28.988"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 18:29:28.577" endtime="20220704 18:29:28.988"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 18:29:28.993" level="INFO">${url} = boards/62c331870d9f653082ec23fd</msg>
<status status="PASS" starttime="20220704 18:29:28.992" endtime="20220704 18:29:28.993"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 18:29:29.394" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.993" endtime="20220704 18:29:29.394"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:29.394" endtime="20220704 18:29:29.394"/>
</return>
<msg timestamp="20220704 18:29:29.394" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 18:29:28.992" endtime="20220704 18:29:29.394"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 18:29:29.394" endtime="20220704 18:29:29.394"/>
</return>
<status status="PASS" starttime="20220704 18:29:28.990" endtime="20220704 18:29:29.395"/>
</kw>
<status status="PASS" starttime="20220704 18:29:28.990" endtime="20220704 18:29:29.395"/>
</kw>
<status status="PASS" starttime="20220704 18:29:28.990" endtime="20220704 18:29:29.395"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 18:29:29.395" endtime="20220704 18:29:29.396"/>
</kw>
<status status="PASS" starttime="20220704 18:29:28.989" endtime="20220704 18:29:29.396"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 18:29:27.193" endtime="20220704 18:29:29.396"/>
</suite>
<status status="PASS" starttime="20220704 18:29:14.873" endtime="20220704 18:29:29.398"/>
</suite>
<status status="PASS" starttime="20220704 18:29:14.846" endtime="20220704 18:29:29.401"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
