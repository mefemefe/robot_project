<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220707 06:11:32.715" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 06:11:32.884" endtime="20220707 06:11:32.885"/>
</kw>
<status status="PASS" starttime="20220707 06:11:32.883" endtime="20220707 06:11:32.885"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:32.888" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:32.887" endtime="20220707 06:11:32.888"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:32.888" endtime="20220707 06:11:32.888"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:32.889" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 06:11:32.888" endtime="20220707 06:11:32.889"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:33.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:32.889" endtime="20220707 06:11:33.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:33.176" endtime="20220707 06:11:33.176"/>
</return>
<msg timestamp="20220707 06:11:33.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:32.887" endtime="20220707 06:11:33.177"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:33.177" endtime="20220707 06:11:33.177"/>
</return>
<msg timestamp="20220707 06:11:33.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:32.886" endtime="20220707 06:11:33.177"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:33.178" endtime="20220707 06:11:33.183"/>
</kw>
<status status="PASS" starttime="20220707 06:11:33.177" endtime="20220707 06:11:33.183"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:33.186" level="INFO">${url} = boards/62c6791584b4d10c01fea250</msg>
<status status="PASS" starttime="20220707 06:11:33.185" endtime="20220707 06:11:33.186"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:33.576" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:33.186" endtime="20220707 06:11:33.576"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:33.576" endtime="20220707 06:11:33.576"/>
</return>
<msg timestamp="20220707 06:11:33.576" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:33.185" endtime="20220707 06:11:33.576"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:33.576" endtime="20220707 06:11:33.576"/>
</return>
<status status="PASS" starttime="20220707 06:11:33.184" endtime="20220707 06:11:33.577"/>
</kw>
<status status="PASS" starttime="20220707 06:11:33.183" endtime="20220707 06:11:33.577"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 06:11:32.885" endtime="20220707 06:11:33.577"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:33.580" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:33.580" endtime="20220707 06:11:33.580"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:33.581" endtime="20220707 06:11:33.581"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:33.582" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 06:11:33.581" endtime="20220707 06:11:33.582"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:33.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:33.582" endtime="20220707 06:11:33.785"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:33.785" endtime="20220707 06:11:33.785"/>
</return>
<msg timestamp="20220707 06:11:33.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:33.579" endtime="20220707 06:11:33.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:33.786" endtime="20220707 06:11:33.786"/>
</return>
<msg timestamp="20220707 06:11:33.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:33.579" endtime="20220707 06:11:33.786"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:33.787" endtime="20220707 06:11:33.791"/>
</kw>
<status status="PASS" starttime="20220707 06:11:33.786" endtime="20220707 06:11:33.791"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:33.793" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:33.793" endtime="20220707 06:11:33.793"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:33.793" endtime="20220707 06:11:33.794"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:33.794" level="INFO">${url} = boards/62c6791539e309592231c25a</msg>
<status status="PASS" starttime="20220707 06:11:33.794" endtime="20220707 06:11:33.794"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:33.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:33.794" endtime="20220707 06:11:33.941"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:33.941" endtime="20220707 06:11:33.941"/>
</return>
<msg timestamp="20220707 06:11:33.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:33.792" endtime="20220707 06:11:33.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:33.942" endtime="20220707 06:11:33.942"/>
</return>
<status status="PASS" starttime="20220707 06:11:33.791" endtime="20220707 06:11:33.942"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:33.945" level="INFO">${url} = boards/62c6791539e309592231c25a</msg>
<status status="PASS" starttime="20220707 06:11:33.944" endtime="20220707 06:11:33.945"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:34.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:33.945" endtime="20220707 06:11:34.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:34.046" endtime="20220707 06:11:34.046"/>
</return>
<msg timestamp="20220707 06:11:34.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:33.943" endtime="20220707 06:11:34.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:34.046" endtime="20220707 06:11:34.046"/>
</return>
<msg timestamp="20220707 06:11:34.046" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:33.942" endtime="20220707 06:11:34.046"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:34.047" endtime="20220707 06:11:34.052"/>
</kw>
<status status="PASS" starttime="20220707 06:11:34.047" endtime="20220707 06:11:34.052"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:34.052" endtime="20220707 06:11:34.053"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:34.056" level="INFO">${url} = boards/62c6791539e309592231c25a</msg>
<status status="PASS" starttime="20220707 06:11:34.055" endtime="20220707 06:11:34.056"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:34.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:34.056" endtime="20220707 06:11:34.432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:34.432" endtime="20220707 06:11:34.432"/>
</return>
<msg timestamp="20220707 06:11:34.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:34.054" endtime="20220707 06:11:34.433"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:34.433" endtime="20220707 06:11:34.433"/>
</return>
<status status="PASS" starttime="20220707 06:11:34.053" endtime="20220707 06:11:34.433"/>
</kw>
<status status="PASS" starttime="20220707 06:11:34.053" endtime="20220707 06:11:34.433"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 06:11:33.578" endtime="20220707 06:11:34.433"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:34.436" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:34.435" endtime="20220707 06:11:34.436"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:34.436" endtime="20220707 06:11:34.436"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:34.437" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 06:11:34.436" endtime="20220707 06:11:34.437"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:34.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:34.437" endtime="20220707 06:11:34.651"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:34.651" endtime="20220707 06:11:34.651"/>
</return>
<msg timestamp="20220707 06:11:34.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:34.435" endtime="20220707 06:11:34.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:34.652" endtime="20220707 06:11:34.652"/>
</return>
<msg timestamp="20220707 06:11:34.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:34.435" endtime="20220707 06:11:34.652"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:34.655" level="INFO">${url} = boards/62c67916799ee252eae70103</msg>
<status status="PASS" starttime="20220707 06:11:34.654" endtime="20220707 06:11:34.655"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:35.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:34.655" endtime="20220707 06:11:35.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:35.029" endtime="20220707 06:11:35.029"/>
</return>
<msg timestamp="20220707 06:11:35.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:34.654" endtime="20220707 06:11:35.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:35.029" endtime="20220707 06:11:35.029"/>
</return>
<status status="PASS" starttime="20220707 06:11:34.652" endtime="20220707 06:11:35.029"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:35.032" level="INFO">${url} = boards/62c67916799ee252eae70103</msg>
<status status="PASS" starttime="20220707 06:11:35.031" endtime="20220707 06:11:35.032"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:35.122" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 06:11:35.032" endtime="20220707 06:11:35.122"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:35.122" endtime="20220707 06:11:35.122"/>
</return>
<msg timestamp="20220707 06:11:35.122" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 06:11:35.031" endtime="20220707 06:11:35.122"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:35.122" endtime="20220707 06:11:35.122"/>
</return>
<status status="PASS" starttime="20220707 06:11:35.030" endtime="20220707 06:11:35.122"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 06:11:34.434" endtime="20220707 06:11:35.123"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:35.125" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:35.125" endtime="20220707 06:11:35.125"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:35.125" endtime="20220707 06:11:35.126"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:35.127" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 06:11:35.126" endtime="20220707 06:11:35.127"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:35.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:35.127" endtime="20220707 06:11:35.339"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:35.339" endtime="20220707 06:11:35.339"/>
</return>
<msg timestamp="20220707 06:11:35.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:35.124" endtime="20220707 06:11:35.339"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:35.339" endtime="20220707 06:11:35.339"/>
</return>
<msg timestamp="20220707 06:11:35.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:35.124" endtime="20220707 06:11:35.340"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:35.340" endtime="20220707 06:11:35.345"/>
</kw>
<status status="PASS" starttime="20220707 06:11:35.340" endtime="20220707 06:11:35.345"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:35.347" level="INFO">${url} = boards/62c67917c20cde317b1ce0f9</msg>
<status status="PASS" starttime="20220707 06:11:35.347" endtime="20220707 06:11:35.347"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:35.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:35.347" endtime="20220707 06:11:35.449"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:35.449" endtime="20220707 06:11:35.449"/>
</return>
<msg timestamp="20220707 06:11:35.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:35.346" endtime="20220707 06:11:35.449"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:35.449" endtime="20220707 06:11:35.450"/>
</return>
<msg timestamp="20220707 06:11:35.450" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:35.345" endtime="20220707 06:11:35.450"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:35.450" endtime="20220707 06:11:35.455"/>
</kw>
<status status="PASS" starttime="20220707 06:11:35.450" endtime="20220707 06:11:35.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:35.455" endtime="20220707 06:11:35.456"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:35.459" level="INFO">${url} = boards/62c67917c20cde317b1ce0f9</msg>
<status status="PASS" starttime="20220707 06:11:35.458" endtime="20220707 06:11:35.459"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:35.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:35.459" endtime="20220707 06:11:35.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:35.849" endtime="20220707 06:11:35.849"/>
</return>
<msg timestamp="20220707 06:11:35.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:35.458" endtime="20220707 06:11:35.850"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:35.850" endtime="20220707 06:11:35.850"/>
</return>
<status status="PASS" starttime="20220707 06:11:35.457" endtime="20220707 06:11:35.850"/>
</kw>
<status status="PASS" starttime="20220707 06:11:35.456" endtime="20220707 06:11:35.850"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 06:11:35.123" endtime="20220707 06:11:35.850"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:35.853" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:35.852" endtime="20220707 06:11:35.853"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:35.853" endtime="20220707 06:11:35.853"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:35.854" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 06:11:35.853" endtime="20220707 06:11:35.854"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:36.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:35.854" endtime="20220707 06:11:36.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:36.062" endtime="20220707 06:11:36.062"/>
</return>
<msg timestamp="20220707 06:11:36.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:35.852" endtime="20220707 06:11:36.063"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:36.063" endtime="20220707 06:11:36.063"/>
</return>
<msg timestamp="20220707 06:11:36.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:35.851" endtime="20220707 06:11:36.063"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:36.064" endtime="20220707 06:11:36.069"/>
</kw>
<status status="PASS" starttime="20220707 06:11:36.064" endtime="20220707 06:11:36.069"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:36.072" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:36.071" endtime="20220707 06:11:36.072"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:36.072" endtime="20220707 06:11:36.072"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:36.073" level="INFO">${url} = boards/62c67917c20cde317b1ce19c</msg>
<status status="PASS" starttime="20220707 06:11:36.072" endtime="20220707 06:11:36.073"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:36.209" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:36.073" endtime="20220707 06:11:36.209"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:36.209" endtime="20220707 06:11:36.209"/>
</return>
<msg timestamp="20220707 06:11:36.210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:36.071" endtime="20220707 06:11:36.210"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:36.210" endtime="20220707 06:11:36.210"/>
</return>
<status status="PASS" starttime="20220707 06:11:36.069" endtime="20220707 06:11:36.210"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:36.213" level="INFO">${url} = boards/62c67917c20cde317b1ce19c</msg>
<status status="PASS" starttime="20220707 06:11:36.212" endtime="20220707 06:11:36.213"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:36.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:36.213" endtime="20220707 06:11:36.316"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:36.316" endtime="20220707 06:11:36.317"/>
</return>
<msg timestamp="20220707 06:11:36.317" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:36.212" endtime="20220707 06:11:36.317"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:36.317" endtime="20220707 06:11:36.317"/>
</return>
<msg timestamp="20220707 06:11:36.317" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:36.210" endtime="20220707 06:11:36.317"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:36.317" endtime="20220707 06:11:36.318"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:36.321" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:36.320" endtime="20220707 06:11:36.321"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:36.321" endtime="20220707 06:11:36.321"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:36.321" level="INFO">${url} = boards/62c67917c20cde317b1ce19c</msg>
<status status="PASS" starttime="20220707 06:11:36.321" endtime="20220707 06:11:36.321"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:36.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:36.322" endtime="20220707 06:11:36.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:36.464" endtime="20220707 06:11:36.464"/>
</return>
<msg timestamp="20220707 06:11:36.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:36.319" endtime="20220707 06:11:36.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:36.465" endtime="20220707 06:11:36.465"/>
</return>
<status status="PASS" starttime="20220707 06:11:36.319" endtime="20220707 06:11:36.465"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:36.467" level="INFO">${url} = boards/62c67917c20cde317b1ce19c</msg>
<status status="PASS" starttime="20220707 06:11:36.467" endtime="20220707 06:11:36.467"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:36.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:36.467" endtime="20220707 06:11:36.566"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:36.567" endtime="20220707 06:11:36.567"/>
</return>
<msg timestamp="20220707 06:11:36.567" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:36.466" endtime="20220707 06:11:36.567"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:36.567" endtime="20220707 06:11:36.567"/>
</return>
<msg timestamp="20220707 06:11:36.567" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:36.465" endtime="20220707 06:11:36.567"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:36.567" endtime="20220707 06:11:36.568"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:36.571" level="INFO">${url} = boards/62c67917c20cde317b1ce19c</msg>
<status status="PASS" starttime="20220707 06:11:36.570" endtime="20220707 06:11:36.571"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:37.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:36.571" endtime="20220707 06:11:37.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:37.084" endtime="20220707 06:11:37.085"/>
</return>
<msg timestamp="20220707 06:11:37.085" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:36.570" endtime="20220707 06:11:37.085"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:37.085" endtime="20220707 06:11:37.085"/>
</return>
<status status="PASS" starttime="20220707 06:11:36.569" endtime="20220707 06:11:37.085"/>
</kw>
<status status="PASS" starttime="20220707 06:11:36.569" endtime="20220707 06:11:37.085"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 06:11:35.851" endtime="20220707 06:11:37.085"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220707 06:11:37.087" endtime="20220707 06:11:37.088"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220707 06:11:32.741" endtime="20220707 06:11:37.088"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 06:11:37.103" endtime="20220707 06:11:37.104"/>
</kw>
<status status="PASS" starttime="20220707 06:11:37.103" endtime="20220707 06:11:37.104"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:37.106" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:37.105" endtime="20220707 06:11:37.106"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:37.106" endtime="20220707 06:11:37.106"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:37.107" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 06:11:37.106" endtime="20220707 06:11:37.107"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:37.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.107" endtime="20220707 06:11:37.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:37.359" endtime="20220707 06:11:37.359"/>
</return>
<msg timestamp="20220707 06:11:37.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.105" endtime="20220707 06:11:37.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:37.359" endtime="20220707 06:11:37.359"/>
</return>
<msg timestamp="20220707 06:11:37.360" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.104" endtime="20220707 06:11:37.360"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 06:11:37.360" level="INFO">${TEST_SUITE_BOARD_ID} = 62c67919de23cc3f25de6812</msg>
<status status="PASS" starttime="20220707 06:11:37.360" endtime="20220707 06:11:37.360"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:37.362" level="INFO">${url} = boards/62c67919de23cc3f25de6812/lists/</msg>
<status status="PASS" starttime="20220707 06:11:37.361" endtime="20220707 06:11:37.362"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:37.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.362" endtime="20220707 06:11:37.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:37.468" endtime="20220707 06:11:37.468"/>
</return>
<msg timestamp="20220707 06:11:37.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.361" endtime="20220707 06:11:37.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:37.469" endtime="20220707 06:11:37.469"/>
</return>
<msg timestamp="20220707 06:11:37.469" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.361" endtime="20220707 06:11:37.469"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 06:11:37.471" level="INFO">${TEST_SUITE_LIST_ID} = 62c67919de23cc3f25de6819</msg>
<status status="PASS" starttime="20220707 06:11:37.470" endtime="20220707 06:11:37.471"/>
</kw>
<status status="PASS" starttime="20220707 06:11:37.104" endtime="20220707 06:11:37.471"/>
</kw>
<status status="PASS" starttime="20220707 06:11:37.103" endtime="20220707 06:11:37.471"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:37.473" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:37.473" endtime="20220707 06:11:37.473"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:37.474" endtime="20220707 06:11:37.474"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:37.475" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 06:11:37.474" endtime="20220707 06:11:37.475"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:37.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.475" endtime="20220707 06:11:37.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:37.746" endtime="20220707 06:11:37.746"/>
</return>
<msg timestamp="20220707 06:11:37.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.472" endtime="20220707 06:11:37.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:37.746" endtime="20220707 06:11:37.746"/>
</return>
<msg timestamp="20220707 06:11:37.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.472" endtime="20220707 06:11:37.746"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:37.747" endtime="20220707 06:11:37.754"/>
</kw>
<status status="PASS" starttime="20220707 06:11:37.747" endtime="20220707 06:11:37.754"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:37.755" endtime="20220707 06:11:37.756"/>
</return>
<msg timestamp="20220707 06:11:37.756" level="INFO">${CARD_ID} = 62c67919b8dd674ae8c8ef79</msg>
<status status="PASS" starttime="20220707 06:11:37.754" endtime="20220707 06:11:37.756"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:37.758" level="INFO">${url} = cards/62c67919b8dd674ae8c8ef79</msg>
<status status="PASS" starttime="20220707 06:11:37.757" endtime="20220707 06:11:37.758"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:37.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.758" endtime="20220707 06:11:37.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:37.868" endtime="20220707 06:11:37.868"/>
</return>
<msg timestamp="20220707 06:11:37.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.757" endtime="20220707 06:11:37.869"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:37.869" endtime="20220707 06:11:37.869"/>
</return>
<msg timestamp="20220707 06:11:37.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.757" endtime="20220707 06:11:37.869"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:37.870" endtime="20220707 06:11:37.870"/>
</return>
<msg timestamp="20220707 06:11:37.871" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220707 06:11:37.869" endtime="20220707 06:11:37.871"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:37.871" endtime="20220707 06:11:37.871"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:37.873" level="INFO">${url} = cards/62c67919b8dd674ae8c8ef79</msg>
<status status="PASS" starttime="20220707 06:11:37.872" endtime="20220707 06:11:37.873"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:38.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.873" endtime="20220707 06:11:38.089"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:38.090" endtime="20220707 06:11:38.090"/>
</return>
<msg timestamp="20220707 06:11:38.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:37.872" endtime="20220707 06:11:38.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:38.090" endtime="20220707 06:11:38.090"/>
</return>
<status status="PASS" starttime="20220707 06:11:37.871" endtime="20220707 06:11:38.090"/>
</kw>
<status status="PASS" starttime="20220707 06:11:37.871" endtime="20220707 06:11:38.090"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 06:11:37.471" endtime="20220707 06:11:38.090"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:38.093" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:38.092" endtime="20220707 06:11:38.093"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:38.093" endtime="20220707 06:11:38.093"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:38.094" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 06:11:38.093" endtime="20220707 06:11:38.094"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:38.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.094" endtime="20220707 06:11:38.324"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:38.324" endtime="20220707 06:11:38.324"/>
</return>
<msg timestamp="20220707 06:11:38.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.092" endtime="20220707 06:11:38.324"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:38.325" endtime="20220707 06:11:38.325"/>
</return>
<msg timestamp="20220707 06:11:38.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.091" endtime="20220707 06:11:38.325"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:38.325" endtime="20220707 06:11:38.325"/>
</return>
<msg timestamp="20220707 06:11:38.326" level="INFO">${CARD_ID} = 62c6791ad9f74e3ff4c12ab9</msg>
<status status="PASS" starttime="20220707 06:11:38.325" endtime="20220707 06:11:38.326"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:38.329" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:38.328" endtime="20220707 06:11:38.329"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:38.329" endtime="20220707 06:11:38.329"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:38.330" level="INFO">${url} = cards/62c6791ad9f74e3ff4c12ab9</msg>
<status status="PASS" starttime="20220707 06:11:38.329" endtime="20220707 06:11:38.330"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:38.502" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.330" endtime="20220707 06:11:38.502"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:38.502" endtime="20220707 06:11:38.503"/>
</return>
<msg timestamp="20220707 06:11:38.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.328" endtime="20220707 06:11:38.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:38.503" endtime="20220707 06:11:38.503"/>
</return>
<msg timestamp="20220707 06:11:38.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.327" endtime="20220707 06:11:38.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:38.503" endtime="20220707 06:11:38.503"/>
</return>
<status status="PASS" starttime="20220707 06:11:38.326" endtime="20220707 06:11:38.504"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:38.505" level="INFO">${url} = cards/62c6791ad9f74e3ff4c12ab9</msg>
<status status="PASS" starttime="20220707 06:11:38.505" endtime="20220707 06:11:38.505"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:38.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.505" endtime="20220707 06:11:38.615"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:38.615" endtime="20220707 06:11:38.615"/>
</return>
<msg timestamp="20220707 06:11:38.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.504" endtime="20220707 06:11:38.616"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:38.616" endtime="20220707 06:11:38.616"/>
</return>
<msg timestamp="20220707 06:11:38.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.504" endtime="20220707 06:11:38.616"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:38.617" endtime="20220707 06:11:38.617"/>
</return>
<msg timestamp="20220707 06:11:38.618" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220707 06:11:38.616" endtime="20220707 06:11:38.618"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 06:11:38.618" endtime="20220707 06:11:38.618"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:38.620" level="INFO">${url} = cards/62c6791ad9f74e3ff4c12ab9</msg>
<status status="PASS" starttime="20220707 06:11:38.619" endtime="20220707 06:11:38.620"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:38.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.620" endtime="20220707 06:11:38.834"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:38.834" endtime="20220707 06:11:38.834"/>
</return>
<msg timestamp="20220707 06:11:38.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.619" endtime="20220707 06:11:38.834"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:38.834" endtime="20220707 06:11:38.834"/>
</return>
<status status="PASS" starttime="20220707 06:11:38.619" endtime="20220707 06:11:38.834"/>
</kw>
<status status="PASS" starttime="20220707 06:11:38.618" endtime="20220707 06:11:38.834"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 06:11:38.091" endtime="20220707 06:11:38.834"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:38.837" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:38.837" endtime="20220707 06:11:38.837"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:38.838" endtime="20220707 06:11:38.838"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:38.839" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 06:11:38.838" endtime="20220707 06:11:38.839"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:39.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.839" endtime="20220707 06:11:39.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:39.052" endtime="20220707 06:11:39.052"/>
</return>
<msg timestamp="20220707 06:11:39.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.836" endtime="20220707 06:11:39.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:39.052" endtime="20220707 06:11:39.052"/>
</return>
<msg timestamp="20220707 06:11:39.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:38.836" endtime="20220707 06:11:39.053"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:39.053" endtime="20220707 06:11:39.053"/>
</return>
<msg timestamp="20220707 06:11:39.055" level="INFO">${CARD_ID} = 62c6791aadd1f64c3a77983c</msg>
<status status="PASS" starttime="20220707 06:11:39.053" endtime="20220707 06:11:39.055"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:39.056" level="INFO">${url} = cards/62c6791aadd1f64c3a77983c</msg>
<status status="PASS" starttime="20220707 06:11:39.056" endtime="20220707 06:11:39.056"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:39.266" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.056" endtime="20220707 06:11:39.266"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:39.266" endtime="20220707 06:11:39.266"/>
</return>
<msg timestamp="20220707 06:11:39.267" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.055" endtime="20220707 06:11:39.267"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:39.267" endtime="20220707 06:11:39.267"/>
</return>
<msg timestamp="20220707 06:11:39.267" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.055" endtime="20220707 06:11:39.267"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:39.268" endtime="20220707 06:11:39.270"/>
</kw>
<status status="PASS" starttime="20220707 06:11:39.267" endtime="20220707 06:11:39.270"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:39.271" level="INFO">${url} = cards/62c6791aadd1f64c3a77983c</msg>
<status status="PASS" starttime="20220707 06:11:39.271" endtime="20220707 06:11:39.271"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:39.365" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 06:11:39.271" endtime="20220707 06:11:39.365"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:39.365" endtime="20220707 06:11:39.365"/>
</return>
<msg timestamp="20220707 06:11:39.365" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 06:11:39.270" endtime="20220707 06:11:39.365"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:39.365" endtime="20220707 06:11:39.365"/>
</return>
<status status="PASS" starttime="20220707 06:11:39.270" endtime="20220707 06:11:39.366"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 06:11:38.835" endtime="20220707 06:11:39.366"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:39.368" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:39.368" endtime="20220707 06:11:39.368"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:39.369" endtime="20220707 06:11:39.369"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:39.370" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 06:11:39.369" endtime="20220707 06:11:39.370"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:39.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.370" endtime="20220707 06:11:39.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:39.574" endtime="20220707 06:11:39.574"/>
</return>
<msg timestamp="20220707 06:11:39.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.368" endtime="20220707 06:11:39.575"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:39.575" endtime="20220707 06:11:39.575"/>
</return>
<msg timestamp="20220707 06:11:39.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.367" endtime="20220707 06:11:39.575"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:39.576" endtime="20220707 06:11:39.576"/>
</return>
<msg timestamp="20220707 06:11:39.576" level="INFO">${CARD_ID} = 62c6791bc27c3e0a155033ba</msg>
<status status="PASS" starttime="20220707 06:11:39.575" endtime="20220707 06:11:39.576"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:39.578" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:39.578" endtime="20220707 06:11:39.578"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:39.578" endtime="20220707 06:11:39.579"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:39.579" level="INFO">${url} = cards/62c6791bc27c3e0a155033ba</msg>
<status status="PASS" starttime="20220707 06:11:39.579" endtime="20220707 06:11:39.579"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:39.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.579" endtime="20220707 06:11:39.771"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:39.771" endtime="20220707 06:11:39.771"/>
</return>
<msg timestamp="20220707 06:11:39.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.577" endtime="20220707 06:11:39.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:39.772" endtime="20220707 06:11:39.772"/>
</return>
<msg timestamp="20220707 06:11:39.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.577" endtime="20220707 06:11:39.772"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:39.772" endtime="20220707 06:11:39.779"/>
</kw>
<status status="PASS" starttime="20220707 06:11:39.772" endtime="20220707 06:11:39.779"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:39.780" level="INFO">${url} = cards/62c6791bc27c3e0a155033ba</msg>
<status status="PASS" starttime="20220707 06:11:39.780" endtime="20220707 06:11:39.780"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:39.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.781" endtime="20220707 06:11:39.887"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:39.887" endtime="20220707 06:11:39.887"/>
</return>
<msg timestamp="20220707 06:11:39.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.780" endtime="20220707 06:11:39.887"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:39.887" endtime="20220707 06:11:39.887"/>
</return>
<msg timestamp="20220707 06:11:39.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.779" endtime="20220707 06:11:39.888"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:39.888" endtime="20220707 06:11:39.888"/>
</return>
<msg timestamp="20220707 06:11:39.889" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220707 06:11:39.888" endtime="20220707 06:11:39.889"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:39.889" endtime="20220707 06:11:39.889"/>
</return>
<msg timestamp="20220707 06:11:39.890" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220707 06:11:39.889" endtime="20220707 06:11:39.890"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:39.890" endtime="20220707 06:11:39.891"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:39.891" endtime="20220707 06:11:39.891"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:39.893" level="INFO">${url} = cards/62c6791bc27c3e0a155033ba</msg>
<status status="PASS" starttime="20220707 06:11:39.892" endtime="20220707 06:11:39.893"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:40.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.893" endtime="20220707 06:11:40.092"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:40.092" endtime="20220707 06:11:40.092"/>
</return>
<msg timestamp="20220707 06:11:40.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:39.892" endtime="20220707 06:11:40.092"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:40.092" endtime="20220707 06:11:40.092"/>
</return>
<status status="PASS" starttime="20220707 06:11:39.891" endtime="20220707 06:11:40.093"/>
</kw>
<status status="PASS" starttime="20220707 06:11:39.891" endtime="20220707 06:11:40.093"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 06:11:39.366" endtime="20220707 06:11:40.093"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:40.097" level="INFO">${url} = boards/62c67919de23cc3f25de6812</msg>
<status status="PASS" starttime="20220707 06:11:40.097" endtime="20220707 06:11:40.097"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:40.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:40.097" endtime="20220707 06:11:40.472"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:40.472" endtime="20220707 06:11:40.472"/>
</return>
<msg timestamp="20220707 06:11:40.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:40.096" endtime="20220707 06:11:40.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:40.473" endtime="20220707 06:11:40.473"/>
</return>
<status status="PASS" starttime="20220707 06:11:40.095" endtime="20220707 06:11:40.473"/>
</kw>
<status status="PASS" starttime="20220707 06:11:40.095" endtime="20220707 06:11:40.473"/>
</kw>
<status status="PASS" starttime="20220707 06:11:40.095" endtime="20220707 06:11:40.473"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 06:11:40.473" endtime="20220707 06:11:40.475"/>
</kw>
<status status="PASS" starttime="20220707 06:11:40.094" endtime="20220707 06:11:40.475"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220707 06:11:37.090" endtime="20220707 06:11:40.475"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 06:11:40.488" endtime="20220707 06:11:40.489"/>
</kw>
<status status="PASS" starttime="20220707 06:11:40.488" endtime="20220707 06:11:40.489"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:40.491" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:40.490" endtime="20220707 06:11:40.491"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:40.491" endtime="20220707 06:11:40.491"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:40.492" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 06:11:40.491" endtime="20220707 06:11:40.492"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:40.736" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:40.492" endtime="20220707 06:11:40.736"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:40.736" endtime="20220707 06:11:40.736"/>
</return>
<msg timestamp="20220707 06:11:40.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:40.490" endtime="20220707 06:11:40.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:40.737" endtime="20220707 06:11:40.737"/>
</return>
<msg timestamp="20220707 06:11:40.737" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:40.489" endtime="20220707 06:11:40.737"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 06:11:40.738" level="INFO">${TEST_SUITE_BOARD_ID} = 62c6791ca896952ec482b5f3</msg>
<status status="PASS" starttime="20220707 06:11:40.737" endtime="20220707 06:11:40.738"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:40.740" level="INFO">${url} = boards/62c6791ca896952ec482b5f3/lists/</msg>
<status status="PASS" starttime="20220707 06:11:40.739" endtime="20220707 06:11:40.740"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:40.839" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:40.740" endtime="20220707 06:11:40.839"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:40.839" endtime="20220707 06:11:40.839"/>
</return>
<msg timestamp="20220707 06:11:40.839" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:40.739" endtime="20220707 06:11:40.839"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:40.840" endtime="20220707 06:11:40.840"/>
</return>
<msg timestamp="20220707 06:11:40.840" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:40.738" endtime="20220707 06:11:40.840"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 06:11:40.842" level="INFO">${TEST_SUITE_LIST_ID} = 62c6791ca896952ec482b5fa</msg>
<status status="PASS" starttime="20220707 06:11:40.840" endtime="20220707 06:11:40.842"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:40.843" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:40.843" endtime="20220707 06:11:40.843"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:40.844" endtime="20220707 06:11:40.844"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:40.845" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 06:11:40.844" endtime="20220707 06:11:40.845"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:41.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:40.845" endtime="20220707 06:11:41.054"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:41.054" endtime="20220707 06:11:41.054"/>
</return>
<msg timestamp="20220707 06:11:41.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:40.843" endtime="20220707 06:11:41.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:41.055" endtime="20220707 06:11:41.055"/>
</return>
<msg timestamp="20220707 06:11:41.055" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:40.842" endtime="20220707 06:11:41.055"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 06:11:41.056" level="INFO">${TEST_SUITE_CARD_ID} = 62c6791cab9b547a3e9fb480</msg>
<status status="PASS" starttime="20220707 06:11:41.055" endtime="20220707 06:11:41.056"/>
</kw>
<status status="PASS" starttime="20220707 06:11:40.489" endtime="20220707 06:11:41.057"/>
</kw>
<status status="PASS" starttime="20220707 06:11:40.488" endtime="20220707 06:11:41.057"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:41.059" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:41.059" endtime="20220707 06:11:41.059"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:41.059" endtime="20220707 06:11:41.060"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:41.061" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 06:11:41.060" endtime="20220707 06:11:41.061"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:41.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.061" endtime="20220707 06:11:41.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:41.245" endtime="20220707 06:11:41.245"/>
</return>
<msg timestamp="20220707 06:11:41.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.058" endtime="20220707 06:11:41.246"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:41.246" endtime="20220707 06:11:41.246"/>
</return>
<msg timestamp="20220707 06:11:41.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.058" endtime="20220707 06:11:41.246"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:41.247" endtime="20220707 06:11:41.247"/>
</return>
<msg timestamp="20220707 06:11:41.248" level="INFO">${checklist_id} = 62c6791dc5cb2b51e74795e4</msg>
<status status="PASS" starttime="20220707 06:11:41.246" endtime="20220707 06:11:41.248"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:41.249" level="INFO">${url} = checklists/62c6791dc5cb2b51e74795e4</msg>
<status status="PASS" starttime="20220707 06:11:41.249" endtime="20220707 06:11:41.249"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:41.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.249" endtime="20220707 06:11:41.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:41.359" endtime="20220707 06:11:41.359"/>
</return>
<msg timestamp="20220707 06:11:41.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.248" endtime="20220707 06:11:41.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:41.359" endtime="20220707 06:11:41.359"/>
</return>
<msg timestamp="20220707 06:11:41.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.248" endtime="20220707 06:11:41.359"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:41.360" endtime="20220707 06:11:41.360"/>
</return>
<msg timestamp="20220707 06:11:41.361" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220707 06:11:41.360" endtime="20220707 06:11:41.361"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:41.361" endtime="20220707 06:11:41.362"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:41.363" level="INFO">${url} = checklists/62c6791dc5cb2b51e74795e4</msg>
<status status="PASS" starttime="20220707 06:11:41.363" endtime="20220707 06:11:41.363"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:41.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.364" endtime="20220707 06:11:41.710"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:41.710" endtime="20220707 06:11:41.710"/>
</return>
<msg timestamp="20220707 06:11:41.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.362" endtime="20220707 06:11:41.710"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:41.710" endtime="20220707 06:11:41.710"/>
</return>
<status status="PASS" starttime="20220707 06:11:41.362" endtime="20220707 06:11:41.711"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 06:11:41.057" endtime="20220707 06:11:41.711"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:41.713" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:41.713" endtime="20220707 06:11:41.714"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:41.714" endtime="20220707 06:11:41.714"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:41.715" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 06:11:41.714" endtime="20220707 06:11:41.715"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:41.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.715" endtime="20220707 06:11:41.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:41.884" endtime="20220707 06:11:41.884"/>
</return>
<msg timestamp="20220707 06:11:41.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.713" endtime="20220707 06:11:41.885"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:41.885" endtime="20220707 06:11:41.885"/>
</return>
<msg timestamp="20220707 06:11:41.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.712" endtime="20220707 06:11:41.885"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:41.885" endtime="20220707 06:11:41.885"/>
</return>
<msg timestamp="20220707 06:11:41.887" level="INFO">${checklist_id} = 62c6791d7dff697fe9e386ae</msg>
<status status="PASS" starttime="20220707 06:11:41.885" endtime="20220707 06:11:41.887"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:41.888" level="INFO">${url} = checklists/62c6791d7dff697fe9e386ae</msg>
<status status="PASS" starttime="20220707 06:11:41.888" endtime="20220707 06:11:41.888"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:42.056" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.888" endtime="20220707 06:11:42.056"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:42.056" endtime="20220707 06:11:42.056"/>
</return>
<msg timestamp="20220707 06:11:42.056" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.887" endtime="20220707 06:11:42.057"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:42.057" endtime="20220707 06:11:42.057"/>
</return>
<msg timestamp="20220707 06:11:42.057" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:41.887" endtime="20220707 06:11:42.057"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:42.058" endtime="20220707 06:11:42.060"/>
</kw>
<status status="PASS" starttime="20220707 06:11:42.057" endtime="20220707 06:11:42.060"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:42.062" level="INFO">${url} = checklists/62c6791d7dff697fe9e386ae</msg>
<status status="PASS" starttime="20220707 06:11:42.061" endtime="20220707 06:11:42.062"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:42.156" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 06:11:42.062" endtime="20220707 06:11:42.156"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:42.156" endtime="20220707 06:11:42.156"/>
</return>
<msg timestamp="20220707 06:11:42.156" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 06:11:42.061" endtime="20220707 06:11:42.156"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:42.156" endtime="20220707 06:11:42.156"/>
</return>
<status status="PASS" starttime="20220707 06:11:42.060" endtime="20220707 06:11:42.157"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 06:11:41.711" endtime="20220707 06:11:42.157"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:42.162" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:42.160" endtime="20220707 06:11:42.162"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:42.162" endtime="20220707 06:11:42.162"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:42.163" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 06:11:42.162" endtime="20220707 06:11:42.163"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:42.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:42.163" endtime="20220707 06:11:42.324"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:42.324" endtime="20220707 06:11:42.324"/>
</return>
<msg timestamp="20220707 06:11:42.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:42.159" endtime="20220707 06:11:42.324"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:42.324" endtime="20220707 06:11:42.324"/>
</return>
<msg timestamp="20220707 06:11:42.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:42.158" endtime="20220707 06:11:42.324"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:42.325" endtime="20220707 06:11:42.325"/>
</return>
<msg timestamp="20220707 06:11:42.326" level="INFO">${checklist_id} = 62c6791e3064a651e4fdb4a3</msg>
<status status="PASS" starttime="20220707 06:11:42.325" endtime="20220707 06:11:42.326"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:42.328" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:42.327" endtime="20220707 06:11:42.328"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:42.328" endtime="20220707 06:11:42.328"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:42.329" level="INFO">${url} = checklists/62c6791e3064a651e4fdb4a3</msg>
<status status="PASS" starttime="20220707 06:11:42.328" endtime="20220707 06:11:42.329"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:42.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:42.329" endtime="20220707 06:11:42.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:42.464" endtime="20220707 06:11:42.464"/>
</return>
<msg timestamp="20220707 06:11:42.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:42.327" endtime="20220707 06:11:42.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:42.464" endtime="20220707 06:11:42.464"/>
</return>
<msg timestamp="20220707 06:11:42.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:42.326" endtime="20220707 06:11:42.465"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:42.466" level="INFO">${url} = checklists/62c6791e3064a651e4fdb4a3</msg>
<status status="PASS" starttime="20220707 06:11:42.466" endtime="20220707 06:11:42.466"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:42.572" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:42.466" endtime="20220707 06:11:42.572"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:42.573" endtime="20220707 06:11:42.573"/>
</return>
<msg timestamp="20220707 06:11:42.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:42.465" endtime="20220707 06:11:42.573"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:42.573" endtime="20220707 06:11:42.573"/>
</return>
<msg timestamp="20220707 06:11:42.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:42.465" endtime="20220707 06:11:42.573"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:42.574" endtime="20220707 06:11:42.574"/>
</return>
<msg timestamp="20220707 06:11:42.575" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220707 06:11:42.574" endtime="20220707 06:11:42.575"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:42.575" endtime="20220707 06:11:42.576"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:42.592" level="INFO">${url} = checklists/62c6791e3064a651e4fdb4a3</msg>
<status status="PASS" starttime="20220707 06:11:42.591" endtime="20220707 06:11:42.592"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:42.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:42.592" endtime="20220707 06:11:42.756"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:42.756" endtime="20220707 06:11:42.756"/>
</return>
<msg timestamp="20220707 06:11:42.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:42.590" endtime="20220707 06:11:42.756"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:42.756" endtime="20220707 06:11:42.756"/>
</return>
<status status="PASS" starttime="20220707 06:11:42.576" endtime="20220707 06:11:42.756"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 06:11:42.158" endtime="20220707 06:11:42.756"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:42.759" level="INFO">${url} = boards/62c6791ca896952ec482b5f3</msg>
<status status="PASS" starttime="20220707 06:11:42.759" endtime="20220707 06:11:42.759"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:43.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:42.759" endtime="20220707 06:11:43.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:43.188" endtime="20220707 06:11:43.188"/>
</return>
<msg timestamp="20220707 06:11:43.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:42.758" endtime="20220707 06:11:43.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:43.189" endtime="20220707 06:11:43.189"/>
</return>
<status status="PASS" starttime="20220707 06:11:42.758" endtime="20220707 06:11:43.189"/>
</kw>
<status status="PASS" starttime="20220707 06:11:42.758" endtime="20220707 06:11:43.189"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 06:11:43.190" endtime="20220707 06:11:43.191"/>
</kw>
<status status="PASS" starttime="20220707 06:11:42.757" endtime="20220707 06:11:43.191"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220707 06:11:40.476" endtime="20220707 06:11:43.191"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 06:11:43.203" endtime="20220707 06:11:43.204"/>
</kw>
<status status="PASS" starttime="20220707 06:11:43.203" endtime="20220707 06:11:43.204"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:43.206" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:43.205" endtime="20220707 06:11:43.206"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:43.206" endtime="20220707 06:11:43.206"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:43.207" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 06:11:43.206" endtime="20220707 06:11:43.207"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:43.467" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:43.207" endtime="20220707 06:11:43.467"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:43.467" endtime="20220707 06:11:43.467"/>
</return>
<msg timestamp="20220707 06:11:43.467" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:43.205" endtime="20220707 06:11:43.467"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:43.467" endtime="20220707 06:11:43.467"/>
</return>
<msg timestamp="20220707 06:11:43.467" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:43.204" endtime="20220707 06:11:43.467"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 06:11:43.469" level="INFO">${TEST_SUITE_BOARD_ID} = 62c6791fbd3fcd2f36aba568</msg>
<status status="PASS" starttime="20220707 06:11:43.468" endtime="20220707 06:11:43.469"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:43.572" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:43.469" endtime="20220707 06:11:43.572"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 06:11:43.573" level="INFO">${TEST_SUITE_LIST_ID} = 62c6791fbd3fcd2f36aba56f</msg>
<status status="PASS" starttime="20220707 06:11:43.572" endtime="20220707 06:11:43.573"/>
</kw>
<status status="PASS" starttime="20220707 06:11:43.204" endtime="20220707 06:11:43.573"/>
</kw>
<status status="PASS" starttime="20220707 06:11:43.203" endtime="20220707 06:11:43.573"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:43.576" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:43.575" endtime="20220707 06:11:43.576"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:43.576" endtime="20220707 06:11:43.576"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:43.577" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 06:11:43.576" endtime="20220707 06:11:43.577"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:43.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:43.577" endtime="20220707 06:11:43.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:43.737" endtime="20220707 06:11:43.737"/>
</return>
<msg timestamp="20220707 06:11:43.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:43.575" endtime="20220707 06:11:43.738"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:43.738" endtime="20220707 06:11:43.738"/>
</return>
<msg timestamp="20220707 06:11:43.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:43.574" endtime="20220707 06:11:43.738"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:43.739" endtime="20220707 06:11:43.740"/>
</kw>
<status status="PASS" starttime="20220707 06:11:43.738" endtime="20220707 06:11:43.740"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:43.741" endtime="20220707 06:11:43.741"/>
</return>
<msg timestamp="20220707 06:11:43.742" level="INFO">${LABEL_ID} = 62c6791ff05a61384bc450af</msg>
<status status="PASS" starttime="20220707 06:11:43.741" endtime="20220707 06:11:43.742"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:43.743" level="INFO">${url} = labels/62c6791ff05a61384bc450af</msg>
<status status="PASS" starttime="20220707 06:11:43.743" endtime="20220707 06:11:43.743"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:43.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:43.743" endtime="20220707 06:11:43.842"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:43.842" endtime="20220707 06:11:43.843"/>
</return>
<msg timestamp="20220707 06:11:43.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:43.742" endtime="20220707 06:11:43.843"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:43.843" endtime="20220707 06:11:43.843"/>
</return>
<msg timestamp="20220707 06:11:43.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:43.742" endtime="20220707 06:11:43.843"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:43.844" endtime="20220707 06:11:43.844"/>
</return>
<msg timestamp="20220707 06:11:43.845" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220707 06:11:43.843" endtime="20220707 06:11:43.845"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:43.845" endtime="20220707 06:11:43.845"/>
</return>
<msg timestamp="20220707 06:11:43.846" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220707 06:11:43.845" endtime="20220707 06:11:43.846"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:43.847" endtime="20220707 06:11:43.847"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:43.847" endtime="20220707 06:11:43.848"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:43.850" level="INFO">${url} = labels/62c6791ff05a61384bc450af</msg>
<status status="PASS" starttime="20220707 06:11:43.850" endtime="20220707 06:11:43.850"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:44.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:43.850" endtime="20220707 06:11:44.011"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.011" endtime="20220707 06:11:44.011"/>
</return>
<msg timestamp="20220707 06:11:44.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:43.849" endtime="20220707 06:11:44.011"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.011" endtime="20220707 06:11:44.011"/>
</return>
<status status="PASS" starttime="20220707 06:11:43.848" endtime="20220707 06:11:44.012"/>
</kw>
<status status="PASS" starttime="20220707 06:11:43.848" endtime="20220707 06:11:44.012"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 06:11:43.574" endtime="20220707 06:11:44.012"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:44.015" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:44.015" endtime="20220707 06:11:44.015"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:44.015" endtime="20220707 06:11:44.015"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:44.016" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 06:11:44.015" endtime="20220707 06:11:44.016"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:44.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.016" endtime="20220707 06:11:44.186"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.186" endtime="20220707 06:11:44.186"/>
</return>
<msg timestamp="20220707 06:11:44.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.014" endtime="20220707 06:11:44.187"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.187" endtime="20220707 06:11:44.187"/>
</return>
<msg timestamp="20220707 06:11:44.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.013" endtime="20220707 06:11:44.187"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:44.188" endtime="20220707 06:11:44.190"/>
</kw>
<status status="PASS" starttime="20220707 06:11:44.187" endtime="20220707 06:11:44.190"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:44.191" endtime="20220707 06:11:44.191"/>
</return>
<msg timestamp="20220707 06:11:44.192" level="INFO">${LABEL_ID} = 62c67920c7d6b18d4851d5f0</msg>
<status status="PASS" starttime="20220707 06:11:44.190" endtime="20220707 06:11:44.192"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:44.193" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:44.193" endtime="20220707 06:11:44.193"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:44.193" endtime="20220707 06:11:44.193"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:44.194" level="INFO">${url} = labels/62c67920c7d6b18d4851d5f0</msg>
<status status="PASS" starttime="20220707 06:11:44.194" endtime="20220707 06:11:44.194"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:44.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.194" endtime="20220707 06:11:44.355"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.355" endtime="20220707 06:11:44.355"/>
</return>
<msg timestamp="20220707 06:11:44.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.192" endtime="20220707 06:11:44.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.356" endtime="20220707 06:11:44.356"/>
</return>
<msg timestamp="20220707 06:11:44.356" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.192" endtime="20220707 06:11:44.356"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:44.357" endtime="20220707 06:11:44.357"/>
</return>
<msg timestamp="20220707 06:11:44.358" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220707 06:11:44.356" endtime="20220707 06:11:44.358"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:44.358" endtime="20220707 06:11:44.358"/>
</return>
<msg timestamp="20220707 06:11:44.359" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220707 06:11:44.358" endtime="20220707 06:11:44.359"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:44.359" endtime="20220707 06:11:44.359"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:44.359" endtime="20220707 06:11:44.359"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:44.362" level="INFO">${url} = labels/62c67920c7d6b18d4851d5f0</msg>
<status status="PASS" starttime="20220707 06:11:44.361" endtime="20220707 06:11:44.362"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:44.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.362" endtime="20220707 06:11:44.530"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.530" endtime="20220707 06:11:44.530"/>
</return>
<msg timestamp="20220707 06:11:44.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.360" endtime="20220707 06:11:44.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.531" endtime="20220707 06:11:44.531"/>
</return>
<status status="PASS" starttime="20220707 06:11:44.360" endtime="20220707 06:11:44.531"/>
</kw>
<status status="PASS" starttime="20220707 06:11:44.360" endtime="20220707 06:11:44.531"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 06:11:44.012" endtime="20220707 06:11:44.531"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:44.534" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:44.534" endtime="20220707 06:11:44.534"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:44.535" endtime="20220707 06:11:44.535"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:44.536" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 06:11:44.535" endtime="20220707 06:11:44.536"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:44.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.536" endtime="20220707 06:11:44.684"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.684" endtime="20220707 06:11:44.684"/>
</return>
<msg timestamp="20220707 06:11:44.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.534" endtime="20220707 06:11:44.684"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.684" endtime="20220707 06:11:44.684"/>
</return>
<msg timestamp="20220707 06:11:44.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.533" endtime="20220707 06:11:44.685"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 06:11:44.685" endtime="20220707 06:11:44.685"/>
</return>
<msg timestamp="20220707 06:11:44.686" level="INFO">${LABEL_ID} = 62c67920b5c92d349be8fe43</msg>
<status status="PASS" starttime="20220707 06:11:44.685" endtime="20220707 06:11:44.686"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:44.688" level="INFO">${url} = labels/62c67920b5c92d349be8fe43</msg>
<status status="PASS" starttime="20220707 06:11:44.688" endtime="20220707 06:11:44.688"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:44.867" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.688" endtime="20220707 06:11:44.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.868" endtime="20220707 06:11:44.868"/>
</return>
<msg timestamp="20220707 06:11:44.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.687" endtime="20220707 06:11:44.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.868" endtime="20220707 06:11:44.868"/>
</return>
<status status="PASS" starttime="20220707 06:11:44.687" endtime="20220707 06:11:44.868"/>
</kw>
<status status="PASS" starttime="20220707 06:11:44.686" endtime="20220707 06:11:44.868"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:44.870" level="INFO">${url} = labels/62c67920b5c92d349be8fe43</msg>
<status status="PASS" starttime="20220707 06:11:44.870" endtime="20220707 06:11:44.870"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:44.963" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 06:11:44.870" endtime="20220707 06:11:44.963"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.964" endtime="20220707 06:11:44.964"/>
</return>
<msg timestamp="20220707 06:11:44.964" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 06:11:44.869" endtime="20220707 06:11:44.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:44.964" endtime="20220707 06:11:44.964"/>
</return>
<status status="PASS" starttime="20220707 06:11:44.868" endtime="20220707 06:11:44.964"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 06:11:44.532" endtime="20220707 06:11:44.964"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:44.967" level="INFO">${url} = boards/62c6791fbd3fcd2f36aba568</msg>
<status status="PASS" starttime="20220707 06:11:44.967" endtime="20220707 06:11:44.967"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:45.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.967" endtime="20220707 06:11:45.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:45.359" endtime="20220707 06:11:45.359"/>
</return>
<msg timestamp="20220707 06:11:45.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:44.966" endtime="20220707 06:11:45.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:45.359" endtime="20220707 06:11:45.359"/>
</return>
<status status="PASS" starttime="20220707 06:11:44.966" endtime="20220707 06:11:45.359"/>
</kw>
<status status="PASS" starttime="20220707 06:11:44.966" endtime="20220707 06:11:45.359"/>
</kw>
<status status="PASS" starttime="20220707 06:11:44.965" endtime="20220707 06:11:45.360"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 06:11:45.360" endtime="20220707 06:11:45.361"/>
</kw>
<status status="PASS" starttime="20220707 06:11:44.965" endtime="20220707 06:11:45.361"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220707 06:11:43.193" endtime="20220707 06:11:45.361"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 06:11:45.374" endtime="20220707 06:11:45.375"/>
</kw>
<status status="PASS" starttime="20220707 06:11:45.374" endtime="20220707 06:11:45.376"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:45.377" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:45.377" endtime="20220707 06:11:45.377"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:45.377" endtime="20220707 06:11:45.378"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:45.378" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 06:11:45.378" endtime="20220707 06:11:45.378"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:45.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:45.379" endtime="20220707 06:11:45.598"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:45.598" endtime="20220707 06:11:45.598"/>
</return>
<msg timestamp="20220707 06:11:45.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:45.376" endtime="20220707 06:11:45.599"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:45.599" endtime="20220707 06:11:45.599"/>
</return>
<msg timestamp="20220707 06:11:45.599" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:45.376" endtime="20220707 06:11:45.599"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 06:11:45.600" level="INFO">${TEST_SUITE_BOARD_ID} = 62c679219f477319a85bea74</msg>
<status status="PASS" starttime="20220707 06:11:45.600" endtime="20220707 06:11:45.600"/>
</kw>
<status status="PASS" starttime="20220707 06:11:45.599" endtime="20220707 06:11:45.600"/>
</kw>
<status status="PASS" starttime="20220707 06:11:45.376" endtime="20220707 06:11:45.601"/>
</kw>
<status status="PASS" starttime="20220707 06:11:45.374" endtime="20220707 06:11:45.601"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:45.603" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:45.603" endtime="20220707 06:11:45.603"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:45.603" endtime="20220707 06:11:45.604"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:45.604" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 06:11:45.604" endtime="20220707 06:11:45.604"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:45.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:45.604" endtime="20220707 06:11:45.748"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:45.748" endtime="20220707 06:11:45.748"/>
</return>
<msg timestamp="20220707 06:11:45.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:45.602" endtime="20220707 06:11:45.748"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:45.748" endtime="20220707 06:11:45.748"/>
</return>
<msg timestamp="20220707 06:11:45.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:45.602" endtime="20220707 06:11:45.748"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:45.749" endtime="20220707 06:11:45.752"/>
</kw>
<status status="PASS" starttime="20220707 06:11:45.749" endtime="20220707 06:11:45.752"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 06:11:45.601" endtime="20220707 06:11:45.752"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:45.755" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:45.755" endtime="20220707 06:11:45.755"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:45.755" endtime="20220707 06:11:45.756"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:45.757" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 06:11:45.756" endtime="20220707 06:11:45.757"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:45.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:45.757" endtime="20220707 06:11:45.905"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:45.905" endtime="20220707 06:11:45.905"/>
</return>
<msg timestamp="20220707 06:11:45.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:45.754" endtime="20220707 06:11:45.905"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:45.905" endtime="20220707 06:11:45.905"/>
</return>
<msg timestamp="20220707 06:11:45.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:45.754" endtime="20220707 06:11:45.906"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:45.906" endtime="20220707 06:11:45.908"/>
</kw>
<status status="PASS" starttime="20220707 06:11:45.906" endtime="20220707 06:11:45.908"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:45.910" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:45.910" endtime="20220707 06:11:45.910"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:45.911" endtime="20220707 06:11:45.911"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:45.912" level="INFO">${url} = lists/62c679212365938789bc848f</msg>
<status status="PASS" starttime="20220707 06:11:45.911" endtime="20220707 06:11:45.912"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:46.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:45.912" endtime="20220707 06:11:46.061"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:46.061" endtime="20220707 06:11:46.061"/>
</return>
<msg timestamp="20220707 06:11:46.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:45.909" endtime="20220707 06:11:46.061"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:46.061" endtime="20220707 06:11:46.062"/>
</return>
<status status="PASS" starttime="20220707 06:11:45.908" endtime="20220707 06:11:46.062"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:46.064" level="INFO">${url} = lists/62c679212365938789bc848f</msg>
<status status="PASS" starttime="20220707 06:11:46.064" endtime="20220707 06:11:46.064"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:46.162" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:46.065" endtime="20220707 06:11:46.162"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:46.162" endtime="20220707 06:11:46.162"/>
</return>
<msg timestamp="20220707 06:11:46.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:46.063" endtime="20220707 06:11:46.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:46.163" endtime="20220707 06:11:46.163"/>
</return>
<msg timestamp="20220707 06:11:46.163" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:46.062" endtime="20220707 06:11:46.163"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 06:11:46.164" endtime="20220707 06:11:46.166"/>
</kw>
<status status="PASS" starttime="20220707 06:11:46.163" endtime="20220707 06:11:46.166"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 06:11:46.166" endtime="20220707 06:11:46.167"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 06:11:45.753" endtime="20220707 06:11:46.167"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:46.169" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:46.169" endtime="20220707 06:11:46.169"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:46.169" endtime="20220707 06:11:46.171"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:46.172" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 06:11:46.171" endtime="20220707 06:11:46.172"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:46.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:46.172" endtime="20220707 06:11:46.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:46.328" endtime="20220707 06:11:46.328"/>
</return>
<msg timestamp="20220707 06:11:46.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:46.168" endtime="20220707 06:11:46.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:46.328" endtime="20220707 06:11:46.328"/>
</return>
<msg timestamp="20220707 06:11:46.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:46.168" endtime="20220707 06:11:46.329"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 06:11:46.331" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 06:11:46.331" endtime="20220707 06:11:46.331"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 06:11:46.331" endtime="20220707 06:11:46.331"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:46.332" level="INFO">${url} = lists/62c679222fcc0f0f02e74df7/closed</msg>
<status status="PASS" starttime="20220707 06:11:46.331" endtime="20220707 06:11:46.332"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 06:11:46.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:46.332" endtime="20220707 06:11:46.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:46.477" endtime="20220707 06:11:46.477"/>
</return>
<msg timestamp="20220707 06:11:46.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:46.330" endtime="20220707 06:11:46.477"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:46.477" endtime="20220707 06:11:46.477"/>
</return>
<status status="PASS" starttime="20220707 06:11:46.329" endtime="20220707 06:11:46.477"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:46.479" level="INFO">${url} = lists/62c679222fcc0f0f02e74df7</msg>
<status status="PASS" starttime="20220707 06:11:46.479" endtime="20220707 06:11:46.479"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 06:11:46.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:46.480" endtime="20220707 06:11:46.578"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:46.578" endtime="20220707 06:11:46.578"/>
</return>
<msg timestamp="20220707 06:11:46.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:46.478" endtime="20220707 06:11:46.579"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:46.579" endtime="20220707 06:11:46.579"/>
</return>
<msg timestamp="20220707 06:11:46.579" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:46.477" endtime="20220707 06:11:46.579"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 06:11:46.579" endtime="20220707 06:11:46.580"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 06:11:46.167" endtime="20220707 06:11:46.581"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 06:11:46.584" level="INFO">${url} = boards/62c679219f477319a85bea74</msg>
<status status="PASS" starttime="20220707 06:11:46.584" endtime="20220707 06:11:46.584"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 06:11:46.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:46.584" endtime="20220707 06:11:46.950"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:46.950" endtime="20220707 06:11:46.950"/>
</return>
<msg timestamp="20220707 06:11:46.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 06:11:46.583" endtime="20220707 06:11:46.950"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 06:11:46.950" endtime="20220707 06:11:46.950"/>
</return>
<status status="PASS" starttime="20220707 06:11:46.583" endtime="20220707 06:11:46.951"/>
</kw>
<status status="PASS" starttime="20220707 06:11:46.582" endtime="20220707 06:11:46.951"/>
</kw>
<status status="PASS" starttime="20220707 06:11:46.582" endtime="20220707 06:11:46.951"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 06:11:46.951" endtime="20220707 06:11:46.952"/>
</kw>
<status status="PASS" starttime="20220707 06:11:46.581" endtime="20220707 06:11:46.952"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220707 06:11:45.363" endtime="20220707 06:11:46.952"/>
</suite>
<status status="PASS" starttime="20220707 06:11:32.740" endtime="20220707 06:11:46.955"/>
</suite>
<status status="PASS" starttime="20220707 06:11:32.716" endtime="20220707 06:11:46.958"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
