<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 17:44:12.536" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 17:44:12.658" endtime="20220704 17:44:12.659"/>
</kw>
<status status="PASS" starttime="20220704 17:44:12.657" endtime="20220704 17:44:12.659"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:12.661" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:12.660" endtime="20220704 17:44:12.661"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:12.661" endtime="20220704 17:44:12.661"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:12.662" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:44:12.661" endtime="20220704 17:44:12.662"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:12.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:12.662" endtime="20220704 17:44:12.877"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:12.877" endtime="20220704 17:44:12.877"/>
</return>
<msg timestamp="20220704 17:44:12.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:12.660" endtime="20220704 17:44:12.877"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:12.877" endtime="20220704 17:44:12.877"/>
</return>
<msg timestamp="20220704 17:44:12.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:12.660" endtime="20220704 17:44:12.877"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:12.878" endtime="20220704 17:44:12.882"/>
</kw>
<status status="PASS" starttime="20220704 17:44:12.878" endtime="20220704 17:44:12.882"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:12.884" level="INFO">${url} = boards/62c326ec34243a4539c39d06</msg>
<status status="PASS" starttime="20220704 17:44:12.884" endtime="20220704 17:44:12.884"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:13.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:12.885" endtime="20220704 17:44:13.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:13.245" endtime="20220704 17:44:13.245"/>
</return>
<msg timestamp="20220704 17:44:13.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:12.884" endtime="20220704 17:44:13.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:13.245" endtime="20220704 17:44:13.245"/>
</return>
<status status="PASS" starttime="20220704 17:44:12.883" endtime="20220704 17:44:13.246"/>
</kw>
<status status="PASS" starttime="20220704 17:44:12.883" endtime="20220704 17:44:13.246"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:44:12.659" endtime="20220704 17:44:13.246"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:13.249" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:13.248" endtime="20220704 17:44:13.249"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:13.249" endtime="20220704 17:44:13.249"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:13.250" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:44:13.249" endtime="20220704 17:44:13.250"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:13.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:13.250" endtime="20220704 17:44:13.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:13.473" endtime="20220704 17:44:13.473"/>
</return>
<msg timestamp="20220704 17:44:13.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:13.248" endtime="20220704 17:44:13.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:13.473" endtime="20220704 17:44:13.473"/>
</return>
<msg timestamp="20220704 17:44:13.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:13.247" endtime="20220704 17:44:13.473"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:13.474" endtime="20220704 17:44:13.477"/>
</kw>
<status status="PASS" starttime="20220704 17:44:13.473" endtime="20220704 17:44:13.478"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:13.479" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:13.479" endtime="20220704 17:44:13.479"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:13.479" endtime="20220704 17:44:13.479"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:13.480" level="INFO">${url} = boards/62c326ed7e6543470b3ea5b4</msg>
<status status="PASS" starttime="20220704 17:44:13.480" endtime="20220704 17:44:13.480"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:13.572" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:13.480" endtime="20220704 17:44:13.572"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:13.572" endtime="20220704 17:44:13.572"/>
</return>
<msg timestamp="20220704 17:44:13.572" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:13.478" endtime="20220704 17:44:13.572"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:13.572" endtime="20220704 17:44:13.572"/>
</return>
<status status="PASS" starttime="20220704 17:44:13.478" endtime="20220704 17:44:13.572"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:13.574" level="INFO">${url} = boards/62c326ed7e6543470b3ea5b4</msg>
<status status="PASS" starttime="20220704 17:44:13.574" endtime="20220704 17:44:13.574"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:13.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:13.574" endtime="20220704 17:44:13.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:13.626" endtime="20220704 17:44:13.626"/>
</return>
<msg timestamp="20220704 17:44:13.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:13.573" endtime="20220704 17:44:13.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:13.626" endtime="20220704 17:44:13.626"/>
</return>
<msg timestamp="20220704 17:44:13.626" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:13.572" endtime="20220704 17:44:13.626"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:13.627" endtime="20220704 17:44:13.631"/>
</kw>
<status status="PASS" starttime="20220704 17:44:13.627" endtime="20220704 17:44:13.631"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:13.631" endtime="20220704 17:44:13.631"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:13.634" level="INFO">${url} = boards/62c326ed7e6543470b3ea5b4</msg>
<status status="PASS" starttime="20220704 17:44:13.633" endtime="20220704 17:44:13.634"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:13.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:13.634" endtime="20220704 17:44:13.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:13.957" endtime="20220704 17:44:13.957"/>
</return>
<msg timestamp="20220704 17:44:13.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:13.633" endtime="20220704 17:44:13.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:13.957" endtime="20220704 17:44:13.957"/>
</return>
<status status="PASS" starttime="20220704 17:44:13.632" endtime="20220704 17:44:13.957"/>
</kw>
<status status="PASS" starttime="20220704 17:44:13.632" endtime="20220704 17:44:13.957"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:44:13.247" endtime="20220704 17:44:13.958"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:13.960" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:13.959" endtime="20220704 17:44:13.960"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:13.960" endtime="20220704 17:44:13.960"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:13.961" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:44:13.960" endtime="20220704 17:44:13.961"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:14.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:13.961" endtime="20220704 17:44:14.123"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:14.124" endtime="20220704 17:44:14.124"/>
</return>
<msg timestamp="20220704 17:44:14.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:13.959" endtime="20220704 17:44:14.124"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:14.124" endtime="20220704 17:44:14.124"/>
</return>
<msg timestamp="20220704 17:44:14.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:13.959" endtime="20220704 17:44:14.124"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:14.126" level="INFO">${url} = boards/62c326eed14e6f5f06dded04</msg>
<status status="PASS" starttime="20220704 17:44:14.125" endtime="20220704 17:44:14.126"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:14.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:14.126" endtime="20220704 17:44:14.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:14.459" endtime="20220704 17:44:14.459"/>
</return>
<msg timestamp="20220704 17:44:14.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:14.125" endtime="20220704 17:44:14.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:14.459" endtime="20220704 17:44:14.459"/>
</return>
<status status="PASS" starttime="20220704 17:44:14.124" endtime="20220704 17:44:14.459"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:14.461" level="INFO">${url} = boards/62c326eed14e6f5f06dded04</msg>
<status status="PASS" starttime="20220704 17:44:14.461" endtime="20220704 17:44:14.461"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:14.501" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:44:14.461" endtime="20220704 17:44:14.501"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:14.501" endtime="20220704 17:44:14.501"/>
</return>
<msg timestamp="20220704 17:44:14.501" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:44:14.460" endtime="20220704 17:44:14.501"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:14.501" endtime="20220704 17:44:14.501"/>
</return>
<status status="PASS" starttime="20220704 17:44:14.459" endtime="20220704 17:44:14.501"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:44:13.958" endtime="20220704 17:44:14.502"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:14.503" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:14.503" endtime="20220704 17:44:14.503"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:14.503" endtime="20220704 17:44:14.504"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:14.504" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:44:14.504" endtime="20220704 17:44:14.504"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:14.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:14.504" endtime="20220704 17:44:14.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:14.654" endtime="20220704 17:44:14.654"/>
</return>
<msg timestamp="20220704 17:44:14.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:14.503" endtime="20220704 17:44:14.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:14.654" endtime="20220704 17:44:14.654"/>
</return>
<msg timestamp="20220704 17:44:14.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:14.502" endtime="20220704 17:44:14.654"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:14.655" endtime="20220704 17:44:14.659"/>
</kw>
<status status="PASS" starttime="20220704 17:44:14.654" endtime="20220704 17:44:14.659"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:14.660" level="INFO">${url} = boards/62c326ee721b2723592dfd35</msg>
<status status="PASS" starttime="20220704 17:44:14.660" endtime="20220704 17:44:14.660"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:14.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:14.660" endtime="20220704 17:44:14.711"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:14.711" endtime="20220704 17:44:14.711"/>
</return>
<msg timestamp="20220704 17:44:14.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:14.660" endtime="20220704 17:44:14.711"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:14.711" endtime="20220704 17:44:14.711"/>
</return>
<msg timestamp="20220704 17:44:14.711" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:14.659" endtime="20220704 17:44:14.711"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:14.712" endtime="20220704 17:44:14.715"/>
</kw>
<status status="PASS" starttime="20220704 17:44:14.712" endtime="20220704 17:44:14.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:14.716" endtime="20220704 17:44:14.716"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:14.718" level="INFO">${url} = boards/62c326ee721b2723592dfd35</msg>
<status status="PASS" starttime="20220704 17:44:14.718" endtime="20220704 17:44:14.718"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:15.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:14.718" endtime="20220704 17:44:15.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.055" endtime="20220704 17:44:15.055"/>
</return>
<msg timestamp="20220704 17:44:15.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:14.717" endtime="20220704 17:44:15.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.056" endtime="20220704 17:44:15.056"/>
</return>
<status status="PASS" starttime="20220704 17:44:14.717" endtime="20220704 17:44:15.056"/>
</kw>
<status status="PASS" starttime="20220704 17:44:14.716" endtime="20220704 17:44:15.056"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:44:14.502" endtime="20220704 17:44:15.056"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:15.058" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:15.058" endtime="20220704 17:44:15.058"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:15.058" endtime="20220704 17:44:15.058"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:15.059" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:44:15.058" endtime="20220704 17:44:15.059"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:15.231" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.059" endtime="20220704 17:44:15.231"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.231" endtime="20220704 17:44:15.231"/>
</return>
<msg timestamp="20220704 17:44:15.231" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.057" endtime="20220704 17:44:15.231"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.231" endtime="20220704 17:44:15.231"/>
</return>
<msg timestamp="20220704 17:44:15.231" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.057" endtime="20220704 17:44:15.231"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:15.232" endtime="20220704 17:44:15.236"/>
</kw>
<status status="PASS" starttime="20220704 17:44:15.232" endtime="20220704 17:44:15.236"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:15.237" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:15.237" endtime="20220704 17:44:15.237"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:15.237" endtime="20220704 17:44:15.238"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:15.238" level="INFO">${url} = boards/62c326ef1c77387b50a508bf</msg>
<status status="PASS" starttime="20220704 17:44:15.238" endtime="20220704 17:44:15.238"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:15.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.238" endtime="20220704 17:44:15.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.332" endtime="20220704 17:44:15.332"/>
</return>
<msg timestamp="20220704 17:44:15.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.237" endtime="20220704 17:44:15.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.332" endtime="20220704 17:44:15.332"/>
</return>
<status status="PASS" starttime="20220704 17:44:15.236" endtime="20220704 17:44:15.332"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:15.334" level="INFO">${url} = boards/62c326ef1c77387b50a508bf</msg>
<status status="PASS" starttime="20220704 17:44:15.334" endtime="20220704 17:44:15.334"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:15.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.334" endtime="20220704 17:44:15.393"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.393" endtime="20220704 17:44:15.393"/>
</return>
<msg timestamp="20220704 17:44:15.393" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.333" endtime="20220704 17:44:15.393"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.393" endtime="20220704 17:44:15.393"/>
</return>
<msg timestamp="20220704 17:44:15.393" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.332" endtime="20220704 17:44:15.393"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:15.393" endtime="20220704 17:44:15.394"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:15.396" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:15.396" endtime="20220704 17:44:15.396"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:15.396" endtime="20220704 17:44:15.396"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:15.396" level="INFO">${url} = boards/62c326ef1c77387b50a508bf</msg>
<status status="PASS" starttime="20220704 17:44:15.396" endtime="20220704 17:44:15.396"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:15.479" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.396" endtime="20220704 17:44:15.479"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.479" endtime="20220704 17:44:15.479"/>
</return>
<msg timestamp="20220704 17:44:15.479" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.395" endtime="20220704 17:44:15.479"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.479" endtime="20220704 17:44:15.480"/>
</return>
<status status="PASS" starttime="20220704 17:44:15.394" endtime="20220704 17:44:15.480"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:15.481" level="INFO">${url} = boards/62c326ef1c77387b50a508bf</msg>
<status status="PASS" starttime="20220704 17:44:15.481" endtime="20220704 17:44:15.481"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:15.528" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.481" endtime="20220704 17:44:15.528"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.528" endtime="20220704 17:44:15.528"/>
</return>
<msg timestamp="20220704 17:44:15.528" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.481" endtime="20220704 17:44:15.528"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.528" endtime="20220704 17:44:15.528"/>
</return>
<msg timestamp="20220704 17:44:15.529" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.480" endtime="20220704 17:44:15.529"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:15.529" endtime="20220704 17:44:15.529"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:15.531" level="INFO">${url} = boards/62c326ef1c77387b50a508bf</msg>
<status status="PASS" starttime="20220704 17:44:15.531" endtime="20220704 17:44:15.531"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:15.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.532" endtime="20220704 17:44:15.845"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.845" endtime="20220704 17:44:15.845"/>
</return>
<msg timestamp="20220704 17:44:15.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.531" endtime="20220704 17:44:15.845"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:15.845" endtime="20220704 17:44:15.845"/>
</return>
<status status="PASS" starttime="20220704 17:44:15.530" endtime="20220704 17:44:15.846"/>
</kw>
<status status="PASS" starttime="20220704 17:44:15.530" endtime="20220704 17:44:15.846"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:44:15.056" endtime="20220704 17:44:15.846"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 17:44:15.847" endtime="20220704 17:44:15.847"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 17:44:12.555" endtime="20220704 17:44:15.848"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 17:44:15.858" endtime="20220704 17:44:15.859"/>
</kw>
<status status="PASS" starttime="20220704 17:44:15.858" endtime="20220704 17:44:15.859"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:15.860" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:15.860" endtime="20220704 17:44:15.860"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:15.860" endtime="20220704 17:44:15.860"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:15.861" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:44:15.860" endtime="20220704 17:44:15.861"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:16.143" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.861" endtime="20220704 17:44:16.143"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.144" endtime="20220704 17:44:16.144"/>
</return>
<msg timestamp="20220704 17:44:16.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.859" endtime="20220704 17:44:16.144"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.144" endtime="20220704 17:44:16.144"/>
</return>
<msg timestamp="20220704 17:44:16.144" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:15.859" endtime="20220704 17:44:16.144"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:44:16.145" level="INFO">${TEST_SUITE_BOARD_ID} = 62c326ef5e06298500049fa8</msg>
<status status="PASS" starttime="20220704 17:44:16.144" endtime="20220704 17:44:16.145"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:16.146" level="INFO">${url} = boards/62c326ef5e06298500049fa8/lists/</msg>
<status status="PASS" starttime="20220704 17:44:16.146" endtime="20220704 17:44:16.146"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:16.204" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.146" endtime="20220704 17:44:16.204"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.204" endtime="20220704 17:44:16.204"/>
</return>
<msg timestamp="20220704 17:44:16.204" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.145" endtime="20220704 17:44:16.205"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.205" endtime="20220704 17:44:16.205"/>
</return>
<msg timestamp="20220704 17:44:16.205" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.145" endtime="20220704 17:44:16.205"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:44:16.206" level="INFO">${TEST_SUITE_LIST_ID} = 62c326ef5e06298500049faf</msg>
<status status="PASS" starttime="20220704 17:44:16.205" endtime="20220704 17:44:16.206"/>
</kw>
<status status="PASS" starttime="20220704 17:44:15.859" endtime="20220704 17:44:16.206"/>
</kw>
<status status="PASS" starttime="20220704 17:44:15.858" endtime="20220704 17:44:16.206"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:16.207" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:16.207" endtime="20220704 17:44:16.208"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:16.208" endtime="20220704 17:44:16.208"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:16.208" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 17:44:16.208" endtime="20220704 17:44:16.208"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:16.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.209" endtime="20220704 17:44:16.383"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.383" endtime="20220704 17:44:16.383"/>
</return>
<msg timestamp="20220704 17:44:16.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.207" endtime="20220704 17:44:16.383"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.383" endtime="20220704 17:44:16.383"/>
</return>
<msg timestamp="20220704 17:44:16.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.206" endtime="20220704 17:44:16.383"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:16.384" endtime="20220704 17:44:16.389"/>
</kw>
<status status="PASS" starttime="20220704 17:44:16.383" endtime="20220704 17:44:16.389"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:16.389" endtime="20220704 17:44:16.389"/>
</return>
<msg timestamp="20220704 17:44:16.390" level="INFO">${CARD_ID} = 62c326f062a8b256d0404efb</msg>
<status status="PASS" starttime="20220704 17:44:16.389" endtime="20220704 17:44:16.390"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:16.391" level="INFO">${url} = cards/62c326f062a8b256d0404efb</msg>
<status status="PASS" starttime="20220704 17:44:16.391" endtime="20220704 17:44:16.391"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:16.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.391" endtime="20220704 17:44:16.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.447" endtime="20220704 17:44:16.447"/>
</return>
<msg timestamp="20220704 17:44:16.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.390" endtime="20220704 17:44:16.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.447" endtime="20220704 17:44:16.447"/>
</return>
<msg timestamp="20220704 17:44:16.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.390" endtime="20220704 17:44:16.448"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:16.448" endtime="20220704 17:44:16.448"/>
</return>
<msg timestamp="20220704 17:44:16.449" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 17:44:16.448" endtime="20220704 17:44:16.449"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:16.449" endtime="20220704 17:44:16.449"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:16.451" level="INFO">${url} = cards/62c326f062a8b256d0404efb</msg>
<status status="PASS" starttime="20220704 17:44:16.450" endtime="20220704 17:44:16.451"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:16.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.451" endtime="20220704 17:44:16.594"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.594" endtime="20220704 17:44:16.594"/>
</return>
<msg timestamp="20220704 17:44:16.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.450" endtime="20220704 17:44:16.594"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.594" endtime="20220704 17:44:16.594"/>
</return>
<status status="PASS" starttime="20220704 17:44:16.449" endtime="20220704 17:44:16.595"/>
</kw>
<status status="PASS" starttime="20220704 17:44:16.449" endtime="20220704 17:44:16.595"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:44:16.206" endtime="20220704 17:44:16.595"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:16.597" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:16.597" endtime="20220704 17:44:16.597"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:16.597" endtime="20220704 17:44:16.597"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:16.598" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 17:44:16.597" endtime="20220704 17:44:16.598"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:16.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.598" endtime="20220704 17:44:16.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.750" endtime="20220704 17:44:16.750"/>
</return>
<msg timestamp="20220704 17:44:16.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.596" endtime="20220704 17:44:16.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.750" endtime="20220704 17:44:16.750"/>
</return>
<msg timestamp="20220704 17:44:16.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.596" endtime="20220704 17:44:16.750"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:16.751" endtime="20220704 17:44:16.751"/>
</return>
<msg timestamp="20220704 17:44:16.751" level="INFO">${CARD_ID} = 62c326f0b2ef4128da205ee6</msg>
<status status="PASS" starttime="20220704 17:44:16.750" endtime="20220704 17:44:16.751"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:16.753" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:16.753" endtime="20220704 17:44:16.753"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:16.753" endtime="20220704 17:44:16.754"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:16.754" level="INFO">${url} = cards/62c326f0b2ef4128da205ee6</msg>
<status status="PASS" starttime="20220704 17:44:16.754" endtime="20220704 17:44:16.754"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:16.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.754" endtime="20220704 17:44:16.864"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.864" endtime="20220704 17:44:16.864"/>
</return>
<msg timestamp="20220704 17:44:16.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.753" endtime="20220704 17:44:16.864"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.864" endtime="20220704 17:44:16.864"/>
</return>
<msg timestamp="20220704 17:44:16.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.752" endtime="20220704 17:44:16.864"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.864" endtime="20220704 17:44:16.864"/>
</return>
<status status="PASS" starttime="20220704 17:44:16.752" endtime="20220704 17:44:16.864"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:16.865" level="INFO">${url} = cards/62c326f0b2ef4128da205ee6</msg>
<status status="PASS" starttime="20220704 17:44:16.865" endtime="20220704 17:44:16.865"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:16.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.866" endtime="20220704 17:44:16.930"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.930" endtime="20220704 17:44:16.930"/>
</return>
<msg timestamp="20220704 17:44:16.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.865" endtime="20220704 17:44:16.930"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:16.930" endtime="20220704 17:44:16.930"/>
</return>
<msg timestamp="20220704 17:44:16.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.864" endtime="20220704 17:44:16.930"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:16.931" endtime="20220704 17:44:16.931"/>
</return>
<msg timestamp="20220704 17:44:16.931" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 17:44:16.930" endtime="20220704 17:44:16.931"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 17:44:16.932" endtime="20220704 17:44:16.932"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:16.933" level="INFO">${url} = cards/62c326f0b2ef4128da205ee6</msg>
<status status="PASS" starttime="20220704 17:44:16.933" endtime="20220704 17:44:16.933"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:17.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.933" endtime="20220704 17:44:17.079"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.080" endtime="20220704 17:44:17.080"/>
</return>
<msg timestamp="20220704 17:44:17.080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:16.932" endtime="20220704 17:44:17.080"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.080" endtime="20220704 17:44:17.080"/>
</return>
<status status="PASS" starttime="20220704 17:44:16.932" endtime="20220704 17:44:17.080"/>
</kw>
<status status="PASS" starttime="20220704 17:44:16.932" endtime="20220704 17:44:17.080"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 17:44:16.595" endtime="20220704 17:44:17.080"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:17.083" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:17.083" endtime="20220704 17:44:17.083"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:17.083" endtime="20220704 17:44:17.083"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:17.084" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 17:44:17.083" endtime="20220704 17:44:17.084"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:17.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.084" endtime="20220704 17:44:17.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.237" endtime="20220704 17:44:17.237"/>
</return>
<msg timestamp="20220704 17:44:17.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.082" endtime="20220704 17:44:17.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.238" endtime="20220704 17:44:17.238"/>
</return>
<msg timestamp="20220704 17:44:17.238" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.081" endtime="20220704 17:44:17.238"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:17.238" endtime="20220704 17:44:17.238"/>
</return>
<msg timestamp="20220704 17:44:17.239" level="INFO">${CARD_ID} = 62c326f1b8fb53867f5485d6</msg>
<status status="PASS" starttime="20220704 17:44:17.238" endtime="20220704 17:44:17.239"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:17.240" level="INFO">${url} = cards/62c326f1b8fb53867f5485d6</msg>
<status status="PASS" starttime="20220704 17:44:17.240" endtime="20220704 17:44:17.240"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:17.401" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.240" endtime="20220704 17:44:17.401"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.401" endtime="20220704 17:44:17.401"/>
</return>
<msg timestamp="20220704 17:44:17.402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.239" endtime="20220704 17:44:17.402"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.402" endtime="20220704 17:44:17.402"/>
</return>
<msg timestamp="20220704 17:44:17.402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.239" endtime="20220704 17:44:17.402"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:17.402" endtime="20220704 17:44:17.404"/>
</kw>
<status status="PASS" starttime="20220704 17:44:17.402" endtime="20220704 17:44:17.404"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:17.406" level="INFO">${url} = cards/62c326f1b8fb53867f5485d6</msg>
<status status="PASS" starttime="20220704 17:44:17.405" endtime="20220704 17:44:17.406"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:17.447" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:44:17.406" endtime="20220704 17:44:17.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.447" endtime="20220704 17:44:17.447"/>
</return>
<msg timestamp="20220704 17:44:17.447" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:44:17.405" endtime="20220704 17:44:17.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.447" endtime="20220704 17:44:17.447"/>
</return>
<status status="PASS" starttime="20220704 17:44:17.404" endtime="20220704 17:44:17.447"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:44:17.080" endtime="20220704 17:44:17.447"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:17.450" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:17.449" endtime="20220704 17:44:17.450"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:17.450" endtime="20220704 17:44:17.450"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:17.451" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 17:44:17.450" endtime="20220704 17:44:17.451"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:17.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.451" endtime="20220704 17:44:17.587"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.587" endtime="20220704 17:44:17.587"/>
</return>
<msg timestamp="20220704 17:44:17.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.449" endtime="20220704 17:44:17.588"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.588" endtime="20220704 17:44:17.588"/>
</return>
<msg timestamp="20220704 17:44:17.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.449" endtime="20220704 17:44:17.588"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:17.588" endtime="20220704 17:44:17.588"/>
</return>
<msg timestamp="20220704 17:44:17.589" level="INFO">${CARD_ID} = 62c326f17454a28d5d4e2ce3</msg>
<status status="PASS" starttime="20220704 17:44:17.588" endtime="20220704 17:44:17.589"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:17.590" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:17.590" endtime="20220704 17:44:17.590"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:17.590" endtime="20220704 17:44:17.590"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:17.591" level="INFO">${url} = cards/62c326f17454a28d5d4e2ce3</msg>
<status status="PASS" starttime="20220704 17:44:17.590" endtime="20220704 17:44:17.591"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:17.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.591" endtime="20220704 17:44:17.719"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.719" endtime="20220704 17:44:17.719"/>
</return>
<msg timestamp="20220704 17:44:17.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.589" endtime="20220704 17:44:17.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.720" endtime="20220704 17:44:17.720"/>
</return>
<msg timestamp="20220704 17:44:17.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.589" endtime="20220704 17:44:17.720"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:17.720" endtime="20220704 17:44:17.725"/>
</kw>
<status status="PASS" starttime="20220704 17:44:17.720" endtime="20220704 17:44:17.725"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:17.727" level="INFO">${url} = cards/62c326f17454a28d5d4e2ce3</msg>
<status status="PASS" starttime="20220704 17:44:17.726" endtime="20220704 17:44:17.727"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:17.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.727" endtime="20220704 17:44:17.776"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.776" endtime="20220704 17:44:17.776"/>
</return>
<msg timestamp="20220704 17:44:17.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.726" endtime="20220704 17:44:17.776"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.777" endtime="20220704 17:44:17.777"/>
</return>
<msg timestamp="20220704 17:44:17.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.726" endtime="20220704 17:44:17.777"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:17.777" endtime="20220704 17:44:17.777"/>
</return>
<msg timestamp="20220704 17:44:17.778" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 17:44:17.777" endtime="20220704 17:44:17.778"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:17.778" endtime="20220704 17:44:17.778"/>
</return>
<msg timestamp="20220704 17:44:17.779" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 17:44:17.778" endtime="20220704 17:44:17.779"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:17.779" endtime="20220704 17:44:17.779"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:17.779" endtime="20220704 17:44:17.780"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:17.781" level="INFO">${url} = cards/62c326f17454a28d5d4e2ce3</msg>
<status status="PASS" starttime="20220704 17:44:17.781" endtime="20220704 17:44:17.781"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:17.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.781" endtime="20220704 17:44:17.940"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.940" endtime="20220704 17:44:17.940"/>
</return>
<msg timestamp="20220704 17:44:17.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.780" endtime="20220704 17:44:17.940"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:17.940" endtime="20220704 17:44:17.940"/>
</return>
<status status="PASS" starttime="20220704 17:44:17.780" endtime="20220704 17:44:17.940"/>
</kw>
<status status="PASS" starttime="20220704 17:44:17.780" endtime="20220704 17:44:17.940"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 17:44:17.448" endtime="20220704 17:44:17.940"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:17.943" level="INFO">${url} = boards/62c326ef5e06298500049fa8</msg>
<status status="PASS" starttime="20220704 17:44:17.943" endtime="20220704 17:44:17.943"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:18.281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.943" endtime="20220704 17:44:18.281"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.281" endtime="20220704 17:44:18.281"/>
</return>
<msg timestamp="20220704 17:44:18.281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:17.943" endtime="20220704 17:44:18.281"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.281" endtime="20220704 17:44:18.281"/>
</return>
<status status="PASS" starttime="20220704 17:44:17.942" endtime="20220704 17:44:18.281"/>
</kw>
<status status="PASS" starttime="20220704 17:44:17.942" endtime="20220704 17:44:18.281"/>
</kw>
<status status="PASS" starttime="20220704 17:44:17.942" endtime="20220704 17:44:18.281"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 17:44:18.282" endtime="20220704 17:44:18.282"/>
</kw>
<status status="PASS" starttime="20220704 17:44:17.941" endtime="20220704 17:44:18.283"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 17:44:15.849" endtime="20220704 17:44:18.283"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 17:44:18.294" endtime="20220704 17:44:18.294"/>
</kw>
<status status="PASS" starttime="20220704 17:44:18.293" endtime="20220704 17:44:18.294"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:18.295" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:18.295" endtime="20220704 17:44:18.295"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:18.295" endtime="20220704 17:44:18.295"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:18.296" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:44:18.295" endtime="20220704 17:44:18.296"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:18.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.296" endtime="20220704 17:44:18.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.497" endtime="20220704 17:44:18.497"/>
</return>
<msg timestamp="20220704 17:44:18.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.294" endtime="20220704 17:44:18.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.497" endtime="20220704 17:44:18.497"/>
</return>
<msg timestamp="20220704 17:44:18.498" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.294" endtime="20220704 17:44:18.498"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:44:18.498" level="INFO">${TEST_SUITE_BOARD_ID} = 62c326f2ea36ee1d0a75b028</msg>
<status status="PASS" starttime="20220704 17:44:18.498" endtime="20220704 17:44:18.499"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:18.500" level="INFO">${url} = boards/62c326f2ea36ee1d0a75b028/lists/</msg>
<status status="PASS" starttime="20220704 17:44:18.499" endtime="20220704 17:44:18.500"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:18.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.500" endtime="20220704 17:44:18.548"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.548" endtime="20220704 17:44:18.548"/>
</return>
<msg timestamp="20220704 17:44:18.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.499" endtime="20220704 17:44:18.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.549" endtime="20220704 17:44:18.549"/>
</return>
<msg timestamp="20220704 17:44:18.549" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.499" endtime="20220704 17:44:18.549"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:44:18.550" level="INFO">${TEST_SUITE_LIST_ID} = 62c326f2ea36ee1d0a75b02f</msg>
<status status="PASS" starttime="20220704 17:44:18.549" endtime="20220704 17:44:18.550"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:18.551" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:18.551" endtime="20220704 17:44:18.551"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:18.551" endtime="20220704 17:44:18.552"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:18.552" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 17:44:18.552" endtime="20220704 17:44:18.552"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:18.699" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.552" endtime="20220704 17:44:18.699"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.699" endtime="20220704 17:44:18.700"/>
</return>
<msg timestamp="20220704 17:44:18.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.550" endtime="20220704 17:44:18.700"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.700" endtime="20220704 17:44:18.700"/>
</return>
<msg timestamp="20220704 17:44:18.700" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.550" endtime="20220704 17:44:18.700"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:44:18.701" level="INFO">${TEST_SUITE_CARD_ID} = 62c326f28154e41d6d132444</msg>
<status status="PASS" starttime="20220704 17:44:18.700" endtime="20220704 17:44:18.701"/>
</kw>
<status status="PASS" starttime="20220704 17:44:18.294" endtime="20220704 17:44:18.701"/>
</kw>
<status status="PASS" starttime="20220704 17:44:18.293" endtime="20220704 17:44:18.701"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:18.703" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:18.703" endtime="20220704 17:44:18.703"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:18.703" endtime="20220704 17:44:18.703"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:18.704" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 17:44:18.703" endtime="20220704 17:44:18.704"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:18.817" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.704" endtime="20220704 17:44:18.817"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.817" endtime="20220704 17:44:18.817"/>
</return>
<msg timestamp="20220704 17:44:18.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.702" endtime="20220704 17:44:18.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.818" endtime="20220704 17:44:18.818"/>
</return>
<msg timestamp="20220704 17:44:18.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.702" endtime="20220704 17:44:18.818"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:18.818" endtime="20220704 17:44:18.818"/>
</return>
<msg timestamp="20220704 17:44:18.819" level="INFO">${checklist_id} = 62c326f2f3dbf58a7bafb1f0</msg>
<status status="PASS" starttime="20220704 17:44:18.818" endtime="20220704 17:44:18.819"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:18.820" level="INFO">${url} = checklists/62c326f2f3dbf58a7bafb1f0</msg>
<status status="PASS" starttime="20220704 17:44:18.820" endtime="20220704 17:44:18.820"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:18.880" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.820" endtime="20220704 17:44:18.880"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.880" endtime="20220704 17:44:18.880"/>
</return>
<msg timestamp="20220704 17:44:18.880" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.820" endtime="20220704 17:44:18.880"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.880" endtime="20220704 17:44:18.880"/>
</return>
<msg timestamp="20220704 17:44:18.880" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.819" endtime="20220704 17:44:18.880"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:18.881" endtime="20220704 17:44:18.881"/>
</return>
<msg timestamp="20220704 17:44:18.882" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 17:44:18.881" endtime="20220704 17:44:18.882"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:18.882" endtime="20220704 17:44:18.882"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:18.883" level="INFO">${url} = checklists/62c326f2f3dbf58a7bafb1f0</msg>
<status status="PASS" starttime="20220704 17:44:18.883" endtime="20220704 17:44:18.883"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:18.985" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.883" endtime="20220704 17:44:18.985"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.985" endtime="20220704 17:44:18.985"/>
</return>
<msg timestamp="20220704 17:44:18.985" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.882" endtime="20220704 17:44:18.985"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:18.985" endtime="20220704 17:44:18.986"/>
</return>
<status status="PASS" starttime="20220704 17:44:18.882" endtime="20220704 17:44:18.986"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:44:18.701" endtime="20220704 17:44:18.986"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:18.988" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:18.988" endtime="20220704 17:44:18.988"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:18.988" endtime="20220704 17:44:18.989"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:18.989" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 17:44:18.989" endtime="20220704 17:44:18.989"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:19.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.989" endtime="20220704 17:44:19.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.097" endtime="20220704 17:44:19.097"/>
</return>
<msg timestamp="20220704 17:44:19.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.988" endtime="20220704 17:44:19.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.097" endtime="20220704 17:44:19.097"/>
</return>
<msg timestamp="20220704 17:44:19.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:18.987" endtime="20220704 17:44:19.097"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:19.098" endtime="20220704 17:44:19.098"/>
</return>
<msg timestamp="20220704 17:44:19.099" level="INFO">${checklist_id} = 62c326f3ee94d77ab669d085</msg>
<status status="PASS" starttime="20220704 17:44:19.097" endtime="20220704 17:44:19.099"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:19.100" level="INFO">${url} = checklists/62c326f3ee94d77ab669d085</msg>
<status status="PASS" starttime="20220704 17:44:19.100" endtime="20220704 17:44:19.100"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:19.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.100" endtime="20220704 17:44:19.211"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.211" endtime="20220704 17:44:19.211"/>
</return>
<msg timestamp="20220704 17:44:19.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.099" endtime="20220704 17:44:19.211"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.211" endtime="20220704 17:44:19.211"/>
</return>
<msg timestamp="20220704 17:44:19.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.099" endtime="20220704 17:44:19.212"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:19.212" endtime="20220704 17:44:19.214"/>
</kw>
<status status="PASS" starttime="20220704 17:44:19.212" endtime="20220704 17:44:19.214"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:19.215" level="INFO">${url} = checklists/62c326f3ee94d77ab669d085</msg>
<status status="PASS" starttime="20220704 17:44:19.215" endtime="20220704 17:44:19.215"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:19.259" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:44:19.215" endtime="20220704 17:44:19.259"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.259" endtime="20220704 17:44:19.259"/>
</return>
<msg timestamp="20220704 17:44:19.259" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:44:19.214" endtime="20220704 17:44:19.259"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.259" endtime="20220704 17:44:19.259"/>
</return>
<status status="PASS" starttime="20220704 17:44:19.214" endtime="20220704 17:44:19.259"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:44:18.986" endtime="20220704 17:44:19.259"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:19.263" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:19.262" endtime="20220704 17:44:19.263"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:19.263" endtime="20220704 17:44:19.263"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:19.264" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 17:44:19.264" endtime="20220704 17:44:19.264"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:19.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.264" endtime="20220704 17:44:19.384"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.384" endtime="20220704 17:44:19.384"/>
</return>
<msg timestamp="20220704 17:44:19.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.261" endtime="20220704 17:44:19.384"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.384" endtime="20220704 17:44:19.384"/>
</return>
<msg timestamp="20220704 17:44:19.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.261" endtime="20220704 17:44:19.384"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:19.385" endtime="20220704 17:44:19.385"/>
</return>
<msg timestamp="20220704 17:44:19.386" level="INFO">${checklist_id} = 62c326f3e212887c5508760e</msg>
<status status="PASS" starttime="20220704 17:44:19.385" endtime="20220704 17:44:19.386"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:19.387" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:19.387" endtime="20220704 17:44:19.387"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:19.387" endtime="20220704 17:44:19.387"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:19.387" level="INFO">${url} = checklists/62c326f3e212887c5508760e</msg>
<status status="PASS" starttime="20220704 17:44:19.387" endtime="20220704 17:44:19.387"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:19.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.388" endtime="20220704 17:44:19.484"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.484" endtime="20220704 17:44:19.484"/>
</return>
<msg timestamp="20220704 17:44:19.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.386" endtime="20220704 17:44:19.484"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.484" endtime="20220704 17:44:19.484"/>
</return>
<msg timestamp="20220704 17:44:19.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.386" endtime="20220704 17:44:19.484"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:19.485" level="INFO">${url} = checklists/62c326f3e212887c5508760e</msg>
<status status="PASS" starttime="20220704 17:44:19.485" endtime="20220704 17:44:19.485"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:19.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.485" endtime="20220704 17:44:19.535"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.535" endtime="20220704 17:44:19.535"/>
</return>
<msg timestamp="20220704 17:44:19.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.485" endtime="20220704 17:44:19.536"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.536" endtime="20220704 17:44:19.536"/>
</return>
<msg timestamp="20220704 17:44:19.536" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.484" endtime="20220704 17:44:19.536"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:19.536" endtime="20220704 17:44:19.536"/>
</return>
<msg timestamp="20220704 17:44:19.537" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 17:44:19.536" endtime="20220704 17:44:19.537"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:19.537" endtime="20220704 17:44:19.537"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:19.547" level="INFO">${url} = checklists/62c326f3e212887c5508760e</msg>
<status status="PASS" starttime="20220704 17:44:19.547" endtime="20220704 17:44:19.547"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:19.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.547" endtime="20220704 17:44:19.658"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.658" endtime="20220704 17:44:19.658"/>
</return>
<msg timestamp="20220704 17:44:19.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.547" endtime="20220704 17:44:19.659"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.659" endtime="20220704 17:44:19.659"/>
</return>
<status status="PASS" starttime="20220704 17:44:19.537" endtime="20220704 17:44:19.659"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 17:44:19.260" endtime="20220704 17:44:19.659"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:19.661" level="INFO">${url} = boards/62c326f2ea36ee1d0a75b028</msg>
<status status="PASS" starttime="20220704 17:44:19.661" endtime="20220704 17:44:19.661"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:19.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.661" endtime="20220704 17:44:19.978"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.978" endtime="20220704 17:44:19.978"/>
</return>
<msg timestamp="20220704 17:44:19.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.661" endtime="20220704 17:44:19.978"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:19.978" endtime="20220704 17:44:19.978"/>
</return>
<status status="PASS" starttime="20220704 17:44:19.660" endtime="20220704 17:44:19.979"/>
</kw>
<status status="PASS" starttime="20220704 17:44:19.660" endtime="20220704 17:44:19.979"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 17:44:19.979" endtime="20220704 17:44:19.980"/>
</kw>
<status status="PASS" starttime="20220704 17:44:19.660" endtime="20220704 17:44:19.980"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 17:44:18.284" endtime="20220704 17:44:19.980"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 17:44:19.990" endtime="20220704 17:44:19.990"/>
</kw>
<status status="PASS" starttime="20220704 17:44:19.989" endtime="20220704 17:44:19.990"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:19.991" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:19.991" endtime="20220704 17:44:19.991"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:19.991" endtime="20220704 17:44:19.991"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:19.992" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:44:19.991" endtime="20220704 17:44:19.992"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:20.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.992" endtime="20220704 17:44:20.190"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:20.191" endtime="20220704 17:44:20.191"/>
</return>
<msg timestamp="20220704 17:44:20.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.990" endtime="20220704 17:44:20.191"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:20.191" endtime="20220704 17:44:20.191"/>
</return>
<msg timestamp="20220704 17:44:20.191" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:19.990" endtime="20220704 17:44:20.191"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:44:20.192" level="INFO">${TEST_SUITE_BOARD_ID} = 62c326f4048ee93a9682c296</msg>
<status status="PASS" starttime="20220704 17:44:20.191" endtime="20220704 17:44:20.192"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:20.247" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:20.192" endtime="20220704 17:44:20.247"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:44:20.248" level="INFO">${TEST_SUITE_LIST_ID} = 62c326f4048ee93a9682c29d</msg>
<status status="PASS" starttime="20220704 17:44:20.247" endtime="20220704 17:44:20.248"/>
</kw>
<status status="PASS" starttime="20220704 17:44:19.990" endtime="20220704 17:44:20.248"/>
</kw>
<status status="PASS" starttime="20220704 17:44:19.989" endtime="20220704 17:44:20.248"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:20.250" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:20.250" endtime="20220704 17:44:20.250"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:20.250" endtime="20220704 17:44:20.250"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:20.251" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 17:44:20.250" endtime="20220704 17:44:20.251"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:20.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:20.251" endtime="20220704 17:44:20.759"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:20.759" endtime="20220704 17:44:20.759"/>
</return>
<msg timestamp="20220704 17:44:20.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:20.249" endtime="20220704 17:44:20.759"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:20.759" endtime="20220704 17:44:20.759"/>
</return>
<msg timestamp="20220704 17:44:20.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:20.249" endtime="20220704 17:44:20.759"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:20.760" endtime="20220704 17:44:20.762"/>
</kw>
<status status="PASS" starttime="20220704 17:44:20.760" endtime="20220704 17:44:20.762"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:20.762" endtime="20220704 17:44:20.762"/>
</return>
<msg timestamp="20220704 17:44:20.763" level="INFO">${LABEL_ID} = 62c326f4a868355ab0b27499</msg>
<status status="PASS" starttime="20220704 17:44:20.762" endtime="20220704 17:44:20.763"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:20.764" level="INFO">${url} = labels/62c326f4a868355ab0b27499</msg>
<status status="PASS" starttime="20220704 17:44:20.764" endtime="20220704 17:44:20.764"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:20.815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:20.764" endtime="20220704 17:44:20.815"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:20.815" endtime="20220704 17:44:20.815"/>
</return>
<msg timestamp="20220704 17:44:20.815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:20.763" endtime="20220704 17:44:20.815"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:20.815" endtime="20220704 17:44:20.815"/>
</return>
<msg timestamp="20220704 17:44:20.816" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:20.763" endtime="20220704 17:44:20.816"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:20.816" endtime="20220704 17:44:20.816"/>
</return>
<msg timestamp="20220704 17:44:20.817" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 17:44:20.816" endtime="20220704 17:44:20.817"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:20.817" endtime="20220704 17:44:20.817"/>
</return>
<msg timestamp="20220704 17:44:20.818" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 17:44:20.817" endtime="20220704 17:44:20.818"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:20.818" endtime="20220704 17:44:20.818"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:20.818" endtime="20220704 17:44:20.818"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:20.820" level="INFO">${url} = labels/62c326f4a868355ab0b27499</msg>
<status status="PASS" starttime="20220704 17:44:20.820" endtime="20220704 17:44:20.820"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:20.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:20.820" endtime="20220704 17:44:20.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:20.943" endtime="20220704 17:44:20.943"/>
</return>
<msg timestamp="20220704 17:44:20.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:20.819" endtime="20220704 17:44:20.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:20.943" endtime="20220704 17:44:20.943"/>
</return>
<status status="PASS" starttime="20220704 17:44:20.819" endtime="20220704 17:44:20.944"/>
</kw>
<status status="PASS" starttime="20220704 17:44:20.819" endtime="20220704 17:44:20.944"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:44:20.248" endtime="20220704 17:44:20.944"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:20.945" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:20.945" endtime="20220704 17:44:20.945"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:20.946" endtime="20220704 17:44:20.946"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:20.946" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 17:44:20.946" endtime="20220704 17:44:20.947"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:21.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:20.947" endtime="20220704 17:44:21.045"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:21.045" endtime="20220704 17:44:21.045"/>
</return>
<msg timestamp="20220704 17:44:21.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:20.945" endtime="20220704 17:44:21.045"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:21.045" endtime="20220704 17:44:21.045"/>
</return>
<msg timestamp="20220704 17:44:21.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:20.944" endtime="20220704 17:44:21.046"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:21.046" endtime="20220704 17:44:21.048"/>
</kw>
<status status="PASS" starttime="20220704 17:44:21.046" endtime="20220704 17:44:21.048"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:21.048" endtime="20220704 17:44:21.048"/>
</return>
<msg timestamp="20220704 17:44:21.049" level="INFO">${LABEL_ID} = 62c326f5c3fea6624eaa951c</msg>
<status status="PASS" starttime="20220704 17:44:21.048" endtime="20220704 17:44:21.049"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:21.050" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:21.050" endtime="20220704 17:44:21.050"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:21.050" endtime="20220704 17:44:21.050"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:21.051" level="INFO">${url} = labels/62c326f5c3fea6624eaa951c</msg>
<status status="PASS" starttime="20220704 17:44:21.050" endtime="20220704 17:44:21.051"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:21.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:21.051" endtime="20220704 17:44:21.150"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:21.150" endtime="20220704 17:44:21.150"/>
</return>
<msg timestamp="20220704 17:44:21.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:21.049" endtime="20220704 17:44:21.150"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:21.150" endtime="20220704 17:44:21.150"/>
</return>
<msg timestamp="20220704 17:44:21.150" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:21.049" endtime="20220704 17:44:21.150"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:21.151" endtime="20220704 17:44:21.151"/>
</return>
<msg timestamp="20220704 17:44:21.151" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 17:44:21.150" endtime="20220704 17:44:21.151"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:21.152" endtime="20220704 17:44:21.152"/>
</return>
<msg timestamp="20220704 17:44:21.152" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 17:44:21.151" endtime="20220704 17:44:21.152"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:21.153" endtime="20220704 17:44:21.153"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:21.153" endtime="20220704 17:44:21.153"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:21.155" level="INFO">${url} = labels/62c326f5c3fea6624eaa951c</msg>
<status status="PASS" starttime="20220704 17:44:21.154" endtime="20220704 17:44:21.155"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:21.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:21.155" endtime="20220704 17:44:21.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:21.255" endtime="20220704 17:44:21.255"/>
</return>
<msg timestamp="20220704 17:44:21.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:21.154" endtime="20220704 17:44:21.255"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:21.255" endtime="20220704 17:44:21.255"/>
</return>
<status status="PASS" starttime="20220704 17:44:21.153" endtime="20220704 17:44:21.255"/>
</kw>
<status status="PASS" starttime="20220704 17:44:21.153" endtime="20220704 17:44:21.255"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:44:20.944" endtime="20220704 17:44:21.255"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:21.257" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:21.257" endtime="20220704 17:44:21.257"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:21.257" endtime="20220704 17:44:21.257"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:21.258" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 17:44:21.257" endtime="20220704 17:44:21.258"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:21.346" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:21.258" endtime="20220704 17:44:21.346"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:21.347" endtime="20220704 17:44:21.347"/>
</return>
<msg timestamp="20220704 17:44:21.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:21.256" endtime="20220704 17:44:21.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:21.347" endtime="20220704 17:44:21.347"/>
</return>
<msg timestamp="20220704 17:44:21.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:21.256" endtime="20220704 17:44:21.347"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:44:21.348" endtime="20220704 17:44:21.348"/>
</return>
<msg timestamp="20220704 17:44:21.348" level="INFO">${LABEL_ID} = 62c326f5b09ae57bd4fcf4fc</msg>
<status status="PASS" starttime="20220704 17:44:21.347" endtime="20220704 17:44:21.348"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:21.350" level="INFO">${url} = labels/62c326f5b09ae57bd4fcf4fc</msg>
<status status="PASS" starttime="20220704 17:44:21.350" endtime="20220704 17:44:21.350"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:21.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:21.350" endtime="20220704 17:44:21.463"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:21.463" endtime="20220704 17:44:21.463"/>
</return>
<msg timestamp="20220704 17:44:21.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:21.349" endtime="20220704 17:44:21.463"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:21.463" endtime="20220704 17:44:21.463"/>
</return>
<status status="PASS" starttime="20220704 17:44:21.349" endtime="20220704 17:44:21.463"/>
</kw>
<status status="PASS" starttime="20220704 17:44:21.348" endtime="20220704 17:44:21.463"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:21.465" level="INFO">${url} = labels/62c326f5b09ae57bd4fcf4fc</msg>
<status status="PASS" starttime="20220704 17:44:21.464" endtime="20220704 17:44:21.465"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:21.516" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:44:21.465" endtime="20220704 17:44:21.516"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:21.516" endtime="20220704 17:44:21.516"/>
</return>
<msg timestamp="20220704 17:44:21.516" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:44:21.464" endtime="20220704 17:44:21.516"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:21.516" endtime="20220704 17:44:21.516"/>
</return>
<status status="PASS" starttime="20220704 17:44:21.464" endtime="20220704 17:44:21.516"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:44:21.255" endtime="20220704 17:44:21.517"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:21.519" level="INFO">${url} = boards/62c326f4048ee93a9682c296</msg>
<status status="PASS" starttime="20220704 17:44:21.519" endtime="20220704 17:44:21.519"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:22.119" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:21.519" endtime="20220704 17:44:22.119"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.119" endtime="20220704 17:44:22.119"/>
</return>
<msg timestamp="20220704 17:44:22.119" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:21.518" endtime="20220704 17:44:22.119"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.119" endtime="20220704 17:44:22.119"/>
</return>
<status status="PASS" starttime="20220704 17:44:21.518" endtime="20220704 17:44:22.120"/>
</kw>
<status status="PASS" starttime="20220704 17:44:21.518" endtime="20220704 17:44:22.120"/>
</kw>
<status status="PASS" starttime="20220704 17:44:21.518" endtime="20220704 17:44:22.120"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 17:44:22.120" endtime="20220704 17:44:22.121"/>
</kw>
<status status="PASS" starttime="20220704 17:44:21.517" endtime="20220704 17:44:22.121"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 17:44:19.981" endtime="20220704 17:44:22.121"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 17:44:22.130" endtime="20220704 17:44:22.130"/>
</kw>
<status status="PASS" starttime="20220704 17:44:22.130" endtime="20220704 17:44:22.130"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:22.131" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:22.131" endtime="20220704 17:44:22.131"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:22.132" endtime="20220704 17:44:22.132"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:22.132" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:44:22.132" endtime="20220704 17:44:22.132"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:22.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.133" endtime="20220704 17:44:22.326"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.326" endtime="20220704 17:44:22.326"/>
</return>
<msg timestamp="20220704 17:44:22.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.131" endtime="20220704 17:44:22.327"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.327" endtime="20220704 17:44:22.327"/>
</return>
<msg timestamp="20220704 17:44:22.327" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.131" endtime="20220704 17:44:22.327"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:44:22.328" level="INFO">${TEST_SUITE_BOARD_ID} = 62c326f663c3674a8cfd36d6</msg>
<status status="PASS" starttime="20220704 17:44:22.327" endtime="20220704 17:44:22.328"/>
</kw>
<status status="PASS" starttime="20220704 17:44:22.327" endtime="20220704 17:44:22.328"/>
</kw>
<status status="PASS" starttime="20220704 17:44:22.130" endtime="20220704 17:44:22.328"/>
</kw>
<status status="PASS" starttime="20220704 17:44:22.130" endtime="20220704 17:44:22.328"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:22.330" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:22.330" endtime="20220704 17:44:22.330"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:22.330" endtime="20220704 17:44:22.330"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:22.331" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 17:44:22.330" endtime="20220704 17:44:22.331"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:22.429" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.331" endtime="20220704 17:44:22.429"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.429" endtime="20220704 17:44:22.429"/>
</return>
<msg timestamp="20220704 17:44:22.429" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.329" endtime="20220704 17:44:22.429"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.429" endtime="20220704 17:44:22.429"/>
</return>
<msg timestamp="20220704 17:44:22.430" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.329" endtime="20220704 17:44:22.430"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:22.430" endtime="20220704 17:44:22.432"/>
</kw>
<status status="PASS" starttime="20220704 17:44:22.430" endtime="20220704 17:44:22.432"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:44:22.328" endtime="20220704 17:44:22.432"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:22.434" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:22.434" endtime="20220704 17:44:22.434"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:22.434" endtime="20220704 17:44:22.434"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:22.435" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 17:44:22.434" endtime="20220704 17:44:22.435"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:22.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.435" endtime="20220704 17:44:22.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.534" endtime="20220704 17:44:22.534"/>
</return>
<msg timestamp="20220704 17:44:22.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.433" endtime="20220704 17:44:22.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.534" endtime="20220704 17:44:22.534"/>
</return>
<msg timestamp="20220704 17:44:22.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.433" endtime="20220704 17:44:22.534"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:22.535" endtime="20220704 17:44:22.536"/>
</kw>
<status status="PASS" starttime="20220704 17:44:22.534" endtime="20220704 17:44:22.536"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:22.538" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:22.538" endtime="20220704 17:44:22.538"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:22.538" endtime="20220704 17:44:22.538"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:22.539" level="INFO">${url} = lists/62c326f624f0c51347fab9b7</msg>
<status status="PASS" starttime="20220704 17:44:22.538" endtime="20220704 17:44:22.539"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:22.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.539" endtime="20220704 17:44:22.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.629" endtime="20220704 17:44:22.629"/>
</return>
<msg timestamp="20220704 17:44:22.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.537" endtime="20220704 17:44:22.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.630" endtime="20220704 17:44:22.630"/>
</return>
<status status="PASS" starttime="20220704 17:44:22.536" endtime="20220704 17:44:22.630"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:22.631" level="INFO">${url} = lists/62c326f624f0c51347fab9b7</msg>
<status status="PASS" starttime="20220704 17:44:22.631" endtime="20220704 17:44:22.631"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:22.679" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.631" endtime="20220704 17:44:22.679"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.679" endtime="20220704 17:44:22.679"/>
</return>
<msg timestamp="20220704 17:44:22.679" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.631" endtime="20220704 17:44:22.679"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.679" endtime="20220704 17:44:22.680"/>
</return>
<msg timestamp="20220704 17:44:22.680" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.630" endtime="20220704 17:44:22.680"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:44:22.680" endtime="20220704 17:44:22.682"/>
</kw>
<status status="PASS" starttime="20220704 17:44:22.680" endtime="20220704 17:44:22.682"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:44:22.682" endtime="20220704 17:44:22.682"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 17:44:22.432" endtime="20220704 17:44:22.682"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:22.685" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:22.685" endtime="20220704 17:44:22.685"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:22.685" endtime="20220704 17:44:22.686"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:22.686" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 17:44:22.686" endtime="20220704 17:44:22.686"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:22.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.686" endtime="20220704 17:44:22.824"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.824" endtime="20220704 17:44:22.824"/>
</return>
<msg timestamp="20220704 17:44:22.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.685" endtime="20220704 17:44:22.824"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.824" endtime="20220704 17:44:22.824"/>
</return>
<msg timestamp="20220704 17:44:22.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.683" endtime="20220704 17:44:22.824"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:44:22.826" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:44:22.826" endtime="20220704 17:44:22.826"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:44:22.826" endtime="20220704 17:44:22.826"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:22.827" level="INFO">${url} = lists/62c326f6381eba614f5d38c3/closed</msg>
<status status="PASS" starttime="20220704 17:44:22.826" endtime="20220704 17:44:22.827"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:44:22.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.827" endtime="20220704 17:44:22.916"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.916" endtime="20220704 17:44:22.916"/>
</return>
<msg timestamp="20220704 17:44:22.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.825" endtime="20220704 17:44:22.917"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.917" endtime="20220704 17:44:22.917"/>
</return>
<status status="PASS" starttime="20220704 17:44:22.825" endtime="20220704 17:44:22.917"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:22.918" level="INFO">${url} = lists/62c326f6381eba614f5d38c3</msg>
<status status="PASS" starttime="20220704 17:44:22.918" endtime="20220704 17:44:22.918"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:44:22.963" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.918" endtime="20220704 17:44:22.963"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.963" endtime="20220704 17:44:22.963"/>
</return>
<msg timestamp="20220704 17:44:22.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.918" endtime="20220704 17:44:22.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:22.964" endtime="20220704 17:44:22.964"/>
</return>
<msg timestamp="20220704 17:44:22.964" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.917" endtime="20220704 17:44:22.964"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 17:44:22.964" endtime="20220704 17:44:22.965"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 17:44:22.683" endtime="20220704 17:44:22.965"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:44:22.967" level="INFO">${url} = boards/62c326f663c3674a8cfd36d6</msg>
<status status="PASS" starttime="20220704 17:44:22.967" endtime="20220704 17:44:22.967"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:44:23.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.967" endtime="20220704 17:44:23.322"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:23.322" endtime="20220704 17:44:23.322"/>
</return>
<msg timestamp="20220704 17:44:23.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:44:22.966" endtime="20220704 17:44:23.322"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:44:23.322" endtime="20220704 17:44:23.322"/>
</return>
<status status="PASS" starttime="20220704 17:44:22.966" endtime="20220704 17:44:23.322"/>
</kw>
<status status="PASS" starttime="20220704 17:44:22.966" endtime="20220704 17:44:23.322"/>
</kw>
<status status="PASS" starttime="20220704 17:44:22.965" endtime="20220704 17:44:23.323"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 17:44:23.323" endtime="20220704 17:44:23.324"/>
</kw>
<status status="PASS" starttime="20220704 17:44:22.965" endtime="20220704 17:44:23.324"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 17:44:22.122" endtime="20220704 17:44:23.324"/>
</suite>
<status status="PASS" starttime="20220704 17:44:12.553" endtime="20220704 17:44:23.325"/>
</suite>
<status status="PASS" starttime="20220704 17:44:12.537" endtime="20220704 17:44:23.327"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
