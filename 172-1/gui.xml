<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220708 03:40:21.593" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Gui" source="/trello/gui">
<suite id="s1-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:40:21.848" endtime="20220708 03:40:21.849"/>
</kw>
<status status="PASS" starttime="20220708 03:40:21.848" endtime="20220708 03:40:21.849"/>
</kw>
<status status="PASS" starttime="20220708 03:40:21.848" endtime="20220708 03:40:21.849"/>
</kw>
<test id="s1-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220708 03:40:21.851" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220708 03:40:21.851" endtime="20220708 03:40:23.829"/>
</kw>
<status status="PASS" starttime="20220708 03:40:21.851" endtime="20220708 03:40:23.829"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:23.830" endtime="20220708 03:40:23.830"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:23.830" endtime="20220708 03:40:23.830"/>
</branch>
<status status="PASS" starttime="20220708 03:40:21.850" endtime="20220708 03:40:23.830"/>
</if>
<status status="PASS" starttime="20220708 03:40:21.850" endtime="20220708 03:40:23.830"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220708 03:40:23.830" endtime="20220708 03:40:23.952"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:40:24.014" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:40:23.953" endtime="20220708 03:40:24.014"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:24.014" endtime="20220708 03:40:24.015"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:24.014" endtime="20220708 03:40:24.015"/>
</branch>
<status status="PASS" starttime="20220708 03:40:24.014" endtime="20220708 03:40:24.015"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:24.015" endtime="20220708 03:40:24.072"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:24.073" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220708 03:40:24.072" endtime="20220708 03:40:24.196"/>
</kw>
<status status="PASS" starttime="20220708 03:40:24.015" endtime="20220708 03:40:24.197"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220708 03:40:24.197" endtime="20220708 03:40:24.752"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:40:24.770" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:40:24.752" endtime="20220708 03:40:24.770"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:40:24.771" endtime="20220708 03:40:24.850"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:24.850" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220708 03:40:24.850" endtime="20220708 03:40:25.797"/>
</kw>
<status status="PASS" starttime="20220708 03:40:24.771" endtime="20220708 03:40:25.797"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:40:25.798" endtime="20220708 03:40:25.798"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:25.798" endtime="20220708 03:40:25.798"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:25.797" endtime="20220708 03:40:25.798"/>
</branch>
<status status="PASS" starttime="20220708 03:40:24.770" endtime="20220708 03:40:25.798"/>
</if>
<status status="PASS" starttime="20220708 03:40:24.752" endtime="20220708 03:40:25.798"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220708 03:40:25.799" endtime="20220708 03:40:25.828"/>
</kw>
<status status="PASS" starttime="20220708 03:40:25.798" endtime="20220708 03:40:25.828"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:25.829" endtime="20220708 03:40:25.894"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:25.895" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220708 03:40:25.952" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220708 03:40:26.026" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220708 03:40:25.894" endtime="20220708 03:40:26.026"/>
</kw>
<status status="PASS" starttime="20220708 03:40:25.828" endtime="20220708 03:40:26.026"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:40:26.041" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c7a7...</msg>
<status status="PASS" starttime="20220708 03:40:26.027" endtime="20220708 03:40:26.041"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:40:26.041" endtime="20220708 03:40:26.042"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:26.042" endtime="20220708 03:40:26.042"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:26.041" endtime="20220708 03:40:26.042"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:40:26.042" endtime="20220708 03:40:26.115"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:26.115" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220708 03:40:26.115" endtime="20220708 03:40:26.244"/>
</kw>
<status status="PASS" starttime="20220708 03:40:26.042" endtime="20220708 03:40:26.244"/>
</branch>
<status status="PASS" starttime="20220708 03:40:26.041" endtime="20220708 03:40:26.244"/>
</if>
<status status="PASS" starttime="20220708 03:40:26.026" endtime="20220708 03:40:26.244"/>
</kw>
<status status="PASS" starttime="20220708 03:40:23.952" endtime="20220708 03:40:26.244"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220708 03:40:26.245" endtime="20220708 03:40:29.479"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:29.480" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220708 03:40:29.480" endtime="20220708 03:40:29.616"/>
</kw>
<status status="PASS" starttime="20220708 03:40:29.479" endtime="20220708 03:40:29.616"/>
</kw>
<status status="PASS" starttime="20220708 03:40:26.244" endtime="20220708 03:40:29.616"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:29.617" endtime="20220708 03:40:29.940"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:29.940" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220708 03:40:29.940" endtime="20220708 03:40:30.123"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:40:30.123" endtime="20220708 03:40:30.190"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:30.191" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220708 03:40:30.190" endtime="20220708 03:40:30.270"/>
</kw>
<status status="PASS" starttime="20220708 03:40:29.617" endtime="20220708 03:40:30.270"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:30.271" endtime="20220708 03:40:31.595"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220708 03:40:31.596" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220708 03:40:31.595" endtime="20220708 03:40:31.692"/>
</kw>
<status status="PASS" starttime="20220708 03:40:30.271" endtime="20220708 03:40:31.692"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:31.693" endtime="20220708 03:40:31.747"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:31.747" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220708 03:40:31.747" endtime="20220708 03:40:32.064"/>
</kw>
<status status="PASS" starttime="20220708 03:40:31.693" endtime="20220708 03:40:32.064"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:32.065" endtime="20220708 03:40:32.247"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:32.248" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220708 03:40:32.247" endtime="20220708 03:40:32.372"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:32.372" endtime="20220708 03:40:32.423"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:32.424" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220708 03:40:32.424" endtime="20220708 03:40:32.508"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:32.508" endtime="20220708 03:40:32.574"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:32.575" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220708 03:40:32.575" endtime="20220708 03:40:32.676"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:32.677" endtime="20220708 03:40:32.974"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:32.975" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220708 03:40:32.974" endtime="20220708 03:40:33.043"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:33.043" endtime="20220708 03:40:33.088"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:33.088" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220708 03:40:33.088" endtime="20220708 03:40:33.145"/>
</kw>
<status status="PASS" starttime="20220708 03:40:32.064" endtime="20220708 03:40:33.145"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220708 03:40:33.145" endtime="20220708 03:40:33.278"/>
</kw>
<status status="PASS" starttime="20220708 03:40:31.693" endtime="20220708 03:40:33.278"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:40:21.849" endtime="20220708 03:40:33.278"/>
</test>
<test id="s1-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:40:33.281" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:40:33.281" endtime="20220708 03:40:33.281"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:40:33.282" endtime="20220708 03:40:33.282"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:40:33.283" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:40:33.282" endtime="20220708 03:40:33.283"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:40:33.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:40:33.283" endtime="20220708 03:40:33.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:40:33.551" endtime="20220708 03:40:33.551"/>
</return>
<msg timestamp="20220708 03:40:33.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:40:33.281" endtime="20220708 03:40:33.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:40:33.551" endtime="20220708 03:40:33.551"/>
</return>
<msg timestamp="20220708 03:40:33.552" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:40:33.280" endtime="20220708 03:40:33.552"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220708 03:40:33.553" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220708 03:40:33.553" endtime="20220708 03:40:34.478"/>
</kw>
<status status="PASS" starttime="20220708 03:40:33.552" endtime="20220708 03:40:34.478"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:34.478" endtime="20220708 03:40:34.478"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:34.478" endtime="20220708 03:40:34.478"/>
</branch>
<status status="PASS" starttime="20220708 03:40:33.552" endtime="20220708 03:40:34.478"/>
</if>
<status status="PASS" starttime="20220708 03:40:33.552" endtime="20220708 03:40:34.479"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220708 03:40:34.479" endtime="20220708 03:40:34.611"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:40:34.626" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:40:34.612" endtime="20220708 03:40:34.626"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:34.626" endtime="20220708 03:40:34.626"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:34.626" endtime="20220708 03:40:34.626"/>
</branch>
<status status="PASS" starttime="20220708 03:40:34.626" endtime="20220708 03:40:34.626"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:34.627" endtime="20220708 03:40:34.674"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:34.675" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220708 03:40:34.675" endtime="20220708 03:40:34.819"/>
</kw>
<status status="PASS" starttime="20220708 03:40:34.626" endtime="20220708 03:40:34.820"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220708 03:40:34.820" endtime="20220708 03:40:35.577"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:40:35.587" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:40:35.577" endtime="20220708 03:40:35.587"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:40:35.587" endtime="20220708 03:40:35.639"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:35.639" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220708 03:40:35.639" endtime="20220708 03:40:36.384"/>
</kw>
<status status="PASS" starttime="20220708 03:40:35.587" endtime="20220708 03:40:36.384"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:40:36.385" endtime="20220708 03:40:36.385"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:36.385" endtime="20220708 03:40:36.385"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:36.385" endtime="20220708 03:40:36.385"/>
</branch>
<status status="PASS" starttime="20220708 03:40:35.587" endtime="20220708 03:40:36.385"/>
</if>
<status status="PASS" starttime="20220708 03:40:35.577" endtime="20220708 03:40:36.385"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220708 03:40:36.386" endtime="20220708 03:40:36.427"/>
</kw>
<status status="PASS" starttime="20220708 03:40:36.385" endtime="20220708 03:40:36.427"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:36.428" endtime="20220708 03:40:36.481"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:36.482" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220708 03:40:36.540" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220708 03:40:36.614" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220708 03:40:36.482" endtime="20220708 03:40:36.614"/>
</kw>
<status status="PASS" starttime="20220708 03:40:36.428" endtime="20220708 03:40:36.614"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:40:36.637" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c7a7...</msg>
<status status="PASS" starttime="20220708 03:40:36.615" endtime="20220708 03:40:36.637"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:40:36.637" endtime="20220708 03:40:36.637"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:36.637" endtime="20220708 03:40:36.637"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:36.637" endtime="20220708 03:40:36.637"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:40:36.638" endtime="20220708 03:40:36.706"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:36.707" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220708 03:40:36.706" endtime="20220708 03:40:36.843"/>
</kw>
<status status="PASS" starttime="20220708 03:40:36.637" endtime="20220708 03:40:36.843"/>
</branch>
<status status="PASS" starttime="20220708 03:40:36.637" endtime="20220708 03:40:36.843"/>
</if>
<status status="PASS" starttime="20220708 03:40:36.614" endtime="20220708 03:40:36.844"/>
</kw>
<status status="PASS" starttime="20220708 03:40:34.611" endtime="20220708 03:40:36.844"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:40:36.845" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220708 03:40:36.844" endtime="20220708 03:40:36.845"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:36.845" endtime="20220708 03:40:39.864"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:39.865" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220708 03:40:39.864" endtime="20220708 03:40:40.251"/>
</kw>
<status status="PASS" starttime="20220708 03:40:36.844" endtime="20220708 03:40:40.251"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:40.252" endtime="20220708 03:40:40.771"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220708 03:40:40.772" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220708 03:40:40.771" endtime="20220708 03:40:40.848"/>
</kw>
<status status="PASS" starttime="20220708 03:40:40.251" endtime="20220708 03:40:40.848"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:40.849" endtime="20220708 03:40:40.944"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:40.944" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220708 03:40:40.944" endtime="20220708 03:40:41.030"/>
</kw>
<status status="PASS" starttime="20220708 03:40:40.849" endtime="20220708 03:40:41.031"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:41.031" endtime="20220708 03:40:41.146"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:41.147" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220708 03:40:41.147" endtime="20220708 03:40:41.421"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:41.421" endtime="20220708 03:40:41.722"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:41.723" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220708 03:40:41.722" endtime="20220708 03:40:41.810"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:41.810" endtime="20220708 03:40:41.852"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:41.852" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220708 03:40:41.852" endtime="20220708 03:40:41.958"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:41.958" endtime="20220708 03:40:42.257"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:42.258" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220708 03:40:42.257" endtime="20220708 03:40:42.335"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:42.336" endtime="20220708 03:40:42.385"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:42.386" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220708 03:40:42.385" endtime="20220708 03:40:42.459"/>
</kw>
<status status="PASS" starttime="20220708 03:40:41.031" endtime="20220708 03:40:42.459"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220708 03:40:42.460" endtime="20220708 03:40:42.583"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220708 03:40:42.583" endtime="20220708 03:40:42.584"/>
</kw>
<status status="PASS" starttime="20220708 03:40:42.460" endtime="20220708 03:40:42.584"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:40:33.279" endtime="20220708 03:40:42.584"/>
</test>
<test id="s1-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:40:42.588" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:40:42.588" endtime="20220708 03:40:42.588"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:40:42.588" endtime="20220708 03:40:42.588"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:40:42.589" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:40:42.588" endtime="20220708 03:40:42.590"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:40:42.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:40:42.590" endtime="20220708 03:40:42.810"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:40:42.810" endtime="20220708 03:40:42.810"/>
</return>
<msg timestamp="20220708 03:40:42.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:40:42.587" endtime="20220708 03:40:42.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:40:42.811" endtime="20220708 03:40:42.811"/>
</return>
<msg timestamp="20220708 03:40:42.811" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:40:42.587" endtime="20220708 03:40:42.811"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220708 03:40:42.812" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220708 03:40:42.812" endtime="20220708 03:40:43.811"/>
</kw>
<status status="PASS" starttime="20220708 03:40:42.812" endtime="20220708 03:40:43.812"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:43.812" endtime="20220708 03:40:43.812"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:43.812" endtime="20220708 03:40:43.812"/>
</branch>
<status status="PASS" starttime="20220708 03:40:42.812" endtime="20220708 03:40:43.812"/>
</if>
<status status="PASS" starttime="20220708 03:40:42.811" endtime="20220708 03:40:43.812"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220708 03:40:43.812" endtime="20220708 03:40:43.934"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:40:43.945" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:40:43.935" endtime="20220708 03:40:43.945"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:43.946" endtime="20220708 03:40:43.946"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:43.946" endtime="20220708 03:40:43.946"/>
</branch>
<status status="PASS" starttime="20220708 03:40:43.945" endtime="20220708 03:40:43.946"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:43.946" endtime="20220708 03:40:44.014"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:44.014" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220708 03:40:44.014" endtime="20220708 03:40:44.133"/>
</kw>
<status status="PASS" starttime="20220708 03:40:43.946" endtime="20220708 03:40:44.133"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220708 03:40:44.133" endtime="20220708 03:40:44.889"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:40:44.903" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:40:44.890" endtime="20220708 03:40:44.903"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:40:44.903" endtime="20220708 03:40:44.970"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:44.971" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220708 03:40:44.971" endtime="20220708 03:40:46.279"/>
</kw>
<status status="PASS" starttime="20220708 03:40:44.903" endtime="20220708 03:40:46.279"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:40:46.279" endtime="20220708 03:40:46.279"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:46.279" endtime="20220708 03:40:46.279"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:46.279" endtime="20220708 03:40:46.279"/>
</branch>
<status status="PASS" starttime="20220708 03:40:44.903" endtime="20220708 03:40:46.279"/>
</if>
<status status="PASS" starttime="20220708 03:40:44.889" endtime="20220708 03:40:46.280"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220708 03:40:46.280" endtime="20220708 03:40:46.308"/>
</kw>
<status status="PASS" starttime="20220708 03:40:46.280" endtime="20220708 03:40:46.308"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:46.309" endtime="20220708 03:40:46.350"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:46.351" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220708 03:40:46.406" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220708 03:40:46.472" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220708 03:40:46.351" endtime="20220708 03:40:46.472"/>
</kw>
<status status="PASS" starttime="20220708 03:40:46.309" endtime="20220708 03:40:46.472"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:40:46.495" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c7a7...</msg>
<status status="PASS" starttime="20220708 03:40:46.472" endtime="20220708 03:40:46.495"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:40:46.495" endtime="20220708 03:40:46.496"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:46.496" endtime="20220708 03:40:46.496"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:46.495" endtime="20220708 03:40:46.496"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:40:46.496" endtime="20220708 03:40:46.559"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:46.560" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220708 03:40:46.560" endtime="20220708 03:40:46.673"/>
</kw>
<status status="PASS" starttime="20220708 03:40:46.496" endtime="20220708 03:40:46.674"/>
</branch>
<status status="PASS" starttime="20220708 03:40:46.495" endtime="20220708 03:40:46.674"/>
</if>
<status status="PASS" starttime="20220708 03:40:46.472" endtime="20220708 03:40:46.674"/>
</kw>
<status status="PASS" starttime="20220708 03:40:43.934" endtime="20220708 03:40:46.674"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:40:46.675" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220708 03:40:46.675" endtime="20220708 03:40:46.675"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:46.675" endtime="20220708 03:40:49.670"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:49.670" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220708 03:40:49.670" endtime="20220708 03:40:50.058"/>
</kw>
<status status="PASS" starttime="20220708 03:40:46.674" endtime="20220708 03:40:50.058"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:50.059" endtime="20220708 03:40:50.540"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220708 03:40:50.540" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220708 03:40:50.540" endtime="20220708 03:40:50.644"/>
</kw>
<status status="PASS" starttime="20220708 03:40:50.058" endtime="20220708 03:40:50.644"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:50.645" endtime="20220708 03:40:50.707"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:50.708" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220708 03:40:50.708" endtime="20220708 03:40:50.773"/>
</kw>
<status status="PASS" starttime="20220708 03:40:50.644" endtime="20220708 03:40:50.773"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:50.774" endtime="20220708 03:40:50.844"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:50.845" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220708 03:40:50.845" endtime="20220708 03:40:51.041"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:51.041" endtime="20220708 03:40:51.316"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:51.317" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220708 03:40:51.316" endtime="20220708 03:40:51.383"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:51.383" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220708 03:40:51.383" endtime="20220708 03:40:51.518"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:51.519" endtime="20220708 03:40:51.569"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:51.569" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220708 03:40:51.569" endtime="20220708 03:40:51.689"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:51.690" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220708 03:40:51.689" endtime="20220708 03:40:51.791"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:51.792" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220708 03:40:51.792" endtime="20220708 03:40:51.884"/>
</kw>
<status status="PASS" starttime="20220708 03:40:50.774" endtime="20220708 03:40:51.884"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220708 03:40:51.885" endtime="20220708 03:40:52.055"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:40:52.058" level="INFO">${url} = boards/62c7a73a0a2dd062b4931dc5</msg>
<status status="PASS" starttime="20220708 03:40:52.058" endtime="20220708 03:40:52.058"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:40:52.373" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:40:52.058" endtime="20220708 03:40:52.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:40:52.373" endtime="20220708 03:40:52.373"/>
</return>
<msg timestamp="20220708 03:40:52.373" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:40:52.057" endtime="20220708 03:40:52.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:40:52.374" endtime="20220708 03:40:52.374"/>
</return>
<status status="PASS" starttime="20220708 03:40:52.056" endtime="20220708 03:40:52.374"/>
</kw>
<status status="PASS" starttime="20220708 03:40:52.055" endtime="20220708 03:40:52.374"/>
</kw>
<status status="PASS" starttime="20220708 03:40:51.885" endtime="20220708 03:40:52.374"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:40:42.586" endtime="20220708 03:40:52.374"/>
</test>
<test id="s1-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:40:52.377" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:40:52.377" endtime="20220708 03:40:52.377"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:40:52.377" endtime="20220708 03:40:52.377"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:40:52.379" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:40:52.377" endtime="20220708 03:40:52.379"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:40:52.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:40:52.379" endtime="20220708 03:40:52.594"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:40:52.594" endtime="20220708 03:40:52.594"/>
</return>
<msg timestamp="20220708 03:40:52.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:40:52.376" endtime="20220708 03:40:52.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:40:52.595" endtime="20220708 03:40:52.595"/>
</return>
<msg timestamp="20220708 03:40:52.595" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:40:52.376" endtime="20220708 03:40:52.595"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220708 03:40:52.596" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220708 03:40:52.596" endtime="20220708 03:40:53.597"/>
</kw>
<status status="PASS" starttime="20220708 03:40:52.596" endtime="20220708 03:40:53.597"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:53.598" endtime="20220708 03:40:53.598"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:53.598" endtime="20220708 03:40:53.598"/>
</branch>
<status status="PASS" starttime="20220708 03:40:52.595" endtime="20220708 03:40:53.598"/>
</if>
<status status="PASS" starttime="20220708 03:40:52.595" endtime="20220708 03:40:53.598"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220708 03:40:53.598" endtime="20220708 03:40:53.715"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:40:53.731" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:40:53.716" endtime="20220708 03:40:53.731"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:53.732" endtime="20220708 03:40:53.732"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:53.732" endtime="20220708 03:40:53.732"/>
</branch>
<status status="PASS" starttime="20220708 03:40:53.732" endtime="20220708 03:40:53.732"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:53.733" endtime="20220708 03:40:53.780"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:53.781" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220708 03:40:53.780" endtime="20220708 03:40:53.893"/>
</kw>
<status status="PASS" starttime="20220708 03:40:53.732" endtime="20220708 03:40:53.893"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220708 03:40:53.893" endtime="20220708 03:40:54.623"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:40:54.632" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:40:54.623" endtime="20220708 03:40:54.632"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:40:54.633" endtime="20220708 03:40:54.697"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:54.697" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220708 03:40:54.697" endtime="20220708 03:40:55.922"/>
</kw>
<status status="PASS" starttime="20220708 03:40:54.633" endtime="20220708 03:40:55.922"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:40:55.922" endtime="20220708 03:40:55.922"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:55.922" endtime="20220708 03:40:55.922"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:55.922" endtime="20220708 03:40:55.922"/>
</branch>
<status status="PASS" starttime="20220708 03:40:54.632" endtime="20220708 03:40:55.922"/>
</if>
<status status="PASS" starttime="20220708 03:40:54.623" endtime="20220708 03:40:55.923"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220708 03:40:55.923" endtime="20220708 03:40:55.939"/>
</kw>
<status status="PASS" starttime="20220708 03:40:55.923" endtime="20220708 03:40:55.940"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:55.940" endtime="20220708 03:40:55.999"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:56.000" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220708 03:40:56.055" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220708 03:40:56.130" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220708 03:40:55.999" endtime="20220708 03:40:56.130"/>
</kw>
<status status="PASS" starttime="20220708 03:40:55.940" endtime="20220708 03:40:56.130"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:40:56.140" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c7a7...</msg>
<status status="PASS" starttime="20220708 03:40:56.130" endtime="20220708 03:40:56.140"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:40:56.140" endtime="20220708 03:40:56.141"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:40:56.141" endtime="20220708 03:40:56.141"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:40:56.140" endtime="20220708 03:40:56.141"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:40:56.141" endtime="20220708 03:40:56.189"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:56.190" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220708 03:40:56.190" endtime="20220708 03:40:56.290"/>
</kw>
<status status="PASS" starttime="20220708 03:40:56.141" endtime="20220708 03:40:56.290"/>
</branch>
<status status="PASS" starttime="20220708 03:40:56.140" endtime="20220708 03:40:56.290"/>
</if>
<status status="PASS" starttime="20220708 03:40:56.130" endtime="20220708 03:40:56.291"/>
</kw>
<status status="PASS" starttime="20220708 03:40:53.716" endtime="20220708 03:40:56.291"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:40:56.292" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220708 03:40:56.291" endtime="20220708 03:40:56.292"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:56.292" endtime="20220708 03:40:59.173"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:40:59.174" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220708 03:40:59.174" endtime="20220708 03:40:59.573"/>
</kw>
<status status="PASS" starttime="20220708 03:40:56.291" endtime="20220708 03:40:59.573"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:40:59.574" endtime="20220708 03:41:00.078"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220708 03:41:00.079" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220708 03:41:00.078" endtime="20220708 03:41:00.195"/>
</kw>
<status status="PASS" starttime="20220708 03:40:59.574" endtime="20220708 03:41:00.195"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:00.196" endtime="20220708 03:41:00.228"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:00.261" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220708 03:41:00.228" endtime="20220708 03:41:00.261"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220708 03:41:00.261" level="INFO">Length is 8</msg>
<msg timestamp="20220708 03:41:00.261" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220708 03:41:00.261" endtime="20220708 03:41:00.261"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:00.262" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220708 03:41:00.261" endtime="20220708 03:41:00.324"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:00.325" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220708 03:41:00.623" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220708 03:41:00.325" endtime="20220708 03:41:00.638"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220708 03:41:00.639" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:00.640" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220708 03:41:00.920" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220708 03:41:00.639" endtime="20220708 03:41:00.937"/>
</kw>
<msg timestamp="20220708 03:41:00.937" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:00.938" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220708 03:41:01.220" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220708 03:41:00.937" endtime="20220708 03:41:01.239"/>
</kw>
<msg timestamp="20220708 03:41:01.239" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:01.240" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220708 03:41:01.525" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220708 03:41:01.239" endtime="20220708 03:41:01.541"/>
</kw>
<msg timestamp="20220708 03:41:01.541" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:01.542" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220708 03:41:01.820" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220708 03:41:01.541" endtime="20220708 03:41:01.842"/>
</kw>
<msg timestamp="20220708 03:41:01.843" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:01.843" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220708 03:41:02.145" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220708 03:41:01.843" endtime="20220708 03:41:02.161"/>
</kw>
<msg timestamp="20220708 03:41:02.161" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:02.162" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220708 03:41:02.441" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220708 03:41:02.161" endtime="20220708 03:41:02.464"/>
</kw>
<msg timestamp="20220708 03:41:02.464" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:02.465" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220708 03:41:02.752" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220708 03:41:02.464" endtime="20220708 03:41:02.766"/>
</kw>
<msg timestamp="20220708 03:41:02.766" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:02.767" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220708 03:41:03.045" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220708 03:41:02.767" endtime="20220708 03:41:03.058"/>
</kw>
<status status="PASS" starttime="20220708 03:41:00.639" endtime="20220708 03:41:03.058"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:03.059" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220708 03:41:03.339" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220708 03:41:03.058" endtime="20220708 03:41:03.392"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:03.393" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220708 03:41:03.679" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220708 03:41:03.392" endtime="20220708 03:41:03.796"/>
</kw>
<status status="PASS" starttime="20220708 03:41:00.196" endtime="20220708 03:41:03.797"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:03.797" endtime="20220708 03:41:03.843"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220708 03:41:03.844" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220708 03:41:03.844" endtime="20220708 03:41:03.914"/>
</kw>
<status status="PASS" starttime="20220708 03:41:03.797" endtime="20220708 03:41:03.914"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220708 03:41:03.915" endtime="20220708 03:41:04.009"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:04.012" level="INFO">${url} = boards/62c7a744374ac2662cb15476</msg>
<status status="PASS" starttime="20220708 03:41:04.012" endtime="20220708 03:41:04.012"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:41:04.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:04.012" endtime="20220708 03:41:04.366"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:04.366" endtime="20220708 03:41:04.366"/>
</return>
<msg timestamp="20220708 03:41:04.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:04.011" endtime="20220708 03:41:04.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:04.367" endtime="20220708 03:41:04.367"/>
</return>
<status status="PASS" starttime="20220708 03:41:04.010" endtime="20220708 03:41:04.367"/>
</kw>
<status status="PASS" starttime="20220708 03:41:04.009" endtime="20220708 03:41:04.367"/>
</kw>
<status status="PASS" starttime="20220708 03:41:03.914" endtime="20220708 03:41:04.367"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:40:52.375" endtime="20220708 03:41:04.367"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 03:41:04.369" endtime="20220708 03:41:04.370"/>
</kw>
<status status="PASS" starttime="20220708 03:41:04.369" endtime="20220708 03:41:04.370"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220708 03:40:21.612" endtime="20220708 03:41:04.370"/>
</suite>
<suite id="s1-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:41:04.387" endtime="20220708 03:41:04.387"/>
</kw>
<status status="PASS" starttime="20220708 03:41:04.386" endtime="20220708 03:41:04.387"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:41:04.388" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:41:04.388" endtime="20220708 03:41:04.388"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:41:04.388" endtime="20220708 03:41:04.388"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:04.390" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:41:04.388" endtime="20220708 03:41:04.390"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:41:04.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:04.390" endtime="20220708 03:41:04.632"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:04.632" endtime="20220708 03:41:04.632"/>
</return>
<msg timestamp="20220708 03:41:04.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:04.387" endtime="20220708 03:41:04.632"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:04.632" endtime="20220708 03:41:04.632"/>
</return>
<msg timestamp="20220708 03:41:04.632" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:04.387" endtime="20220708 03:41:04.632"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:41:04.634" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7a750b7b341647fc8f051</msg>
<status status="PASS" starttime="20220708 03:41:04.633" endtime="20220708 03:41:04.634"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220708 03:41:04.635" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220708 03:41:04.635" endtime="20220708 03:41:05.584"/>
</kw>
<status status="PASS" starttime="20220708 03:41:04.635" endtime="20220708 03:41:05.584"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:05.584" endtime="20220708 03:41:05.584"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:05.584" endtime="20220708 03:41:05.584"/>
</branch>
<status status="PASS" starttime="20220708 03:41:04.634" endtime="20220708 03:41:05.584"/>
</if>
<status status="PASS" starttime="20220708 03:41:04.634" endtime="20220708 03:41:05.584"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220708 03:41:05.584" endtime="20220708 03:41:05.701"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:41:05.713" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:41:05.702" endtime="20220708 03:41:05.713"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:05.714" endtime="20220708 03:41:05.714"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:05.714" endtime="20220708 03:41:05.714"/>
</branch>
<status status="PASS" starttime="20220708 03:41:05.713" endtime="20220708 03:41:05.714"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:05.714" endtime="20220708 03:41:05.747"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:05.748" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220708 03:41:05.747" endtime="20220708 03:41:05.847"/>
</kw>
<status status="PASS" starttime="20220708 03:41:05.714" endtime="20220708 03:41:05.847"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220708 03:41:05.847" endtime="20220708 03:41:06.590"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:41:06.597" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:41:06.590" endtime="20220708 03:41:06.597"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:06.598" endtime="20220708 03:41:06.644"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:06.645" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220708 03:41:06.644" endtime="20220708 03:41:07.475"/>
</kw>
<status status="PASS" starttime="20220708 03:41:06.598" endtime="20220708 03:41:07.475"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:41:07.475" endtime="20220708 03:41:07.475"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:07.475" endtime="20220708 03:41:07.475"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:07.475" endtime="20220708 03:41:07.475"/>
</branch>
<status status="PASS" starttime="20220708 03:41:06.597" endtime="20220708 03:41:07.475"/>
</if>
<status status="PASS" starttime="20220708 03:41:06.590" endtime="20220708 03:41:07.476"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220708 03:41:07.476" endtime="20220708 03:41:07.496"/>
</kw>
<status status="PASS" starttime="20220708 03:41:07.476" endtime="20220708 03:41:07.496"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:07.497" endtime="20220708 03:41:07.545"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:07.546" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220708 03:41:07.605" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220708 03:41:07.701" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220708 03:41:07.545" endtime="20220708 03:41:07.701"/>
</kw>
<status status="PASS" starttime="20220708 03:41:07.496" endtime="20220708 03:41:07.701"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:41:07.710" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c7a7...</msg>
<status status="PASS" starttime="20220708 03:41:07.701" endtime="20220708 03:41:07.711"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:41:07.711" endtime="20220708 03:41:07.711"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:07.711" endtime="20220708 03:41:07.711"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:07.711" endtime="20220708 03:41:07.711"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:07.711" endtime="20220708 03:41:07.761"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:07.762" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220708 03:41:07.761" endtime="20220708 03:41:07.882"/>
</kw>
<status status="PASS" starttime="20220708 03:41:07.711" endtime="20220708 03:41:07.882"/>
</branch>
<status status="PASS" starttime="20220708 03:41:07.711" endtime="20220708 03:41:07.882"/>
</if>
<status status="PASS" starttime="20220708 03:41:07.701" endtime="20220708 03:41:07.882"/>
</kw>
<status status="PASS" starttime="20220708 03:41:05.702" endtime="20220708 03:41:07.882"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:07.883" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220708 03:41:07.883" endtime="20220708 03:41:07.883"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:07.883" endtime="20220708 03:41:10.773"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:10.773" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220708 03:41:10.773" endtime="20220708 03:41:11.133"/>
</kw>
<status status="PASS" starttime="20220708 03:41:07.882" endtime="20220708 03:41:11.133"/>
</kw>
<status status="PASS" starttime="20220708 03:41:04.386" endtime="20220708 03:41:11.133"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:11.134" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220708 03:41:11.134" endtime="20220708 03:41:11.134"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:11.135" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220708 03:41:11.135" endtime="20220708 03:41:11.135"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:11.136" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220708 03:41:11.135" endtime="20220708 03:41:11.136"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:11.136" endtime="20220708 03:41:11.590"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:11.591" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:11.590" endtime="20220708 03:41:11.740"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:11.741" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220708 03:41:11.741" endtime="20220708 03:41:11.741"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:11.741" endtime="20220708 03:41:11.793"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:11.793" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:11.793" endtime="20220708 03:41:11.843"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220708 03:41:11.843" endtime="20220708 03:41:11.887"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:11.888" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:11.887" endtime="20220708 03:41:12.037"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:12.038" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220708 03:41:12.037" endtime="20220708 03:41:12.038"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:12.038" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220708 03:41:12.038" endtime="20220708 03:41:12.116"/>
</kw>
<status status="PASS" starttime="20220708 03:41:11.135" endtime="20220708 03:41:12.116"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:12.118" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220708 03:41:12.117" endtime="20220708 03:41:12.118"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220708 03:41:12.179" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220708 03:41:12.118" endtime="20220708 03:41:12.179"/>
</kw>
<status status="PASS" starttime="20220708 03:41:12.117" endtime="20220708 03:41:12.179"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:12.181" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220708 03:41:12.180" endtime="20220708 03:41:12.181"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:12.181" endtime="20220708 03:41:12.221"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:12.221" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:12.221" endtime="20220708 03:41:12.392"/>
</kw>
<status status="PASS" starttime="20220708 03:41:12.180" endtime="20220708 03:41:12.393"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220708 03:41:12.428" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220708 03:41:12.394" endtime="20220708 03:41:12.428"/>
</kw>
<msg timestamp="20220708 03:41:12.429" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220708 03:41:12.393" endtime="20220708 03:41:12.429"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:12.429" endtime="20220708 03:41:12.830"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:12.831" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220708 03:41:12.831" endtime="20220708 03:41:12.953"/>
</kw>
<status status="PASS" starttime="20220708 03:41:12.429" endtime="20220708 03:41:12.953"/>
</kw>
<status status="PASS" starttime="20220708 03:41:12.429" endtime="20220708 03:41:12.953"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:12.954" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220708 03:41:12.954" endtime="20220708 03:41:13.045"/>
</kw>
<status status="PASS" starttime="20220708 03:41:12.954" endtime="20220708 03:41:13.045"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:13.045" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220708 03:41:13.045" endtime="20220708 03:41:13.246"/>
</kw>
<status status="PASS" starttime="20220708 03:41:12.393" endtime="20220708 03:41:13.246"/>
</kw>
<status status="PASS" starttime="20220708 03:41:12.179" endtime="20220708 03:41:13.246"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:41:11.133" endtime="20220708 03:41:13.246"/>
</test>
<test id="s1-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:13.249" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220708 03:41:13.249" endtime="20220708 03:41:13.249"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:13.249" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220708 03:41:13.249" endtime="20220708 03:41:13.249"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:13.250" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220708 03:41:13.250" endtime="20220708 03:41:13.250"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:13.250" endtime="20220708 03:41:13.293"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:13.293" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:13.293" endtime="20220708 03:41:13.355"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:13.355" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220708 03:41:13.355" endtime="20220708 03:41:13.355"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:13.356" endtime="20220708 03:41:13.407"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:13.408" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:13.407" endtime="20220708 03:41:13.464"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220708 03:41:13.464" endtime="20220708 03:41:13.503"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:13.503" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:13.503" endtime="20220708 03:41:13.692"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:13.693" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220708 03:41:13.692" endtime="20220708 03:41:13.693"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:13.693" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220708 03:41:13.693" endtime="20220708 03:41:13.790"/>
</kw>
<status status="PASS" starttime="20220708 03:41:13.249" endtime="20220708 03:41:13.791"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:13.791" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220708 03:41:13.791" endtime="20220708 03:41:13.791"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:13.792" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220708 03:41:13.792" endtime="20220708 03:41:13.792"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:13.793" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220708 03:41:13.792" endtime="20220708 03:41:13.793"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:13.793" endtime="20220708 03:41:13.875"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220708 03:41:13.876" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:13.875" endtime="20220708 03:41:14.159"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220708 03:41:14.160" endtime="20220708 03:41:14.183"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:14.184" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220708 03:41:14.184" endtime="20220708 03:41:14.284"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:14.285" endtime="20220708 03:41:14.396"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:14.396" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220708 03:41:14.396" endtime="20220708 03:41:14.487"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220708 03:41:14.487" endtime="20220708 03:41:14.552"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:14.553" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220708 03:41:14.552" endtime="20220708 03:41:14.683"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:14.684" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220708 03:41:14.683" endtime="20220708 03:41:14.772"/>
</kw>
<status status="PASS" starttime="20220708 03:41:13.791" endtime="20220708 03:41:14.773"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:14.774" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220708 03:41:14.773" endtime="20220708 03:41:14.774"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220708 03:41:14.840" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220708 03:41:14.774" endtime="20220708 03:41:14.840"/>
</kw>
<status status="PASS" starttime="20220708 03:41:14.773" endtime="20220708 03:41:14.840"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:14.842" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220708 03:41:14.841" endtime="20220708 03:41:14.842"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:14.842" endtime="20220708 03:41:14.880"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:14.881" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220708 03:41:14.880" endtime="20220708 03:41:15.066"/>
</kw>
<status status="PASS" starttime="20220708 03:41:14.841" endtime="20220708 03:41:15.066"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220708 03:41:15.450" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220708 03:41:15.067" endtime="20220708 03:41:15.450"/>
</kw>
<msg timestamp="20220708 03:41:15.450" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220708 03:41:15.067" endtime="20220708 03:41:15.450"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:15.451" endtime="20220708 03:41:15.535"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:15.535" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220708 03:41:15.535" endtime="20220708 03:41:15.749"/>
</kw>
<status status="PASS" starttime="20220708 03:41:15.451" endtime="20220708 03:41:15.749"/>
</kw>
<status status="PASS" starttime="20220708 03:41:15.451" endtime="20220708 03:41:15.749"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:15.750" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220708 03:41:15.750" endtime="20220708 03:41:15.872"/>
</kw>
<status status="PASS" starttime="20220708 03:41:15.750" endtime="20220708 03:41:15.872"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:15.873" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220708 03:41:15.873" endtime="20220708 03:41:16.332"/>
</kw>
<status status="PASS" starttime="20220708 03:41:15.066" endtime="20220708 03:41:16.333"/>
</kw>
<status status="PASS" starttime="20220708 03:41:14.840" endtime="20220708 03:41:16.333"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:41:13.248" endtime="20220708 03:41:16.333"/>
</test>
<test id="s1-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:16.335" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220708 03:41:16.335" endtime="20220708 03:41:16.335"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:16.335" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220708 03:41:16.335" endtime="20220708 03:41:16.335"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:16.336" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220708 03:41:16.336" endtime="20220708 03:41:16.336"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:16.336" endtime="20220708 03:41:16.394"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:16.395" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:16.395" endtime="20220708 03:41:16.479"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:16.480" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220708 03:41:16.479" endtime="20220708 03:41:16.480"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:16.480" endtime="20220708 03:41:16.519"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:16.520" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:16.519" endtime="20220708 03:41:16.568"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220708 03:41:16.568" endtime="20220708 03:41:16.652"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:16.653" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:16.653" endtime="20220708 03:41:16.798"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:16.798" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220708 03:41:16.798" endtime="20220708 03:41:16.798"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:16.799" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220708 03:41:16.799" endtime="20220708 03:41:16.878"/>
</kw>
<status status="PASS" starttime="20220708 03:41:16.335" endtime="20220708 03:41:16.879"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:16.880" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220708 03:41:16.879" endtime="20220708 03:41:16.880"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:16.880" endtime="20220708 03:41:16.963"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:16.964" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:16.964" endtime="20220708 03:41:17.055"/>
</kw>
<status status="PASS" starttime="20220708 03:41:16.879" endtime="20220708 03:41:17.055"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220708 03:41:17.402" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220708 03:41:17.056" endtime="20220708 03:41:17.402"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220708 03:41:17.403" endtime="20220708 03:41:17.403"/>
</return>
<msg timestamp="20220708 03:41:17.403" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220708 03:41:17.055" endtime="20220708 03:41:17.403"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:17.403" endtime="20220708 03:41:17.459"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:17.459" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220708 03:41:17.459" endtime="20220708 03:41:17.540"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220708 03:41:17.541" endtime="20220708 03:41:17.625"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:17.626" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220708 03:41:17.625" endtime="20220708 03:41:17.824"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:17.824" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220708 03:41:17.824" endtime="20220708 03:41:17.988"/>
</kw>
<status status="PASS" starttime="20220708 03:41:17.403" endtime="20220708 03:41:17.988"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220708 03:41:18.136" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220708 03:41:17.989" endtime="20220708 03:41:18.136"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220708 03:41:18.136" endtime="20220708 03:41:18.136"/>
</return>
<msg timestamp="20220708 03:41:18.137" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220708 03:41:17.988" endtime="20220708 03:41:18.137"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220708 03:41:18.137" endtime="20220708 03:41:18.138"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220708 03:41:18.179" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220708 03:41:18.139" endtime="20220708 03:41:18.179"/>
</kw>
<msg timestamp="20220708 03:41:18.179" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220708 03:41:18.139" endtime="20220708 03:41:18.179"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:18.180" endtime="20220708 03:41:18.247"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:18.248" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220708 03:41:18.247" endtime="20220708 03:41:18.357"/>
</kw>
<status status="PASS" starttime="20220708 03:41:18.180" endtime="20220708 03:41:18.358"/>
</kw>
<status status="PASS" starttime="20220708 03:41:18.179" endtime="20220708 03:41:18.358"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:18.359" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220708 03:41:18.358" endtime="20220708 03:41:18.435"/>
</kw>
<status status="PASS" starttime="20220708 03:41:18.358" endtime="20220708 03:41:18.435"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:18.435" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220708 03:41:18.435" endtime="20220708 03:41:18.625"/>
</kw>
<status status="PASS" starttime="20220708 03:41:18.138" endtime="20220708 03:41:18.625"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:41:16.333" endtime="20220708 03:41:18.626"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:18.628" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220708 03:41:18.627" endtime="20220708 03:41:18.628"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:18.628" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220708 03:41:18.628" endtime="20220708 03:41:18.628"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:18.629" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220708 03:41:18.629" endtime="20220708 03:41:18.629"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220708 03:41:18.646" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220708 03:41:18.629" endtime="20220708 03:41:18.646"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220708 03:41:18.646" endtime="20220708 03:41:18.646"/>
</return>
<msg timestamp="20220708 03:41:18.647" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220708 03:41:18.628" endtime="20220708 03:41:18.647"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:18.648" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220708 03:41:18.647" endtime="20220708 03:41:18.648"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:18.648" endtime="20220708 03:41:18.682"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:18.683" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:18.683" endtime="20220708 03:41:18.738"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:18.739" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220708 03:41:18.738" endtime="20220708 03:41:18.739"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:18.739" endtime="20220708 03:41:18.769"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:18.769" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:18.769" endtime="20220708 03:41:18.821"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220708 03:41:18.821" endtime="20220708 03:41:18.858"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:18.859" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:18.859" endtime="20220708 03:41:18.955"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:18.956" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220708 03:41:18.955" endtime="20220708 03:41:18.956"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:18.956" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220708 03:41:18.956" endtime="20220708 03:41:19.044"/>
</kw>
<status status="PASS" starttime="20220708 03:41:18.647" endtime="20220708 03:41:19.044"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:19.046" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220708 03:41:19.045" endtime="20220708 03:41:19.046"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:19.046" endtime="20220708 03:41:19.092"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:19.093" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:19.093" endtime="20220708 03:41:19.143"/>
</kw>
<status status="PASS" starttime="20220708 03:41:19.045" endtime="20220708 03:41:19.143"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220708 03:41:19.375" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220708 03:41:19.144" endtime="20220708 03:41:19.375"/>
</kw>
<msg timestamp="20220708 03:41:19.375" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220708 03:41:19.144" endtime="20220708 03:41:19.375"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:19.376" endtime="20220708 03:41:19.415"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:19.416" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220708 03:41:19.416" endtime="20220708 03:41:19.492"/>
</kw>
<status status="PASS" starttime="20220708 03:41:19.376" endtime="20220708 03:41:19.493"/>
</kw>
<status status="PASS" starttime="20220708 03:41:19.376" endtime="20220708 03:41:19.493"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:19.494" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220708 03:41:19.494" endtime="20220708 03:41:19.559"/>
</kw>
<status status="PASS" starttime="20220708 03:41:19.493" endtime="20220708 03:41:19.560"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:19.560" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220708 03:41:19.560" endtime="20220708 03:41:19.740"/>
</kw>
<status status="PASS" starttime="20220708 03:41:19.143" endtime="20220708 03:41:19.740"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:19.741" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220708 03:41:19.741" endtime="20220708 03:41:19.741"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220708 03:41:19.764" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220708 03:41:19.741" endtime="20220708 03:41:19.764"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220708 03:41:19.764" endtime="20220708 03:41:19.764"/>
</return>
<msg timestamp="20220708 03:41:19.764" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220708 03:41:19.740" endtime="20220708 03:41:19.764"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220708 03:41:19.764" endtime="20220708 03:41:19.765"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:41:18.626" endtime="20220708 03:41:19.765"/>
</test>
<test id="s1-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:19.767" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220708 03:41:19.766" endtime="20220708 03:41:19.767"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:19.767" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220708 03:41:19.767" endtime="20220708 03:41:19.767"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:19.768" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220708 03:41:19.768" endtime="20220708 03:41:19.768"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:19.768" endtime="20220708 03:41:19.795"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:19.796" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:19.795" endtime="20220708 03:41:19.844"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:19.845" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220708 03:41:19.845" endtime="20220708 03:41:19.845"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:19.845" endtime="20220708 03:41:19.896"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:19.897" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:19.897" endtime="20220708 03:41:19.964"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220708 03:41:19.964" endtime="20220708 03:41:20.021"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:20.022" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:20.021" endtime="20220708 03:41:20.171"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:20.171" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220708 03:41:20.171" endtime="20220708 03:41:20.171"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:20.172" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220708 03:41:20.172" endtime="20220708 03:41:20.307"/>
</kw>
<status status="PASS" starttime="20220708 03:41:19.767" endtime="20220708 03:41:20.307"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:20.308" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220708 03:41:20.308" endtime="20220708 03:41:20.308"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:20.309" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220708 03:41:20.309" endtime="20220708 03:41:20.309"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:20.310" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220708 03:41:20.309" endtime="20220708 03:41:20.310"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:20.310" endtime="20220708 03:41:20.439"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220708 03:41:20.439" endtime="20220708 03:41:21.028"/>
</kw>
<status status="PASS" starttime="20220708 03:41:20.308" endtime="20220708 03:41:21.028"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:21.029" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220708 03:41:21.029" endtime="20220708 03:41:21.029"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220708 03:41:21.084" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220708 03:41:21.030" endtime="20220708 03:41:21.085"/>
</kw>
<status status="PASS" starttime="20220708 03:41:21.028" endtime="20220708 03:41:21.085"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:21.086" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220708 03:41:21.086" endtime="20220708 03:41:21.086"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:21.087" endtime="20220708 03:41:21.114"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:21.114" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:21.114" endtime="20220708 03:41:21.162"/>
</kw>
<status status="PASS" starttime="20220708 03:41:21.085" endtime="20220708 03:41:21.162"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220708 03:41:21.366" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220708 03:41:21.163" endtime="20220708 03:41:21.366"/>
</kw>
<msg timestamp="20220708 03:41:21.366" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220708 03:41:21.163" endtime="20220708 03:41:21.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:21.367" endtime="20220708 03:41:21.415"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:21.415" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220708 03:41:21.415" endtime="20220708 03:41:21.503"/>
</kw>
<status status="PASS" starttime="20220708 03:41:21.367" endtime="20220708 03:41:21.503"/>
</kw>
<status status="PASS" starttime="20220708 03:41:21.366" endtime="20220708 03:41:21.503"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:21.504" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220708 03:41:21.504" endtime="20220708 03:41:21.571"/>
</kw>
<status status="PASS" starttime="20220708 03:41:21.503" endtime="20220708 03:41:21.571"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:21.572" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220708 03:41:21.571" endtime="20220708 03:41:21.741"/>
</kw>
<status status="PASS" starttime="20220708 03:41:21.162" endtime="20220708 03:41:21.741"/>
</kw>
<status status="PASS" starttime="20220708 03:41:21.085" endtime="20220708 03:41:21.741"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:41:19.766" endtime="20220708 03:41:21.741"/>
</test>
<test id="s1-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:41:21.745" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:41:21.745" endtime="20220708 03:41:21.745"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:41:21.745" endtime="20220708 03:41:21.746"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:21.747" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:41:21.746" endtime="20220708 03:41:21.747"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:41:21.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:21.747" endtime="20220708 03:41:21.930"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:21.930" endtime="20220708 03:41:21.930"/>
</return>
<msg timestamp="20220708 03:41:21.931" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:21.744" endtime="20220708 03:41:21.931"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:21.931" endtime="20220708 03:41:21.931"/>
</return>
<msg timestamp="20220708 03:41:21.931" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:21.744" endtime="20220708 03:41:21.931"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:21.931" endtime="20220708 03:41:22.004"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:22.005" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220708 03:41:22.004" endtime="20220708 03:41:22.164"/>
</kw>
<status status="PASS" starttime="20220708 03:41:21.931" endtime="20220708 03:41:22.164"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:22.165" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220708 03:41:22.164" endtime="20220708 03:41:22.165"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:22.165" endtime="20220708 03:41:22.439"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:22.440" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220708 03:41:22.439" endtime="20220708 03:41:22.598"/>
</kw>
<status status="PASS" starttime="20220708 03:41:22.164" endtime="20220708 03:41:22.598"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:22.599" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220708 03:41:22.598" endtime="20220708 03:41:22.599"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220708 03:41:22.599" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220708 03:41:22.599" endtime="20220708 03:41:22.599"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:22.600" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220708 03:41:22.600" endtime="20220708 03:41:22.600"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:22.600" endtime="20220708 03:41:23.127"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:23.128" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:23.128" endtime="20220708 03:41:23.188"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:23.189" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220708 03:41:23.188" endtime="20220708 03:41:23.189"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:23.189" endtime="20220708 03:41:23.242"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:23.243" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:23.242" endtime="20220708 03:41:23.312"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220708 03:41:23.313" endtime="20220708 03:41:23.344"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:23.344" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:23.344" endtime="20220708 03:41:23.438"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:23.439" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220708 03:41:23.438" endtime="20220708 03:41:23.439"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:23.439" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220708 03:41:23.439" endtime="20220708 03:41:23.512"/>
</kw>
<status status="PASS" starttime="20220708 03:41:22.599" endtime="20220708 03:41:23.513"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:23.514" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220708 03:41:23.513" endtime="20220708 03:41:23.514"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:23.514" endtime="20220708 03:41:23.580"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:23.581" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220708 03:41:23.581" endtime="20220708 03:41:23.635"/>
</kw>
<status status="PASS" starttime="20220708 03:41:23.513" endtime="20220708 03:41:23.635"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:23.636" endtime="20220708 03:41:23.897"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:23.898" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220708 03:41:23.897" endtime="20220708 03:41:23.974"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220708 03:41:23.974" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220708 03:41:23.974" endtime="20220708 03:41:24.128"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:24.129" endtime="20220708 03:41:24.403"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:24.404" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220708 03:41:24.404" endtime="20220708 03:41:24.552"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220708 03:41:24.553" endtime="20220708 03:41:24.568"/>
</kw>
<status status="PASS" starttime="20220708 03:41:23.635" endtime="20220708 03:41:24.568"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:24.569" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220708 03:41:24.569" endtime="20220708 03:41:24.569"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220708 03:41:24.580" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220708 03:41:24.569" endtime="20220708 03:41:24.580"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220708 03:41:24.580" endtime="20220708 03:41:24.580"/>
</return>
<msg timestamp="20220708 03:41:24.580" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220708 03:41:24.568" endtime="20220708 03:41:24.580"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220708 03:41:24.581" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220708 03:41:24.580" endtime="20220708 03:41:24.581"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:41:24.581" endtime="20220708 03:41:24.581"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220708 03:41:24.582" endtime="20220708 03:41:24.695"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:24.698" level="INFO">${url} = boards/62c7a761077e84297947c1d2</msg>
<status status="PASS" starttime="20220708 03:41:24.698" endtime="20220708 03:41:24.698"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:41:24.743" level="INFO">${response} = None</msg>
<msg timestamp="20220708 03:41:24.743" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220708 03:41:24.699" endtime="20220708 03:41:24.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:24.744" endtime="20220708 03:41:24.744"/>
</return>
<msg timestamp="20220708 03:41:24.744" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220708 03:41:24.697" endtime="20220708 03:41:24.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:24.744" endtime="20220708 03:41:24.744"/>
</return>
<status status="FAIL" starttime="20220708 03:41:24.696" endtime="20220708 03:41:24.744"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:27.748" level="INFO">${url} = boards/62c7a761077e84297947c1d2</msg>
<status status="PASS" starttime="20220708 03:41:27.748" endtime="20220708 03:41:27.748"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:41:28.080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:27.748" endtime="20220708 03:41:28.080"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:28.081" endtime="20220708 03:41:28.081"/>
</return>
<msg timestamp="20220708 03:41:28.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:27.747" endtime="20220708 03:41:28.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:28.081" endtime="20220708 03:41:28.081"/>
</return>
<status status="PASS" starttime="20220708 03:41:27.745" endtime="20220708 03:41:28.081"/>
</kw>
<status status="PASS" starttime="20220708 03:41:24.695" endtime="20220708 03:41:28.081"/>
</kw>
<status status="PASS" starttime="20220708 03:41:24.581" endtime="20220708 03:41:28.081"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:41:21.743" endtime="20220708 03:41:28.081"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:28.085" level="INFO">${url} = boards/62c7a750b7b341647fc8f051</msg>
<status status="PASS" starttime="20220708 03:41:28.085" endtime="20220708 03:41:28.085"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:41:28.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:28.085" endtime="20220708 03:41:28.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:28.423" endtime="20220708 03:41:28.423"/>
</return>
<msg timestamp="20220708 03:41:28.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:28.084" endtime="20220708 03:41:28.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:28.423" endtime="20220708 03:41:28.423"/>
</return>
<status status="PASS" starttime="20220708 03:41:28.084" endtime="20220708 03:41:28.424"/>
</kw>
<status status="PASS" starttime="20220708 03:41:28.083" endtime="20220708 03:41:28.424"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 03:41:28.424" endtime="20220708 03:41:28.425"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220708 03:41:28.425" endtime="20220708 03:41:28.425"/>
</kw>
<status status="PASS" starttime="20220708 03:41:28.082" endtime="20220708 03:41:28.426"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220708 03:41:04.372" endtime="20220708 03:41:28.426"/>
</suite>
<suite id="s1-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:41:28.444" endtime="20220708 03:41:28.445"/>
</kw>
<status status="PASS" starttime="20220708 03:41:28.444" endtime="20220708 03:41:28.445"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:41:28.446" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:41:28.446" endtime="20220708 03:41:28.446"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:41:28.446" endtime="20220708 03:41:28.446"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:28.447" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:41:28.446" endtime="20220708 03:41:28.447"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:41:28.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:28.448" endtime="20220708 03:41:28.670"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:28.670" endtime="20220708 03:41:28.670"/>
</return>
<msg timestamp="20220708 03:41:28.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:28.445" endtime="20220708 03:41:28.671"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:28.671" endtime="20220708 03:41:28.671"/>
</return>
<msg timestamp="20220708 03:41:28.671" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:28.445" endtime="20220708 03:41:28.671"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:41:28.673" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7a76867645716bc36501b</msg>
<status status="PASS" starttime="20220708 03:41:28.671" endtime="20220708 03:41:28.673"/>
</kw>
<status status="PASS" starttime="20220708 03:41:28.445" endtime="20220708 03:41:28.673"/>
</kw>
<status status="PASS" starttime="20220708 03:41:28.444" endtime="20220708 03:41:28.673"/>
</kw>
<test id="s1-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220708 03:41:28.675" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220708 03:41:28.674" endtime="20220708 03:41:29.771"/>
</kw>
<status status="PASS" starttime="20220708 03:41:28.674" endtime="20220708 03:41:29.771"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:29.771" endtime="20220708 03:41:29.771"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:29.771" endtime="20220708 03:41:29.771"/>
</branch>
<status status="PASS" starttime="20220708 03:41:28.674" endtime="20220708 03:41:29.771"/>
</if>
<status status="PASS" starttime="20220708 03:41:28.674" endtime="20220708 03:41:29.772"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220708 03:41:29.772" endtime="20220708 03:41:29.896"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:41:29.905" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:41:29.897" endtime="20220708 03:41:29.905"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:29.906" endtime="20220708 03:41:29.906"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:29.906" endtime="20220708 03:41:29.906"/>
</branch>
<status status="PASS" starttime="20220708 03:41:29.906" endtime="20220708 03:41:29.906"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:29.907" endtime="20220708 03:41:29.940"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:29.940" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220708 03:41:29.940" endtime="20220708 03:41:30.058"/>
</kw>
<status status="PASS" starttime="20220708 03:41:29.906" endtime="20220708 03:41:30.059"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220708 03:41:30.059" endtime="20220708 03:41:30.789"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:41:30.796" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:41:30.790" endtime="20220708 03:41:30.796"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:30.797" endtime="20220708 03:41:30.838"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:30.838" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220708 03:41:30.838" endtime="20220708 03:41:31.611"/>
</kw>
<status status="PASS" starttime="20220708 03:41:30.796" endtime="20220708 03:41:31.611"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:41:31.611" endtime="20220708 03:41:31.611"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:31.612" endtime="20220708 03:41:31.612"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:31.611" endtime="20220708 03:41:31.612"/>
</branch>
<status status="PASS" starttime="20220708 03:41:30.796" endtime="20220708 03:41:31.612"/>
</if>
<status status="PASS" starttime="20220708 03:41:30.789" endtime="20220708 03:41:31.612"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220708 03:41:31.612" endtime="20220708 03:41:31.648"/>
</kw>
<status status="PASS" starttime="20220708 03:41:31.612" endtime="20220708 03:41:31.648"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:31.649" endtime="20220708 03:41:31.703"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:31.704" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220708 03:41:31.760" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220708 03:41:31.837" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220708 03:41:31.704" endtime="20220708 03:41:31.837"/>
</kw>
<status status="PASS" starttime="20220708 03:41:31.648" endtime="20220708 03:41:31.838"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:41:31.851" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c7a7...</msg>
<status status="PASS" starttime="20220708 03:41:31.838" endtime="20220708 03:41:31.851"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:41:31.851" endtime="20220708 03:41:31.852"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:31.852" endtime="20220708 03:41:31.852"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:31.851" endtime="20220708 03:41:31.852"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:31.852" endtime="20220708 03:41:31.900"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:31.900" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220708 03:41:31.900" endtime="20220708 03:41:31.990"/>
</kw>
<status status="PASS" starttime="20220708 03:41:31.852" endtime="20220708 03:41:31.990"/>
</branch>
<status status="PASS" starttime="20220708 03:41:31.851" endtime="20220708 03:41:31.990"/>
</if>
<status status="PASS" starttime="20220708 03:41:31.838" endtime="20220708 03:41:31.990"/>
</kw>
<status status="PASS" starttime="20220708 03:41:29.896" endtime="20220708 03:41:31.990"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:31.991" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220708 03:41:31.991" endtime="20220708 03:41:31.991"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:31.991" endtime="20220708 03:41:35.146"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:35.147" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220708 03:41:35.146" endtime="20220708 03:41:35.527"/>
</kw>
<status status="PASS" starttime="20220708 03:41:31.990" endtime="20220708 03:41:35.527"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:35.529" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220708 03:41:35.528" endtime="20220708 03:41:35.529"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:35.529" endtime="20220708 03:41:36.000"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:36.001" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:36.000" endtime="20220708 03:41:36.143"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:36.144" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220708 03:41:36.143" endtime="20220708 03:41:36.144"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:36.144" endtime="20220708 03:41:36.190"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:36.190" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:36.190" endtime="20220708 03:41:36.255"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220708 03:41:36.255" endtime="20220708 03:41:36.305"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:36.305" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:36.305" endtime="20220708 03:41:36.450"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:36.450" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220708 03:41:36.450" endtime="20220708 03:41:36.451"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:36.451" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220708 03:41:36.451" endtime="20220708 03:41:36.519"/>
</kw>
<status status="PASS" starttime="20220708 03:41:35.528" endtime="20220708 03:41:36.519"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:36.520" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220708 03:41:36.520" endtime="20220708 03:41:36.520"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:36.521" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220708 03:41:36.520" endtime="20220708 03:41:36.521"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:36.521" endtime="20220708 03:41:36.592"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220708 03:41:41.593" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220708 03:41:36.592" endtime="20220708 03:41:41.593"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220708 03:41:41.594" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220708 03:41:41.593" endtime="20220708 03:41:41.911"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220708 03:41:46.912" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220708 03:41:41.912" endtime="20220708 03:41:46.912"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220708 03:41:46.913" endtime="20220708 03:41:46.929"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:46.929" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220708 03:41:46.929" endtime="20220708 03:41:47.006"/>
</kw>
<status status="PASS" starttime="20220708 03:41:36.519" endtime="20220708 03:41:47.006"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:47.007" endtime="20220708 03:41:47.078"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:47.079" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220708 03:41:47.079" endtime="20220708 03:41:47.168"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:47.168" endtime="20220708 03:41:47.216"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:47.216" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220708 03:41:47.216" endtime="20220708 03:41:47.274"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:47.274" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220708 03:41:47.274" endtime="20220708 03:41:47.360"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:47.360" endtime="20220708 03:41:47.395"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:47.396" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220708 03:41:47.675" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220708 03:41:47.676" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220708 03:41:47.396" endtime="20220708 03:41:47.707"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:47.708" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220708 03:41:47.708" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220708 03:41:47.708" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220708 03:41:47.707" endtime="20220708 03:41:47.727"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:47.728" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220708 03:41:47.728" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220708 03:41:47.728" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220708 03:41:47.728" endtime="20220708 03:41:47.744"/>
</kw>
<status status="PASS" starttime="20220708 03:41:47.006" endtime="20220708 03:41:47.744"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:47.745" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220708 03:41:47.745" endtime="20220708 03:41:47.745"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:47.745" endtime="20220708 03:41:47.782"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:47.783" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:47.782" endtime="20220708 03:41:47.870"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:47.871" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220708 03:41:47.871" endtime="20220708 03:41:47.871"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:47.871" endtime="20220708 03:41:47.919"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:47.920" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:47.919" endtime="20220708 03:41:47.962"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220708 03:41:47.963" endtime="20220708 03:41:47.992"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:47.992" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:47.992" endtime="20220708 03:41:48.055"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:48.056" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220708 03:41:48.055" endtime="20220708 03:41:48.056"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:48.056" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220708 03:41:48.056" endtime="20220708 03:41:48.117"/>
</kw>
<status status="PASS" starttime="20220708 03:41:47.744" endtime="20220708 03:41:48.117"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:48.118" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220708 03:41:48.118" endtime="20220708 03:41:48.118"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:48.118" endtime="20220708 03:41:48.170"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:48.170" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220708 03:41:48.170" endtime="20220708 03:41:48.226"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:48.227" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220708 03:41:48.226" endtime="20220708 03:41:48.227"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:48.227" endtime="20220708 03:41:48.288"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:48.288" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:48.288" endtime="20220708 03:41:48.349"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220708 03:41:48.350" endtime="20220708 03:41:48.395"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:48.396" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220708 03:41:48.396" endtime="20220708 03:41:48.463"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:48.464" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220708 03:41:48.464" endtime="20220708 03:41:48.464"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:48.464" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220708 03:41:48.464" endtime="20220708 03:41:48.540"/>
</kw>
<status status="PASS" starttime="20220708 03:41:48.117" endtime="20220708 03:41:48.540"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:48.541" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220708 03:41:48.541" endtime="20220708 03:41:48.655"/>
</kw>
<status status="PASS" starttime="20220708 03:41:48.540" endtime="20220708 03:41:48.656"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:48.656" endtime="20220708 03:41:48.798"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:48.798" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220708 03:41:48.798" endtime="20220708 03:41:48.964"/>
</kw>
<status status="PASS" starttime="20220708 03:41:48.656" endtime="20220708 03:41:48.965"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:48.966" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220708 03:41:48.965" endtime="20220708 03:41:48.966"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220708 03:41:49.015" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220708 03:41:48.966" endtime="20220708 03:41:49.015"/>
</kw>
<status status="PASS" starttime="20220708 03:41:48.965" endtime="20220708 03:41:49.015"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:49.016" endtime="20220708 03:41:49.050"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:49.051" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220708 03:41:49.050" endtime="20220708 03:41:49.170"/>
</kw>
<status status="PASS" starttime="20220708 03:41:49.015" endtime="20220708 03:41:49.170"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:49.172" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220708 03:41:49.171" endtime="20220708 03:41:49.172"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220708 03:41:49.207" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220708 03:41:49.172" endtime="20220708 03:41:49.207"/>
</kw>
<status status="PASS" starttime="20220708 03:41:49.171" endtime="20220708 03:41:49.207"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220708 03:41:49.208" endtime="20220708 03:41:49.302"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:41:28.673" endtime="20220708 03:41:49.303"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:49.306" level="INFO">${url} = boards/62c7a76867645716bc36501b</msg>
<status status="PASS" starttime="20220708 03:41:49.305" endtime="20220708 03:41:49.306"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:41:49.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:49.306" endtime="20220708 03:41:49.643"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:49.643" endtime="20220708 03:41:49.643"/>
</return>
<msg timestamp="20220708 03:41:49.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:49.305" endtime="20220708 03:41:49.643"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:49.643" endtime="20220708 03:41:49.643"/>
</return>
<status status="PASS" starttime="20220708 03:41:49.305" endtime="20220708 03:41:49.644"/>
</kw>
<status status="PASS" starttime="20220708 03:41:49.304" endtime="20220708 03:41:49.644"/>
</kw>
<status status="PASS" starttime="20220708 03:41:49.304" endtime="20220708 03:41:49.644"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 03:41:49.644" endtime="20220708 03:41:49.645"/>
</kw>
<status status="PASS" starttime="20220708 03:41:49.304" endtime="20220708 03:41:49.645"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220708 03:41:28.428" endtime="20220708 03:41:49.645"/>
</suite>
<suite id="s1-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:41:49.659" endtime="20220708 03:41:49.659"/>
</kw>
<status status="PASS" starttime="20220708 03:41:49.659" endtime="20220708 03:41:49.659"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:41:49.661" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:41:49.660" endtime="20220708 03:41:49.661"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:41:49.661" endtime="20220708 03:41:49.661"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:49.662" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:41:49.661" endtime="20220708 03:41:49.662"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:41:49.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:49.662" endtime="20220708 03:41:49.911"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:49.911" endtime="20220708 03:41:49.911"/>
</return>
<msg timestamp="20220708 03:41:49.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:49.660" endtime="20220708 03:41:49.911"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:41:49.911" endtime="20220708 03:41:49.911"/>
</return>
<msg timestamp="20220708 03:41:49.911" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:41:49.660" endtime="20220708 03:41:49.911"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:41:49.913" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7a77de0738c41b396b2f0</msg>
<status status="PASS" starttime="20220708 03:41:49.911" endtime="20220708 03:41:49.913"/>
</kw>
<status status="PASS" starttime="20220708 03:41:49.660" endtime="20220708 03:41:49.913"/>
</kw>
<status status="PASS" starttime="20220708 03:41:49.658" endtime="20220708 03:41:49.913"/>
</kw>
<test id="s1-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220708 03:41:49.915" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220708 03:41:49.914" endtime="20220708 03:41:50.865"/>
</kw>
<status status="PASS" starttime="20220708 03:41:49.914" endtime="20220708 03:41:50.865"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:50.865" endtime="20220708 03:41:50.865"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:50.865" endtime="20220708 03:41:50.865"/>
</branch>
<status status="PASS" starttime="20220708 03:41:49.914" endtime="20220708 03:41:50.865"/>
</if>
<status status="PASS" starttime="20220708 03:41:49.914" endtime="20220708 03:41:50.866"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220708 03:41:50.866" endtime="20220708 03:41:50.976"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:41:50.984" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:41:50.977" endtime="20220708 03:41:50.984"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:50.984" endtime="20220708 03:41:50.984"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:50.984" endtime="20220708 03:41:50.984"/>
</branch>
<status status="PASS" starttime="20220708 03:41:50.984" endtime="20220708 03:41:50.984"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:50.985" endtime="20220708 03:41:51.019"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:51.020" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220708 03:41:51.020" endtime="20220708 03:41:51.116"/>
</kw>
<status status="PASS" starttime="20220708 03:41:50.985" endtime="20220708 03:41:51.117"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220708 03:41:51.117" endtime="20220708 03:41:51.838"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:41:51.848" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:41:51.838" endtime="20220708 03:41:51.848"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:51.848" endtime="20220708 03:41:51.890"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:51.890" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220708 03:41:51.890" endtime="20220708 03:41:52.651"/>
</kw>
<status status="PASS" starttime="20220708 03:41:51.848" endtime="20220708 03:41:52.651"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:41:52.651" endtime="20220708 03:41:52.651"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:52.651" endtime="20220708 03:41:52.651"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:52.651" endtime="20220708 03:41:52.651"/>
</branch>
<status status="PASS" starttime="20220708 03:41:51.848" endtime="20220708 03:41:52.651"/>
</if>
<status status="PASS" starttime="20220708 03:41:51.838" endtime="20220708 03:41:52.651"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220708 03:41:52.652" endtime="20220708 03:41:52.672"/>
</kw>
<status status="PASS" starttime="20220708 03:41:52.651" endtime="20220708 03:41:52.672"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:52.673" endtime="20220708 03:41:52.715"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:52.716" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220708 03:41:52.759" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220708 03:41:52.822" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220708 03:41:52.715" endtime="20220708 03:41:52.822"/>
</kw>
<status status="PASS" starttime="20220708 03:41:52.673" endtime="20220708 03:41:52.822"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:41:52.832" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c7a7...</msg>
<status status="PASS" starttime="20220708 03:41:52.823" endtime="20220708 03:41:52.832"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:41:52.832" endtime="20220708 03:41:52.832"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:52.832" endtime="20220708 03:41:52.832"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:52.832" endtime="20220708 03:41:52.832"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:52.832" endtime="20220708 03:41:52.885"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:52.886" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220708 03:41:52.886" endtime="20220708 03:41:52.975"/>
</kw>
<status status="PASS" starttime="20220708 03:41:52.832" endtime="20220708 03:41:52.975"/>
</branch>
<status status="PASS" starttime="20220708 03:41:52.832" endtime="20220708 03:41:52.975"/>
</if>
<status status="PASS" starttime="20220708 03:41:52.822" endtime="20220708 03:41:52.975"/>
</kw>
<status status="PASS" starttime="20220708 03:41:50.976" endtime="20220708 03:41:52.976"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:52.976" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220708 03:41:52.976" endtime="20220708 03:41:52.977"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:52.977" endtime="20220708 03:41:55.935"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:55.936" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220708 03:41:55.936" endtime="20220708 03:41:56.313"/>
</kw>
<status status="PASS" starttime="20220708 03:41:52.976" endtime="20220708 03:41:56.314"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220708 03:41:56.314" endtime="20220708 03:41:56.724"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:56.725" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220708 03:41:56.724" endtime="20220708 03:41:56.873"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:56.874" endtime="20220708 03:41:56.963"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:56.964" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220708 03:41:56.964" endtime="20220708 03:41:57.068"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:41:57.069" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220708 03:41:57.357" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220708 03:41:57.357" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220708 03:41:57.068" endtime="20220708 03:41:57.389"/>
</kw>
<status status="PASS" starttime="20220708 03:41:56.314" endtime="20220708 03:41:57.389"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:41:57.390" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220708 03:41:57.390" endtime="20220708 03:41:57.390"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:57.390" endtime="20220708 03:41:57.427"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220708 03:41:57.443" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220708 03:41:57.428" endtime="20220708 03:41:57.443"/>
</kw>
<status status="PASS" starttime="20220708 03:41:57.389" endtime="20220708 03:41:57.443"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:57.445" endtime="20220708 03:41:57.524"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:57.525" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220708 03:41:57.524" endtime="20220708 03:41:57.591"/>
</kw>
<status status="PASS" starttime="20220708 03:41:57.524" endtime="20220708 03:41:57.591"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:57.591" endtime="20220708 03:41:57.656"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:57.657" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220708 03:41:57.657" endtime="20220708 03:41:57.736"/>
</kw>
<status status="PASS" starttime="20220708 03:41:57.656" endtime="20220708 03:41:57.737"/>
</kw>
<status status="PASS" starttime="20220708 03:41:57.444" endtime="20220708 03:41:57.737"/>
</kw>
<status status="PASS" starttime="20220708 03:41:57.444" endtime="20220708 03:41:57.737"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220708 03:41:57.737" endtime="20220708 03:41:57.822"/>
</kw>
<status status="PASS" starttime="20220708 03:41:57.444" endtime="20220708 03:41:57.822"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:41:49.913" endtime="20220708 03:41:57.822"/>
</test>
<test id="s1-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220708 03:41:57.826" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220708 03:41:57.826" endtime="20220708 03:41:58.828"/>
</kw>
<status status="PASS" starttime="20220708 03:41:57.826" endtime="20220708 03:41:58.828"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:58.829" endtime="20220708 03:41:58.829"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:58.829" endtime="20220708 03:41:58.829"/>
</branch>
<status status="PASS" starttime="20220708 03:41:57.826" endtime="20220708 03:41:58.829"/>
</if>
<status status="PASS" starttime="20220708 03:41:57.825" endtime="20220708 03:41:58.829"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220708 03:41:58.829" endtime="20220708 03:41:58.938"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:41:58.952" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:41:58.939" endtime="20220708 03:41:58.952"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:41:58.952" endtime="20220708 03:41:58.952"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:41:58.952" endtime="20220708 03:41:58.952"/>
</branch>
<status status="PASS" starttime="20220708 03:41:58.952" endtime="20220708 03:41:58.952"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:41:58.953" endtime="20220708 03:41:58.985"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:58.986" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220708 03:41:58.986" endtime="20220708 03:41:59.095"/>
</kw>
<status status="PASS" starttime="20220708 03:41:58.953" endtime="20220708 03:41:59.096"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220708 03:41:59.096" endtime="20220708 03:41:59.799"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:41:59.806" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:41:59.800" endtime="20220708 03:41:59.806"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:41:59.806" endtime="20220708 03:41:59.849"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:41:59.849" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220708 03:41:59.849" endtime="20220708 03:42:00.672"/>
</kw>
<status status="PASS" starttime="20220708 03:41:59.806" endtime="20220708 03:42:00.672"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:42:00.673" endtime="20220708 03:42:00.673"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:42:00.673" endtime="20220708 03:42:00.673"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:42:00.672" endtime="20220708 03:42:00.673"/>
</branch>
<status status="PASS" starttime="20220708 03:41:59.806" endtime="20220708 03:42:00.673"/>
</if>
<status status="PASS" starttime="20220708 03:41:59.800" endtime="20220708 03:42:00.673"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220708 03:42:00.674" endtime="20220708 03:42:00.686"/>
</kw>
<status status="PASS" starttime="20220708 03:42:00.673" endtime="20220708 03:42:00.686"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:42:00.687" endtime="20220708 03:42:00.728"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:00.729" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220708 03:42:00.786" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220708 03:42:00.873" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220708 03:42:00.729" endtime="20220708 03:42:00.873"/>
</kw>
<status status="PASS" starttime="20220708 03:42:00.686" endtime="20220708 03:42:00.873"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:42:00.881" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c7a7...</msg>
<status status="PASS" starttime="20220708 03:42:00.873" endtime="20220708 03:42:00.881"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:42:00.881" endtime="20220708 03:42:00.882"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:42:00.882" endtime="20220708 03:42:00.882"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:42:00.881" endtime="20220708 03:42:00.882"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:00.882" endtime="20220708 03:42:00.927"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:00.927" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220708 03:42:00.927" endtime="20220708 03:42:01.037"/>
</kw>
<status status="PASS" starttime="20220708 03:42:00.882" endtime="20220708 03:42:01.037"/>
</branch>
<status status="PASS" starttime="20220708 03:42:00.881" endtime="20220708 03:42:01.037"/>
</if>
<status status="PASS" starttime="20220708 03:42:00.873" endtime="20220708 03:42:01.038"/>
</kw>
<status status="PASS" starttime="20220708 03:41:58.938" endtime="20220708 03:42:01.038"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:42:01.039" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220708 03:42:01.038" endtime="20220708 03:42:01.039"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:42:01.039" endtime="20220708 03:42:03.975"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:03.975" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220708 03:42:03.975" endtime="20220708 03:42:04.338"/>
</kw>
<status status="PASS" starttime="20220708 03:42:01.038" endtime="20220708 03:42:04.338"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220708 03:42:04.339" endtime="20220708 03:42:04.800"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:04.801" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220708 03:42:04.801" endtime="20220708 03:42:04.974"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:04.974" endtime="20220708 03:42:05.096"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:05.096" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220708 03:42:05.096" endtime="20220708 03:42:05.274"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:42:05.275" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220708 03:42:05.558" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220708 03:42:05.558" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220708 03:42:05.274" endtime="20220708 03:42:05.591"/>
</kw>
<status status="PASS" starttime="20220708 03:42:04.338" endtime="20220708 03:42:05.591"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:42:05.592" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220708 03:42:05.591" endtime="20220708 03:42:05.592"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:05.592" endtime="20220708 03:42:05.639"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:05.639" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220708 03:42:05.639" endtime="20220708 03:42:05.715"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:05.715" endtime="20220708 03:42:05.764"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:42:05.765" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220708 03:42:06.073" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220708 03:42:06.074" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220708 03:42:05.765" endtime="20220708 03:42:06.098"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:06.098" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220708 03:42:06.098" endtime="20220708 03:42:06.246"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:42:06.246" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220708 03:42:06.247" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220708 03:42:06.247" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220708 03:42:06.246" endtime="20220708 03:42:06.268"/>
</kw>
<status status="PASS" starttime="20220708 03:42:05.591" endtime="20220708 03:42:06.268"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:42:06.269" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220708 03:42:06.269" endtime="20220708 03:42:06.269"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:42:06.269" endtime="20220708 03:42:06.304"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220708 03:42:06.323" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220708 03:42:06.304" endtime="20220708 03:42:06.323"/>
</kw>
<status status="PASS" starttime="20220708 03:42:06.268" endtime="20220708 03:42:06.323"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:06.325" endtime="20220708 03:42:06.414"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:06.415" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220708 03:42:06.415" endtime="20220708 03:42:06.513"/>
</kw>
<status status="PASS" starttime="20220708 03:42:06.414" endtime="20220708 03:42:06.514"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:06.514" endtime="20220708 03:42:06.583"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:06.584" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220708 03:42:06.584" endtime="20220708 03:42:06.692"/>
</kw>
<status status="PASS" starttime="20220708 03:42:06.583" endtime="20220708 03:42:06.692"/>
</kw>
<status status="PASS" starttime="20220708 03:42:06.324" endtime="20220708 03:42:06.692"/>
</kw>
<status status="PASS" starttime="20220708 03:42:06.324" endtime="20220708 03:42:06.692"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220708 03:42:06.692" endtime="20220708 03:42:06.807"/>
</kw>
<status status="PASS" starttime="20220708 03:42:06.324" endtime="20220708 03:42:06.808"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:41:57.824" endtime="20220708 03:42:06.808"/>
</test>
<test id="s1-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220708 03:42:06.812" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220708 03:42:06.811" endtime="20220708 03:42:07.789"/>
</kw>
<status status="PASS" starttime="20220708 03:42:06.811" endtime="20220708 03:42:07.789"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:42:07.789" endtime="20220708 03:42:07.789"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:42:07.789" endtime="20220708 03:42:07.789"/>
</branch>
<status status="PASS" starttime="20220708 03:42:06.811" endtime="20220708 03:42:07.789"/>
</if>
<status status="PASS" starttime="20220708 03:42:06.811" endtime="20220708 03:42:07.789"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220708 03:42:07.790" endtime="20220708 03:42:07.906"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:42:07.919" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:42:07.907" endtime="20220708 03:42:07.919"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:42:07.920" endtime="20220708 03:42:07.920"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:42:07.920" endtime="20220708 03:42:07.920"/>
</branch>
<status status="PASS" starttime="20220708 03:42:07.920" endtime="20220708 03:42:07.920"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:42:07.920" endtime="20220708 03:42:07.956"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:07.957" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220708 03:42:07.957" endtime="20220708 03:42:08.053"/>
</kw>
<status status="PASS" starttime="20220708 03:42:07.920" endtime="20220708 03:42:08.053"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220708 03:42:08.053" endtime="20220708 03:42:08.767"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:42:08.779" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:42:08.768" endtime="20220708 03:42:08.780"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:08.780" endtime="20220708 03:42:08.828"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:08.829" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220708 03:42:08.828" endtime="20220708 03:42:10.123"/>
</kw>
<status status="PASS" starttime="20220708 03:42:08.780" endtime="20220708 03:42:10.123"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:42:10.124" endtime="20220708 03:42:10.124"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:42:10.124" endtime="20220708 03:42:10.124"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:42:10.124" endtime="20220708 03:42:10.124"/>
</branch>
<status status="PASS" starttime="20220708 03:42:08.780" endtime="20220708 03:42:10.124"/>
</if>
<status status="PASS" starttime="20220708 03:42:08.767" endtime="20220708 03:42:10.124"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220708 03:42:10.125" endtime="20220708 03:42:10.145"/>
</kw>
<status status="PASS" starttime="20220708 03:42:10.124" endtime="20220708 03:42:10.145"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:42:10.146" endtime="20220708 03:42:10.181"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:10.182" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220708 03:42:10.217" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220708 03:42:10.281" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220708 03:42:10.181" endtime="20220708 03:42:10.281"/>
</kw>
<status status="PASS" starttime="20220708 03:42:10.145" endtime="20220708 03:42:10.281"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:42:10.290" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c7a7...</msg>
<status status="PASS" starttime="20220708 03:42:10.282" endtime="20220708 03:42:10.290"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:42:10.291" endtime="20220708 03:42:10.291"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:42:10.291" endtime="20220708 03:42:10.291"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:42:10.291" endtime="20220708 03:42:10.291"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:10.291" endtime="20220708 03:42:10.327"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:10.327" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220708 03:42:10.327" endtime="20220708 03:42:10.417"/>
</kw>
<status status="PASS" starttime="20220708 03:42:10.291" endtime="20220708 03:42:10.417"/>
</branch>
<status status="PASS" starttime="20220708 03:42:10.290" endtime="20220708 03:42:10.417"/>
</if>
<status status="PASS" starttime="20220708 03:42:10.281" endtime="20220708 03:42:10.418"/>
</kw>
<status status="PASS" starttime="20220708 03:42:07.906" endtime="20220708 03:42:10.418"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:42:10.419" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220708 03:42:10.418" endtime="20220708 03:42:10.419"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:42:10.419" endtime="20220708 03:42:13.377"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:13.377" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220708 03:42:13.377" endtime="20220708 03:42:13.897"/>
</kw>
<status status="PASS" starttime="20220708 03:42:10.418" endtime="20220708 03:42:13.897"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220708 03:42:13.898" endtime="20220708 03:42:14.308"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:14.308" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220708 03:42:14.308" endtime="20220708 03:42:14.469"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:14.470" endtime="20220708 03:42:14.524"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:14.524" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220708 03:42:14.524" endtime="20220708 03:42:14.624"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220708 03:42:14.625" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220708 03:42:14.908" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220708 03:42:14.908" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220708 03:42:14.624" endtime="20220708 03:42:14.936"/>
</kw>
<status status="PASS" starttime="20220708 03:42:13.898" endtime="20220708 03:42:14.937"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:14.938" endtime="20220708 03:42:14.989"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:14.990" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220708 03:42:14.990" endtime="20220708 03:42:15.073"/>
</kw>
<status status="PASS" starttime="20220708 03:42:14.990" endtime="20220708 03:42:15.073"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:15.073" endtime="20220708 03:42:15.155"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:15.156" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220708 03:42:15.155" endtime="20220708 03:42:15.232"/>
</kw>
<status status="PASS" starttime="20220708 03:42:15.155" endtime="20220708 03:42:15.233"/>
</kw>
<status status="PASS" starttime="20220708 03:42:14.937" endtime="20220708 03:42:15.233"/>
</kw>
<status status="PASS" starttime="20220708 03:42:14.937" endtime="20220708 03:42:15.233"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:15.233" endtime="20220708 03:42:15.280"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:15.281" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220708 03:42:15.280" endtime="20220708 03:42:15.371"/>
</kw>
<status status="PASS" starttime="20220708 03:42:15.233" endtime="20220708 03:42:15.371"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:15.372" endtime="20220708 03:42:15.432"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:15.433" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220708 03:42:15.433" endtime="20220708 03:42:15.572"/>
</kw>
<status status="PASS" starttime="20220708 03:42:15.432" endtime="20220708 03:42:15.572"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:15.573" endtime="20220708 03:42:15.624"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:15.625" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220708 03:42:15.625" endtime="20220708 03:42:15.708"/>
</kw>
<status status="PASS" starttime="20220708 03:42:15.624" endtime="20220708 03:42:15.708"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:15.708" endtime="20220708 03:42:15.769"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:15.770" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220708 03:42:15.769" endtime="20220708 03:42:15.826"/>
</kw>
<status status="PASS" starttime="20220708 03:42:15.769" endtime="20220708 03:42:15.826"/>
</kw>
<status status="PASS" starttime="20220708 03:42:15.372" endtime="20220708 03:42:15.827"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:42:15.828" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220708 03:42:15.827" endtime="20220708 03:42:15.828"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:15.828" endtime="20220708 03:42:16.087"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220708 03:42:16.098" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220708 03:42:16.087" endtime="20220708 03:42:16.098"/>
</kw>
<status status="PASS" starttime="20220708 03:42:15.827" endtime="20220708 03:42:16.098"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:16.099" endtime="20220708 03:42:16.138"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:16.139" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220708 03:42:16.138" endtime="20220708 03:42:16.203"/>
</kw>
<status status="PASS" starttime="20220708 03:42:16.098" endtime="20220708 03:42:16.203"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220708 03:42:16.204" endtime="20220708 03:42:16.293"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:42:06.810" endtime="20220708 03:42:16.293"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:42:16.298" level="INFO">${url} = boards/62c7a77de0738c41b396b2f0</msg>
<status status="PASS" starttime="20220708 03:42:16.298" endtime="20220708 03:42:16.298"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:42:16.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:42:16.298" endtime="20220708 03:42:16.603"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:42:16.603" endtime="20220708 03:42:16.603"/>
</return>
<msg timestamp="20220708 03:42:16.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:42:16.297" endtime="20220708 03:42:16.603"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:42:16.603" endtime="20220708 03:42:16.603"/>
</return>
<status status="PASS" starttime="20220708 03:42:16.297" endtime="20220708 03:42:16.604"/>
</kw>
<status status="PASS" starttime="20220708 03:42:16.296" endtime="20220708 03:42:16.604"/>
</kw>
<status status="PASS" starttime="20220708 03:42:16.296" endtime="20220708 03:42:16.604"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 03:42:16.604" endtime="20220708 03:42:16.605"/>
</kw>
<status status="PASS" starttime="20220708 03:42:16.296" endtime="20220708 03:42:16.605"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220708 03:41:49.647" endtime="20220708 03:42:16.605"/>
</suite>
<suite id="s1-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220708 03:42:16.615" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220708 03:42:16.615" endtime="20220708 03:42:17.595"/>
</kw>
<status status="PASS" starttime="20220708 03:42:16.615" endtime="20220708 03:42:17.596"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220708 03:42:17.596" endtime="20220708 03:42:17.596"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:42:17.596" endtime="20220708 03:42:17.596"/>
</branch>
<status status="PASS" starttime="20220708 03:42:16.615" endtime="20220708 03:42:17.596"/>
</if>
<status status="PASS" starttime="20220708 03:42:16.614" endtime="20220708 03:42:17.596"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:42:17.597" endtime="20220708 03:42:17.650"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:17.650" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220708 03:42:17.650" endtime="20220708 03:42:17.745"/>
</kw>
<status status="PASS" starttime="20220708 03:42:17.596" endtime="20220708 03:42:17.746"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220708 03:42:17.746" endtime="20220708 03:42:18.468"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:42:18.475" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220708 03:42:18.468" endtime="20220708 03:42:18.475"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:18.475" endtime="20220708 03:42:18.516"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:18.517" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220708 03:42:18.516" endtime="20220708 03:42:19.259"/>
</kw>
<status status="PASS" starttime="20220708 03:42:18.475" endtime="20220708 03:42:19.259"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:42:19.259" endtime="20220708 03:42:19.260"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:42:19.260" endtime="20220708 03:42:19.260"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:42:19.259" endtime="20220708 03:42:19.260"/>
</branch>
<status status="PASS" starttime="20220708 03:42:18.475" endtime="20220708 03:42:19.260"/>
</if>
<status status="PASS" starttime="20220708 03:42:18.468" endtime="20220708 03:42:19.260"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220708 03:42:19.260" endtime="20220708 03:42:19.278"/>
</kw>
<status status="PASS" starttime="20220708 03:42:19.260" endtime="20220708 03:42:19.278"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:42:19.278" endtime="20220708 03:42:19.343"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:19.343" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220708 03:42:19.419" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220708 03:42:19.487" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220708 03:42:19.343" endtime="20220708 03:42:19.487"/>
</kw>
<status status="PASS" starttime="20220708 03:42:19.278" endtime="20220708 03:42:19.487"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220708 03:42:19.496" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c7a7...</msg>
<status status="PASS" starttime="20220708 03:42:19.488" endtime="20220708 03:42:19.496"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220708 03:42:19.496" endtime="20220708 03:42:19.496"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220708 03:42:19.496" endtime="20220708 03:42:19.496"/>
</kw>
<status status="NOT RUN" starttime="20220708 03:42:19.496" endtime="20220708 03:42:19.496"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220708 03:42:19.496" endtime="20220708 03:42:19.539"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220708 03:42:19.539" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220708 03:42:19.539" endtime="20220708 03:42:19.619"/>
</kw>
<status status="PASS" starttime="20220708 03:42:19.496" endtime="20220708 03:42:19.619"/>
</branch>
<status status="PASS" starttime="20220708 03:42:19.496" endtime="20220708 03:42:19.619"/>
</if>
<status status="PASS" starttime="20220708 03:42:19.487" endtime="20220708 03:42:19.619"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220708 03:42:19.620" endtime="20220708 03:42:22.551"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220708 03:42:22.552" endtime="20220708 03:42:22.591"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220708 03:42:22.592" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220708 03:42:22.591" endtime="20220708 03:42:22.613"/>
</kw>
<status status="PASS" starttime="20220708 03:42:19.619" endtime="20220708 03:42:22.613"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220708 03:42:22.614" endtime="20220708 03:42:22.719"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:42:16.614" endtime="20220708 03:42:22.719"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220708 03:42:16.608" endtime="20220708 03:42:22.721"/>
</suite>
<status status="PASS" starttime="20220708 03:40:21.611" endtime="20220708 03:42:22.725"/>
</suite>
<status status="PASS" starttime="20220708 03:40:21.594" endtime="20220708 03:42:22.730"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.update.description</stat>
<stat pass="1" fail="0" skip="0">board.update.name</stat>
<stat pass="1" fail="0" skip="0">card.comment</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.drag</stat>
<stat pass="1" fail="0" skip="0">card.move</stat>
<stat pass="1" fail="0" skip="0">card.title_board</stat>
<stat pass="15" fail="0" skip="0">gui</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="2" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="4" fail="0" skip="0">regression</stat>
<stat pass="11" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="15" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1" name="Gui">Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="Trello Gui Board">Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s2" name="Trello Gui Cards">Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Trello Gui Labels">Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Gui Lists">Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Trello Gui Login">Trello.Gui.Trello Gui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
