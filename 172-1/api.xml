<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220708 03:39:31.536" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:39:31.658" endtime="20220708 03:39:31.659"/>
</kw>
<status status="PASS" starttime="20220708 03:39:31.657" endtime="20220708 03:39:31.659"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:31.661" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:31.661" endtime="20220708 03:39:31.661"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:31.661" endtime="20220708 03:39:31.661"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:31.662" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:39:31.661" endtime="20220708 03:39:31.662"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:31.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:31.662" endtime="20220708 03:39:31.891"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:31.891" endtime="20220708 03:39:31.891"/>
</return>
<msg timestamp="20220708 03:39:31.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:31.660" endtime="20220708 03:39:31.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:31.892" endtime="20220708 03:39:31.892"/>
</return>
<msg timestamp="20220708 03:39:31.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:31.660" endtime="20220708 03:39:31.892"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:31.893" endtime="20220708 03:39:31.897"/>
</kw>
<status status="PASS" starttime="20220708 03:39:31.892" endtime="20220708 03:39:31.897"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:31.899" level="INFO">${url} = boards/62c7a6f3ea952246bf98dbb5</msg>
<status status="PASS" starttime="20220708 03:39:31.899" endtime="20220708 03:39:31.899"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:32.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:31.899" endtime="20220708 03:39:32.236"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:32.236" endtime="20220708 03:39:32.236"/>
</return>
<msg timestamp="20220708 03:39:32.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:31.898" endtime="20220708 03:39:32.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:32.237" endtime="20220708 03:39:32.237"/>
</return>
<status status="PASS" starttime="20220708 03:39:31.898" endtime="20220708 03:39:32.237"/>
</kw>
<status status="PASS" starttime="20220708 03:39:31.897" endtime="20220708 03:39:32.237"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:39:31.659" endtime="20220708 03:39:32.237"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:32.240" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:32.240" endtime="20220708 03:39:32.240"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:32.240" endtime="20220708 03:39:32.240"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:32.241" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:39:32.240" endtime="20220708 03:39:32.241"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:32.429" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:32.241" endtime="20220708 03:39:32.429"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:32.429" endtime="20220708 03:39:32.429"/>
</return>
<msg timestamp="20220708 03:39:32.430" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:32.239" endtime="20220708 03:39:32.430"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:32.430" endtime="20220708 03:39:32.430"/>
</return>
<msg timestamp="20220708 03:39:32.430" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:32.239" endtime="20220708 03:39:32.430"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:32.430" endtime="20220708 03:39:32.434"/>
</kw>
<status status="PASS" starttime="20220708 03:39:32.430" endtime="20220708 03:39:32.434"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:32.436" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:32.436" endtime="20220708 03:39:32.436"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:32.436" endtime="20220708 03:39:32.436"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:32.437" level="INFO">${url} = boards/62c7a6f4632724098880b844</msg>
<status status="PASS" starttime="20220708 03:39:32.436" endtime="20220708 03:39:32.437"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:32.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:32.437" endtime="20220708 03:39:32.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:32.547" endtime="20220708 03:39:32.547"/>
</return>
<msg timestamp="20220708 03:39:32.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:32.435" endtime="20220708 03:39:32.548"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:32.548" endtime="20220708 03:39:32.548"/>
</return>
<status status="PASS" starttime="20220708 03:39:32.435" endtime="20220708 03:39:32.548"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:32.550" level="INFO">${url} = boards/62c7a6f4632724098880b844</msg>
<status status="PASS" starttime="20220708 03:39:32.550" endtime="20220708 03:39:32.550"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:32.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:32.550" endtime="20220708 03:39:32.593"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:32.593" endtime="20220708 03:39:32.593"/>
</return>
<msg timestamp="20220708 03:39:32.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:32.549" endtime="20220708 03:39:32.593"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:32.593" endtime="20220708 03:39:32.593"/>
</return>
<msg timestamp="20220708 03:39:32.594" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:32.548" endtime="20220708 03:39:32.594"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:32.594" endtime="20220708 03:39:32.598"/>
</kw>
<status status="PASS" starttime="20220708 03:39:32.594" endtime="20220708 03:39:32.598"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:32.598" endtime="20220708 03:39:32.598"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:32.601" level="INFO">${url} = boards/62c7a6f4632724098880b844</msg>
<status status="PASS" starttime="20220708 03:39:32.600" endtime="20220708 03:39:32.601"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:32.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:32.601" endtime="20220708 03:39:32.920"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:32.920" endtime="20220708 03:39:32.920"/>
</return>
<msg timestamp="20220708 03:39:32.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:32.600" endtime="20220708 03:39:32.920"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:32.920" endtime="20220708 03:39:32.920"/>
</return>
<status status="PASS" starttime="20220708 03:39:32.599" endtime="20220708 03:39:32.920"/>
</kw>
<status status="PASS" starttime="20220708 03:39:32.599" endtime="20220708 03:39:32.920"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:39:32.238" endtime="20220708 03:39:32.921"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:32.923" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:32.923" endtime="20220708 03:39:32.923"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:32.924" endtime="20220708 03:39:32.924"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:32.925" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:39:32.924" endtime="20220708 03:39:32.925"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:33.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:32.925" endtime="20220708 03:39:33.117"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:33.118" endtime="20220708 03:39:33.118"/>
</return>
<msg timestamp="20220708 03:39:33.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:32.923" endtime="20220708 03:39:33.118"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:33.118" endtime="20220708 03:39:33.118"/>
</return>
<msg timestamp="20220708 03:39:33.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:32.922" endtime="20220708 03:39:33.118"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:33.120" level="INFO">${url} = boards/62c7a6f42337e66eb91c1acd</msg>
<status status="PASS" starttime="20220708 03:39:33.120" endtime="20220708 03:39:33.120"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:33.407" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:33.120" endtime="20220708 03:39:33.407"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:33.407" endtime="20220708 03:39:33.407"/>
</return>
<msg timestamp="20220708 03:39:33.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:33.119" endtime="20220708 03:39:33.408"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:33.408" endtime="20220708 03:39:33.408"/>
</return>
<status status="PASS" starttime="20220708 03:39:33.118" endtime="20220708 03:39:33.408"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:33.410" level="INFO">${url} = boards/62c7a6f42337e66eb91c1acd</msg>
<status status="PASS" starttime="20220708 03:39:33.410" endtime="20220708 03:39:33.410"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:33.448" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:39:33.410" endtime="20220708 03:39:33.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:33.448" endtime="20220708 03:39:33.448"/>
</return>
<msg timestamp="20220708 03:39:33.448" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:39:33.409" endtime="20220708 03:39:33.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:33.448" endtime="20220708 03:39:33.448"/>
</return>
<status status="PASS" starttime="20220708 03:39:33.408" endtime="20220708 03:39:33.448"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:39:32.921" endtime="20220708 03:39:33.448"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:33.450" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:33.450" endtime="20220708 03:39:33.450"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:33.451" endtime="20220708 03:39:33.451"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:33.452" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:39:33.451" endtime="20220708 03:39:33.452"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:33.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:33.452" endtime="20220708 03:39:33.633"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:33.633" endtime="20220708 03:39:33.634"/>
</return>
<msg timestamp="20220708 03:39:33.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:33.450" endtime="20220708 03:39:33.634"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:33.634" endtime="20220708 03:39:33.634"/>
</return>
<msg timestamp="20220708 03:39:33.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:33.449" endtime="20220708 03:39:33.634"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:33.635" endtime="20220708 03:39:33.639"/>
</kw>
<status status="PASS" starttime="20220708 03:39:33.634" endtime="20220708 03:39:33.639"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:33.641" level="INFO">${url} = boards/62c7a6f547933d0bce76070b</msg>
<status status="PASS" starttime="20220708 03:39:33.640" endtime="20220708 03:39:33.641"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:33.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:33.641" endtime="20220708 03:39:33.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:33.683" endtime="20220708 03:39:33.683"/>
</return>
<msg timestamp="20220708 03:39:33.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:33.640" endtime="20220708 03:39:33.684"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:33.684" endtime="20220708 03:39:33.684"/>
</return>
<msg timestamp="20220708 03:39:33.684" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:33.639" endtime="20220708 03:39:33.684"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:33.684" endtime="20220708 03:39:33.688"/>
</kw>
<status status="PASS" starttime="20220708 03:39:33.684" endtime="20220708 03:39:33.688"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:33.688" endtime="20220708 03:39:33.689"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:33.691" level="INFO">${url} = boards/62c7a6f547933d0bce76070b</msg>
<status status="PASS" starttime="20220708 03:39:33.691" endtime="20220708 03:39:33.691"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:34.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:33.691" endtime="20220708 03:39:34.016"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.016" endtime="20220708 03:39:34.017"/>
</return>
<msg timestamp="20220708 03:39:34.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:33.690" endtime="20220708 03:39:34.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.017" endtime="20220708 03:39:34.017"/>
</return>
<status status="PASS" starttime="20220708 03:39:33.690" endtime="20220708 03:39:34.017"/>
</kw>
<status status="PASS" starttime="20220708 03:39:33.689" endtime="20220708 03:39:34.017"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:39:33.449" endtime="20220708 03:39:34.017"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:34.020" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:34.020" endtime="20220708 03:39:34.020"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:34.020" endtime="20220708 03:39:34.021"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:34.022" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:39:34.021" endtime="20220708 03:39:34.022"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:34.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.022" endtime="20220708 03:39:34.202"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.202" endtime="20220708 03:39:34.202"/>
</return>
<msg timestamp="20220708 03:39:34.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.020" endtime="20220708 03:39:34.203"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.203" endtime="20220708 03:39:34.203"/>
</return>
<msg timestamp="20220708 03:39:34.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.019" endtime="20220708 03:39:34.203"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:34.204" endtime="20220708 03:39:34.208"/>
</kw>
<status status="PASS" starttime="20220708 03:39:34.203" endtime="20220708 03:39:34.208"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:34.209" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:34.209" endtime="20220708 03:39:34.209"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:34.209" endtime="20220708 03:39:34.210"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:34.210" level="INFO">${url} = boards/62c7a6f6d53a1e6e2fe1963c</msg>
<status status="PASS" starttime="20220708 03:39:34.210" endtime="20220708 03:39:34.210"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:34.294" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.210" endtime="20220708 03:39:34.294"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.294" endtime="20220708 03:39:34.294"/>
</return>
<msg timestamp="20220708 03:39:34.295" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.209" endtime="20220708 03:39:34.295"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.295" endtime="20220708 03:39:34.295"/>
</return>
<status status="PASS" starttime="20220708 03:39:34.208" endtime="20220708 03:39:34.295"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:34.297" level="INFO">${url} = boards/62c7a6f6d53a1e6e2fe1963c</msg>
<status status="PASS" starttime="20220708 03:39:34.296" endtime="20220708 03:39:34.297"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:34.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.297" endtime="20220708 03:39:34.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.340" endtime="20220708 03:39:34.340"/>
</return>
<msg timestamp="20220708 03:39:34.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.296" endtime="20220708 03:39:34.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.340" endtime="20220708 03:39:34.340"/>
</return>
<msg timestamp="20220708 03:39:34.340" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.295" endtime="20220708 03:39:34.340"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:34.341" endtime="20220708 03:39:34.341"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:34.343" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:34.343" endtime="20220708 03:39:34.343"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:34.343" endtime="20220708 03:39:34.344"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:34.344" level="INFO">${url} = boards/62c7a6f6d53a1e6e2fe1963c</msg>
<status status="PASS" starttime="20220708 03:39:34.344" endtime="20220708 03:39:34.344"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:34.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.344" endtime="20220708 03:39:34.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.447" endtime="20220708 03:39:34.447"/>
</return>
<msg timestamp="20220708 03:39:34.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.342" endtime="20220708 03:39:34.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.447" endtime="20220708 03:39:34.447"/>
</return>
<status status="PASS" starttime="20220708 03:39:34.341" endtime="20220708 03:39:34.447"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:34.449" level="INFO">${url} = boards/62c7a6f6d53a1e6e2fe1963c</msg>
<status status="PASS" starttime="20220708 03:39:34.449" endtime="20220708 03:39:34.449"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:34.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.449" endtime="20220708 03:39:34.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.499" endtime="20220708 03:39:34.499"/>
</return>
<msg timestamp="20220708 03:39:34.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.448" endtime="20220708 03:39:34.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.499" endtime="20220708 03:39:34.499"/>
</return>
<msg timestamp="20220708 03:39:34.500" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.447" endtime="20220708 03:39:34.500"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:34.500" endtime="20220708 03:39:34.501"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:34.503" level="INFO">${url} = boards/62c7a6f6d53a1e6e2fe1963c</msg>
<status status="PASS" starttime="20220708 03:39:34.502" endtime="20220708 03:39:34.503"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:34.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.503" endtime="20220708 03:39:34.828"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.828" endtime="20220708 03:39:34.828"/>
</return>
<msg timestamp="20220708 03:39:34.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.502" endtime="20220708 03:39:34.829"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:34.829" endtime="20220708 03:39:34.829"/>
</return>
<status status="PASS" starttime="20220708 03:39:34.501" endtime="20220708 03:39:34.829"/>
</kw>
<status status="PASS" starttime="20220708 03:39:34.501" endtime="20220708 03:39:34.829"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:39:34.018" endtime="20220708 03:39:34.829"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220708 03:39:34.830" endtime="20220708 03:39:34.831"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220708 03:39:31.555" endtime="20220708 03:39:34.832"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:39:34.843" endtime="20220708 03:39:34.843"/>
</kw>
<status status="PASS" starttime="20220708 03:39:34.843" endtime="20220708 03:39:34.844"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:34.845" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:34.844" endtime="20220708 03:39:34.845"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:34.845" endtime="20220708 03:39:34.845"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:34.845" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:39:34.845" endtime="20220708 03:39:34.846"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:35.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.846" endtime="20220708 03:39:35.060"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.060" endtime="20220708 03:39:35.060"/>
</return>
<msg timestamp="20220708 03:39:35.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.844" endtime="20220708 03:39:35.060"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.060" endtime="20220708 03:39:35.060"/>
</return>
<msg timestamp="20220708 03:39:35.061" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:34.844" endtime="20220708 03:39:35.061"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:39:35.061" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7a6f61939087a2ad92cdc</msg>
<status status="PASS" starttime="20220708 03:39:35.061" endtime="20220708 03:39:35.062"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:35.063" level="INFO">${url} = boards/62c7a6f61939087a2ad92cdc/lists/</msg>
<status status="PASS" starttime="20220708 03:39:35.062" endtime="20220708 03:39:35.063"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:35.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.063" endtime="20220708 03:39:35.105"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.105" endtime="20220708 03:39:35.105"/>
</return>
<msg timestamp="20220708 03:39:35.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.062" endtime="20220708 03:39:35.105"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.105" endtime="20220708 03:39:35.105"/>
</return>
<msg timestamp="20220708 03:39:35.105" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.062" endtime="20220708 03:39:35.105"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:39:35.106" level="INFO">${TEST_SUITE_LIST_ID} = 62c7a6f61939087a2ad92ce3</msg>
<status status="PASS" starttime="20220708 03:39:35.106" endtime="20220708 03:39:35.106"/>
</kw>
<status status="PASS" starttime="20220708 03:39:34.844" endtime="20220708 03:39:35.107"/>
</kw>
<status status="PASS" starttime="20220708 03:39:34.843" endtime="20220708 03:39:35.107"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:35.109" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:35.108" endtime="20220708 03:39:35.109"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:35.109" endtime="20220708 03:39:35.109"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:35.110" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 03:39:35.109" endtime="20220708 03:39:35.110"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:35.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.110" endtime="20220708 03:39:35.260"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.260" endtime="20220708 03:39:35.260"/>
</return>
<msg timestamp="20220708 03:39:35.261" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.108" endtime="20220708 03:39:35.261"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.261" endtime="20220708 03:39:35.261"/>
</return>
<msg timestamp="20220708 03:39:35.261" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.107" endtime="20220708 03:39:35.261"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:35.261" endtime="20220708 03:39:35.266"/>
</kw>
<status status="PASS" starttime="20220708 03:39:35.261" endtime="20220708 03:39:35.267"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:35.267" endtime="20220708 03:39:35.267"/>
</return>
<msg timestamp="20220708 03:39:35.268" level="INFO">${CARD_ID} = 62c7a6f78688c563bc25e6f8</msg>
<status status="PASS" starttime="20220708 03:39:35.267" endtime="20220708 03:39:35.268"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:35.269" level="INFO">${url} = cards/62c7a6f78688c563bc25e6f8</msg>
<status status="PASS" starttime="20220708 03:39:35.268" endtime="20220708 03:39:35.269"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:35.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.269" endtime="20220708 03:39:35.322"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.322" endtime="20220708 03:39:35.322"/>
</return>
<msg timestamp="20220708 03:39:35.323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.268" endtime="20220708 03:39:35.323"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.323" endtime="20220708 03:39:35.323"/>
</return>
<msg timestamp="20220708 03:39:35.323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.268" endtime="20220708 03:39:35.323"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:35.323" endtime="20220708 03:39:35.323"/>
</return>
<msg timestamp="20220708 03:39:35.324" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220708 03:39:35.323" endtime="20220708 03:39:35.324"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:35.324" endtime="20220708 03:39:35.325"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:35.326" level="INFO">${url} = cards/62c7a6f78688c563bc25e6f8</msg>
<status status="PASS" starttime="20220708 03:39:35.326" endtime="20220708 03:39:35.326"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:35.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.326" endtime="20220708 03:39:35.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.488" endtime="20220708 03:39:35.488"/>
</return>
<msg timestamp="20220708 03:39:35.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.325" endtime="20220708 03:39:35.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.488" endtime="20220708 03:39:35.488"/>
</return>
<status status="PASS" starttime="20220708 03:39:35.325" endtime="20220708 03:39:35.488"/>
</kw>
<status status="PASS" starttime="20220708 03:39:35.325" endtime="20220708 03:39:35.488"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:39:35.107" endtime="20220708 03:39:35.488"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:35.491" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:35.491" endtime="20220708 03:39:35.491"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:35.491" endtime="20220708 03:39:35.491"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:35.492" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 03:39:35.492" endtime="20220708 03:39:35.492"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:35.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.492" endtime="20220708 03:39:35.651"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.651" endtime="20220708 03:39:35.651"/>
</return>
<msg timestamp="20220708 03:39:35.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.490" endtime="20220708 03:39:35.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.652" endtime="20220708 03:39:35.652"/>
</return>
<msg timestamp="20220708 03:39:35.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.490" endtime="20220708 03:39:35.652"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:35.652" endtime="20220708 03:39:35.653"/>
</return>
<msg timestamp="20220708 03:39:35.653" level="INFO">${CARD_ID} = 62c7a6f77e39192a188cffa7</msg>
<status status="PASS" starttime="20220708 03:39:35.652" endtime="20220708 03:39:35.653"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:35.656" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:35.655" endtime="20220708 03:39:35.656"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:35.656" endtime="20220708 03:39:35.656"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:35.656" level="INFO">${url} = cards/62c7a6f77e39192a188cffa7</msg>
<status status="PASS" starttime="20220708 03:39:35.656" endtime="20220708 03:39:35.656"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:35.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.656" endtime="20220708 03:39:35.784"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.784" endtime="20220708 03:39:35.784"/>
</return>
<msg timestamp="20220708 03:39:35.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.655" endtime="20220708 03:39:35.784"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.784" endtime="20220708 03:39:35.784"/>
</return>
<msg timestamp="20220708 03:39:35.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.654" endtime="20220708 03:39:35.784"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.784" endtime="20220708 03:39:35.784"/>
</return>
<status status="PASS" starttime="20220708 03:39:35.653" endtime="20220708 03:39:35.784"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:35.786" level="INFO">${url} = cards/62c7a6f77e39192a188cffa7</msg>
<status status="PASS" starttime="20220708 03:39:35.786" endtime="20220708 03:39:35.786"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:35.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.786" endtime="20220708 03:39:35.844"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.844" endtime="20220708 03:39:35.844"/>
</return>
<msg timestamp="20220708 03:39:35.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.785" endtime="20220708 03:39:35.844"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.844" endtime="20220708 03:39:35.844"/>
</return>
<msg timestamp="20220708 03:39:35.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.785" endtime="20220708 03:39:35.844"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:35.845" endtime="20220708 03:39:35.845"/>
</return>
<msg timestamp="20220708 03:39:35.846" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220708 03:39:35.844" endtime="20220708 03:39:35.846"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220708 03:39:35.846" endtime="20220708 03:39:35.846"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:35.848" level="INFO">${url} = cards/62c7a6f77e39192a188cffa7</msg>
<status status="PASS" starttime="20220708 03:39:35.847" endtime="20220708 03:39:35.848"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:35.982" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.848" endtime="20220708 03:39:35.983"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.983" endtime="20220708 03:39:35.983"/>
</return>
<msg timestamp="20220708 03:39:35.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.847" endtime="20220708 03:39:35.983"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:35.983" endtime="20220708 03:39:35.983"/>
</return>
<status status="PASS" starttime="20220708 03:39:35.846" endtime="20220708 03:39:35.983"/>
</kw>
<status status="PASS" starttime="20220708 03:39:35.846" endtime="20220708 03:39:35.983"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:39:35.489" endtime="20220708 03:39:35.983"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:35.986" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:35.986" endtime="20220708 03:39:35.986"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:35.986" endtime="20220708 03:39:35.986"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:35.987" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 03:39:35.987" endtime="20220708 03:39:35.987"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:36.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.987" endtime="20220708 03:39:36.140"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.140" endtime="20220708 03:39:36.140"/>
</return>
<msg timestamp="20220708 03:39:36.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.985" endtime="20220708 03:39:36.140"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.140" endtime="20220708 03:39:36.140"/>
</return>
<msg timestamp="20220708 03:39:36.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:35.984" endtime="20220708 03:39:36.140"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:36.141" endtime="20220708 03:39:36.141"/>
</return>
<msg timestamp="20220708 03:39:36.142" level="INFO">${CARD_ID} = 62c7a6f86e374777c38bf814</msg>
<status status="PASS" starttime="20220708 03:39:36.141" endtime="20220708 03:39:36.142"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:36.143" level="INFO">${url} = cards/62c7a6f86e374777c38bf814</msg>
<status status="PASS" starttime="20220708 03:39:36.143" endtime="20220708 03:39:36.143"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:36.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.143" endtime="20220708 03:39:36.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.298" endtime="20220708 03:39:36.298"/>
</return>
<msg timestamp="20220708 03:39:36.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.142" endtime="20220708 03:39:36.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.298" endtime="20220708 03:39:36.298"/>
</return>
<msg timestamp="20220708 03:39:36.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.142" endtime="20220708 03:39:36.298"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:36.299" endtime="20220708 03:39:36.301"/>
</kw>
<status status="PASS" starttime="20220708 03:39:36.298" endtime="20220708 03:39:36.301"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:36.302" level="INFO">${url} = cards/62c7a6f86e374777c38bf814</msg>
<status status="PASS" starttime="20220708 03:39:36.302" endtime="20220708 03:39:36.302"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:36.340" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:39:36.303" endtime="20220708 03:39:36.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.340" endtime="20220708 03:39:36.340"/>
</return>
<msg timestamp="20220708 03:39:36.340" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:39:36.302" endtime="20220708 03:39:36.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.340" endtime="20220708 03:39:36.340"/>
</return>
<status status="PASS" starttime="20220708 03:39:36.301" endtime="20220708 03:39:36.340"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:39:35.984" endtime="20220708 03:39:36.340"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:36.343" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:36.343" endtime="20220708 03:39:36.343"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:36.343" endtime="20220708 03:39:36.344"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:36.344" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 03:39:36.344" endtime="20220708 03:39:36.344"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:36.470" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.344" endtime="20220708 03:39:36.470"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.470" endtime="20220708 03:39:36.471"/>
</return>
<msg timestamp="20220708 03:39:36.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.343" endtime="20220708 03:39:36.471"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.471" endtime="20220708 03:39:36.471"/>
</return>
<msg timestamp="20220708 03:39:36.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.342" endtime="20220708 03:39:36.471"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:36.472" endtime="20220708 03:39:36.472"/>
</return>
<msg timestamp="20220708 03:39:36.473" level="INFO">${CARD_ID} = 62c7a6f8cff944418f5491d5</msg>
<status status="PASS" starttime="20220708 03:39:36.471" endtime="20220708 03:39:36.473"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:36.474" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:36.474" endtime="20220708 03:39:36.474"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:36.474" endtime="20220708 03:39:36.474"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:36.475" level="INFO">${url} = cards/62c7a6f8cff944418f5491d5</msg>
<status status="PASS" starttime="20220708 03:39:36.474" endtime="20220708 03:39:36.475"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:36.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.475" endtime="20220708 03:39:36.603"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.603" endtime="20220708 03:39:36.603"/>
</return>
<msg timestamp="20220708 03:39:36.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.473" endtime="20220708 03:39:36.603"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.603" endtime="20220708 03:39:36.603"/>
</return>
<msg timestamp="20220708 03:39:36.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.473" endtime="20220708 03:39:36.604"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:36.604" endtime="20220708 03:39:36.609"/>
</kw>
<status status="PASS" starttime="20220708 03:39:36.604" endtime="20220708 03:39:36.609"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:36.611" level="INFO">${url} = cards/62c7a6f8cff944418f5491d5</msg>
<status status="PASS" starttime="20220708 03:39:36.610" endtime="20220708 03:39:36.611"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:36.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.611" endtime="20220708 03:39:36.660"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.660" endtime="20220708 03:39:36.660"/>
</return>
<msg timestamp="20220708 03:39:36.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.610" endtime="20220708 03:39:36.660"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.660" endtime="20220708 03:39:36.660"/>
</return>
<msg timestamp="20220708 03:39:36.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.610" endtime="20220708 03:39:36.660"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:36.661" endtime="20220708 03:39:36.661"/>
</return>
<msg timestamp="20220708 03:39:36.662" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220708 03:39:36.661" endtime="20220708 03:39:36.662"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:36.662" endtime="20220708 03:39:36.662"/>
</return>
<msg timestamp="20220708 03:39:36.663" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220708 03:39:36.662" endtime="20220708 03:39:36.663"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:36.663" endtime="20220708 03:39:36.663"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:36.664" endtime="20220708 03:39:36.664"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:36.666" level="INFO">${url} = cards/62c7a6f8cff944418f5491d5</msg>
<status status="PASS" starttime="20220708 03:39:36.665" endtime="20220708 03:39:36.666"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:36.815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.666" endtime="20220708 03:39:36.815"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.815" endtime="20220708 03:39:36.815"/>
</return>
<msg timestamp="20220708 03:39:36.815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.665" endtime="20220708 03:39:36.815"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:36.816" endtime="20220708 03:39:36.816"/>
</return>
<status status="PASS" starttime="20220708 03:39:36.664" endtime="20220708 03:39:36.816"/>
</kw>
<status status="PASS" starttime="20220708 03:39:36.664" endtime="20220708 03:39:36.816"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:39:36.341" endtime="20220708 03:39:36.816"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:36.819" level="INFO">${url} = boards/62c7a6f61939087a2ad92cdc</msg>
<status status="PASS" starttime="20220708 03:39:36.819" endtime="20220708 03:39:36.819"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:37.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.819" endtime="20220708 03:39:37.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.164" endtime="20220708 03:39:37.164"/>
</return>
<msg timestamp="20220708 03:39:37.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:36.818" endtime="20220708 03:39:37.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.164" endtime="20220708 03:39:37.164"/>
</return>
<status status="PASS" starttime="20220708 03:39:36.817" endtime="20220708 03:39:37.165"/>
</kw>
<status status="PASS" starttime="20220708 03:39:36.817" endtime="20220708 03:39:37.165"/>
</kw>
<status status="PASS" starttime="20220708 03:39:36.817" endtime="20220708 03:39:37.165"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 03:39:37.165" endtime="20220708 03:39:37.166"/>
</kw>
<status status="PASS" starttime="20220708 03:39:36.817" endtime="20220708 03:39:37.166"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220708 03:39:34.833" endtime="20220708 03:39:37.166"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:39:37.177" endtime="20220708 03:39:37.178"/>
</kw>
<status status="PASS" starttime="20220708 03:39:37.177" endtime="20220708 03:39:37.178"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:37.179" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:37.179" endtime="20220708 03:39:37.179"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:37.179" endtime="20220708 03:39:37.179"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:37.180" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:39:37.179" endtime="20220708 03:39:37.180"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:37.401" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.180" endtime="20220708 03:39:37.401"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.401" endtime="20220708 03:39:37.401"/>
</return>
<msg timestamp="20220708 03:39:37.402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.178" endtime="20220708 03:39:37.402"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.402" endtime="20220708 03:39:37.402"/>
</return>
<msg timestamp="20220708 03:39:37.402" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.178" endtime="20220708 03:39:37.402"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:39:37.403" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7a6f974f6113c02008afd</msg>
<status status="PASS" starttime="20220708 03:39:37.402" endtime="20220708 03:39:37.403"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:37.404" level="INFO">${url} = boards/62c7a6f974f6113c02008afd/lists/</msg>
<status status="PASS" starttime="20220708 03:39:37.404" endtime="20220708 03:39:37.404"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:37.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.404" endtime="20220708 03:39:37.444"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.445" endtime="20220708 03:39:37.445"/>
</return>
<msg timestamp="20220708 03:39:37.445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.404" endtime="20220708 03:39:37.445"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.445" endtime="20220708 03:39:37.445"/>
</return>
<msg timestamp="20220708 03:39:37.445" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.403" endtime="20220708 03:39:37.445"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:39:37.446" level="INFO">${TEST_SUITE_LIST_ID} = 62c7a6f974f6113c02008b04</msg>
<status status="PASS" starttime="20220708 03:39:37.445" endtime="20220708 03:39:37.446"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:37.448" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:37.447" endtime="20220708 03:39:37.448"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:37.448" endtime="20220708 03:39:37.448"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:37.449" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 03:39:37.448" endtime="20220708 03:39:37.449"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:37.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.449" endtime="20220708 03:39:37.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.610" endtime="20220708 03:39:37.610"/>
</return>
<msg timestamp="20220708 03:39:37.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.447" endtime="20220708 03:39:37.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.610" endtime="20220708 03:39:37.610"/>
</return>
<msg timestamp="20220708 03:39:37.611" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.446" endtime="20220708 03:39:37.611"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:39:37.612" level="INFO">${TEST_SUITE_CARD_ID} = 62c7a6f922f617718fcd5053</msg>
<status status="PASS" starttime="20220708 03:39:37.611" endtime="20220708 03:39:37.612"/>
</kw>
<status status="PASS" starttime="20220708 03:39:37.178" endtime="20220708 03:39:37.612"/>
</kw>
<status status="PASS" starttime="20220708 03:39:37.177" endtime="20220708 03:39:37.612"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:37.614" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:37.613" endtime="20220708 03:39:37.614"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:37.614" endtime="20220708 03:39:37.614"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:37.615" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 03:39:37.614" endtime="20220708 03:39:37.615"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:37.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.615" endtime="20220708 03:39:37.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.720" endtime="20220708 03:39:37.720"/>
</return>
<msg timestamp="20220708 03:39:37.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.613" endtime="20220708 03:39:37.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.720" endtime="20220708 03:39:37.720"/>
</return>
<msg timestamp="20220708 03:39:37.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.612" endtime="20220708 03:39:37.721"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:37.721" endtime="20220708 03:39:37.721"/>
</return>
<msg timestamp="20220708 03:39:37.722" level="INFO">${checklist_id} = 62c7a6f97f5f6a23d9f8816b</msg>
<status status="PASS" starttime="20220708 03:39:37.721" endtime="20220708 03:39:37.722"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:37.723" level="INFO">${url} = checklists/62c7a6f97f5f6a23d9f8816b</msg>
<status status="PASS" starttime="20220708 03:39:37.723" endtime="20220708 03:39:37.723"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:37.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.723" endtime="20220708 03:39:37.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.772" endtime="20220708 03:39:37.773"/>
</return>
<msg timestamp="20220708 03:39:37.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.722" endtime="20220708 03:39:37.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.773" endtime="20220708 03:39:37.773"/>
</return>
<msg timestamp="20220708 03:39:37.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.722" endtime="20220708 03:39:37.773"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:37.773" endtime="20220708 03:39:37.773"/>
</return>
<msg timestamp="20220708 03:39:37.774" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220708 03:39:37.773" endtime="20220708 03:39:37.774"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:37.774" endtime="20220708 03:39:37.774"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:37.776" level="INFO">${url} = checklists/62c7a6f97f5f6a23d9f8816b</msg>
<status status="PASS" starttime="20220708 03:39:37.775" endtime="20220708 03:39:37.776"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:37.898" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.776" endtime="20220708 03:39:37.898"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.898" endtime="20220708 03:39:37.898"/>
</return>
<msg timestamp="20220708 03:39:37.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.775" endtime="20220708 03:39:37.899"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:37.899" endtime="20220708 03:39:37.899"/>
</return>
<status status="PASS" starttime="20220708 03:39:37.775" endtime="20220708 03:39:37.899"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:39:37.612" endtime="20220708 03:39:37.899"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:37.902" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:37.902" endtime="20220708 03:39:37.902"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:37.902" endtime="20220708 03:39:37.902"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:37.903" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 03:39:37.902" endtime="20220708 03:39:37.903"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:38.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.903" endtime="20220708 03:39:38.023"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.023" endtime="20220708 03:39:38.023"/>
</return>
<msg timestamp="20220708 03:39:38.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.901" endtime="20220708 03:39:38.023"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.023" endtime="20220708 03:39:38.023"/>
</return>
<msg timestamp="20220708 03:39:38.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:37.901" endtime="20220708 03:39:38.024"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:38.024" endtime="20220708 03:39:38.024"/>
</return>
<msg timestamp="20220708 03:39:38.025" level="INFO">${checklist_id} = 62c7a6f98a70fe258b0c3805</msg>
<status status="PASS" starttime="20220708 03:39:38.024" endtime="20220708 03:39:38.025"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:38.027" level="INFO">${url} = checklists/62c7a6f98a70fe258b0c3805</msg>
<status status="PASS" starttime="20220708 03:39:38.026" endtime="20220708 03:39:38.027"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:38.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.027" endtime="20220708 03:39:38.129"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.129" endtime="20220708 03:39:38.129"/>
</return>
<msg timestamp="20220708 03:39:38.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.026" endtime="20220708 03:39:38.129"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.129" endtime="20220708 03:39:38.129"/>
</return>
<msg timestamp="20220708 03:39:38.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.025" endtime="20220708 03:39:38.130"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:38.130" endtime="20220708 03:39:38.132"/>
</kw>
<status status="PASS" starttime="20220708 03:39:38.130" endtime="20220708 03:39:38.132"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:38.133" level="INFO">${url} = checklists/62c7a6f98a70fe258b0c3805</msg>
<status status="PASS" starttime="20220708 03:39:38.133" endtime="20220708 03:39:38.133"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:38.164" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:39:38.133" endtime="20220708 03:39:38.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.164" endtime="20220708 03:39:38.165"/>
</return>
<msg timestamp="20220708 03:39:38.165" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:39:38.132" endtime="20220708 03:39:38.165"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.165" endtime="20220708 03:39:38.165"/>
</return>
<status status="PASS" starttime="20220708 03:39:38.132" endtime="20220708 03:39:38.165"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:39:37.899" endtime="20220708 03:39:38.165"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:38.169" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:38.167" endtime="20220708 03:39:38.169"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:38.169" endtime="20220708 03:39:38.170"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:38.170" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 03:39:38.170" endtime="20220708 03:39:38.170"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:38.293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.170" endtime="20220708 03:39:38.293"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.293" endtime="20220708 03:39:38.293"/>
</return>
<msg timestamp="20220708 03:39:38.294" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.167" endtime="20220708 03:39:38.294"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.294" endtime="20220708 03:39:38.294"/>
</return>
<msg timestamp="20220708 03:39:38.294" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.166" endtime="20220708 03:39:38.294"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:38.294" endtime="20220708 03:39:38.294"/>
</return>
<msg timestamp="20220708 03:39:38.295" level="INFO">${checklist_id} = 62c7a6fa1991dc5542e15931</msg>
<status status="PASS" starttime="20220708 03:39:38.294" endtime="20220708 03:39:38.295"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:38.297" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:38.296" endtime="20220708 03:39:38.297"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:38.297" endtime="20220708 03:39:38.297"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:38.298" level="INFO">${url} = checklists/62c7a6fa1991dc5542e15931</msg>
<status status="PASS" starttime="20220708 03:39:38.297" endtime="20220708 03:39:38.298"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:38.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.298" endtime="20220708 03:39:38.395"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.395" endtime="20220708 03:39:38.395"/>
</return>
<msg timestamp="20220708 03:39:38.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.296" endtime="20220708 03:39:38.395"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.395" endtime="20220708 03:39:38.395"/>
</return>
<msg timestamp="20220708 03:39:38.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.295" endtime="20220708 03:39:38.395"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:38.397" level="INFO">${url} = checklists/62c7a6fa1991dc5542e15931</msg>
<status status="PASS" starttime="20220708 03:39:38.396" endtime="20220708 03:39:38.397"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:38.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.397" endtime="20220708 03:39:38.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.447" endtime="20220708 03:39:38.447"/>
</return>
<msg timestamp="20220708 03:39:38.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.396" endtime="20220708 03:39:38.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.448" endtime="20220708 03:39:38.448"/>
</return>
<msg timestamp="20220708 03:39:38.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.395" endtime="20220708 03:39:38.448"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:38.448" endtime="20220708 03:39:38.448"/>
</return>
<msg timestamp="20220708 03:39:38.449" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220708 03:39:38.448" endtime="20220708 03:39:38.449"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:38.449" endtime="20220708 03:39:38.450"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:38.463" level="INFO">${url} = checklists/62c7a6fa1991dc5542e15931</msg>
<status status="PASS" starttime="20220708 03:39:38.463" endtime="20220708 03:39:38.463"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:38.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.463" endtime="20220708 03:39:38.560"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.560" endtime="20220708 03:39:38.560"/>
</return>
<msg timestamp="20220708 03:39:38.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.463" endtime="20220708 03:39:38.560"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.560" endtime="20220708 03:39:38.560"/>
</return>
<status status="PASS" starttime="20220708 03:39:38.450" endtime="20220708 03:39:38.560"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:39:38.166" endtime="20220708 03:39:38.560"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:38.563" level="INFO">${url} = boards/62c7a6f974f6113c02008afd</msg>
<status status="PASS" starttime="20220708 03:39:38.563" endtime="20220708 03:39:38.563"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:38.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.563" endtime="20220708 03:39:38.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.901" endtime="20220708 03:39:38.901"/>
</return>
<msg timestamp="20220708 03:39:38.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.562" endtime="20220708 03:39:38.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:38.902" endtime="20220708 03:39:38.902"/>
</return>
<status status="PASS" starttime="20220708 03:39:38.562" endtime="20220708 03:39:38.902"/>
</kw>
<status status="PASS" starttime="20220708 03:39:38.562" endtime="20220708 03:39:38.902"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 03:39:38.902" endtime="20220708 03:39:38.903"/>
</kw>
<status status="PASS" starttime="20220708 03:39:38.561" endtime="20220708 03:39:38.903"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220708 03:39:37.168" endtime="20220708 03:39:38.903"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:39:38.913" endtime="20220708 03:39:38.913"/>
</kw>
<status status="PASS" starttime="20220708 03:39:38.913" endtime="20220708 03:39:38.913"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:38.914" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:38.914" endtime="20220708 03:39:38.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:38.914" endtime="20220708 03:39:38.915"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:38.915" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:39:38.915" endtime="20220708 03:39:38.915"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:39.119" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.915" endtime="20220708 03:39:39.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.120" endtime="20220708 03:39:39.120"/>
</return>
<msg timestamp="20220708 03:39:39.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.914" endtime="20220708 03:39:39.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.120" endtime="20220708 03:39:39.120"/>
</return>
<msg timestamp="20220708 03:39:39.120" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:38.913" endtime="20220708 03:39:39.120"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:39:39.121" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7a6fafa939145661f4740</msg>
<status status="PASS" starttime="20220708 03:39:39.120" endtime="20220708 03:39:39.121"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:39.162" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.121" endtime="20220708 03:39:39.162"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:39:39.163" level="INFO">${TEST_SUITE_LIST_ID} = 62c7a6fafa939145661f4747</msg>
<status status="PASS" starttime="20220708 03:39:39.162" endtime="20220708 03:39:39.163"/>
</kw>
<status status="PASS" starttime="20220708 03:39:38.913" endtime="20220708 03:39:39.163"/>
</kw>
<status status="PASS" starttime="20220708 03:39:38.912" endtime="20220708 03:39:39.163"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:39.165" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:39.165" endtime="20220708 03:39:39.165"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:39.165" endtime="20220708 03:39:39.165"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:39.166" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 03:39:39.166" endtime="20220708 03:39:39.166"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:39.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.166" endtime="20220708 03:39:39.236"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.236" endtime="20220708 03:39:39.236"/>
</return>
<msg timestamp="20220708 03:39:39.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.164" endtime="20220708 03:39:39.236"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.236" endtime="20220708 03:39:39.236"/>
</return>
<msg timestamp="20220708 03:39:39.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.164" endtime="20220708 03:39:39.236"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:39.237" endtime="20220708 03:39:39.239"/>
</kw>
<status status="PASS" starttime="20220708 03:39:39.236" endtime="20220708 03:39:39.239"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:39.239" endtime="20220708 03:39:39.239"/>
</return>
<msg timestamp="20220708 03:39:39.240" level="INFO">${LABEL_ID} = 62c7a6fb38d80d1ffb157de1</msg>
<status status="PASS" starttime="20220708 03:39:39.239" endtime="20220708 03:39:39.240"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:39.241" level="INFO">${url} = labels/62c7a6fb38d80d1ffb157de1</msg>
<status status="PASS" starttime="20220708 03:39:39.241" endtime="20220708 03:39:39.241"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:39.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.241" endtime="20220708 03:39:39.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.280" endtime="20220708 03:39:39.280"/>
</return>
<msg timestamp="20220708 03:39:39.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.240" endtime="20220708 03:39:39.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.280" endtime="20220708 03:39:39.280"/>
</return>
<msg timestamp="20220708 03:39:39.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.240" endtime="20220708 03:39:39.280"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:39.281" endtime="20220708 03:39:39.281"/>
</return>
<msg timestamp="20220708 03:39:39.282" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220708 03:39:39.280" endtime="20220708 03:39:39.282"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:39.282" endtime="20220708 03:39:39.282"/>
</return>
<msg timestamp="20220708 03:39:39.283" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220708 03:39:39.282" endtime="20220708 03:39:39.283"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:39.283" endtime="20220708 03:39:39.283"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:39.283" endtime="20220708 03:39:39.283"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:39.285" level="INFO">${url} = labels/62c7a6fb38d80d1ffb157de1</msg>
<status status="PASS" starttime="20220708 03:39:39.285" endtime="20220708 03:39:39.285"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:39.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.285" endtime="20220708 03:39:39.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.423" endtime="20220708 03:39:39.423"/>
</return>
<msg timestamp="20220708 03:39:39.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.284" endtime="20220708 03:39:39.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.423" endtime="20220708 03:39:39.423"/>
</return>
<status status="PASS" starttime="20220708 03:39:39.284" endtime="20220708 03:39:39.423"/>
</kw>
<status status="PASS" starttime="20220708 03:39:39.284" endtime="20220708 03:39:39.423"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:39:39.163" endtime="20220708 03:39:39.423"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:39.425" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:39.425" endtime="20220708 03:39:39.426"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:39.426" endtime="20220708 03:39:39.426"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:39.427" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 03:39:39.426" endtime="20220708 03:39:39.427"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:39.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.427" endtime="20220708 03:39:39.518"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.518" endtime="20220708 03:39:39.518"/>
</return>
<msg timestamp="20220708 03:39:39.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.425" endtime="20220708 03:39:39.518"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.518" endtime="20220708 03:39:39.518"/>
</return>
<msg timestamp="20220708 03:39:39.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.424" endtime="20220708 03:39:39.518"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:39.519" endtime="20220708 03:39:39.521"/>
</kw>
<status status="PASS" starttime="20220708 03:39:39.519" endtime="20220708 03:39:39.521"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:39.521" endtime="20220708 03:39:39.521"/>
</return>
<msg timestamp="20220708 03:39:39.522" level="INFO">${LABEL_ID} = 62c7a6fbfd652b651c7aae95</msg>
<status status="PASS" starttime="20220708 03:39:39.521" endtime="20220708 03:39:39.522"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:39.523" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:39.523" endtime="20220708 03:39:39.523"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:39.523" endtime="20220708 03:39:39.523"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:39.524" level="INFO">${url} = labels/62c7a6fbfd652b651c7aae95</msg>
<status status="PASS" starttime="20220708 03:39:39.523" endtime="20220708 03:39:39.524"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:39.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.524" endtime="20220708 03:39:39.607"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.607" endtime="20220708 03:39:39.607"/>
</return>
<msg timestamp="20220708 03:39:39.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.522" endtime="20220708 03:39:39.608"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.608" endtime="20220708 03:39:39.608"/>
</return>
<msg timestamp="20220708 03:39:39.608" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.522" endtime="20220708 03:39:39.608"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:39.608" endtime="20220708 03:39:39.608"/>
</return>
<msg timestamp="20220708 03:39:39.609" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220708 03:39:39.608" endtime="20220708 03:39:39.609"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:39.609" endtime="20220708 03:39:39.610"/>
</return>
<msg timestamp="20220708 03:39:39.610" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220708 03:39:39.609" endtime="20220708 03:39:39.610"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:39.610" endtime="20220708 03:39:39.611"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:39.611" endtime="20220708 03:39:39.611"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:39.613" level="INFO">${url} = labels/62c7a6fbfd652b651c7aae95</msg>
<status status="PASS" starttime="20220708 03:39:39.613" endtime="20220708 03:39:39.613"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:39.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.613" endtime="20220708 03:39:39.719"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.719" endtime="20220708 03:39:39.719"/>
</return>
<msg timestamp="20220708 03:39:39.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.612" endtime="20220708 03:39:39.719"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.719" endtime="20220708 03:39:39.719"/>
</return>
<status status="PASS" starttime="20220708 03:39:39.611" endtime="20220708 03:39:39.719"/>
</kw>
<status status="PASS" starttime="20220708 03:39:39.611" endtime="20220708 03:39:39.719"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:39:39.424" endtime="20220708 03:39:39.719"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:39.722" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:39.722" endtime="20220708 03:39:39.722"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:39.722" endtime="20220708 03:39:39.722"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:39.723" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 03:39:39.722" endtime="20220708 03:39:39.723"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:39.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.723" endtime="20220708 03:39:39.804"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.804" endtime="20220708 03:39:39.804"/>
</return>
<msg timestamp="20220708 03:39:39.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.721" endtime="20220708 03:39:39.804"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.804" endtime="20220708 03:39:39.804"/>
</return>
<msg timestamp="20220708 03:39:39.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.721" endtime="20220708 03:39:39.804"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 03:39:39.805" endtime="20220708 03:39:39.805"/>
</return>
<msg timestamp="20220708 03:39:39.806" level="INFO">${LABEL_ID} = 62c7a6fbfec7c52e35c11935</msg>
<status status="PASS" starttime="20220708 03:39:39.804" endtime="20220708 03:39:39.806"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:39.807" level="INFO">${url} = labels/62c7a6fbfec7c52e35c11935</msg>
<status status="PASS" starttime="20220708 03:39:39.807" endtime="20220708 03:39:39.807"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:39.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.807" endtime="20220708 03:39:39.915"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.915" endtime="20220708 03:39:39.915"/>
</return>
<msg timestamp="20220708 03:39:39.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.806" endtime="20220708 03:39:39.916"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.916" endtime="20220708 03:39:39.916"/>
</return>
<status status="PASS" starttime="20220708 03:39:39.806" endtime="20220708 03:39:39.916"/>
</kw>
<status status="PASS" starttime="20220708 03:39:39.806" endtime="20220708 03:39:39.916"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:39.917" level="INFO">${url} = labels/62c7a6fbfec7c52e35c11935</msg>
<status status="PASS" starttime="20220708 03:39:39.917" endtime="20220708 03:39:39.917"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:39.955" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:39:39.917" endtime="20220708 03:39:39.955"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.955" endtime="20220708 03:39:39.955"/>
</return>
<msg timestamp="20220708 03:39:39.955" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 03:39:39.916" endtime="20220708 03:39:39.955"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:39.955" endtime="20220708 03:39:39.955"/>
</return>
<status status="PASS" starttime="20220708 03:39:39.916" endtime="20220708 03:39:39.955"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:39:39.720" endtime="20220708 03:39:39.956"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:39.958" level="INFO">${url} = boards/62c7a6fafa939145661f4740</msg>
<status status="PASS" starttime="20220708 03:39:39.958" endtime="20220708 03:39:39.959"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:40.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.959" endtime="20220708 03:39:40.312"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:40.312" endtime="20220708 03:39:40.312"/>
</return>
<msg timestamp="20220708 03:39:40.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:39.958" endtime="20220708 03:39:40.312"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:40.313" endtime="20220708 03:39:40.313"/>
</return>
<status status="PASS" starttime="20220708 03:39:39.957" endtime="20220708 03:39:40.313"/>
</kw>
<status status="PASS" starttime="20220708 03:39:39.957" endtime="20220708 03:39:40.313"/>
</kw>
<status status="PASS" starttime="20220708 03:39:39.957" endtime="20220708 03:39:40.313"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 03:39:40.313" endtime="20220708 03:39:40.314"/>
</kw>
<status status="PASS" starttime="20220708 03:39:39.956" endtime="20220708 03:39:40.314"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220708 03:39:38.905" endtime="20220708 03:39:40.314"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 03:39:40.325" endtime="20220708 03:39:40.325"/>
</kw>
<status status="PASS" starttime="20220708 03:39:40.324" endtime="20220708 03:39:40.325"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:40.326" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:40.326" endtime="20220708 03:39:40.326"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:40.327" endtime="20220708 03:39:40.327"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:40.327" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 03:39:40.327" endtime="20220708 03:39:40.327"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:40.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.328" endtime="20220708 03:39:40.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:40.595" endtime="20220708 03:39:40.595"/>
</return>
<msg timestamp="20220708 03:39:40.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.326" endtime="20220708 03:39:40.596"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:40.596" endtime="20220708 03:39:40.596"/>
</return>
<msg timestamp="20220708 03:39:40.596" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.326" endtime="20220708 03:39:40.596"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 03:39:40.597" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7a6fcc6259b2ad4e1932a</msg>
<status status="PASS" starttime="20220708 03:39:40.596" endtime="20220708 03:39:40.597"/>
</kw>
<status status="PASS" starttime="20220708 03:39:40.596" endtime="20220708 03:39:40.597"/>
</kw>
<status status="PASS" starttime="20220708 03:39:40.325" endtime="20220708 03:39:40.598"/>
</kw>
<status status="PASS" starttime="20220708 03:39:40.324" endtime="20220708 03:39:40.598"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:40.599" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:40.599" endtime="20220708 03:39:40.599"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:40.600" endtime="20220708 03:39:40.600"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:40.600" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 03:39:40.600" endtime="20220708 03:39:40.600"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:40.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.601" endtime="20220708 03:39:40.696"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:40.696" endtime="20220708 03:39:40.696"/>
</return>
<msg timestamp="20220708 03:39:40.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.599" endtime="20220708 03:39:40.696"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:40.696" endtime="20220708 03:39:40.696"/>
</return>
<msg timestamp="20220708 03:39:40.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.598" endtime="20220708 03:39:40.696"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:40.697" endtime="20220708 03:39:40.699"/>
</kw>
<status status="PASS" starttime="20220708 03:39:40.697" endtime="20220708 03:39:40.699"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 03:39:40.598" endtime="20220708 03:39:40.699"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:40.701" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:40.701" endtime="20220708 03:39:40.701"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:40.702" endtime="20220708 03:39:40.702"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:40.702" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 03:39:40.702" endtime="20220708 03:39:40.703"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:40.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.703" endtime="20220708 03:39:40.790"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:40.790" endtime="20220708 03:39:40.790"/>
</return>
<msg timestamp="20220708 03:39:40.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.701" endtime="20220708 03:39:40.791"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:40.791" endtime="20220708 03:39:40.791"/>
</return>
<msg timestamp="20220708 03:39:40.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.700" endtime="20220708 03:39:40.791"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:40.791" endtime="20220708 03:39:40.793"/>
</kw>
<status status="PASS" starttime="20220708 03:39:40.791" endtime="20220708 03:39:40.793"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:40.795" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:40.795" endtime="20220708 03:39:40.795"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:40.795" endtime="20220708 03:39:40.795"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:40.796" level="INFO">${url} = lists/62c7a6fc56cbbb1f2b6618ea</msg>
<status status="PASS" starttime="20220708 03:39:40.795" endtime="20220708 03:39:40.796"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:40.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.796" endtime="20220708 03:39:40.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:40.865" endtime="20220708 03:39:40.865"/>
</return>
<msg timestamp="20220708 03:39:40.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.794" endtime="20220708 03:39:40.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:40.865" endtime="20220708 03:39:40.866"/>
</return>
<status status="PASS" starttime="20220708 03:39:40.793" endtime="20220708 03:39:40.866"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:40.867" level="INFO">${url} = lists/62c7a6fc56cbbb1f2b6618ea</msg>
<status status="PASS" starttime="20220708 03:39:40.867" endtime="20220708 03:39:40.868"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:40.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.868" endtime="20220708 03:39:40.907"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:40.907" endtime="20220708 03:39:40.907"/>
</return>
<msg timestamp="20220708 03:39:40.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.867" endtime="20220708 03:39:40.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:40.908" endtime="20220708 03:39:40.908"/>
</return>
<msg timestamp="20220708 03:39:40.908" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.866" endtime="20220708 03:39:40.908"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 03:39:40.908" endtime="20220708 03:39:40.910"/>
</kw>
<status status="PASS" starttime="20220708 03:39:40.908" endtime="20220708 03:39:40.910"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 03:39:40.910" endtime="20220708 03:39:40.911"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:39:40.699" endtime="20220708 03:39:40.911"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:40.915" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:40.915" endtime="20220708 03:39:40.915"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:40.915" endtime="20220708 03:39:40.915"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:40.916" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 03:39:40.915" endtime="20220708 03:39:40.916"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:41.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.916" endtime="20220708 03:39:41.009"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:41.009" endtime="20220708 03:39:41.009"/>
</return>
<msg timestamp="20220708 03:39:41.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.914" endtime="20220708 03:39:41.009"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:41.009" endtime="20220708 03:39:41.009"/>
</return>
<msg timestamp="20220708 03:39:41.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:40.912" endtime="20220708 03:39:41.009"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 03:39:41.011" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 03:39:41.011" endtime="20220708 03:39:41.011"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 03:39:41.011" endtime="20220708 03:39:41.011"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:41.012" level="INFO">${url} = lists/62c7a6fca3ad0e3cce7aacb1/closed</msg>
<status status="PASS" starttime="20220708 03:39:41.012" endtime="20220708 03:39:41.012"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 03:39:41.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:41.012" endtime="20220708 03:39:41.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:41.095" endtime="20220708 03:39:41.095"/>
</return>
<msg timestamp="20220708 03:39:41.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:41.010" endtime="20220708 03:39:41.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:41.095" endtime="20220708 03:39:41.095"/>
</return>
<status status="PASS" starttime="20220708 03:39:41.009" endtime="20220708 03:39:41.095"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:41.097" level="INFO">${url} = lists/62c7a6fca3ad0e3cce7aacb1</msg>
<status status="PASS" starttime="20220708 03:39:41.097" endtime="20220708 03:39:41.097"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 03:39:41.138" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:41.097" endtime="20220708 03:39:41.138"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:41.138" endtime="20220708 03:39:41.138"/>
</return>
<msg timestamp="20220708 03:39:41.138" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:41.096" endtime="20220708 03:39:41.138"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:41.138" endtime="20220708 03:39:41.138"/>
</return>
<msg timestamp="20220708 03:39:41.139" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:41.095" endtime="20220708 03:39:41.139"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220708 03:39:41.139" endtime="20220708 03:39:41.139"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 03:39:40.911" endtime="20220708 03:39:41.140"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 03:39:41.142" level="INFO">${url} = boards/62c7a6fcc6259b2ad4e1932a</msg>
<status status="PASS" starttime="20220708 03:39:41.142" endtime="20220708 03:39:41.142"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 03:39:41.474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:41.142" endtime="20220708 03:39:41.474"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:41.474" endtime="20220708 03:39:41.474"/>
</return>
<msg timestamp="20220708 03:39:41.474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 03:39:41.141" endtime="20220708 03:39:41.474"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 03:39:41.474" endtime="20220708 03:39:41.474"/>
</return>
<status status="PASS" starttime="20220708 03:39:41.141" endtime="20220708 03:39:41.474"/>
</kw>
<status status="PASS" starttime="20220708 03:39:41.141" endtime="20220708 03:39:41.474"/>
</kw>
<status status="PASS" starttime="20220708 03:39:41.140" endtime="20220708 03:39:41.475"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 03:39:41.475" endtime="20220708 03:39:41.476"/>
</kw>
<status status="PASS" starttime="20220708 03:39:41.140" endtime="20220708 03:39:41.476"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220708 03:39:40.316" endtime="20220708 03:39:41.476"/>
</suite>
<status status="PASS" starttime="20220708 03:39:31.554" endtime="20220708 03:39:41.478"/>
</suite>
<status status="PASS" starttime="20220708 03:39:31.537" endtime="20220708 03:39:41.479"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
