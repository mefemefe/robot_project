<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 20:42:35.539" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 20:42:35.664" endtime="20220704 20:42:35.664"/>
</kw>
<status status="PASS" starttime="20220704 20:42:35.662" endtime="20220704 20:42:35.664"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:35.666" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:35.666" endtime="20220704 20:42:35.666"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:35.666" endtime="20220704 20:42:35.666"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:35.667" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:42:35.667" endtime="20220704 20:42:35.667"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:36.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:35.667" endtime="20220704 20:42:36.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:36.017" endtime="20220704 20:42:36.017"/>
</return>
<msg timestamp="20220704 20:42:36.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:35.665" endtime="20220704 20:42:36.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:36.017" endtime="20220704 20:42:36.017"/>
</return>
<msg timestamp="20220704 20:42:36.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:35.665" endtime="20220704 20:42:36.017"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:36.018" endtime="20220704 20:42:36.022"/>
</kw>
<status status="PASS" starttime="20220704 20:42:36.018" endtime="20220704 20:42:36.022"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:36.024" level="INFO">${url} = boards/62c350bb2fd6de335cbc1271</msg>
<status status="PASS" starttime="20220704 20:42:36.024" endtime="20220704 20:42:36.024"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:36.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:36.025" endtime="20220704 20:42:36.366"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:36.366" endtime="20220704 20:42:36.367"/>
</return>
<msg timestamp="20220704 20:42:36.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:36.024" endtime="20220704 20:42:36.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:36.367" endtime="20220704 20:42:36.367"/>
</return>
<status status="PASS" starttime="20220704 20:42:36.023" endtime="20220704 20:42:36.367"/>
</kw>
<status status="PASS" starttime="20220704 20:42:36.023" endtime="20220704 20:42:36.367"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:42:35.665" endtime="20220704 20:42:36.367"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:36.369" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:36.369" endtime="20220704 20:42:36.369"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:36.370" endtime="20220704 20:42:36.370"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:36.370" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:42:36.370" endtime="20220704 20:42:36.370"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:36.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:36.371" endtime="20220704 20:42:36.566"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:36.566" endtime="20220704 20:42:36.566"/>
</return>
<msg timestamp="20220704 20:42:36.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:36.369" endtime="20220704 20:42:36.566"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:36.566" endtime="20220704 20:42:36.566"/>
</return>
<msg timestamp="20220704 20:42:36.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:36.368" endtime="20220704 20:42:36.566"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:36.567" endtime="20220704 20:42:36.571"/>
</kw>
<status status="PASS" starttime="20220704 20:42:36.566" endtime="20220704 20:42:36.571"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:36.572" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:36.572" endtime="20220704 20:42:36.572"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:36.572" endtime="20220704 20:42:36.573"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:36.573" level="INFO">${url} = boards/62c350bce99c07174db9a5a6</msg>
<status status="PASS" starttime="20220704 20:42:36.573" endtime="20220704 20:42:36.573"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:36.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:36.573" endtime="20220704 20:42:36.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:36.686" endtime="20220704 20:42:36.686"/>
</return>
<msg timestamp="20220704 20:42:36.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:36.572" endtime="20220704 20:42:36.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:36.686" endtime="20220704 20:42:36.686"/>
</return>
<status status="PASS" starttime="20220704 20:42:36.571" endtime="20220704 20:42:36.686"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:36.688" level="INFO">${url} = boards/62c350bce99c07174db9a5a6</msg>
<status status="PASS" starttime="20220704 20:42:36.688" endtime="20220704 20:42:36.688"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:36.770" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:36.688" endtime="20220704 20:42:36.770"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:36.770" endtime="20220704 20:42:36.770"/>
</return>
<msg timestamp="20220704 20:42:36.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:36.687" endtime="20220704 20:42:36.771"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:36.771" endtime="20220704 20:42:36.771"/>
</return>
<msg timestamp="20220704 20:42:36.771" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:36.686" endtime="20220704 20:42:36.771"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:36.772" endtime="20220704 20:42:36.775"/>
</kw>
<status status="PASS" starttime="20220704 20:42:36.771" endtime="20220704 20:42:36.775"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:36.775" endtime="20220704 20:42:36.776"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:36.778" level="INFO">${url} = boards/62c350bce99c07174db9a5a6</msg>
<status status="PASS" starttime="20220704 20:42:36.778" endtime="20220704 20:42:36.778"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:37.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:36.778" endtime="20220704 20:42:37.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:37.256" endtime="20220704 20:42:37.256"/>
</return>
<msg timestamp="20220704 20:42:37.257" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:36.777" endtime="20220704 20:42:37.257"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:37.257" endtime="20220704 20:42:37.257"/>
</return>
<status status="PASS" starttime="20220704 20:42:36.777" endtime="20220704 20:42:37.257"/>
</kw>
<status status="PASS" starttime="20220704 20:42:36.776" endtime="20220704 20:42:37.257"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:42:36.368" endtime="20220704 20:42:37.257"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:37.261" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:37.261" endtime="20220704 20:42:37.261"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:37.261" endtime="20220704 20:42:37.262"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:37.262" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:42:37.262" endtime="20220704 20:42:37.262"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:37.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:37.262" endtime="20220704 20:42:37.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:37.468" endtime="20220704 20:42:37.468"/>
</return>
<msg timestamp="20220704 20:42:37.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:37.258" endtime="20220704 20:42:37.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:37.468" endtime="20220704 20:42:37.468"/>
</return>
<msg timestamp="20220704 20:42:37.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:37.258" endtime="20220704 20:42:37.468"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:37.470" level="INFO">${url} = boards/62c350bd25411c813f237517</msg>
<status status="PASS" starttime="20220704 20:42:37.470" endtime="20220704 20:42:37.470"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:37.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:37.470" endtime="20220704 20:42:37.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:37.818" endtime="20220704 20:42:37.819"/>
</return>
<msg timestamp="20220704 20:42:37.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:37.470" endtime="20220704 20:42:37.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:37.819" endtime="20220704 20:42:37.819"/>
</return>
<status status="PASS" starttime="20220704 20:42:37.469" endtime="20220704 20:42:37.819"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:37.821" level="INFO">${url} = boards/62c350bd25411c813f237517</msg>
<status status="PASS" starttime="20220704 20:42:37.820" endtime="20220704 20:42:37.821"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:37.889" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:42:37.821" endtime="20220704 20:42:37.889"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:37.889" endtime="20220704 20:42:37.889"/>
</return>
<msg timestamp="20220704 20:42:37.889" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:42:37.820" endtime="20220704 20:42:37.889"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:37.889" endtime="20220704 20:42:37.889"/>
</return>
<status status="PASS" starttime="20220704 20:42:37.819" endtime="20220704 20:42:37.889"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:42:37.257" endtime="20220704 20:42:37.890"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:37.892" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:37.892" endtime="20220704 20:42:37.892"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:37.892" endtime="20220704 20:42:37.892"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:37.893" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:42:37.892" endtime="20220704 20:42:37.893"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:38.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:37.893" endtime="20220704 20:42:38.076"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:38.076" endtime="20220704 20:42:38.076"/>
</return>
<msg timestamp="20220704 20:42:38.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:37.891" endtime="20220704 20:42:38.076"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:38.076" endtime="20220704 20:42:38.076"/>
</return>
<msg timestamp="20220704 20:42:38.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:37.891" endtime="20220704 20:42:38.076"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:38.077" endtime="20220704 20:42:38.081"/>
</kw>
<status status="PASS" starttime="20220704 20:42:38.077" endtime="20220704 20:42:38.081"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:38.082" level="INFO">${url} = boards/62c350bdc536d5361b2a9b22</msg>
<status status="PASS" starttime="20220704 20:42:38.082" endtime="20220704 20:42:38.082"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:38.168" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.083" endtime="20220704 20:42:38.168"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:38.169" endtime="20220704 20:42:38.169"/>
</return>
<msg timestamp="20220704 20:42:38.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.082" endtime="20220704 20:42:38.169"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:38.169" endtime="20220704 20:42:38.169"/>
</return>
<msg timestamp="20220704 20:42:38.169" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.081" endtime="20220704 20:42:38.169"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:38.170" endtime="20220704 20:42:38.173"/>
</kw>
<status status="PASS" starttime="20220704 20:42:38.169" endtime="20220704 20:42:38.174"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:38.174" endtime="20220704 20:42:38.174"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:38.176" level="INFO">${url} = boards/62c350bdc536d5361b2a9b22</msg>
<status status="PASS" starttime="20220704 20:42:38.176" endtime="20220704 20:42:38.177"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:38.597" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.177" endtime="20220704 20:42:38.597"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:38.597" endtime="20220704 20:42:38.597"/>
</return>
<msg timestamp="20220704 20:42:38.597" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.176" endtime="20220704 20:42:38.597"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:38.597" endtime="20220704 20:42:38.597"/>
</return>
<status status="PASS" starttime="20220704 20:42:38.175" endtime="20220704 20:42:38.597"/>
</kw>
<status status="PASS" starttime="20220704 20:42:38.175" endtime="20220704 20:42:38.597"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:42:37.890" endtime="20220704 20:42:38.597"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:38.600" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:38.599" endtime="20220704 20:42:38.600"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:38.600" endtime="20220704 20:42:38.600"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:38.601" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:42:38.600" endtime="20220704 20:42:38.601"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:38.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.601" endtime="20220704 20:42:38.775"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:38.775" endtime="20220704 20:42:38.775"/>
</return>
<msg timestamp="20220704 20:42:38.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.599" endtime="20220704 20:42:38.775"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:38.775" endtime="20220704 20:42:38.775"/>
</return>
<msg timestamp="20220704 20:42:38.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.599" endtime="20220704 20:42:38.775"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:38.776" endtime="20220704 20:42:38.780"/>
</kw>
<status status="PASS" starttime="20220704 20:42:38.775" endtime="20220704 20:42:38.780"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:38.781" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:38.781" endtime="20220704 20:42:38.781"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:38.781" endtime="20220704 20:42:38.782"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:38.782" level="INFO">${url} = boards/62c350be39f3a95f0b285221</msg>
<status status="PASS" starttime="20220704 20:42:38.782" endtime="20220704 20:42:38.782"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:38.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.782" endtime="20220704 20:42:38.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:38.893" endtime="20220704 20:42:38.893"/>
</return>
<msg timestamp="20220704 20:42:38.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.781" endtime="20220704 20:42:38.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:38.893" endtime="20220704 20:42:38.893"/>
</return>
<status status="PASS" starttime="20220704 20:42:38.780" endtime="20220704 20:42:38.893"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:38.895" level="INFO">${url} = boards/62c350be39f3a95f0b285221</msg>
<status status="PASS" starttime="20220704 20:42:38.895" endtime="20220704 20:42:38.895"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:38.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.895" endtime="20220704 20:42:38.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:38.971" endtime="20220704 20:42:38.971"/>
</return>
<msg timestamp="20220704 20:42:38.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.894" endtime="20220704 20:42:38.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:38.971" endtime="20220704 20:42:38.971"/>
</return>
<msg timestamp="20220704 20:42:38.971" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.893" endtime="20220704 20:42:38.972"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:38.972" endtime="20220704 20:42:38.972"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:38.974" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:38.974" endtime="20220704 20:42:38.974"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:38.974" endtime="20220704 20:42:38.974"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:38.975" level="INFO">${url} = boards/62c350be39f3a95f0b285221</msg>
<status status="PASS" starttime="20220704 20:42:38.974" endtime="20220704 20:42:38.975"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:39.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.975" endtime="20220704 20:42:39.091"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:39.092" endtime="20220704 20:42:39.092"/>
</return>
<msg timestamp="20220704 20:42:39.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:38.973" endtime="20220704 20:42:39.092"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:39.092" endtime="20220704 20:42:39.092"/>
</return>
<status status="PASS" starttime="20220704 20:42:38.972" endtime="20220704 20:42:39.092"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:39.094" level="INFO">${url} = boards/62c350be39f3a95f0b285221</msg>
<status status="PASS" starttime="20220704 20:42:39.093" endtime="20220704 20:42:39.094"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:39.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.094" endtime="20220704 20:42:39.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:39.185" endtime="20220704 20:42:39.185"/>
</return>
<msg timestamp="20220704 20:42:39.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.093" endtime="20220704 20:42:39.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:39.185" endtime="20220704 20:42:39.185"/>
</return>
<msg timestamp="20220704 20:42:39.186" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.092" endtime="20220704 20:42:39.186"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:39.186" endtime="20220704 20:42:39.187"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:39.188" level="INFO">${url} = boards/62c350be39f3a95f0b285221</msg>
<status status="PASS" starttime="20220704 20:42:39.188" endtime="20220704 20:42:39.189"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:39.576" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.189" endtime="20220704 20:42:39.576"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:39.576" endtime="20220704 20:42:39.576"/>
</return>
<msg timestamp="20220704 20:42:39.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.188" endtime="20220704 20:42:39.577"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:39.577" endtime="20220704 20:42:39.577"/>
</return>
<status status="PASS" starttime="20220704 20:42:39.187" endtime="20220704 20:42:39.577"/>
</kw>
<status status="PASS" starttime="20220704 20:42:39.187" endtime="20220704 20:42:39.577"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:42:38.598" endtime="20220704 20:42:39.577"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 20:42:39.578" endtime="20220704 20:42:39.579"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 20:42:35.558" endtime="20220704 20:42:39.579"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 20:42:39.589" endtime="20220704 20:42:39.591"/>
</kw>
<status status="PASS" starttime="20220704 20:42:39.589" endtime="20220704 20:42:39.591"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:39.592" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:39.592" endtime="20220704 20:42:39.592"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:39.592" endtime="20220704 20:42:39.593"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:39.593" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:42:39.593" endtime="20220704 20:42:39.593"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:39.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.593" endtime="20220704 20:42:39.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:39.878" endtime="20220704 20:42:39.878"/>
</return>
<msg timestamp="20220704 20:42:39.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.592" endtime="20220704 20:42:39.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:39.878" endtime="20220704 20:42:39.878"/>
</return>
<msg timestamp="20220704 20:42:39.878" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.591" endtime="20220704 20:42:39.878"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:42:39.879" level="INFO">${TEST_SUITE_BOARD_ID} = 62c350bfcd31002110f71924</msg>
<status status="PASS" starttime="20220704 20:42:39.878" endtime="20220704 20:42:39.879"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:39.880" level="INFO">${url} = boards/62c350bfcd31002110f71924/lists/</msg>
<status status="PASS" starttime="20220704 20:42:39.880" endtime="20220704 20:42:39.880"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:39.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.880" endtime="20220704 20:42:39.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:39.958" endtime="20220704 20:42:39.958"/>
</return>
<msg timestamp="20220704 20:42:39.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.880" endtime="20220704 20:42:39.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:39.958" endtime="20220704 20:42:39.958"/>
</return>
<msg timestamp="20220704 20:42:39.959" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.879" endtime="20220704 20:42:39.959"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:42:39.959" level="INFO">${TEST_SUITE_LIST_ID} = 62c350bfcd31002110f7192b</msg>
<status status="PASS" starttime="20220704 20:42:39.959" endtime="20220704 20:42:39.960"/>
</kw>
<status status="PASS" starttime="20220704 20:42:39.591" endtime="20220704 20:42:39.960"/>
</kw>
<status status="PASS" starttime="20220704 20:42:39.589" endtime="20220704 20:42:39.960"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:39.961" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:39.961" endtime="20220704 20:42:39.961"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:39.961" endtime="20220704 20:42:39.962"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:39.962" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 20:42:39.962" endtime="20220704 20:42:39.962"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:40.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.963" endtime="20220704 20:42:40.171"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:40.171" endtime="20220704 20:42:40.171"/>
</return>
<msg timestamp="20220704 20:42:40.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.961" endtime="20220704 20:42:40.171"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:40.171" endtime="20220704 20:42:40.171"/>
</return>
<msg timestamp="20220704 20:42:40.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:39.960" endtime="20220704 20:42:40.171"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:40.172" endtime="20220704 20:42:40.177"/>
</kw>
<status status="PASS" starttime="20220704 20:42:40.172" endtime="20220704 20:42:40.177"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:40.177" endtime="20220704 20:42:40.177"/>
</return>
<msg timestamp="20220704 20:42:40.178" level="INFO">${CARD_ID} = 62c350c07acdc3306f93bd37</msg>
<status status="PASS" starttime="20220704 20:42:40.177" endtime="20220704 20:42:40.178"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:40.179" level="INFO">${url} = cards/62c350c07acdc3306f93bd37</msg>
<status status="PASS" starttime="20220704 20:42:40.179" endtime="20220704 20:42:40.179"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:40.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.179" endtime="20220704 20:42:40.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:40.253" endtime="20220704 20:42:40.253"/>
</return>
<msg timestamp="20220704 20:42:40.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.178" endtime="20220704 20:42:40.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:40.253" endtime="20220704 20:42:40.253"/>
</return>
<msg timestamp="20220704 20:42:40.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.178" endtime="20220704 20:42:40.253"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:40.254" endtime="20220704 20:42:40.254"/>
</return>
<msg timestamp="20220704 20:42:40.254" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 20:42:40.253" endtime="20220704 20:42:40.254"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:40.254" endtime="20220704 20:42:40.255"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:40.256" level="INFO">${url} = cards/62c350c07acdc3306f93bd37</msg>
<status status="PASS" starttime="20220704 20:42:40.256" endtime="20220704 20:42:40.256"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:40.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.256" endtime="20220704 20:42:40.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:40.439" endtime="20220704 20:42:40.439"/>
</return>
<msg timestamp="20220704 20:42:40.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.255" endtime="20220704 20:42:40.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:40.439" endtime="20220704 20:42:40.439"/>
</return>
<status status="PASS" starttime="20220704 20:42:40.255" endtime="20220704 20:42:40.439"/>
</kw>
<status status="PASS" starttime="20220704 20:42:40.255" endtime="20220704 20:42:40.440"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:42:39.960" endtime="20220704 20:42:40.440"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:40.442" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:40.441" endtime="20220704 20:42:40.442"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:40.442" endtime="20220704 20:42:40.442"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:40.443" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 20:42:40.442" endtime="20220704 20:42:40.443"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:40.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.443" endtime="20220704 20:42:40.631"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:40.631" endtime="20220704 20:42:40.631"/>
</return>
<msg timestamp="20220704 20:42:40.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.441" endtime="20220704 20:42:40.631"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:40.631" endtime="20220704 20:42:40.631"/>
</return>
<msg timestamp="20220704 20:42:40.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.441" endtime="20220704 20:42:40.631"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:40.632" endtime="20220704 20:42:40.632"/>
</return>
<msg timestamp="20220704 20:42:40.632" level="INFO">${CARD_ID} = 62c350c0aa9fd4105e643438</msg>
<status status="PASS" starttime="20220704 20:42:40.631" endtime="20220704 20:42:40.632"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:40.634" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:40.634" endtime="20220704 20:42:40.634"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:40.634" endtime="20220704 20:42:40.635"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:40.635" level="INFO">${url} = cards/62c350c0aa9fd4105e643438</msg>
<status status="PASS" starttime="20220704 20:42:40.635" endtime="20220704 20:42:40.635"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:40.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.635" endtime="20220704 20:42:40.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:40.766" endtime="20220704 20:42:40.766"/>
</return>
<msg timestamp="20220704 20:42:40.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.634" endtime="20220704 20:42:40.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:40.766" endtime="20220704 20:42:40.766"/>
</return>
<msg timestamp="20220704 20:42:40.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.633" endtime="20220704 20:42:40.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:40.766" endtime="20220704 20:42:40.766"/>
</return>
<status status="PASS" starttime="20220704 20:42:40.632" endtime="20220704 20:42:40.767"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:40.768" level="INFO">${url} = cards/62c350c0aa9fd4105e643438</msg>
<status status="PASS" starttime="20220704 20:42:40.767" endtime="20220704 20:42:40.768"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:40.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.768" endtime="20220704 20:42:40.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:40.849" endtime="20220704 20:42:40.849"/>
</return>
<msg timestamp="20220704 20:42:40.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.767" endtime="20220704 20:42:40.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:40.849" endtime="20220704 20:42:40.849"/>
</return>
<msg timestamp="20220704 20:42:40.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.767" endtime="20220704 20:42:40.849"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:40.850" endtime="20220704 20:42:40.850"/>
</return>
<msg timestamp="20220704 20:42:40.851" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 20:42:40.850" endtime="20220704 20:42:40.851"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 20:42:40.851" endtime="20220704 20:42:40.851"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:40.852" level="INFO">${url} = cards/62c350c0aa9fd4105e643438</msg>
<status status="PASS" starttime="20220704 20:42:40.852" endtime="20220704 20:42:40.852"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:41.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.853" endtime="20220704 20:42:41.013"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.013" endtime="20220704 20:42:41.013"/>
</return>
<msg timestamp="20220704 20:42:41.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:40.852" endtime="20220704 20:42:41.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.014" endtime="20220704 20:42:41.014"/>
</return>
<status status="PASS" starttime="20220704 20:42:40.851" endtime="20220704 20:42:41.014"/>
</kw>
<status status="PASS" starttime="20220704 20:42:40.851" endtime="20220704 20:42:41.014"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 20:42:40.440" endtime="20220704 20:42:41.014"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:41.017" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:41.016" endtime="20220704 20:42:41.017"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:41.017" endtime="20220704 20:42:41.017"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:41.018" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 20:42:41.017" endtime="20220704 20:42:41.018"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:41.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.018" endtime="20220704 20:42:41.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.188" endtime="20220704 20:42:41.188"/>
</return>
<msg timestamp="20220704 20:42:41.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.016" endtime="20220704 20:42:41.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.189" endtime="20220704 20:42:41.189"/>
</return>
<msg timestamp="20220704 20:42:41.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.015" endtime="20220704 20:42:41.189"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:41.189" endtime="20220704 20:42:41.189"/>
</return>
<msg timestamp="20220704 20:42:41.190" level="INFO">${CARD_ID} = 62c350c17fc6572363a2de16</msg>
<status status="PASS" starttime="20220704 20:42:41.189" endtime="20220704 20:42:41.190"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:41.191" level="INFO">${url} = cards/62c350c17fc6572363a2de16</msg>
<status status="PASS" starttime="20220704 20:42:41.191" endtime="20220704 20:42:41.191"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:41.363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.191" endtime="20220704 20:42:41.363"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.363" endtime="20220704 20:42:41.363"/>
</return>
<msg timestamp="20220704 20:42:41.363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.190" endtime="20220704 20:42:41.363"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.364" endtime="20220704 20:42:41.364"/>
</return>
<msg timestamp="20220704 20:42:41.364" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.190" endtime="20220704 20:42:41.364"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:41.364" endtime="20220704 20:42:41.366"/>
</kw>
<status status="PASS" starttime="20220704 20:42:41.364" endtime="20220704 20:42:41.366"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:41.367" level="INFO">${url} = cards/62c350c17fc6572363a2de16</msg>
<status status="PASS" starttime="20220704 20:42:41.367" endtime="20220704 20:42:41.367"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:41.424" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:42:41.367" endtime="20220704 20:42:41.424"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.424" endtime="20220704 20:42:41.424"/>
</return>
<msg timestamp="20220704 20:42:41.425" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:42:41.367" endtime="20220704 20:42:41.425"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.425" endtime="20220704 20:42:41.425"/>
</return>
<status status="PASS" starttime="20220704 20:42:41.366" endtime="20220704 20:42:41.425"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:42:41.014" endtime="20220704 20:42:41.425"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:41.427" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:41.427" endtime="20220704 20:42:41.427"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:41.427" endtime="20220704 20:42:41.427"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:41.428" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 20:42:41.428" endtime="20220704 20:42:41.428"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:41.646" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.428" endtime="20220704 20:42:41.646"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.647" endtime="20220704 20:42:41.647"/>
</return>
<msg timestamp="20220704 20:42:41.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.426" endtime="20220704 20:42:41.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.647" endtime="20220704 20:42:41.647"/>
</return>
<msg timestamp="20220704 20:42:41.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.426" endtime="20220704 20:42:41.647"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:41.648" endtime="20220704 20:42:41.648"/>
</return>
<msg timestamp="20220704 20:42:41.648" level="INFO">${CARD_ID} = 62c350c1750b5d2471f7012b</msg>
<status status="PASS" starttime="20220704 20:42:41.647" endtime="20220704 20:42:41.648"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:41.650" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:41.649" endtime="20220704 20:42:41.650"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:41.650" endtime="20220704 20:42:41.650"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:41.650" level="INFO">${url} = cards/62c350c1750b5d2471f7012b</msg>
<status status="PASS" starttime="20220704 20:42:41.650" endtime="20220704 20:42:41.650"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:41.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.650" endtime="20220704 20:42:41.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.818" endtime="20220704 20:42:41.818"/>
</return>
<msg timestamp="20220704 20:42:41.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.649" endtime="20220704 20:42:41.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.818" endtime="20220704 20:42:41.818"/>
</return>
<msg timestamp="20220704 20:42:41.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.648" endtime="20220704 20:42:41.818"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:41.819" endtime="20220704 20:42:41.824"/>
</kw>
<status status="PASS" starttime="20220704 20:42:41.818" endtime="20220704 20:42:41.824"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:41.825" level="INFO">${url} = cards/62c350c1750b5d2471f7012b</msg>
<status status="PASS" starttime="20220704 20:42:41.825" endtime="20220704 20:42:41.825"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:41.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.825" endtime="20220704 20:42:41.916"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.916" endtime="20220704 20:42:41.916"/>
</return>
<msg timestamp="20220704 20:42:41.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.824" endtime="20220704 20:42:41.916"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:41.916" endtime="20220704 20:42:41.916"/>
</return>
<msg timestamp="20220704 20:42:41.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.824" endtime="20220704 20:42:41.916"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:41.917" endtime="20220704 20:42:41.917"/>
</return>
<msg timestamp="20220704 20:42:41.918" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 20:42:41.917" endtime="20220704 20:42:41.918"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:41.918" endtime="20220704 20:42:41.918"/>
</return>
<msg timestamp="20220704 20:42:41.919" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 20:42:41.918" endtime="20220704 20:42:41.919"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:41.919" endtime="20220704 20:42:41.919"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:41.919" endtime="20220704 20:42:41.919"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:41.921" level="INFO">${url} = cards/62c350c1750b5d2471f7012b</msg>
<status status="PASS" starttime="20220704 20:42:41.921" endtime="20220704 20:42:41.921"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:42.102" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.921" endtime="20220704 20:42:42.102"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:42.102" endtime="20220704 20:42:42.102"/>
</return>
<msg timestamp="20220704 20:42:42.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:41.920" endtime="20220704 20:42:42.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:42.103" endtime="20220704 20:42:42.103"/>
</return>
<status status="PASS" starttime="20220704 20:42:41.920" endtime="20220704 20:42:42.103"/>
</kw>
<status status="PASS" starttime="20220704 20:42:41.920" endtime="20220704 20:42:42.103"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 20:42:41.425" endtime="20220704 20:42:42.103"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:42.106" level="INFO">${url} = boards/62c350bfcd31002110f71924</msg>
<status status="PASS" starttime="20220704 20:42:42.106" endtime="20220704 20:42:42.106"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:42.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:42.106" endtime="20220704 20:42:42.432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:42.432" endtime="20220704 20:42:42.432"/>
</return>
<msg timestamp="20220704 20:42:42.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:42.105" endtime="20220704 20:42:42.432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:42.433" endtime="20220704 20:42:42.433"/>
</return>
<status status="PASS" starttime="20220704 20:42:42.105" endtime="20220704 20:42:42.433"/>
</kw>
<status status="PASS" starttime="20220704 20:42:42.105" endtime="20220704 20:42:42.433"/>
</kw>
<status status="PASS" starttime="20220704 20:42:42.104" endtime="20220704 20:42:42.433"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 20:42:42.433" endtime="20220704 20:42:42.434"/>
</kw>
<status status="PASS" starttime="20220704 20:42:42.104" endtime="20220704 20:42:42.434"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 20:42:39.580" endtime="20220704 20:42:42.434"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 20:42:42.444" endtime="20220704 20:42:42.445"/>
</kw>
<status status="PASS" starttime="20220704 20:42:42.444" endtime="20220704 20:42:42.445"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:42.446" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:42.446" endtime="20220704 20:42:42.446"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:42.446" endtime="20220704 20:42:42.446"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:42.447" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:42:42.446" endtime="20220704 20:42:42.447"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:42.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:42.447" endtime="20220704 20:42:42.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:42.744" endtime="20220704 20:42:42.744"/>
</return>
<msg timestamp="20220704 20:42:42.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:42.445" endtime="20220704 20:42:42.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:42.745" endtime="20220704 20:42:42.745"/>
</return>
<msg timestamp="20220704 20:42:42.745" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:42.445" endtime="20220704 20:42:42.745"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:42:42.746" level="INFO">${TEST_SUITE_BOARD_ID} = 62c350c265524b39fac6a192</msg>
<status status="PASS" starttime="20220704 20:42:42.745" endtime="20220704 20:42:42.746"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:42.747" level="INFO">${url} = boards/62c350c265524b39fac6a192/lists/</msg>
<status status="PASS" starttime="20220704 20:42:42.746" endtime="20220704 20:42:42.747"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:42.820" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:42.747" endtime="20220704 20:42:42.820"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:42.820" endtime="20220704 20:42:42.820"/>
</return>
<msg timestamp="20220704 20:42:42.821" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:42.746" endtime="20220704 20:42:42.821"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:42.821" endtime="20220704 20:42:42.821"/>
</return>
<msg timestamp="20220704 20:42:42.821" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:42.746" endtime="20220704 20:42:42.821"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:42:42.822" level="INFO">${TEST_SUITE_LIST_ID} = 62c350c265524b39fac6a199</msg>
<status status="PASS" starttime="20220704 20:42:42.821" endtime="20220704 20:42:42.822"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:42.823" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:42.823" endtime="20220704 20:42:42.823"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:42.823" endtime="20220704 20:42:42.824"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:42.824" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 20:42:42.824" endtime="20220704 20:42:42.824"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:43.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:42.824" endtime="20220704 20:42:43.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.024" endtime="20220704 20:42:43.024"/>
</return>
<msg timestamp="20220704 20:42:43.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:42.823" endtime="20220704 20:42:43.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.024" endtime="20220704 20:42:43.024"/>
</return>
<msg timestamp="20220704 20:42:43.025" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:42.822" endtime="20220704 20:42:43.025"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:42:43.026" level="INFO">${TEST_SUITE_CARD_ID} = 62c350c2816a3749b2a37236</msg>
<status status="PASS" starttime="20220704 20:42:43.025" endtime="20220704 20:42:43.026"/>
</kw>
<status status="PASS" starttime="20220704 20:42:42.445" endtime="20220704 20:42:43.026"/>
</kw>
<status status="PASS" starttime="20220704 20:42:42.444" endtime="20220704 20:42:43.026"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:43.028" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:43.027" endtime="20220704 20:42:43.028"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:43.028" endtime="20220704 20:42:43.028"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:43.029" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 20:42:43.028" endtime="20220704 20:42:43.029"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:43.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.029" endtime="20220704 20:42:43.172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.172" endtime="20220704 20:42:43.172"/>
</return>
<msg timestamp="20220704 20:42:43.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.027" endtime="20220704 20:42:43.172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.173" endtime="20220704 20:42:43.173"/>
</return>
<msg timestamp="20220704 20:42:43.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.026" endtime="20220704 20:42:43.173"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:43.173" endtime="20220704 20:42:43.173"/>
</return>
<msg timestamp="20220704 20:42:43.174" level="INFO">${checklist_id} = 62c350c31b144a0717b70775</msg>
<status status="PASS" starttime="20220704 20:42:43.173" endtime="20220704 20:42:43.174"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:43.175" level="INFO">${url} = checklists/62c350c31b144a0717b70775</msg>
<status status="PASS" starttime="20220704 20:42:43.175" endtime="20220704 20:42:43.175"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:43.257" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.175" endtime="20220704 20:42:43.257"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.257" endtime="20220704 20:42:43.257"/>
</return>
<msg timestamp="20220704 20:42:43.257" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.174" endtime="20220704 20:42:43.257"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.257" endtime="20220704 20:42:43.257"/>
</return>
<msg timestamp="20220704 20:42:43.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.174" endtime="20220704 20:42:43.258"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:43.258" endtime="20220704 20:42:43.258"/>
</return>
<msg timestamp="20220704 20:42:43.259" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 20:42:43.258" endtime="20220704 20:42:43.259"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:43.259" endtime="20220704 20:42:43.259"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:43.260" level="INFO">${url} = checklists/62c350c31b144a0717b70775</msg>
<status status="PASS" starttime="20220704 20:42:43.260" endtime="20220704 20:42:43.260"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:43.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.260" endtime="20220704 20:42:43.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.418" endtime="20220704 20:42:43.418"/>
</return>
<msg timestamp="20220704 20:42:43.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.260" endtime="20220704 20:42:43.419"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.419" endtime="20220704 20:42:43.419"/>
</return>
<status status="PASS" starttime="20220704 20:42:43.259" endtime="20220704 20:42:43.419"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:42:43.026" endtime="20220704 20:42:43.419"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:43.421" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:43.421" endtime="20220704 20:42:43.421"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:43.421" endtime="20220704 20:42:43.421"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:43.422" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 20:42:43.421" endtime="20220704 20:42:43.422"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:43.556" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.422" endtime="20220704 20:42:43.556"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.556" endtime="20220704 20:42:43.556"/>
</return>
<msg timestamp="20220704 20:42:43.556" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.420" endtime="20220704 20:42:43.556"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.556" endtime="20220704 20:42:43.556"/>
</return>
<msg timestamp="20220704 20:42:43.556" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.420" endtime="20220704 20:42:43.556"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:43.557" endtime="20220704 20:42:43.557"/>
</return>
<msg timestamp="20220704 20:42:43.558" level="INFO">${checklist_id} = 62c350c398938f4c02912c09</msg>
<status status="PASS" starttime="20220704 20:42:43.556" endtime="20220704 20:42:43.558"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:43.559" level="INFO">${url} = checklists/62c350c398938f4c02912c09</msg>
<status status="PASS" starttime="20220704 20:42:43.559" endtime="20220704 20:42:43.559"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:43.699" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.559" endtime="20220704 20:42:43.700"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.700" endtime="20220704 20:42:43.700"/>
</return>
<msg timestamp="20220704 20:42:43.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.558" endtime="20220704 20:42:43.700"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.700" endtime="20220704 20:42:43.700"/>
</return>
<msg timestamp="20220704 20:42:43.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.558" endtime="20220704 20:42:43.700"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:43.701" endtime="20220704 20:42:43.702"/>
</kw>
<status status="PASS" starttime="20220704 20:42:43.700" endtime="20220704 20:42:43.702"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:43.704" level="INFO">${url} = checklists/62c350c398938f4c02912c09</msg>
<status status="PASS" starttime="20220704 20:42:43.703" endtime="20220704 20:42:43.704"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:43.772" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:42:43.704" endtime="20220704 20:42:43.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.772" endtime="20220704 20:42:43.773"/>
</return>
<msg timestamp="20220704 20:42:43.773" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:42:43.703" endtime="20220704 20:42:43.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.773" endtime="20220704 20:42:43.773"/>
</return>
<status status="PASS" starttime="20220704 20:42:43.703" endtime="20220704 20:42:43.773"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:42:43.419" endtime="20220704 20:42:43.773"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:43.777" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:43.775" endtime="20220704 20:42:43.777"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:43.777" endtime="20220704 20:42:43.777"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:43.778" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 20:42:43.777" endtime="20220704 20:42:43.778"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:43.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.778" endtime="20220704 20:42:43.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.922" endtime="20220704 20:42:43.922"/>
</return>
<msg timestamp="20220704 20:42:43.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.775" endtime="20220704 20:42:43.923"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:43.923" endtime="20220704 20:42:43.923"/>
</return>
<msg timestamp="20220704 20:42:43.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.774" endtime="20220704 20:42:43.923"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:43.923" endtime="20220704 20:42:43.923"/>
</return>
<msg timestamp="20220704 20:42:43.924" level="INFO">${checklist_id} = 62c350c3100d323f0a2840e5</msg>
<status status="PASS" starttime="20220704 20:42:43.923" endtime="20220704 20:42:43.924"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:43.925" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:43.925" endtime="20220704 20:42:43.925"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:43.925" endtime="20220704 20:42:43.925"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:43.926" level="INFO">${url} = checklists/62c350c3100d323f0a2840e5</msg>
<status status="PASS" starttime="20220704 20:42:43.926" endtime="20220704 20:42:43.926"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:44.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.926" endtime="20220704 20:42:44.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:44.046" endtime="20220704 20:42:44.046"/>
</return>
<msg timestamp="20220704 20:42:44.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.924" endtime="20220704 20:42:44.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:44.046" endtime="20220704 20:42:44.046"/>
</return>
<msg timestamp="20220704 20:42:44.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:43.924" endtime="20220704 20:42:44.047"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:44.048" level="INFO">${url} = checklists/62c350c3100d323f0a2840e5</msg>
<status status="PASS" starttime="20220704 20:42:44.047" endtime="20220704 20:42:44.048"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:44.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.048" endtime="20220704 20:42:44.132"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:44.132" endtime="20220704 20:42:44.132"/>
</return>
<msg timestamp="20220704 20:42:44.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.047" endtime="20220704 20:42:44.132"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:44.132" endtime="20220704 20:42:44.132"/>
</return>
<msg timestamp="20220704 20:42:44.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.047" endtime="20220704 20:42:44.132"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:44.133" endtime="20220704 20:42:44.133"/>
</return>
<msg timestamp="20220704 20:42:44.133" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 20:42:44.132" endtime="20220704 20:42:44.133"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:44.133" endtime="20220704 20:42:44.134"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:44.144" level="INFO">${url} = checklists/62c350c3100d323f0a2840e5</msg>
<status status="PASS" starttime="20220704 20:42:44.144" endtime="20220704 20:42:44.144"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:44.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.144" endtime="20220704 20:42:44.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:44.278" endtime="20220704 20:42:44.278"/>
</return>
<msg timestamp="20220704 20:42:44.278" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.143" endtime="20220704 20:42:44.278"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:44.278" endtime="20220704 20:42:44.278"/>
</return>
<status status="PASS" starttime="20220704 20:42:44.134" endtime="20220704 20:42:44.278"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 20:42:43.773" endtime="20220704 20:42:44.278"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:44.280" level="INFO">${url} = boards/62c350c265524b39fac6a192</msg>
<status status="PASS" starttime="20220704 20:42:44.280" endtime="20220704 20:42:44.280"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:44.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.280" endtime="20220704 20:42:44.637"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:44.637" endtime="20220704 20:42:44.637"/>
</return>
<msg timestamp="20220704 20:42:44.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.280" endtime="20220704 20:42:44.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:44.638" endtime="20220704 20:42:44.638"/>
</return>
<status status="PASS" starttime="20220704 20:42:44.279" endtime="20220704 20:42:44.638"/>
</kw>
<status status="PASS" starttime="20220704 20:42:44.279" endtime="20220704 20:42:44.638"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 20:42:44.638" endtime="20220704 20:42:44.639"/>
</kw>
<status status="PASS" starttime="20220704 20:42:44.279" endtime="20220704 20:42:44.639"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 20:42:42.435" endtime="20220704 20:42:44.639"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 20:42:44.648" endtime="20220704 20:42:44.648"/>
</kw>
<status status="PASS" starttime="20220704 20:42:44.648" endtime="20220704 20:42:44.649"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:44.650" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:44.649" endtime="20220704 20:42:44.650"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:44.650" endtime="20220704 20:42:44.650"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:44.650" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:42:44.650" endtime="20220704 20:42:44.650"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:44.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.651" endtime="20220704 20:42:44.910"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:44.910" endtime="20220704 20:42:44.910"/>
</return>
<msg timestamp="20220704 20:42:44.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.649" endtime="20220704 20:42:44.910"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:44.910" endtime="20220704 20:42:44.910"/>
</return>
<msg timestamp="20220704 20:42:44.910" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.649" endtime="20220704 20:42:44.910"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:42:44.911" level="INFO">${TEST_SUITE_BOARD_ID} = 62c350c4e459ce6366466fcd</msg>
<status status="PASS" starttime="20220704 20:42:44.910" endtime="20220704 20:42:44.911"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:44.986" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.911" endtime="20220704 20:42:44.986"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:42:44.987" level="INFO">${TEST_SUITE_LIST_ID} = 62c350c4e459ce6366466fd4</msg>
<status status="PASS" starttime="20220704 20:42:44.987" endtime="20220704 20:42:44.988"/>
</kw>
<status status="PASS" starttime="20220704 20:42:44.649" endtime="20220704 20:42:44.988"/>
</kw>
<status status="PASS" starttime="20220704 20:42:44.648" endtime="20220704 20:42:44.988"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:44.989" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:44.989" endtime="20220704 20:42:44.989"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:44.989" endtime="20220704 20:42:44.990"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:44.990" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 20:42:44.990" endtime="20220704 20:42:44.990"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:45.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.990" endtime="20220704 20:42:45.109"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.109" endtime="20220704 20:42:45.109"/>
</return>
<msg timestamp="20220704 20:42:45.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.989" endtime="20220704 20:42:45.109"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.109" endtime="20220704 20:42:45.109"/>
</return>
<msg timestamp="20220704 20:42:45.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:44.988" endtime="20220704 20:42:45.110"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:45.110" endtime="20220704 20:42:45.112"/>
</kw>
<status status="PASS" starttime="20220704 20:42:45.110" endtime="20220704 20:42:45.112"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:45.112" endtime="20220704 20:42:45.112"/>
</return>
<msg timestamp="20220704 20:42:45.113" level="INFO">${LABEL_ID} = 62c350c549b887159e5ee4d8</msg>
<status status="PASS" starttime="20220704 20:42:45.112" endtime="20220704 20:42:45.113"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:45.114" level="INFO">${url} = labels/62c350c549b887159e5ee4d8</msg>
<status status="PASS" starttime="20220704 20:42:45.114" endtime="20220704 20:42:45.114"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:45.192" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.114" endtime="20220704 20:42:45.192"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.192" endtime="20220704 20:42:45.192"/>
</return>
<msg timestamp="20220704 20:42:45.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.113" endtime="20220704 20:42:45.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.193" endtime="20220704 20:42:45.193"/>
</return>
<msg timestamp="20220704 20:42:45.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.113" endtime="20220704 20:42:45.193"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:45.193" endtime="20220704 20:42:45.193"/>
</return>
<msg timestamp="20220704 20:42:45.194" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 20:42:45.193" endtime="20220704 20:42:45.194"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:45.194" endtime="20220704 20:42:45.194"/>
</return>
<msg timestamp="20220704 20:42:45.195" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 20:42:45.194" endtime="20220704 20:42:45.195"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:45.195" endtime="20220704 20:42:45.195"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:45.196" endtime="20220704 20:42:45.196"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:45.197" level="INFO">${url} = labels/62c350c549b887159e5ee4d8</msg>
<status status="PASS" starttime="20220704 20:42:45.197" endtime="20220704 20:42:45.197"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:45.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.197" endtime="20220704 20:42:45.342"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.342" endtime="20220704 20:42:45.342"/>
</return>
<msg timestamp="20220704 20:42:45.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.196" endtime="20220704 20:42:45.343"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.343" endtime="20220704 20:42:45.343"/>
</return>
<status status="PASS" starttime="20220704 20:42:45.196" endtime="20220704 20:42:45.343"/>
</kw>
<status status="PASS" starttime="20220704 20:42:45.196" endtime="20220704 20:42:45.343"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:42:44.988" endtime="20220704 20:42:45.343"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:45.345" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:45.345" endtime="20220704 20:42:45.345"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:45.345" endtime="20220704 20:42:45.345"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:45.346" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 20:42:45.345" endtime="20220704 20:42:45.346"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:45.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.346" endtime="20220704 20:42:45.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.461" endtime="20220704 20:42:45.461"/>
</return>
<msg timestamp="20220704 20:42:45.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.344" endtime="20220704 20:42:45.461"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.461" endtime="20220704 20:42:45.461"/>
</return>
<msg timestamp="20220704 20:42:45.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.344" endtime="20220704 20:42:45.461"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:45.462" endtime="20220704 20:42:45.463"/>
</kw>
<status status="PASS" starttime="20220704 20:42:45.461" endtime="20220704 20:42:45.463"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:45.464" endtime="20220704 20:42:45.464"/>
</return>
<msg timestamp="20220704 20:42:45.464" level="INFO">${LABEL_ID} = 62c350c50a30ec62ce9754bd</msg>
<status status="PASS" starttime="20220704 20:42:45.463" endtime="20220704 20:42:45.464"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:45.465" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:45.465" endtime="20220704 20:42:45.466"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:45.466" endtime="20220704 20:42:45.466"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:45.466" level="INFO">${url} = labels/62c350c50a30ec62ce9754bd</msg>
<status status="PASS" starttime="20220704 20:42:45.466" endtime="20220704 20:42:45.466"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:45.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.466" endtime="20220704 20:42:45.604"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.604" endtime="20220704 20:42:45.604"/>
</return>
<msg timestamp="20220704 20:42:45.605" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.465" endtime="20220704 20:42:45.605"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.605" endtime="20220704 20:42:45.605"/>
</return>
<msg timestamp="20220704 20:42:45.605" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.465" endtime="20220704 20:42:45.605"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:45.605" endtime="20220704 20:42:45.605"/>
</return>
<msg timestamp="20220704 20:42:45.606" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 20:42:45.605" endtime="20220704 20:42:45.606"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:45.606" endtime="20220704 20:42:45.606"/>
</return>
<msg timestamp="20220704 20:42:45.607" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 20:42:45.606" endtime="20220704 20:42:45.607"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:45.607" endtime="20220704 20:42:45.607"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:45.607" endtime="20220704 20:42:45.608"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:45.609" level="INFO">${url} = labels/62c350c50a30ec62ce9754bd</msg>
<status status="PASS" starttime="20220704 20:42:45.609" endtime="20220704 20:42:45.609"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:45.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.610" endtime="20220704 20:42:45.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.746" endtime="20220704 20:42:45.746"/>
</return>
<msg timestamp="20220704 20:42:45.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.609" endtime="20220704 20:42:45.747"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.747" endtime="20220704 20:42:45.747"/>
</return>
<status status="PASS" starttime="20220704 20:42:45.608" endtime="20220704 20:42:45.747"/>
</kw>
<status status="PASS" starttime="20220704 20:42:45.608" endtime="20220704 20:42:45.747"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:42:45.343" endtime="20220704 20:42:45.747"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:45.749" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:45.749" endtime="20220704 20:42:45.749"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:45.749" endtime="20220704 20:42:45.750"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:45.750" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 20:42:45.750" endtime="20220704 20:42:45.750"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:45.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.750" endtime="20220704 20:42:45.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.872" endtime="20220704 20:42:45.872"/>
</return>
<msg timestamp="20220704 20:42:45.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.749" endtime="20220704 20:42:45.873"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:45.873" endtime="20220704 20:42:45.873"/>
</return>
<msg timestamp="20220704 20:42:45.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.748" endtime="20220704 20:42:45.873"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 20:42:45.873" endtime="20220704 20:42:45.873"/>
</return>
<msg timestamp="20220704 20:42:45.874" level="INFO">${LABEL_ID} = 62c350c5cb4b29808843221e</msg>
<status status="PASS" starttime="20220704 20:42:45.873" endtime="20220704 20:42:45.874"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:45.876" level="INFO">${url} = labels/62c350c5cb4b29808843221e</msg>
<status status="PASS" starttime="20220704 20:42:45.875" endtime="20220704 20:42:45.876"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:46.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.876" endtime="20220704 20:42:46.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:46.015" endtime="20220704 20:42:46.015"/>
</return>
<msg timestamp="20220704 20:42:46.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:45.875" endtime="20220704 20:42:46.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:46.015" endtime="20220704 20:42:46.015"/>
</return>
<status status="PASS" starttime="20220704 20:42:45.874" endtime="20220704 20:42:46.016"/>
</kw>
<status status="PASS" starttime="20220704 20:42:45.874" endtime="20220704 20:42:46.016"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:46.017" level="INFO">${url} = labels/62c350c5cb4b29808843221e</msg>
<status status="PASS" starttime="20220704 20:42:46.017" endtime="20220704 20:42:46.017"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:46.083" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:42:46.017" endtime="20220704 20:42:46.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:46.083" endtime="20220704 20:42:46.083"/>
</return>
<msg timestamp="20220704 20:42:46.084" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 20:42:46.016" endtime="20220704 20:42:46.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:46.084" endtime="20220704 20:42:46.084"/>
</return>
<status status="PASS" starttime="20220704 20:42:46.016" endtime="20220704 20:42:46.084"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:42:45.747" endtime="20220704 20:42:46.084"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:46.086" level="INFO">${url} = boards/62c350c4e459ce6366466fcd</msg>
<status status="PASS" starttime="20220704 20:42:46.086" endtime="20220704 20:42:46.086"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:46.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:46.087" endtime="20220704 20:42:46.415"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:46.415" endtime="20220704 20:42:46.415"/>
</return>
<msg timestamp="20220704 20:42:46.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:46.086" endtime="20220704 20:42:46.415"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:46.415" endtime="20220704 20:42:46.415"/>
</return>
<status status="PASS" starttime="20220704 20:42:46.085" endtime="20220704 20:42:46.415"/>
</kw>
<status status="PASS" starttime="20220704 20:42:46.085" endtime="20220704 20:42:46.415"/>
</kw>
<status status="PASS" starttime="20220704 20:42:46.085" endtime="20220704 20:42:46.415"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 20:42:46.415" endtime="20220704 20:42:46.416"/>
</kw>
<status status="PASS" starttime="20220704 20:42:46.085" endtime="20220704 20:42:46.416"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 20:42:44.640" endtime="20220704 20:42:46.416"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 20:42:46.426" endtime="20220704 20:42:46.427"/>
</kw>
<status status="PASS" starttime="20220704 20:42:46.426" endtime="20220704 20:42:46.427"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:46.428" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:46.428" endtime="20220704 20:42:46.428"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:46.428" endtime="20220704 20:42:46.428"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:46.429" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 20:42:46.429" endtime="20220704 20:42:46.429"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:46.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:46.429" endtime="20220704 20:42:46.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:46.690" endtime="20220704 20:42:46.690"/>
</return>
<msg timestamp="20220704 20:42:46.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:46.428" endtime="20220704 20:42:46.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:46.691" endtime="20220704 20:42:46.691"/>
</return>
<msg timestamp="20220704 20:42:46.691" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:46.427" endtime="20220704 20:42:46.691"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 20:42:46.692" level="INFO">${TEST_SUITE_BOARD_ID} = 62c350c60880ec795e7409f3</msg>
<status status="PASS" starttime="20220704 20:42:46.691" endtime="20220704 20:42:46.692"/>
</kw>
<status status="PASS" starttime="20220704 20:42:46.691" endtime="20220704 20:42:46.692"/>
</kw>
<status status="PASS" starttime="20220704 20:42:46.427" endtime="20220704 20:42:46.692"/>
</kw>
<status status="PASS" starttime="20220704 20:42:46.425" endtime="20220704 20:42:46.692"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:46.694" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:46.694" endtime="20220704 20:42:46.694"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:46.694" endtime="20220704 20:42:46.694"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:46.695" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 20:42:46.694" endtime="20220704 20:42:46.695"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:46.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:46.695" endtime="20220704 20:42:46.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:46.851" endtime="20220704 20:42:46.851"/>
</return>
<msg timestamp="20220704 20:42:46.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:46.693" endtime="20220704 20:42:46.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:46.851" endtime="20220704 20:42:46.851"/>
</return>
<msg timestamp="20220704 20:42:46.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:46.693" endtime="20220704 20:42:46.852"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:46.852" endtime="20220704 20:42:46.854"/>
</kw>
<status status="PASS" starttime="20220704 20:42:46.852" endtime="20220704 20:42:46.854"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 20:42:46.693" endtime="20220704 20:42:46.854"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:46.856" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:46.856" endtime="20220704 20:42:46.856"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:46.856" endtime="20220704 20:42:46.856"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:46.857" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 20:42:46.856" endtime="20220704 20:42:46.857"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:46.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:46.857" endtime="20220704 20:42:46.967"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:46.967" endtime="20220704 20:42:46.967"/>
</return>
<msg timestamp="20220704 20:42:46.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:46.855" endtime="20220704 20:42:46.967"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:46.967" endtime="20220704 20:42:46.967"/>
</return>
<msg timestamp="20220704 20:42:46.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:46.855" endtime="20220704 20:42:46.967"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:46.968" endtime="20220704 20:42:46.969"/>
</kw>
<status status="PASS" starttime="20220704 20:42:46.968" endtime="20220704 20:42:46.970"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:46.971" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:46.971" endtime="20220704 20:42:46.971"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:46.971" endtime="20220704 20:42:46.972"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:46.972" level="INFO">${url} = lists/62c350c6a1c84f452e254ab2</msg>
<status status="PASS" starttime="20220704 20:42:46.972" endtime="20220704 20:42:46.972"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:47.069" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:46.972" endtime="20220704 20:42:47.069"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:47.069" endtime="20220704 20:42:47.069"/>
</return>
<msg timestamp="20220704 20:42:47.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:46.970" endtime="20220704 20:42:47.070"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:47.070" endtime="20220704 20:42:47.070"/>
</return>
<status status="PASS" starttime="20220704 20:42:46.970" endtime="20220704 20:42:47.070"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:47.072" level="INFO">${url} = lists/62c350c6a1c84f452e254ab2</msg>
<status status="PASS" starttime="20220704 20:42:47.071" endtime="20220704 20:42:47.072"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:47.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:47.072" endtime="20220704 20:42:47.141"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:47.141" endtime="20220704 20:42:47.141"/>
</return>
<msg timestamp="20220704 20:42:47.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:47.071" endtime="20220704 20:42:47.141"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:47.141" endtime="20220704 20:42:47.141"/>
</return>
<msg timestamp="20220704 20:42:47.141" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:47.070" endtime="20220704 20:42:47.141"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 20:42:47.142" endtime="20220704 20:42:47.143"/>
</kw>
<status status="PASS" starttime="20220704 20:42:47.141" endtime="20220704 20:42:47.143"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 20:42:47.143" endtime="20220704 20:42:47.144"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 20:42:46.854" endtime="20220704 20:42:47.144"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:47.147" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:47.147" endtime="20220704 20:42:47.147"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:47.147" endtime="20220704 20:42:47.148"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:47.148" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 20:42:47.148" endtime="20220704 20:42:47.148"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:47.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:47.148" endtime="20220704 20:42:47.262"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:47.262" endtime="20220704 20:42:47.262"/>
</return>
<msg timestamp="20220704 20:42:47.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:47.147" endtime="20220704 20:42:47.262"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:47.262" endtime="20220704 20:42:47.262"/>
</return>
<msg timestamp="20220704 20:42:47.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:47.145" endtime="20220704 20:42:47.263"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 20:42:47.264" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 20:42:47.264" endtime="20220704 20:42:47.264"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 20:42:47.265" endtime="20220704 20:42:47.265"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:47.265" level="INFO">${url} = lists/62c350c729f69b090b914b77/closed</msg>
<status status="PASS" starttime="20220704 20:42:47.265" endtime="20220704 20:42:47.265"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 20:42:47.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:47.265" endtime="20220704 20:42:47.385"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:47.385" endtime="20220704 20:42:47.385"/>
</return>
<msg timestamp="20220704 20:42:47.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:47.264" endtime="20220704 20:42:47.386"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:47.386" endtime="20220704 20:42:47.386"/>
</return>
<status status="PASS" starttime="20220704 20:42:47.263" endtime="20220704 20:42:47.386"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:47.388" level="INFO">${url} = lists/62c350c729f69b090b914b77</msg>
<status status="PASS" starttime="20220704 20:42:47.387" endtime="20220704 20:42:47.388"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 20:42:47.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:47.388" endtime="20220704 20:42:47.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:47.456" endtime="20220704 20:42:47.456"/>
</return>
<msg timestamp="20220704 20:42:47.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:47.387" endtime="20220704 20:42:47.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:47.456" endtime="20220704 20:42:47.456"/>
</return>
<msg timestamp="20220704 20:42:47.457" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:47.386" endtime="20220704 20:42:47.457"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 20:42:47.457" endtime="20220704 20:42:47.457"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 20:42:47.144" endtime="20220704 20:42:47.458"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 20:42:47.460" level="INFO">${url} = boards/62c350c60880ec795e7409f3</msg>
<status status="PASS" starttime="20220704 20:42:47.460" endtime="20220704 20:42:47.460"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 20:42:47.821" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:47.460" endtime="20220704 20:42:47.821"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:47.821" endtime="20220704 20:42:47.821"/>
</return>
<msg timestamp="20220704 20:42:47.822" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 20:42:47.460" endtime="20220704 20:42:47.822"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 20:42:47.822" endtime="20220704 20:42:47.822"/>
</return>
<status status="PASS" starttime="20220704 20:42:47.459" endtime="20220704 20:42:47.822"/>
</kw>
<status status="PASS" starttime="20220704 20:42:47.459" endtime="20220704 20:42:47.822"/>
</kw>
<status status="PASS" starttime="20220704 20:42:47.459" endtime="20220704 20:42:47.822"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 20:42:47.822" endtime="20220704 20:42:47.823"/>
</kw>
<status status="PASS" starttime="20220704 20:42:47.458" endtime="20220704 20:42:47.823"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 20:42:46.418" endtime="20220704 20:42:47.823"/>
</suite>
<status status="PASS" starttime="20220704 20:42:35.557" endtime="20220704 20:42:47.825"/>
</suite>
<status status="PASS" starttime="20220704 20:42:35.540" endtime="20220704 20:42:47.828"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
