<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 06:29:21.555" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:29:21.678" endtime="20220705 06:29:21.679"/>
</kw>
<status status="PASS" starttime="20220705 06:29:21.677" endtime="20220705 06:29:21.679"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:21.681" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:21.681" endtime="20220705 06:29:21.681"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:21.681" endtime="20220705 06:29:21.681"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:21.682" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:29:21.681" endtime="20220705 06:29:21.682"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:21.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:21.682" endtime="20220705 06:29:21.915"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:21.915" endtime="20220705 06:29:21.915"/>
</return>
<msg timestamp="20220705 06:29:21.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:21.680" endtime="20220705 06:29:21.916"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:21.916" endtime="20220705 06:29:21.916"/>
</return>
<msg timestamp="20220705 06:29:21.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:21.680" endtime="20220705 06:29:21.916"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:21.917" endtime="20220705 06:29:21.922"/>
</kw>
<status status="PASS" starttime="20220705 06:29:21.916" endtime="20220705 06:29:21.922"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:21.924" level="INFO">${url} = boards/62c3da415e395a345e94a80d</msg>
<status status="PASS" starttime="20220705 06:29:21.924" endtime="20220705 06:29:21.924"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:22.238" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:21.924" endtime="20220705 06:29:22.238"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:22.238" endtime="20220705 06:29:22.238"/>
</return>
<msg timestamp="20220705 06:29:22.239" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:21.923" endtime="20220705 06:29:22.239"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:22.239" endtime="20220705 06:29:22.239"/>
</return>
<status status="PASS" starttime="20220705 06:29:21.922" endtime="20220705 06:29:22.239"/>
</kw>
<status status="PASS" starttime="20220705 06:29:21.922" endtime="20220705 06:29:22.239"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:29:21.679" endtime="20220705 06:29:22.239"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:22.241" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:22.241" endtime="20220705 06:29:22.241"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:22.241" endtime="20220705 06:29:22.241"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:22.242" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:29:22.242" endtime="20220705 06:29:22.242"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:22.411" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:22.242" endtime="20220705 06:29:22.411"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:22.411" endtime="20220705 06:29:22.411"/>
</return>
<msg timestamp="20220705 06:29:22.411" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:22.240" endtime="20220705 06:29:22.411"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:22.411" endtime="20220705 06:29:22.411"/>
</return>
<msg timestamp="20220705 06:29:22.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:22.240" endtime="20220705 06:29:22.412"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:22.412" endtime="20220705 06:29:22.416"/>
</kw>
<status status="PASS" starttime="20220705 06:29:22.412" endtime="20220705 06:29:22.416"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:22.418" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:22.417" endtime="20220705 06:29:22.418"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:22.418" endtime="20220705 06:29:22.418"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:22.418" level="INFO">${url} = boards/62c3da42ac9489499a8fa43a</msg>
<status status="PASS" starttime="20220705 06:29:22.418" endtime="20220705 06:29:22.418"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:22.526" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:22.418" endtime="20220705 06:29:22.526"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:22.526" endtime="20220705 06:29:22.526"/>
</return>
<msg timestamp="20220705 06:29:22.526" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:22.417" endtime="20220705 06:29:22.526"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:22.526" endtime="20220705 06:29:22.526"/>
</return>
<status status="PASS" starttime="20220705 06:29:22.416" endtime="20220705 06:29:22.526"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:22.528" level="INFO">${url} = boards/62c3da42ac9489499a8fa43a</msg>
<status status="PASS" starttime="20220705 06:29:22.528" endtime="20220705 06:29:22.528"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:22.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:22.528" endtime="20220705 06:29:22.575"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:22.575" endtime="20220705 06:29:22.575"/>
</return>
<msg timestamp="20220705 06:29:22.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:22.527" endtime="20220705 06:29:22.575"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:22.575" endtime="20220705 06:29:22.575"/>
</return>
<msg timestamp="20220705 06:29:22.575" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:22.527" endtime="20220705 06:29:22.575"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:22.576" endtime="20220705 06:29:22.580"/>
</kw>
<status status="PASS" starttime="20220705 06:29:22.576" endtime="20220705 06:29:22.580"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:22.580" endtime="20220705 06:29:22.581"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:22.584" level="INFO">${url} = boards/62c3da42ac9489499a8fa43a</msg>
<status status="PASS" starttime="20220705 06:29:22.583" endtime="20220705 06:29:22.584"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:22.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:22.584" endtime="20220705 06:29:22.879"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:22.879" endtime="20220705 06:29:22.879"/>
</return>
<msg timestamp="20220705 06:29:22.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:22.582" endtime="20220705 06:29:22.879"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:22.879" endtime="20220705 06:29:22.879"/>
</return>
<status status="PASS" starttime="20220705 06:29:22.582" endtime="20220705 06:29:22.879"/>
</kw>
<status status="PASS" starttime="20220705 06:29:22.581" endtime="20220705 06:29:22.879"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:29:22.239" endtime="20220705 06:29:22.880"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:22.881" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:22.881" endtime="20220705 06:29:22.881"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:22.882" endtime="20220705 06:29:22.882"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:22.883" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:29:22.882" endtime="20220705 06:29:22.883"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:23.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:22.883" endtime="20220705 06:29:23.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:23.095" endtime="20220705 06:29:23.095"/>
</return>
<msg timestamp="20220705 06:29:23.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:22.881" endtime="20220705 06:29:23.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:23.095" endtime="20220705 06:29:23.095"/>
</return>
<msg timestamp="20220705 06:29:23.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:22.880" endtime="20220705 06:29:23.095"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:23.097" level="INFO">${url} = boards/62c3da4241f3f629a5307f22</msg>
<status status="PASS" starttime="20220705 06:29:23.097" endtime="20220705 06:29:23.097"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:23.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:23.098" endtime="20220705 06:29:23.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:23.440" endtime="20220705 06:29:23.440"/>
</return>
<msg timestamp="20220705 06:29:23.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:23.097" endtime="20220705 06:29:23.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:23.440" endtime="20220705 06:29:23.440"/>
</return>
<status status="PASS" starttime="20220705 06:29:23.096" endtime="20220705 06:29:23.440"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:23.442" level="INFO">${url} = boards/62c3da4241f3f629a5307f22</msg>
<status status="PASS" starttime="20220705 06:29:23.442" endtime="20220705 06:29:23.442"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:23.477" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:29:23.442" endtime="20220705 06:29:23.477"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:23.477" endtime="20220705 06:29:23.477"/>
</return>
<msg timestamp="20220705 06:29:23.477" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:29:23.441" endtime="20220705 06:29:23.477"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:23.477" endtime="20220705 06:29:23.477"/>
</return>
<status status="PASS" starttime="20220705 06:29:23.440" endtime="20220705 06:29:23.477"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:29:22.880" endtime="20220705 06:29:23.477"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:23.480" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:23.479" endtime="20220705 06:29:23.480"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:23.480" endtime="20220705 06:29:23.480"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:23.481" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:29:23.480" endtime="20220705 06:29:23.481"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:23.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:23.481" endtime="20220705 06:29:23.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:23.652" endtime="20220705 06:29:23.652"/>
</return>
<msg timestamp="20220705 06:29:23.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:23.479" endtime="20220705 06:29:23.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:23.652" endtime="20220705 06:29:23.652"/>
</return>
<msg timestamp="20220705 06:29:23.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:23.479" endtime="20220705 06:29:23.652"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:23.653" endtime="20220705 06:29:23.657"/>
</kw>
<status status="PASS" starttime="20220705 06:29:23.653" endtime="20220705 06:29:23.658"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:23.659" level="INFO">${url} = boards/62c3da43d3f749466b178758</msg>
<status status="PASS" starttime="20220705 06:29:23.659" endtime="20220705 06:29:23.659"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:23.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:23.659" endtime="20220705 06:29:23.718"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:23.718" endtime="20220705 06:29:23.718"/>
</return>
<msg timestamp="20220705 06:29:23.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:23.659" endtime="20220705 06:29:23.718"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:23.718" endtime="20220705 06:29:23.718"/>
</return>
<msg timestamp="20220705 06:29:23.719" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:23.658" endtime="20220705 06:29:23.719"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:23.719" endtime="20220705 06:29:23.723"/>
</kw>
<status status="PASS" starttime="20220705 06:29:23.719" endtime="20220705 06:29:23.723"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:23.723" endtime="20220705 06:29:23.724"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:23.726" level="INFO">${url} = boards/62c3da43d3f749466b178758</msg>
<status status="PASS" starttime="20220705 06:29:23.726" endtime="20220705 06:29:23.726"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:24.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:23.726" endtime="20220705 06:29:24.082"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:24.082" endtime="20220705 06:29:24.082"/>
</return>
<msg timestamp="20220705 06:29:24.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:23.725" endtime="20220705 06:29:24.082"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:24.083" endtime="20220705 06:29:24.083"/>
</return>
<status status="PASS" starttime="20220705 06:29:23.724" endtime="20220705 06:29:24.083"/>
</kw>
<status status="PASS" starttime="20220705 06:29:23.724" endtime="20220705 06:29:24.083"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:29:23.478" endtime="20220705 06:29:24.083"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:24.086" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:24.086" endtime="20220705 06:29:24.086"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:24.086" endtime="20220705 06:29:24.086"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:24.087" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:29:24.086" endtime="20220705 06:29:24.087"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:24.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.087" endtime="20220705 06:29:24.265"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:24.265" endtime="20220705 06:29:24.265"/>
</return>
<msg timestamp="20220705 06:29:24.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.085" endtime="20220705 06:29:24.265"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:24.265" endtime="20220705 06:29:24.265"/>
</return>
<msg timestamp="20220705 06:29:24.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.085" endtime="20220705 06:29:24.265"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:24.266" endtime="20220705 06:29:24.270"/>
</kw>
<status status="PASS" starttime="20220705 06:29:24.266" endtime="20220705 06:29:24.270"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:24.272" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:24.272" endtime="20220705 06:29:24.272"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:24.272" endtime="20220705 06:29:24.272"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:24.273" level="INFO">${url} = boards/62c3da449e32e05672262eac</msg>
<status status="PASS" starttime="20220705 06:29:24.272" endtime="20220705 06:29:24.273"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:24.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.273" endtime="20220705 06:29:24.355"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:24.355" endtime="20220705 06:29:24.355"/>
</return>
<msg timestamp="20220705 06:29:24.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.271" endtime="20220705 06:29:24.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:24.356" endtime="20220705 06:29:24.356"/>
</return>
<status status="PASS" starttime="20220705 06:29:24.271" endtime="20220705 06:29:24.356"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:24.358" level="INFO">${url} = boards/62c3da449e32e05672262eac</msg>
<status status="PASS" starttime="20220705 06:29:24.357" endtime="20220705 06:29:24.358"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:24.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.358" endtime="20220705 06:29:24.406"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:24.406" endtime="20220705 06:29:24.406"/>
</return>
<msg timestamp="20220705 06:29:24.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.357" endtime="20220705 06:29:24.406"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:24.406" endtime="20220705 06:29:24.406"/>
</return>
<msg timestamp="20220705 06:29:24.406" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.356" endtime="20220705 06:29:24.406"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:24.406" endtime="20220705 06:29:24.407"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:24.409" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:24.409" endtime="20220705 06:29:24.409"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:24.409" endtime="20220705 06:29:24.410"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:24.410" level="INFO">${url} = boards/62c3da449e32e05672262eac</msg>
<status status="PASS" starttime="20220705 06:29:24.410" endtime="20220705 06:29:24.410"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:24.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.410" endtime="20220705 06:29:24.707"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:24.707" endtime="20220705 06:29:24.707"/>
</return>
<msg timestamp="20220705 06:29:24.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.408" endtime="20220705 06:29:24.707"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:24.707" endtime="20220705 06:29:24.707"/>
</return>
<status status="PASS" starttime="20220705 06:29:24.407" endtime="20220705 06:29:24.707"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:24.709" level="INFO">${url} = boards/62c3da449e32e05672262eac</msg>
<status status="PASS" starttime="20220705 06:29:24.709" endtime="20220705 06:29:24.709"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:24.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.710" endtime="20220705 06:29:24.760"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:24.760" endtime="20220705 06:29:24.760"/>
</return>
<msg timestamp="20220705 06:29:24.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.709" endtime="20220705 06:29:24.761"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:24.761" endtime="20220705 06:29:24.761"/>
</return>
<msg timestamp="20220705 06:29:24.761" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.707" endtime="20220705 06:29:24.761"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:24.761" endtime="20220705 06:29:24.762"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:24.764" level="INFO">${url} = boards/62c3da449e32e05672262eac</msg>
<status status="PASS" starttime="20220705 06:29:24.764" endtime="20220705 06:29:24.764"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:25.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.764" endtime="20220705 06:29:25.105"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:25.105" endtime="20220705 06:29:25.105"/>
</return>
<msg timestamp="20220705 06:29:25.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:24.763" endtime="20220705 06:29:25.105"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:25.105" endtime="20220705 06:29:25.105"/>
</return>
<status status="PASS" starttime="20220705 06:29:24.762" endtime="20220705 06:29:25.106"/>
</kw>
<status status="PASS" starttime="20220705 06:29:24.762" endtime="20220705 06:29:25.106"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:29:24.083" endtime="20220705 06:29:25.106"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 06:29:25.107" endtime="20220705 06:29:25.108"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 06:29:21.574" endtime="20220705 06:29:25.109"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:29:25.121" endtime="20220705 06:29:25.121"/>
</kw>
<status status="PASS" starttime="20220705 06:29:25.121" endtime="20220705 06:29:25.121"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:25.122" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:25.122" endtime="20220705 06:29:25.122"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:25.122" endtime="20220705 06:29:25.123"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:25.123" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:29:25.123" endtime="20220705 06:29:25.123"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:25.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.123" endtime="20220705 06:29:25.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:25.347" endtime="20220705 06:29:25.347"/>
</return>
<msg timestamp="20220705 06:29:25.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.122" endtime="20220705 06:29:25.348"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:25.348" endtime="20220705 06:29:25.348"/>
</return>
<msg timestamp="20220705 06:29:25.348" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.122" endtime="20220705 06:29:25.348"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:29:25.349" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3da45270a9f2c0d2a6b7e</msg>
<status status="PASS" starttime="20220705 06:29:25.348" endtime="20220705 06:29:25.349"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:25.350" level="INFO">${url} = boards/62c3da45270a9f2c0d2a6b7e/lists/</msg>
<status status="PASS" starttime="20220705 06:29:25.350" endtime="20220705 06:29:25.350"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:25.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.350" endtime="20220705 06:29:25.395"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:25.395" endtime="20220705 06:29:25.395"/>
</return>
<msg timestamp="20220705 06:29:25.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.350" endtime="20220705 06:29:25.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:25.396" endtime="20220705 06:29:25.396"/>
</return>
<msg timestamp="20220705 06:29:25.396" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.349" endtime="20220705 06:29:25.396"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:29:25.397" level="INFO">${TEST_SUITE_LIST_ID} = 62c3da45270a9f2c0d2a6b85</msg>
<status status="PASS" starttime="20220705 06:29:25.396" endtime="20220705 06:29:25.397"/>
</kw>
<status status="PASS" starttime="20220705 06:29:25.121" endtime="20220705 06:29:25.397"/>
</kw>
<status status="PASS" starttime="20220705 06:29:25.121" endtime="20220705 06:29:25.397"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:25.399" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:25.399" endtime="20220705 06:29:25.399"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:25.399" endtime="20220705 06:29:25.399"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:25.400" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 06:29:25.399" endtime="20220705 06:29:25.400"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:25.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.400" endtime="20220705 06:29:25.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:25.552" endtime="20220705 06:29:25.552"/>
</return>
<msg timestamp="20220705 06:29:25.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.398" endtime="20220705 06:29:25.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:25.553" endtime="20220705 06:29:25.553"/>
</return>
<msg timestamp="20220705 06:29:25.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.398" endtime="20220705 06:29:25.553"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:25.554" endtime="20220705 06:29:25.559"/>
</kw>
<status status="PASS" starttime="20220705 06:29:25.553" endtime="20220705 06:29:25.559"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:25.560" endtime="20220705 06:29:25.560"/>
</return>
<msg timestamp="20220705 06:29:25.560" level="INFO">${CARD_ID} = 62c3da45631c53101861ade0</msg>
<status status="PASS" starttime="20220705 06:29:25.559" endtime="20220705 06:29:25.560"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:25.561" level="INFO">${url} = cards/62c3da45631c53101861ade0</msg>
<status status="PASS" starttime="20220705 06:29:25.561" endtime="20220705 06:29:25.561"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:25.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.562" endtime="20220705 06:29:25.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:25.865" endtime="20220705 06:29:25.865"/>
</return>
<msg timestamp="20220705 06:29:25.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.561" endtime="20220705 06:29:25.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:25.865" endtime="20220705 06:29:25.866"/>
</return>
<msg timestamp="20220705 06:29:25.866" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.560" endtime="20220705 06:29:25.866"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:25.866" endtime="20220705 06:29:25.866"/>
</return>
<msg timestamp="20220705 06:29:25.867" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 06:29:25.866" endtime="20220705 06:29:25.867"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:25.867" endtime="20220705 06:29:25.868"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:25.869" level="INFO">${url} = cards/62c3da45631c53101861ade0</msg>
<status status="PASS" starttime="20220705 06:29:25.869" endtime="20220705 06:29:25.869"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:26.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.870" endtime="20220705 06:29:26.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.026" endtime="20220705 06:29:26.026"/>
</return>
<msg timestamp="20220705 06:29:26.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:25.869" endtime="20220705 06:29:26.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.027" endtime="20220705 06:29:26.027"/>
</return>
<status status="PASS" starttime="20220705 06:29:25.868" endtime="20220705 06:29:26.027"/>
</kw>
<status status="PASS" starttime="20220705 06:29:25.868" endtime="20220705 06:29:26.027"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:29:25.397" endtime="20220705 06:29:26.027"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:26.030" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:26.029" endtime="20220705 06:29:26.030"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:26.030" endtime="20220705 06:29:26.030"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:26.031" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 06:29:26.030" endtime="20220705 06:29:26.031"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:26.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.031" endtime="20220705 06:29:26.201"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.201" endtime="20220705 06:29:26.201"/>
</return>
<msg timestamp="20220705 06:29:26.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.029" endtime="20220705 06:29:26.202"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.202" endtime="20220705 06:29:26.202"/>
</return>
<msg timestamp="20220705 06:29:26.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.028" endtime="20220705 06:29:26.202"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:26.202" endtime="20220705 06:29:26.202"/>
</return>
<msg timestamp="20220705 06:29:26.203" level="INFO">${CARD_ID} = 62c3da46efeb8058445e11fc</msg>
<status status="PASS" starttime="20220705 06:29:26.202" endtime="20220705 06:29:26.203"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:26.206" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:26.205" endtime="20220705 06:29:26.206"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:26.206" endtime="20220705 06:29:26.206"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:26.206" level="INFO">${url} = cards/62c3da46efeb8058445e11fc</msg>
<status status="PASS" starttime="20220705 06:29:26.206" endtime="20220705 06:29:26.206"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:26.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.207" endtime="20220705 06:29:26.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.332" endtime="20220705 06:29:26.332"/>
</return>
<msg timestamp="20220705 06:29:26.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.205" endtime="20220705 06:29:26.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.332" endtime="20220705 06:29:26.332"/>
</return>
<msg timestamp="20220705 06:29:26.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.204" endtime="20220705 06:29:26.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.333" endtime="20220705 06:29:26.333"/>
</return>
<status status="PASS" starttime="20220705 06:29:26.203" endtime="20220705 06:29:26.333"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:26.334" level="INFO">${url} = cards/62c3da46efeb8058445e11fc</msg>
<status status="PASS" starttime="20220705 06:29:26.334" endtime="20220705 06:29:26.334"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:26.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.334" endtime="20220705 06:29:26.383"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.383" endtime="20220705 06:29:26.384"/>
</return>
<msg timestamp="20220705 06:29:26.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.333" endtime="20220705 06:29:26.384"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.384" endtime="20220705 06:29:26.384"/>
</return>
<msg timestamp="20220705 06:29:26.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.333" endtime="20220705 06:29:26.384"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:26.385" endtime="20220705 06:29:26.385"/>
</return>
<msg timestamp="20220705 06:29:26.386" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 06:29:26.384" endtime="20220705 06:29:26.386"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 06:29:26.386" endtime="20220705 06:29:26.386"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:26.388" level="INFO">${url} = cards/62c3da46efeb8058445e11fc</msg>
<status status="PASS" starttime="20220705 06:29:26.387" endtime="20220705 06:29:26.388"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:26.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.388" endtime="20220705 06:29:26.538"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.538" endtime="20220705 06:29:26.538"/>
</return>
<msg timestamp="20220705 06:29:26.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.387" endtime="20220705 06:29:26.538"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.538" endtime="20220705 06:29:26.538"/>
</return>
<status status="PASS" starttime="20220705 06:29:26.386" endtime="20220705 06:29:26.539"/>
</kw>
<status status="PASS" starttime="20220705 06:29:26.386" endtime="20220705 06:29:26.539"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:29:26.028" endtime="20220705 06:29:26.539"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:26.542" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:26.542" endtime="20220705 06:29:26.542"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:26.542" endtime="20220705 06:29:26.542"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:26.543" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 06:29:26.543" endtime="20220705 06:29:26.543"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:26.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.543" endtime="20220705 06:29:26.694"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.694" endtime="20220705 06:29:26.694"/>
</return>
<msg timestamp="20220705 06:29:26.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.541" endtime="20220705 06:29:26.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.695" endtime="20220705 06:29:26.695"/>
</return>
<msg timestamp="20220705 06:29:26.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.540" endtime="20220705 06:29:26.695"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:26.695" endtime="20220705 06:29:26.695"/>
</return>
<msg timestamp="20220705 06:29:26.696" level="INFO">${CARD_ID} = 62c3da4693a9827c4d36ce3b</msg>
<status status="PASS" starttime="20220705 06:29:26.695" endtime="20220705 06:29:26.696"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:26.698" level="INFO">${url} = cards/62c3da4693a9827c4d36ce3b</msg>
<status status="PASS" starttime="20220705 06:29:26.697" endtime="20220705 06:29:26.698"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:26.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.698" endtime="20220705 06:29:26.869"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.870" endtime="20220705 06:29:26.870"/>
</return>
<msg timestamp="20220705 06:29:26.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.697" endtime="20220705 06:29:26.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.870" endtime="20220705 06:29:26.870"/>
</return>
<msg timestamp="20220705 06:29:26.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.696" endtime="20220705 06:29:26.870"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:26.871" endtime="20220705 06:29:26.872"/>
</kw>
<status status="PASS" starttime="20220705 06:29:26.870" endtime="20220705 06:29:26.873"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:26.874" level="INFO">${url} = cards/62c3da4693a9827c4d36ce3b</msg>
<status status="PASS" starttime="20220705 06:29:26.874" endtime="20220705 06:29:26.874"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:26.912" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:29:26.874" endtime="20220705 06:29:26.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.912" endtime="20220705 06:29:26.912"/>
</return>
<msg timestamp="20220705 06:29:26.912" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:29:26.873" endtime="20220705 06:29:26.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:26.912" endtime="20220705 06:29:26.912"/>
</return>
<status status="PASS" starttime="20220705 06:29:26.873" endtime="20220705 06:29:26.912"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:29:26.539" endtime="20220705 06:29:26.912"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:26.915" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:26.915" endtime="20220705 06:29:26.915"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:26.915" endtime="20220705 06:29:26.915"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:26.916" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 06:29:26.915" endtime="20220705 06:29:26.916"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:27.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.916" endtime="20220705 06:29:27.070"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:27.070" endtime="20220705 06:29:27.070"/>
</return>
<msg timestamp="20220705 06:29:27.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.914" endtime="20220705 06:29:27.070"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:27.070" endtime="20220705 06:29:27.070"/>
</return>
<msg timestamp="20220705 06:29:27.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:26.914" endtime="20220705 06:29:27.070"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:27.071" endtime="20220705 06:29:27.071"/>
</return>
<msg timestamp="20220705 06:29:27.072" level="INFO">${CARD_ID} = 62c3da46f0efd97ea9e2a574</msg>
<status status="PASS" starttime="20220705 06:29:27.071" endtime="20220705 06:29:27.072"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:27.073" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:27.073" endtime="20220705 06:29:27.073"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:27.073" endtime="20220705 06:29:27.073"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:27.074" level="INFO">${url} = cards/62c3da46f0efd97ea9e2a574</msg>
<status status="PASS" starttime="20220705 06:29:27.074" endtime="20220705 06:29:27.074"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:27.225" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:27.074" endtime="20220705 06:29:27.225"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:27.225" endtime="20220705 06:29:27.225"/>
</return>
<msg timestamp="20220705 06:29:27.225" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:27.072" endtime="20220705 06:29:27.225"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:27.225" endtime="20220705 06:29:27.226"/>
</return>
<msg timestamp="20220705 06:29:27.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:27.072" endtime="20220705 06:29:27.226"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:27.226" endtime="20220705 06:29:27.231"/>
</kw>
<status status="PASS" starttime="20220705 06:29:27.226" endtime="20220705 06:29:27.231"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:27.233" level="INFO">${url} = cards/62c3da46f0efd97ea9e2a574</msg>
<status status="PASS" starttime="20220705 06:29:27.232" endtime="20220705 06:29:27.233"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:27.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:27.233" endtime="20220705 06:29:27.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:27.283" endtime="20220705 06:29:27.283"/>
</return>
<msg timestamp="20220705 06:29:27.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:27.232" endtime="20220705 06:29:27.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:27.283" endtime="20220705 06:29:27.283"/>
</return>
<msg timestamp="20220705 06:29:27.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:27.231" endtime="20220705 06:29:27.283"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:27.284" endtime="20220705 06:29:27.284"/>
</return>
<msg timestamp="20220705 06:29:27.285" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 06:29:27.283" endtime="20220705 06:29:27.285"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:27.285" endtime="20220705 06:29:27.285"/>
</return>
<msg timestamp="20220705 06:29:27.286" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 06:29:27.285" endtime="20220705 06:29:27.286"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:27.286" endtime="20220705 06:29:27.286"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:27.286" endtime="20220705 06:29:27.286"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:27.288" level="INFO">${url} = cards/62c3da46f0efd97ea9e2a574</msg>
<status status="PASS" starttime="20220705 06:29:27.288" endtime="20220705 06:29:27.288"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:27.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:27.288" endtime="20220705 06:29:27.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:27.434" endtime="20220705 06:29:27.434"/>
</return>
<msg timestamp="20220705 06:29:27.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:27.287" endtime="20220705 06:29:27.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:27.434" endtime="20220705 06:29:27.434"/>
</return>
<status status="PASS" starttime="20220705 06:29:27.287" endtime="20220705 06:29:27.435"/>
</kw>
<status status="PASS" starttime="20220705 06:29:27.287" endtime="20220705 06:29:27.435"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:29:26.913" endtime="20220705 06:29:27.435"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:27.438" level="INFO">${url} = boards/62c3da45270a9f2c0d2a6b7e</msg>
<status status="PASS" starttime="20220705 06:29:27.437" endtime="20220705 06:29:27.438"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:27.821" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:27.438" endtime="20220705 06:29:27.821"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:27.821" endtime="20220705 06:29:27.821"/>
</return>
<msg timestamp="20220705 06:29:27.821" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:27.437" endtime="20220705 06:29:27.821"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:27.821" endtime="20220705 06:29:27.821"/>
</return>
<status status="PASS" starttime="20220705 06:29:27.436" endtime="20220705 06:29:27.821"/>
</kw>
<status status="PASS" starttime="20220705 06:29:27.436" endtime="20220705 06:29:27.821"/>
</kw>
<status status="PASS" starttime="20220705 06:29:27.436" endtime="20220705 06:29:27.821"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:29:27.822" endtime="20220705 06:29:27.823"/>
</kw>
<status status="PASS" starttime="20220705 06:29:27.435" endtime="20220705 06:29:27.823"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 06:29:25.111" endtime="20220705 06:29:27.823"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:29:27.834" endtime="20220705 06:29:27.835"/>
</kw>
<status status="PASS" starttime="20220705 06:29:27.834" endtime="20220705 06:29:27.835"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:27.836" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:27.836" endtime="20220705 06:29:27.836"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:27.836" endtime="20220705 06:29:27.836"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:27.837" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:29:27.836" endtime="20220705 06:29:27.837"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:28.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:27.837" endtime="20220705 06:29:28.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.038" endtime="20220705 06:29:28.038"/>
</return>
<msg timestamp="20220705 06:29:28.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:27.835" endtime="20220705 06:29:28.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.039" endtime="20220705 06:29:28.039"/>
</return>
<msg timestamp="20220705 06:29:28.039" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:27.835" endtime="20220705 06:29:28.039"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:29:28.040" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3da47d69717459c5e2b4e</msg>
<status status="PASS" starttime="20220705 06:29:28.039" endtime="20220705 06:29:28.040"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:28.041" level="INFO">${url} = boards/62c3da47d69717459c5e2b4e/lists/</msg>
<status status="PASS" starttime="20220705 06:29:28.041" endtime="20220705 06:29:28.041"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:28.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.041" endtime="20220705 06:29:28.091"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.091" endtime="20220705 06:29:28.091"/>
</return>
<msg timestamp="20220705 06:29:28.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.041" endtime="20220705 06:29:28.091"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.091" endtime="20220705 06:29:28.091"/>
</return>
<msg timestamp="20220705 06:29:28.092" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.040" endtime="20220705 06:29:28.092"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:29:28.093" level="INFO">${TEST_SUITE_LIST_ID} = 62c3da47d69717459c5e2b55</msg>
<status status="PASS" starttime="20220705 06:29:28.092" endtime="20220705 06:29:28.093"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:28.094" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:28.094" endtime="20220705 06:29:28.095"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:28.095" endtime="20220705 06:29:28.095"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:28.096" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 06:29:28.095" endtime="20220705 06:29:28.096"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:28.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.096" endtime="20220705 06:29:28.279"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.280" endtime="20220705 06:29:28.280"/>
</return>
<msg timestamp="20220705 06:29:28.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.094" endtime="20220705 06:29:28.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.280" endtime="20220705 06:29:28.280"/>
</return>
<msg timestamp="20220705 06:29:28.280" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.093" endtime="20220705 06:29:28.280"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:29:28.281" level="INFO">${TEST_SUITE_CARD_ID} = 62c3da48ac465d41064e3705</msg>
<status status="PASS" starttime="20220705 06:29:28.280" endtime="20220705 06:29:28.281"/>
</kw>
<status status="PASS" starttime="20220705 06:29:27.835" endtime="20220705 06:29:28.281"/>
</kw>
<status status="PASS" starttime="20220705 06:29:27.834" endtime="20220705 06:29:28.281"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:28.284" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:28.283" endtime="20220705 06:29:28.284"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:28.284" endtime="20220705 06:29:28.284"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:28.285" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 06:29:28.284" endtime="20220705 06:29:28.285"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:28.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.285" endtime="20220705 06:29:28.417"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.417" endtime="20220705 06:29:28.417"/>
</return>
<msg timestamp="20220705 06:29:28.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.283" endtime="20220705 06:29:28.417"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.417" endtime="20220705 06:29:28.417"/>
</return>
<msg timestamp="20220705 06:29:28.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.282" endtime="20220705 06:29:28.418"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:28.418" endtime="20220705 06:29:28.418"/>
</return>
<msg timestamp="20220705 06:29:28.419" level="INFO">${checklist_id} = 62c3da48286498145123a962</msg>
<status status="PASS" starttime="20220705 06:29:28.418" endtime="20220705 06:29:28.419"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:28.420" level="INFO">${url} = checklists/62c3da48286498145123a962</msg>
<status status="PASS" starttime="20220705 06:29:28.420" endtime="20220705 06:29:28.420"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:28.479" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.421" endtime="20220705 06:29:28.479"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.479" endtime="20220705 06:29:28.479"/>
</return>
<msg timestamp="20220705 06:29:28.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.419" endtime="20220705 06:29:28.480"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.480" endtime="20220705 06:29:28.480"/>
</return>
<msg timestamp="20220705 06:29:28.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.419" endtime="20220705 06:29:28.480"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:28.481" endtime="20220705 06:29:28.481"/>
</return>
<msg timestamp="20220705 06:29:28.481" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 06:29:28.480" endtime="20220705 06:29:28.481"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:28.481" endtime="20220705 06:29:28.482"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:28.483" level="INFO">${url} = checklists/62c3da48286498145123a962</msg>
<status status="PASS" starttime="20220705 06:29:28.483" endtime="20220705 06:29:28.483"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:28.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.483" endtime="20220705 06:29:28.588"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.588" endtime="20220705 06:29:28.588"/>
</return>
<msg timestamp="20220705 06:29:28.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.482" endtime="20220705 06:29:28.589"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.589" endtime="20220705 06:29:28.589"/>
</return>
<status status="PASS" starttime="20220705 06:29:28.482" endtime="20220705 06:29:28.589"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:29:28.282" endtime="20220705 06:29:28.589"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:28.591" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:28.591" endtime="20220705 06:29:28.591"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:28.591" endtime="20220705 06:29:28.592"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:28.592" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 06:29:28.592" endtime="20220705 06:29:28.592"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:28.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.593" endtime="20220705 06:29:28.696"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.696" endtime="20220705 06:29:28.696"/>
</return>
<msg timestamp="20220705 06:29:28.697" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.590" endtime="20220705 06:29:28.697"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.697" endtime="20220705 06:29:28.697"/>
</return>
<msg timestamp="20220705 06:29:28.697" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.590" endtime="20220705 06:29:28.697"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:28.697" endtime="20220705 06:29:28.697"/>
</return>
<msg timestamp="20220705 06:29:28.699" level="INFO">${checklist_id} = 62c3da48a0fb152730921b39</msg>
<status status="PASS" starttime="20220705 06:29:28.697" endtime="20220705 06:29:28.699"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:28.700" level="INFO">${url} = checklists/62c3da48a0fb152730921b39</msg>
<status status="PASS" starttime="20220705 06:29:28.700" endtime="20220705 06:29:28.700"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:28.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.700" endtime="20220705 06:29:28.807"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.807" endtime="20220705 06:29:28.807"/>
</return>
<msg timestamp="20220705 06:29:28.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.699" endtime="20220705 06:29:28.807"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.807" endtime="20220705 06:29:28.807"/>
</return>
<msg timestamp="20220705 06:29:28.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.699" endtime="20220705 06:29:28.808"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:28.808" endtime="20220705 06:29:28.810"/>
</kw>
<status status="PASS" starttime="20220705 06:29:28.808" endtime="20220705 06:29:28.810"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:28.811" level="INFO">${url} = checklists/62c3da48a0fb152730921b39</msg>
<status status="PASS" starttime="20220705 06:29:28.811" endtime="20220705 06:29:28.811"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:28.849" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:29:28.811" endtime="20220705 06:29:28.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.849" endtime="20220705 06:29:28.849"/>
</return>
<msg timestamp="20220705 06:29:28.849" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:29:28.811" endtime="20220705 06:29:28.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.849" endtime="20220705 06:29:28.849"/>
</return>
<status status="PASS" starttime="20220705 06:29:28.810" endtime="20220705 06:29:28.849"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:29:28.589" endtime="20220705 06:29:28.850"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:28.854" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:28.852" endtime="20220705 06:29:28.854"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:28.854" endtime="20220705 06:29:28.854"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:28.855" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 06:29:28.854" endtime="20220705 06:29:28.855"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:28.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.855" endtime="20220705 06:29:28.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.961" endtime="20220705 06:29:28.961"/>
</return>
<msg timestamp="20220705 06:29:28.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.852" endtime="20220705 06:29:28.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:28.961" endtime="20220705 06:29:28.961"/>
</return>
<msg timestamp="20220705 06:29:28.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.851" endtime="20220705 06:29:28.961"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:28.962" endtime="20220705 06:29:28.962"/>
</return>
<msg timestamp="20220705 06:29:28.962" level="INFO">${checklist_id} = 62c3da48089ed0156c59bfbc</msg>
<status status="PASS" starttime="20220705 06:29:28.961" endtime="20220705 06:29:28.962"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:28.964" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:28.964" endtime="20220705 06:29:28.964"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:28.964" endtime="20220705 06:29:28.964"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:28.964" level="INFO">${url} = checklists/62c3da48089ed0156c59bfbc</msg>
<status status="PASS" starttime="20220705 06:29:28.964" endtime="20220705 06:29:28.965"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:29.061" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.965" endtime="20220705 06:29:29.061"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.061" endtime="20220705 06:29:29.061"/>
</return>
<msg timestamp="20220705 06:29:29.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.963" endtime="20220705 06:29:29.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.062" endtime="20220705 06:29:29.062"/>
</return>
<msg timestamp="20220705 06:29:29.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:28.963" endtime="20220705 06:29:29.062"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:29.063" level="INFO">${url} = checklists/62c3da48089ed0156c59bfbc</msg>
<status status="PASS" starttime="20220705 06:29:29.063" endtime="20220705 06:29:29.063"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:29.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.063" endtime="20220705 06:29:29.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.115" endtime="20220705 06:29:29.115"/>
</return>
<msg timestamp="20220705 06:29:29.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.062" endtime="20220705 06:29:29.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.115" endtime="20220705 06:29:29.115"/>
</return>
<msg timestamp="20220705 06:29:29.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.062" endtime="20220705 06:29:29.116"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:29.116" endtime="20220705 06:29:29.116"/>
</return>
<msg timestamp="20220705 06:29:29.117" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 06:29:29.116" endtime="20220705 06:29:29.117"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:29.117" endtime="20220705 06:29:29.117"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:29.131" level="INFO">${url} = checklists/62c3da48089ed0156c59bfbc</msg>
<status status="PASS" starttime="20220705 06:29:29.130" endtime="20220705 06:29:29.131"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:29.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.131" endtime="20220705 06:29:29.242"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.242" endtime="20220705 06:29:29.242"/>
</return>
<msg timestamp="20220705 06:29:29.242" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.130" endtime="20220705 06:29:29.242"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.242" endtime="20220705 06:29:29.242"/>
</return>
<status status="PASS" starttime="20220705 06:29:29.117" endtime="20220705 06:29:29.242"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:29:28.850" endtime="20220705 06:29:29.242"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:29.245" level="INFO">${url} = boards/62c3da47d69717459c5e2b4e</msg>
<status status="PASS" starttime="20220705 06:29:29.244" endtime="20220705 06:29:29.245"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:29.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.245" endtime="20220705 06:29:29.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.610" endtime="20220705 06:29:29.610"/>
</return>
<msg timestamp="20220705 06:29:29.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.244" endtime="20220705 06:29:29.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.611" endtime="20220705 06:29:29.611"/>
</return>
<status status="PASS" starttime="20220705 06:29:29.244" endtime="20220705 06:29:29.611"/>
</kw>
<status status="PASS" starttime="20220705 06:29:29.243" endtime="20220705 06:29:29.611"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:29:29.611" endtime="20220705 06:29:29.612"/>
</kw>
<status status="PASS" starttime="20220705 06:29:29.243" endtime="20220705 06:29:29.612"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 06:29:27.824" endtime="20220705 06:29:29.613"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:29:29.623" endtime="20220705 06:29:29.623"/>
</kw>
<status status="PASS" starttime="20220705 06:29:29.623" endtime="20220705 06:29:29.623"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:29.624" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:29.624" endtime="20220705 06:29:29.624"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:29.624" endtime="20220705 06:29:29.624"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:29.625" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:29:29.625" endtime="20220705 06:29:29.625"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:29.794" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.625" endtime="20220705 06:29:29.794"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.794" endtime="20220705 06:29:29.794"/>
</return>
<msg timestamp="20220705 06:29:29.794" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.624" endtime="20220705 06:29:29.794"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.794" endtime="20220705 06:29:29.794"/>
</return>
<msg timestamp="20220705 06:29:29.794" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.623" endtime="20220705 06:29:29.794"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:29:29.795" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3da492ee25f63642a8479</msg>
<status status="PASS" starttime="20220705 06:29:29.795" endtime="20220705 06:29:29.795"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:29.851" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.796" endtime="20220705 06:29:29.851"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:29:29.852" level="INFO">${TEST_SUITE_LIST_ID} = 62c3da492ee25f63642a8480</msg>
<status status="PASS" starttime="20220705 06:29:29.851" endtime="20220705 06:29:29.852"/>
</kw>
<status status="PASS" starttime="20220705 06:29:29.623" endtime="20220705 06:29:29.852"/>
</kw>
<status status="PASS" starttime="20220705 06:29:29.622" endtime="20220705 06:29:29.852"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:29.854" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:29.854" endtime="20220705 06:29:29.854"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:29.854" endtime="20220705 06:29:29.854"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:29.855" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 06:29:29.854" endtime="20220705 06:29:29.855"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:29.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.855" endtime="20220705 06:29:29.938"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.938" endtime="20220705 06:29:29.938"/>
</return>
<msg timestamp="20220705 06:29:29.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.853" endtime="20220705 06:29:29.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.939" endtime="20220705 06:29:29.939"/>
</return>
<msg timestamp="20220705 06:29:29.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.853" endtime="20220705 06:29:29.939"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:29.939" endtime="20220705 06:29:29.941"/>
</kw>
<status status="PASS" starttime="20220705 06:29:29.939" endtime="20220705 06:29:29.941"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:29.942" endtime="20220705 06:29:29.942"/>
</return>
<msg timestamp="20220705 06:29:29.942" level="INFO">${LABEL_ID} = 62c3da4997b45736d3887899</msg>
<status status="PASS" starttime="20220705 06:29:29.941" endtime="20220705 06:29:29.942"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:29.943" level="INFO">${url} = labels/62c3da4997b45736d3887899</msg>
<status status="PASS" starttime="20220705 06:29:29.943" endtime="20220705 06:29:29.944"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:29.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.944" endtime="20220705 06:29:29.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.994" endtime="20220705 06:29:29.994"/>
</return>
<msg timestamp="20220705 06:29:29.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.943" endtime="20220705 06:29:29.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:29.994" endtime="20220705 06:29:29.994"/>
</return>
<msg timestamp="20220705 06:29:29.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.942" endtime="20220705 06:29:29.994"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:29.995" endtime="20220705 06:29:29.995"/>
</return>
<msg timestamp="20220705 06:29:29.995" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 06:29:29.994" endtime="20220705 06:29:29.995"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:29.996" endtime="20220705 06:29:29.996"/>
</return>
<msg timestamp="20220705 06:29:29.997" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 06:29:29.996" endtime="20220705 06:29:29.997"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:29.997" endtime="20220705 06:29:29.997"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:29.997" endtime="20220705 06:29:29.997"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:29.999" level="INFO">${url} = labels/62c3da4997b45736d3887899</msg>
<status status="PASS" starttime="20220705 06:29:29.999" endtime="20220705 06:29:29.999"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:30.101" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.999" endtime="20220705 06:29:30.101"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.101" endtime="20220705 06:29:30.101"/>
</return>
<msg timestamp="20220705 06:29:30.101" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:29.998" endtime="20220705 06:29:30.101"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.101" endtime="20220705 06:29:30.101"/>
</return>
<status status="PASS" starttime="20220705 06:29:29.998" endtime="20220705 06:29:30.101"/>
</kw>
<status status="PASS" starttime="20220705 06:29:29.998" endtime="20220705 06:29:30.101"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:29:29.852" endtime="20220705 06:29:30.102"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:30.104" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:30.104" endtime="20220705 06:29:30.104"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:30.104" endtime="20220705 06:29:30.105"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:30.105" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 06:29:30.105" endtime="20220705 06:29:30.105"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:30.183" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.106" endtime="20220705 06:29:30.183"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.183" endtime="20220705 06:29:30.184"/>
</return>
<msg timestamp="20220705 06:29:30.184" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.104" endtime="20220705 06:29:30.184"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.184" endtime="20220705 06:29:30.184"/>
</return>
<msg timestamp="20220705 06:29:30.184" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.103" endtime="20220705 06:29:30.184"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:30.185" endtime="20220705 06:29:30.186"/>
</kw>
<status status="PASS" starttime="20220705 06:29:30.184" endtime="20220705 06:29:30.187"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:30.187" endtime="20220705 06:29:30.187"/>
</return>
<msg timestamp="20220705 06:29:30.188" level="INFO">${LABEL_ID} = 62c3da4a9dbff6790dc2593e</msg>
<status status="PASS" starttime="20220705 06:29:30.187" endtime="20220705 06:29:30.188"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:30.189" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:30.189" endtime="20220705 06:29:30.189"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:30.189" endtime="20220705 06:29:30.189"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:30.190" level="INFO">${url} = labels/62c3da4a9dbff6790dc2593e</msg>
<status status="PASS" starttime="20220705 06:29:30.189" endtime="20220705 06:29:30.190"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:30.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.190" endtime="20220705 06:29:30.292"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.292" endtime="20220705 06:29:30.292"/>
</return>
<msg timestamp="20220705 06:29:30.293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.188" endtime="20220705 06:29:30.293"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.293" endtime="20220705 06:29:30.293"/>
</return>
<msg timestamp="20220705 06:29:30.293" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.188" endtime="20220705 06:29:30.293"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:30.293" endtime="20220705 06:29:30.293"/>
</return>
<msg timestamp="20220705 06:29:30.294" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 06:29:30.293" endtime="20220705 06:29:30.294"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:30.295" endtime="20220705 06:29:30.295"/>
</return>
<msg timestamp="20220705 06:29:30.295" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 06:29:30.294" endtime="20220705 06:29:30.295"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:30.295" endtime="20220705 06:29:30.296"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:30.296" endtime="20220705 06:29:30.296"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:30.298" level="INFO">${url} = labels/62c3da4a9dbff6790dc2593e</msg>
<status status="PASS" starttime="20220705 06:29:30.297" endtime="20220705 06:29:30.298"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:30.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.298" endtime="20220705 06:29:30.412"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.412" endtime="20220705 06:29:30.412"/>
</return>
<msg timestamp="20220705 06:29:30.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.297" endtime="20220705 06:29:30.412"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.412" endtime="20220705 06:29:30.412"/>
</return>
<status status="PASS" starttime="20220705 06:29:30.296" endtime="20220705 06:29:30.413"/>
</kw>
<status status="PASS" starttime="20220705 06:29:30.296" endtime="20220705 06:29:30.413"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:29:30.102" endtime="20220705 06:29:30.413"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:30.415" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:30.415" endtime="20220705 06:29:30.415"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:30.415" endtime="20220705 06:29:30.415"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:30.416" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 06:29:30.415" endtime="20220705 06:29:30.416"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:30.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.416" endtime="20220705 06:29:30.501"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.501" endtime="20220705 06:29:30.501"/>
</return>
<msg timestamp="20220705 06:29:30.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.414" endtime="20220705 06:29:30.501"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.501" endtime="20220705 06:29:30.501"/>
</return>
<msg timestamp="20220705 06:29:30.502" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.414" endtime="20220705 06:29:30.502"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 06:29:30.502" endtime="20220705 06:29:30.502"/>
</return>
<msg timestamp="20220705 06:29:30.503" level="INFO">${LABEL_ID} = 62c3da4a878d0c29e4cfa4ac</msg>
<status status="PASS" starttime="20220705 06:29:30.502" endtime="20220705 06:29:30.503"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:30.505" level="INFO">${url} = labels/62c3da4a878d0c29e4cfa4ac</msg>
<status status="PASS" starttime="20220705 06:29:30.504" endtime="20220705 06:29:30.505"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:30.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.505" endtime="20220705 06:29:30.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.610" endtime="20220705 06:29:30.610"/>
</return>
<msg timestamp="20220705 06:29:30.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.504" endtime="20220705 06:29:30.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.610" endtime="20220705 06:29:30.611"/>
</return>
<status status="PASS" starttime="20220705 06:29:30.503" endtime="20220705 06:29:30.611"/>
</kw>
<status status="PASS" starttime="20220705 06:29:30.503" endtime="20220705 06:29:30.611"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:30.612" level="INFO">${url} = labels/62c3da4a878d0c29e4cfa4ac</msg>
<status status="PASS" starttime="20220705 06:29:30.612" endtime="20220705 06:29:30.612"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:30.650" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:29:30.612" endtime="20220705 06:29:30.650"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.650" endtime="20220705 06:29:30.650"/>
</return>
<msg timestamp="20220705 06:29:30.650" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 06:29:30.611" endtime="20220705 06:29:30.650"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:30.650" endtime="20220705 06:29:30.650"/>
</return>
<status status="PASS" starttime="20220705 06:29:30.611" endtime="20220705 06:29:30.650"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:29:30.413" endtime="20220705 06:29:30.651"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:30.653" level="INFO">${url} = boards/62c3da492ee25f63642a8479</msg>
<status status="PASS" starttime="20220705 06:29:30.653" endtime="20220705 06:29:30.653"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:31.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.653" endtime="20220705 06:29:31.063"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.063" endtime="20220705 06:29:31.063"/>
</return>
<msg timestamp="20220705 06:29:31.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:30.652" endtime="20220705 06:29:31.063"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.063" endtime="20220705 06:29:31.063"/>
</return>
<status status="PASS" starttime="20220705 06:29:30.652" endtime="20220705 06:29:31.063"/>
</kw>
<status status="PASS" starttime="20220705 06:29:30.652" endtime="20220705 06:29:31.063"/>
</kw>
<status status="PASS" starttime="20220705 06:29:30.651" endtime="20220705 06:29:31.063"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:29:31.064" endtime="20220705 06:29:31.065"/>
</kw>
<status status="PASS" starttime="20220705 06:29:30.651" endtime="20220705 06:29:31.065"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 06:29:29.614" endtime="20220705 06:29:31.065"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:29:31.075" endtime="20220705 06:29:31.075"/>
</kw>
<status status="PASS" starttime="20220705 06:29:31.075" endtime="20220705 06:29:31.075"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:31.076" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:31.076" endtime="20220705 06:29:31.076"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:31.076" endtime="20220705 06:29:31.077"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:31.077" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:29:31.077" endtime="20220705 06:29:31.077"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:31.257" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.077" endtime="20220705 06:29:31.257"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.257" endtime="20220705 06:29:31.257"/>
</return>
<msg timestamp="20220705 06:29:31.257" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.076" endtime="20220705 06:29:31.257"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.257" endtime="20220705 06:29:31.257"/>
</return>
<msg timestamp="20220705 06:29:31.257" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.075" endtime="20220705 06:29:31.258"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:29:31.259" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3da4b33b4b73fddd81b24</msg>
<status status="PASS" starttime="20220705 06:29:31.258" endtime="20220705 06:29:31.259"/>
</kw>
<status status="PASS" starttime="20220705 06:29:31.258" endtime="20220705 06:29:31.259"/>
</kw>
<status status="PASS" starttime="20220705 06:29:31.075" endtime="20220705 06:29:31.259"/>
</kw>
<status status="PASS" starttime="20220705 06:29:31.074" endtime="20220705 06:29:31.259"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:31.261" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:31.261" endtime="20220705 06:29:31.261"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:31.261" endtime="20220705 06:29:31.261"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:31.262" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 06:29:31.261" endtime="20220705 06:29:31.262"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:31.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.262" endtime="20220705 06:29:31.375"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.375" endtime="20220705 06:29:31.375"/>
</return>
<msg timestamp="20220705 06:29:31.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.260" endtime="20220705 06:29:31.375"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.375" endtime="20220705 06:29:31.375"/>
</return>
<msg timestamp="20220705 06:29:31.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.260" endtime="20220705 06:29:31.376"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:31.376" endtime="20220705 06:29:31.378"/>
</kw>
<status status="PASS" starttime="20220705 06:29:31.376" endtime="20220705 06:29:31.378"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:29:31.259" endtime="20220705 06:29:31.378"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:31.380" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:31.380" endtime="20220705 06:29:31.380"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:31.380" endtime="20220705 06:29:31.381"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:31.382" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 06:29:31.381" endtime="20220705 06:29:31.382"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:31.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.382" endtime="20220705 06:29:31.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.468" endtime="20220705 06:29:31.468"/>
</return>
<msg timestamp="20220705 06:29:31.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.380" endtime="20220705 06:29:31.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.469" endtime="20220705 06:29:31.469"/>
</return>
<msg timestamp="20220705 06:29:31.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.379" endtime="20220705 06:29:31.469"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:31.470" endtime="20220705 06:29:31.471"/>
</kw>
<status status="PASS" starttime="20220705 06:29:31.469" endtime="20220705 06:29:31.471"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:31.473" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:31.473" endtime="20220705 06:29:31.474"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:31.474" endtime="20220705 06:29:31.474"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:31.474" level="INFO">${url} = lists/62c3da4beceeef71ca0740ba</msg>
<status status="PASS" starttime="20220705 06:29:31.474" endtime="20220705 06:29:31.474"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:31.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.474" endtime="20220705 06:29:31.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.541" endtime="20220705 06:29:31.541"/>
</return>
<msg timestamp="20220705 06:29:31.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.472" endtime="20220705 06:29:31.542"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.542" endtime="20220705 06:29:31.542"/>
</return>
<status status="PASS" starttime="20220705 06:29:31.472" endtime="20220705 06:29:31.542"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:31.544" level="INFO">${url} = lists/62c3da4beceeef71ca0740ba</msg>
<status status="PASS" starttime="20220705 06:29:31.543" endtime="20220705 06:29:31.544"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:31.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.544" endtime="20220705 06:29:31.586"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.586" endtime="20220705 06:29:31.587"/>
</return>
<msg timestamp="20220705 06:29:31.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.543" endtime="20220705 06:29:31.587"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.587" endtime="20220705 06:29:31.587"/>
</return>
<msg timestamp="20220705 06:29:31.587" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.542" endtime="20220705 06:29:31.587"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 06:29:31.588" endtime="20220705 06:29:31.589"/>
</kw>
<status status="PASS" starttime="20220705 06:29:31.587" endtime="20220705 06:29:31.589"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:29:31.590" endtime="20220705 06:29:31.590"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:29:31.379" endtime="20220705 06:29:31.590"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:31.594" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:31.594" endtime="20220705 06:29:31.594"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:31.594" endtime="20220705 06:29:31.594"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:31.595" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 06:29:31.594" endtime="20220705 06:29:31.595"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:31.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.595" endtime="20220705 06:29:31.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.720" endtime="20220705 06:29:31.720"/>
</return>
<msg timestamp="20220705 06:29:31.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.593" endtime="20220705 06:29:31.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.720" endtime="20220705 06:29:31.720"/>
</return>
<msg timestamp="20220705 06:29:31.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.591" endtime="20220705 06:29:31.720"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:29:31.722" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:29:31.722" endtime="20220705 06:29:31.722"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:29:31.722" endtime="20220705 06:29:31.723"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:31.723" level="INFO">${url} = lists/62c3da4be453008b74867393/closed</msg>
<status status="PASS" starttime="20220705 06:29:31.723" endtime="20220705 06:29:31.723"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:29:31.816" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.723" endtime="20220705 06:29:31.816"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.816" endtime="20220705 06:29:31.816"/>
</return>
<msg timestamp="20220705 06:29:31.816" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.721" endtime="20220705 06:29:31.816"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.816" endtime="20220705 06:29:31.816"/>
</return>
<status status="PASS" starttime="20220705 06:29:31.721" endtime="20220705 06:29:31.817"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:31.818" level="INFO">${url} = lists/62c3da4be453008b74867393</msg>
<status status="PASS" starttime="20220705 06:29:31.818" endtime="20220705 06:29:31.818"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 06:29:31.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.819" endtime="20220705 06:29:31.862"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.862" endtime="20220705 06:29:31.862"/>
</return>
<msg timestamp="20220705 06:29:31.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.818" endtime="20220705 06:29:31.862"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:31.862" endtime="20220705 06:29:31.862"/>
</return>
<msg timestamp="20220705 06:29:31.862" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.817" endtime="20220705 06:29:31.862"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 06:29:31.862" endtime="20220705 06:29:31.863"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:29:31.591" endtime="20220705 06:29:31.863"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:29:31.866" level="INFO">${url} = boards/62c3da4b33b4b73fddd81b24</msg>
<status status="PASS" starttime="20220705 06:29:31.866" endtime="20220705 06:29:31.866"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:29:32.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.866" endtime="20220705 06:29:32.186"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:32.186" endtime="20220705 06:29:32.186"/>
</return>
<msg timestamp="20220705 06:29:32.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:29:31.865" endtime="20220705 06:29:32.187"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:29:32.187" endtime="20220705 06:29:32.187"/>
</return>
<status status="PASS" starttime="20220705 06:29:31.865" endtime="20220705 06:29:32.187"/>
</kw>
<status status="PASS" starttime="20220705 06:29:31.865" endtime="20220705 06:29:32.187"/>
</kw>
<status status="PASS" starttime="20220705 06:29:31.864" endtime="20220705 06:29:32.187"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:29:32.187" endtime="20220705 06:29:32.188"/>
</kw>
<status status="PASS" starttime="20220705 06:29:31.864" endtime="20220705 06:29:32.188"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 06:29:31.066" endtime="20220705 06:29:32.188"/>
</suite>
<status status="PASS" starttime="20220705 06:29:21.572" endtime="20220705 06:29:32.191"/>
</suite>
<status status="PASS" starttime="20220705 06:29:21.555" endtime="20220705 06:29:32.193"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
