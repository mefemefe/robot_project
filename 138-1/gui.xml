<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 06:30:10.793" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Gui" source="/trello/gui">
<suite id="s1-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:30:11.049" endtime="20220705 06:30:11.050"/>
</kw>
<status status="PASS" starttime="20220705 06:30:11.049" endtime="20220705 06:30:11.050"/>
</kw>
<status status="PASS" starttime="20220705 06:30:11.049" endtime="20220705 06:30:11.050"/>
</kw>
<test id="s1-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:30:11.052" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:30:11.052" endtime="20220705 06:30:13.164"/>
</kw>
<status status="PASS" starttime="20220705 06:30:11.051" endtime="20220705 06:30:13.164"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:13.165" endtime="20220705 06:30:13.165"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:13.164" endtime="20220705 06:30:13.165"/>
</branch>
<status status="PASS" starttime="20220705 06:30:11.051" endtime="20220705 06:30:13.165"/>
</if>
<status status="PASS" starttime="20220705 06:30:11.051" endtime="20220705 06:30:13.165"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:30:13.165" endtime="20220705 06:30:13.295"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:13.319" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:30:13.296" endtime="20220705 06:30:13.319"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:13.320" endtime="20220705 06:30:13.320"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:13.319" endtime="20220705 06:30:13.320"/>
</branch>
<status status="PASS" starttime="20220705 06:30:13.319" endtime="20220705 06:30:13.320"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:13.320" endtime="20220705 06:30:13.405"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:13.406" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:30:13.406" endtime="20220705 06:30:13.528"/>
</kw>
<status status="PASS" starttime="20220705 06:30:13.320" endtime="20220705 06:30:13.528"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:30:13.528" endtime="20220705 06:30:14.100"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:14.120" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:30:14.101" endtime="20220705 06:30:14.120"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:30:14.121" endtime="20220705 06:30:14.209"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:14.210" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:30:14.210" endtime="20220705 06:30:15.055"/>
</kw>
<status status="PASS" starttime="20220705 06:30:14.120" endtime="20220705 06:30:15.055"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:30:15.056" endtime="20220705 06:30:15.056"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:15.056" endtime="20220705 06:30:15.056"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:15.055" endtime="20220705 06:30:15.056"/>
</branch>
<status status="PASS" starttime="20220705 06:30:14.120" endtime="20220705 06:30:15.056"/>
</if>
<status status="PASS" starttime="20220705 06:30:14.100" endtime="20220705 06:30:15.056"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:30:15.057" endtime="20220705 06:30:15.102"/>
</kw>
<status status="PASS" starttime="20220705 06:30:15.056" endtime="20220705 06:30:15.102"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:15.103" endtime="20220705 06:30:15.168"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:15.169" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:30:15.230" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:30:15.301" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:30:15.168" endtime="20220705 06:30:15.301"/>
</kw>
<status status="PASS" starttime="20220705 06:30:15.103" endtime="20220705 06:30:15.301"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:15.318" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3da...</msg>
<status status="PASS" starttime="20220705 06:30:15.302" endtime="20220705 06:30:15.318"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:30:15.318" endtime="20220705 06:30:15.318"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:15.319" endtime="20220705 06:30:15.319"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:15.318" endtime="20220705 06:30:15.319"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:30:15.319" endtime="20220705 06:30:15.399"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:15.400" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:30:15.400" endtime="20220705 06:30:15.507"/>
</kw>
<status status="PASS" starttime="20220705 06:30:15.319" endtime="20220705 06:30:15.507"/>
</branch>
<status status="PASS" starttime="20220705 06:30:15.318" endtime="20220705 06:30:15.507"/>
</if>
<status status="PASS" starttime="20220705 06:30:15.301" endtime="20220705 06:30:15.507"/>
</kw>
<status status="PASS" starttime="20220705 06:30:13.295" endtime="20220705 06:30:15.507"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:30:15.508" endtime="20220705 06:30:18.503"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:18.504" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220705 06:30:18.504" endtime="20220705 06:30:18.626"/>
</kw>
<status status="PASS" starttime="20220705 06:30:18.503" endtime="20220705 06:30:18.627"/>
</kw>
<status status="PASS" starttime="20220705 06:30:15.508" endtime="20220705 06:30:18.627"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:18.627" endtime="20220705 06:30:18.991"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:18.992" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220705 06:30:18.991" endtime="20220705 06:30:19.181"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:30:19.182" endtime="20220705 06:30:19.251"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:19.252" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220705 06:30:19.252" endtime="20220705 06:30:19.326"/>
</kw>
<status status="PASS" starttime="20220705 06:30:18.627" endtime="20220705 06:30:19.326"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:19.326" endtime="20220705 06:30:20.523"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 06:30:20.524" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220705 06:30:20.524" endtime="20220705 06:30:20.574"/>
</kw>
<status status="PASS" starttime="20220705 06:30:19.326" endtime="20220705 06:30:20.575"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:20.575" endtime="20220705 06:30:20.632"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:20.633" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 06:30:20.632" endtime="20220705 06:30:20.707"/>
</kw>
<status status="PASS" starttime="20220705 06:30:20.575" endtime="20220705 06:30:20.707"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:20.707" endtime="20220705 06:30:20.828"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:20.829" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220705 06:30:20.829" endtime="20220705 06:30:20.987"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:20.987" endtime="20220705 06:30:21.057"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:21.057" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220705 06:30:21.057" endtime="20220705 06:30:21.184"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:21.184" endtime="20220705 06:30:21.252"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:21.253" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220705 06:30:21.252" endtime="20220705 06:30:21.384"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:21.384" endtime="20220705 06:30:21.658"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:21.658" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220705 06:30:21.658" endtime="20220705 06:30:21.721"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:21.721" endtime="20220705 06:30:21.765"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:21.766" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220705 06:30:21.766" endtime="20220705 06:30:21.837"/>
</kw>
<status status="PASS" starttime="20220705 06:30:20.707" endtime="20220705 06:30:21.837"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:30:21.837" endtime="20220705 06:30:21.963"/>
</kw>
<status status="PASS" starttime="20220705 06:30:20.575" endtime="20220705 06:30:21.963"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:30:11.050" endtime="20220705 06:30:21.963"/>
</test>
<test id="s1-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:30:21.965" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:30:21.965" endtime="20220705 06:30:21.965"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:30:21.966" endtime="20220705 06:30:21.966"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:21.967" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:30:21.966" endtime="20220705 06:30:21.967"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:30:22.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:21.967" endtime="20220705 06:30:22.199"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:30:22.199" endtime="20220705 06:30:22.199"/>
</return>
<msg timestamp="20220705 06:30:22.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:21.965" endtime="20220705 06:30:22.199"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:30:22.199" endtime="20220705 06:30:22.199"/>
</return>
<msg timestamp="20220705 06:30:22.200" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:21.964" endtime="20220705 06:30:22.200"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:30:22.201" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:30:22.200" endtime="20220705 06:30:23.221"/>
</kw>
<status status="PASS" starttime="20220705 06:30:22.200" endtime="20220705 06:30:23.221"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:23.221" endtime="20220705 06:30:23.221"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:23.221" endtime="20220705 06:30:23.221"/>
</branch>
<status status="PASS" starttime="20220705 06:30:22.200" endtime="20220705 06:30:23.221"/>
</if>
<status status="PASS" starttime="20220705 06:30:22.200" endtime="20220705 06:30:23.221"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:30:23.222" endtime="20220705 06:30:23.350"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:23.362" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:30:23.351" endtime="20220705 06:30:23.362"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:23.362" endtime="20220705 06:30:23.362"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:23.362" endtime="20220705 06:30:23.362"/>
</branch>
<status status="PASS" starttime="20220705 06:30:23.362" endtime="20220705 06:30:23.362"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:23.363" endtime="20220705 06:30:23.419"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:23.419" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:30:23.419" endtime="20220705 06:30:23.553"/>
</kw>
<status status="PASS" starttime="20220705 06:30:23.362" endtime="20220705 06:30:23.553"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:30:23.553" endtime="20220705 06:30:24.314"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:24.323" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:30:24.315" endtime="20220705 06:30:24.323"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:30:24.324" endtime="20220705 06:30:24.388"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:24.388" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:30:24.388" endtime="20220705 06:30:25.150"/>
</kw>
<status status="PASS" starttime="20220705 06:30:24.324" endtime="20220705 06:30:25.150"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:30:25.150" endtime="20220705 06:30:25.150"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:25.150" endtime="20220705 06:30:25.150"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:25.150" endtime="20220705 06:30:25.150"/>
</branch>
<status status="PASS" starttime="20220705 06:30:24.324" endtime="20220705 06:30:25.150"/>
</if>
<status status="PASS" starttime="20220705 06:30:24.314" endtime="20220705 06:30:25.150"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:30:25.151" endtime="20220705 06:30:25.164"/>
</kw>
<status status="PASS" starttime="20220705 06:30:25.151" endtime="20220705 06:30:25.164"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:25.165" endtime="20220705 06:30:25.218"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:25.219" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:30:25.281" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:30:25.364" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:30:25.218" endtime="20220705 06:30:25.364"/>
</kw>
<status status="PASS" starttime="20220705 06:30:25.164" endtime="20220705 06:30:25.364"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:25.410" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3da...</msg>
<status status="PASS" starttime="20220705 06:30:25.365" endtime="20220705 06:30:25.410"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:30:25.411" endtime="20220705 06:30:25.411"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:25.411" endtime="20220705 06:30:25.411"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:25.410" endtime="20220705 06:30:25.411"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:30:25.411" endtime="20220705 06:30:25.470"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:25.470" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:30:25.470" endtime="20220705 06:30:25.580"/>
</kw>
<status status="PASS" starttime="20220705 06:30:25.411" endtime="20220705 06:30:25.580"/>
</branch>
<status status="PASS" starttime="20220705 06:30:25.410" endtime="20220705 06:30:25.580"/>
</if>
<status status="PASS" starttime="20220705 06:30:25.364" endtime="20220705 06:30:25.580"/>
</kw>
<status status="PASS" starttime="20220705 06:30:23.350" endtime="20220705 06:30:25.580"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:25.581" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220705 06:30:25.581" endtime="20220705 06:30:25.581"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:25.581" endtime="20220705 06:30:28.564"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:28.564" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220705 06:30:28.564" endtime="20220705 06:30:28.888"/>
</kw>
<status status="PASS" starttime="20220705 06:30:25.580" endtime="20220705 06:30:28.888"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:28.889" endtime="20220705 06:30:29.373"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 06:30:29.374" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220705 06:30:29.373" endtime="20220705 06:30:29.439"/>
</kw>
<status status="PASS" starttime="20220705 06:30:28.889" endtime="20220705 06:30:29.439"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:29.440" endtime="20220705 06:30:29.493"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:29.494" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 06:30:29.494" endtime="20220705 06:30:29.588"/>
</kw>
<status status="PASS" starttime="20220705 06:30:29.439" endtime="20220705 06:30:29.589"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:29.589" endtime="20220705 06:30:29.677"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:29.678" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220705 06:30:29.677" endtime="20220705 06:30:29.955"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:29.955" endtime="20220705 06:30:30.005"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:30.005" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220705 06:30:30.005" endtime="20220705 06:30:30.088"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:30.088" endtime="20220705 06:30:30.155"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:30.155" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220705 06:30:30.155" endtime="20220705 06:30:30.274"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:30.274" endtime="20220705 06:30:30.535"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:30.535" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220705 06:30:30.535" endtime="20220705 06:30:30.615"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:30.615" endtime="20220705 06:30:30.655"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:30.656" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220705 06:30:30.655" endtime="20220705 06:30:30.725"/>
</kw>
<status status="PASS" starttime="20220705 06:30:29.589" endtime="20220705 06:30:30.725"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:30:30.725" endtime="20220705 06:30:30.823"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220705 06:30:30.823" endtime="20220705 06:30:30.823"/>
</kw>
<status status="PASS" starttime="20220705 06:30:30.725" endtime="20220705 06:30:30.823"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:30:21.964" endtime="20220705 06:30:30.824"/>
</test>
<test id="s1-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:30:30.827" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:30:30.826" endtime="20220705 06:30:30.827"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:30:30.827" endtime="20220705 06:30:30.827"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:30.828" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:30:30.827" endtime="20220705 06:30:30.828"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:30:31.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:30.828" endtime="20220705 06:30:31.010"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:30:31.010" endtime="20220705 06:30:31.010"/>
</return>
<msg timestamp="20220705 06:30:31.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:30.826" endtime="20220705 06:30:31.010"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:30:31.010" endtime="20220705 06:30:31.010"/>
</return>
<msg timestamp="20220705 06:30:31.011" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:30.825" endtime="20220705 06:30:31.011"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:30:31.012" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:30:31.012" endtime="20220705 06:30:32.114"/>
</kw>
<status status="PASS" starttime="20220705 06:30:31.011" endtime="20220705 06:30:32.114"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:32.114" endtime="20220705 06:30:32.114"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:32.114" endtime="20220705 06:30:32.114"/>
</branch>
<status status="PASS" starttime="20220705 06:30:31.011" endtime="20220705 06:30:32.114"/>
</if>
<status status="PASS" starttime="20220705 06:30:31.011" endtime="20220705 06:30:32.114"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:30:32.114" endtime="20220705 06:30:32.241"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:32.257" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:30:32.242" endtime="20220705 06:30:32.257"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:32.257" endtime="20220705 06:30:32.257"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:32.257" endtime="20220705 06:30:32.258"/>
</branch>
<status status="PASS" starttime="20220705 06:30:32.257" endtime="20220705 06:30:32.258"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:32.258" endtime="20220705 06:30:32.312"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:32.313" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:30:32.312" endtime="20220705 06:30:32.421"/>
</kw>
<status status="PASS" starttime="20220705 06:30:32.258" endtime="20220705 06:30:32.421"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:30:32.421" endtime="20220705 06:30:33.161"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:33.174" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:30:33.161" endtime="20220705 06:30:33.174"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:30:33.175" endtime="20220705 06:30:33.231"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:33.231" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:30:33.231" endtime="20220705 06:30:34.033"/>
</kw>
<status status="PASS" starttime="20220705 06:30:33.174" endtime="20220705 06:30:34.033"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:30:34.033" endtime="20220705 06:30:34.033"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:34.033" endtime="20220705 06:30:34.033"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:34.033" endtime="20220705 06:30:34.033"/>
</branch>
<status status="PASS" starttime="20220705 06:30:33.174" endtime="20220705 06:30:34.033"/>
</if>
<status status="PASS" starttime="20220705 06:30:33.161" endtime="20220705 06:30:34.034"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:30:34.034" endtime="20220705 06:30:34.047"/>
</kw>
<status status="PASS" starttime="20220705 06:30:34.034" endtime="20220705 06:30:34.048"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:34.048" endtime="20220705 06:30:34.100"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:34.101" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:30:34.181" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:30:34.269" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:30:34.101" endtime="20220705 06:30:34.269"/>
</kw>
<status status="PASS" starttime="20220705 06:30:34.048" endtime="20220705 06:30:34.269"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:34.279" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3da...</msg>
<status status="PASS" starttime="20220705 06:30:34.270" endtime="20220705 06:30:34.279"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:30:34.280" endtime="20220705 06:30:34.280"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:34.280" endtime="20220705 06:30:34.280"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:34.279" endtime="20220705 06:30:34.280"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:30:34.280" endtime="20220705 06:30:34.339"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:34.340" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:30:34.340" endtime="20220705 06:30:34.451"/>
</kw>
<status status="PASS" starttime="20220705 06:30:34.280" endtime="20220705 06:30:34.451"/>
</branch>
<status status="PASS" starttime="20220705 06:30:34.279" endtime="20220705 06:30:34.451"/>
</if>
<status status="PASS" starttime="20220705 06:30:34.270" endtime="20220705 06:30:34.452"/>
</kw>
<status status="PASS" starttime="20220705 06:30:32.241" endtime="20220705 06:30:34.452"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:34.453" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220705 06:30:34.452" endtime="20220705 06:30:34.453"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:34.453" endtime="20220705 06:30:37.612"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:37.613" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220705 06:30:37.612" endtime="20220705 06:30:37.980"/>
</kw>
<status status="PASS" starttime="20220705 06:30:34.452" endtime="20220705 06:30:37.980"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:37.981" endtime="20220705 06:30:38.442"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 06:30:38.442" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220705 06:30:38.442" endtime="20220705 06:30:38.556"/>
</kw>
<status status="PASS" starttime="20220705 06:30:37.981" endtime="20220705 06:30:38.556"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:38.557" endtime="20220705 06:30:38.601"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:38.601" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 06:30:38.601" endtime="20220705 06:30:38.697"/>
</kw>
<status status="PASS" starttime="20220705 06:30:38.556" endtime="20220705 06:30:38.697"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:38.698" endtime="20220705 06:30:38.753"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:38.753" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220705 06:30:38.753" endtime="20220705 06:30:38.932"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:38.932" endtime="20220705 06:30:38.998"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:38.999" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220705 06:30:38.999" endtime="20220705 06:30:39.117"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:39.117" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220705 06:30:39.117" endtime="20220705 06:30:39.260"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:39.260" endtime="20220705 06:30:39.294"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:39.294" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220705 06:30:39.294" endtime="20220705 06:30:39.391"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:39.392" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220705 06:30:39.391" endtime="20220705 06:30:39.520"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:39.520" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220705 06:30:39.520" endtime="20220705 06:30:39.608"/>
</kw>
<status status="PASS" starttime="20220705 06:30:38.698" endtime="20220705 06:30:39.608"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:30:39.609" endtime="20220705 06:30:39.695"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:39.699" level="INFO">${url} = boards/62c3da863dbf027fe307552a</msg>
<status status="PASS" starttime="20220705 06:30:39.698" endtime="20220705 06:30:39.699"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:30:40.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:39.699" endtime="20220705 06:30:40.022"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:30:40.022" endtime="20220705 06:30:40.022"/>
</return>
<msg timestamp="20220705 06:30:40.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:39.698" endtime="20220705 06:30:40.023"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:30:40.023" endtime="20220705 06:30:40.023"/>
</return>
<status status="PASS" starttime="20220705 06:30:39.696" endtime="20220705 06:30:40.023"/>
</kw>
<status status="PASS" starttime="20220705 06:30:39.696" endtime="20220705 06:30:40.023"/>
</kw>
<status status="PASS" starttime="20220705 06:30:39.608" endtime="20220705 06:30:40.023"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:30:30.825" endtime="20220705 06:30:40.023"/>
</test>
<test id="s1-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:30:40.026" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:30:40.026" endtime="20220705 06:30:40.026"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:30:40.026" endtime="20220705 06:30:40.026"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:40.028" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:30:40.026" endtime="20220705 06:30:40.028"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:30:40.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:40.028" endtime="20220705 06:30:40.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:30:40.193" endtime="20220705 06:30:40.193"/>
</return>
<msg timestamp="20220705 06:30:40.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:40.025" endtime="20220705 06:30:40.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:30:40.194" endtime="20220705 06:30:40.194"/>
</return>
<msg timestamp="20220705 06:30:40.194" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:40.025" endtime="20220705 06:30:40.194"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:30:40.195" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:30:40.195" endtime="20220705 06:30:41.219"/>
</kw>
<status status="PASS" starttime="20220705 06:30:40.195" endtime="20220705 06:30:41.220"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:41.220" endtime="20220705 06:30:41.220"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:41.220" endtime="20220705 06:30:41.220"/>
</branch>
<status status="PASS" starttime="20220705 06:30:40.194" endtime="20220705 06:30:41.220"/>
</if>
<status status="PASS" starttime="20220705 06:30:40.194" endtime="20220705 06:30:41.220"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:30:41.220" endtime="20220705 06:30:41.335"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:41.347" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:30:41.336" endtime="20220705 06:30:41.347"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:41.348" endtime="20220705 06:30:41.348"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:41.347" endtime="20220705 06:30:41.348"/>
</branch>
<status status="PASS" starttime="20220705 06:30:41.347" endtime="20220705 06:30:41.348"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:41.348" endtime="20220705 06:30:41.399"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:41.400" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:30:41.400" endtime="20220705 06:30:41.545"/>
</kw>
<status status="PASS" starttime="20220705 06:30:41.348" endtime="20220705 06:30:41.545"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:30:41.546" endtime="20220705 06:30:42.295"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:42.306" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:30:42.296" endtime="20220705 06:30:42.306"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:30:42.306" endtime="20220705 06:30:42.374"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:42.375" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:30:42.375" endtime="20220705 06:30:43.153"/>
</kw>
<status status="PASS" starttime="20220705 06:30:42.306" endtime="20220705 06:30:43.153"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:30:43.154" endtime="20220705 06:30:43.154"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:43.154" endtime="20220705 06:30:43.154"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:43.153" endtime="20220705 06:30:43.154"/>
</branch>
<status status="PASS" starttime="20220705 06:30:42.306" endtime="20220705 06:30:43.154"/>
</if>
<status status="PASS" starttime="20220705 06:30:42.295" endtime="20220705 06:30:43.154"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:30:43.154" endtime="20220705 06:30:43.167"/>
</kw>
<status status="PASS" starttime="20220705 06:30:43.154" endtime="20220705 06:30:43.167"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:43.168" endtime="20220705 06:30:43.460"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:43.461" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:30:43.507" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:30:43.572" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:30:43.461" endtime="20220705 06:30:43.572"/>
</kw>
<status status="PASS" starttime="20220705 06:30:43.168" endtime="20220705 06:30:43.572"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:43.580" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3da...</msg>
<status status="PASS" starttime="20220705 06:30:43.573" endtime="20220705 06:30:43.580"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:30:43.581" endtime="20220705 06:30:43.581"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:43.581" endtime="20220705 06:30:43.581"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:43.581" endtime="20220705 06:30:43.581"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:30:43.581" endtime="20220705 06:30:43.629"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:43.629" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:30:43.629" endtime="20220705 06:30:43.715"/>
</kw>
<status status="PASS" starttime="20220705 06:30:43.581" endtime="20220705 06:30:43.715"/>
</branch>
<status status="PASS" starttime="20220705 06:30:43.580" endtime="20220705 06:30:43.716"/>
</if>
<status status="PASS" starttime="20220705 06:30:43.572" endtime="20220705 06:30:43.716"/>
</kw>
<status status="PASS" starttime="20220705 06:30:41.335" endtime="20220705 06:30:43.716"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:43.717" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220705 06:30:43.717" endtime="20220705 06:30:43.717"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:43.717" endtime="20220705 06:30:46.523"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:46.523" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220705 06:30:46.523" endtime="20220705 06:30:46.872"/>
</kw>
<status status="PASS" starttime="20220705 06:30:43.716" endtime="20220705 06:30:46.872"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:46.873" endtime="20220705 06:30:47.373"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 06:30:47.373" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220705 06:30:47.373" endtime="20220705 06:30:47.418"/>
</kw>
<status status="PASS" starttime="20220705 06:30:46.872" endtime="20220705 06:30:47.418"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:47.418" endtime="20220705 06:30:47.455"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:47.482" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220705 06:30:47.456" endtime="20220705 06:30:47.483"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220705 06:30:47.483" level="INFO">Length is 8</msg>
<msg timestamp="20220705 06:30:47.483" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220705 06:30:47.483" endtime="20220705 06:30:47.483"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:47.483" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220705 06:30:47.483" endtime="20220705 06:30:47.545"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:30:47.546" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:30:47.860" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:30:47.546" endtime="20220705 06:30:47.876"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220705 06:30:47.876" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:30:47.877" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:30:48.165" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:30:47.876" endtime="20220705 06:30:48.201"/>
</kw>
<msg timestamp="20220705 06:30:48.201" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:30:48.201" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:30:48.485" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:30:48.201" endtime="20220705 06:30:48.500"/>
</kw>
<msg timestamp="20220705 06:30:48.500" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:30:48.501" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:30:48.793" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:30:48.501" endtime="20220705 06:30:48.812"/>
</kw>
<msg timestamp="20220705 06:30:48.812" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:30:48.812" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:30:49.092" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:30:48.812" endtime="20220705 06:30:49.107"/>
</kw>
<msg timestamp="20220705 06:30:49.107" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:30:49.108" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:30:49.389" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:30:49.107" endtime="20220705 06:30:49.401"/>
</kw>
<msg timestamp="20220705 06:30:49.401" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:30:49.402" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:30:49.684" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:30:49.401" endtime="20220705 06:30:49.705"/>
</kw>
<msg timestamp="20220705 06:30:49.705" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:30:49.706" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:30:49.984" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:30:49.705" endtime="20220705 06:30:50.003"/>
</kw>
<msg timestamp="20220705 06:30:50.003" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:30:50.004" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:30:50.282" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:30:50.003" endtime="20220705 06:30:50.297"/>
</kw>
<status status="PASS" starttime="20220705 06:30:47.876" endtime="20220705 06:30:50.297"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:30:50.297" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:30:50.575" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220705 06:30:50.297" endtime="20220705 06:30:50.634"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:30:50.634" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 06:30:50.952" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 06:30:50.634" endtime="20220705 06:30:51.068"/>
</kw>
<status status="PASS" starttime="20220705 06:30:47.418" endtime="20220705 06:30:51.068"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:51.069" endtime="20220705 06:30:51.110"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 06:30:51.111" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220705 06:30:51.110" endtime="20220705 06:30:51.216"/>
</kw>
<status status="PASS" starttime="20220705 06:30:51.069" endtime="20220705 06:30:51.217"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:30:51.217" endtime="20220705 06:30:51.315"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:51.318" level="INFO">${url} = boards/62c3da909227d624fb8f8389</msg>
<status status="PASS" starttime="20220705 06:30:51.318" endtime="20220705 06:30:51.318"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:30:51.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:51.319" endtime="20220705 06:30:51.684"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:30:51.685" endtime="20220705 06:30:51.685"/>
</return>
<msg timestamp="20220705 06:30:51.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:51.318" endtime="20220705 06:30:51.685"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:30:51.685" endtime="20220705 06:30:51.685"/>
</return>
<status status="PASS" starttime="20220705 06:30:51.316" endtime="20220705 06:30:51.685"/>
</kw>
<status status="PASS" starttime="20220705 06:30:51.315" endtime="20220705 06:30:51.685"/>
</kw>
<status status="PASS" starttime="20220705 06:30:51.217" endtime="20220705 06:30:51.685"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:30:40.024" endtime="20220705 06:30:51.685"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:30:51.687" endtime="20220705 06:30:51.688"/>
</kw>
<status status="PASS" starttime="20220705 06:30:51.687" endtime="20220705 06:30:51.689"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220705 06:30:10.813" endtime="20220705 06:30:51.689"/>
</suite>
<suite id="s1-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:30:51.705" endtime="20220705 06:30:51.706"/>
</kw>
<status status="PASS" starttime="20220705 06:30:51.705" endtime="20220705 06:30:51.706"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:30:51.707" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:30:51.706" endtime="20220705 06:30:51.707"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:30:51.707" endtime="20220705 06:30:51.707"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:51.708" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:30:51.707" endtime="20220705 06:30:51.708"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:30:51.992" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:51.708" endtime="20220705 06:30:51.992"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:30:51.992" endtime="20220705 06:30:51.992"/>
</return>
<msg timestamp="20220705 06:30:51.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:51.706" endtime="20220705 06:30:51.993"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:30:51.993" endtime="20220705 06:30:51.993"/>
</return>
<msg timestamp="20220705 06:30:51.993" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:30:51.706" endtime="20220705 06:30:51.993"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:30:51.995" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3da9b14f59a6eb34809c4</msg>
<status status="PASS" starttime="20220705 06:30:51.993" endtime="20220705 06:30:51.995"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:30:51.996" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:30:51.996" endtime="20220705 06:30:52.976"/>
</kw>
<status status="PASS" starttime="20220705 06:30:51.995" endtime="20220705 06:30:52.976"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:52.976" endtime="20220705 06:30:52.976"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:52.976" endtime="20220705 06:30:52.976"/>
</branch>
<status status="PASS" starttime="20220705 06:30:51.995" endtime="20220705 06:30:52.976"/>
</if>
<status status="PASS" starttime="20220705 06:30:51.995" endtime="20220705 06:30:52.976"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:30:52.977" endtime="20220705 06:30:53.094"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:53.103" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:30:53.095" endtime="20220705 06:30:53.103"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:53.104" endtime="20220705 06:30:53.104"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:53.103" endtime="20220705 06:30:53.104"/>
</branch>
<status status="PASS" starttime="20220705 06:30:53.103" endtime="20220705 06:30:53.104"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:53.104" endtime="20220705 06:30:53.141"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:53.141" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:30:53.141" endtime="20220705 06:30:53.237"/>
</kw>
<status status="PASS" starttime="20220705 06:30:53.104" endtime="20220705 06:30:53.237"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:30:53.238" endtime="20220705 06:30:53.978"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:53.993" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:30:53.979" endtime="20220705 06:30:53.993"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:30:53.994" endtime="20220705 06:30:54.034"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:54.035" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:30:54.034" endtime="20220705 06:30:54.792"/>
</kw>
<status status="PASS" starttime="20220705 06:30:53.994" endtime="20220705 06:30:54.792"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:30:54.792" endtime="20220705 06:30:54.792"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:54.793" endtime="20220705 06:30:54.793"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:54.792" endtime="20220705 06:30:54.793"/>
</branch>
<status status="PASS" starttime="20220705 06:30:53.993" endtime="20220705 06:30:54.793"/>
</if>
<status status="PASS" starttime="20220705 06:30:53.979" endtime="20220705 06:30:54.793"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:30:54.793" endtime="20220705 06:30:54.814"/>
</kw>
<status status="PASS" starttime="20220705 06:30:54.793" endtime="20220705 06:30:54.814"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:54.815" endtime="20220705 06:30:55.089"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:55.090" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:30:55.132" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:30:55.196" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:30:55.090" endtime="20220705 06:30:55.197"/>
</kw>
<status status="PASS" starttime="20220705 06:30:54.814" endtime="20220705 06:30:55.197"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:30:55.209" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3da...</msg>
<status status="PASS" starttime="20220705 06:30:55.197" endtime="20220705 06:30:55.209"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:30:55.210" endtime="20220705 06:30:55.210"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:30:55.210" endtime="20220705 06:30:55.210"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:30:55.210" endtime="20220705 06:30:55.210"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:30:55.210" endtime="20220705 06:30:55.265"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:55.266" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:30:55.265" endtime="20220705 06:30:55.420"/>
</kw>
<status status="PASS" starttime="20220705 06:30:55.210" endtime="20220705 06:30:55.420"/>
</branch>
<status status="PASS" starttime="20220705 06:30:55.209" endtime="20220705 06:30:55.421"/>
</if>
<status status="PASS" starttime="20220705 06:30:55.197" endtime="20220705 06:30:55.421"/>
</kw>
<status status="PASS" starttime="20220705 06:30:53.094" endtime="20220705 06:30:55.421"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:55.422" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220705 06:30:55.421" endtime="20220705 06:30:55.422"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:55.422" endtime="20220705 06:30:58.273"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:58.273" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220705 06:30:58.273" endtime="20220705 06:30:58.603"/>
</kw>
<status status="PASS" starttime="20220705 06:30:55.421" endtime="20220705 06:30:58.603"/>
</kw>
<status status="PASS" starttime="20220705 06:30:51.705" endtime="20220705 06:30:58.604"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:30:58.605" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 06:30:58.605" endtime="20220705 06:30:58.605"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:30:58.606" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 06:30:58.606" endtime="20220705 06:30:58.606"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:58.607" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:30:58.606" endtime="20220705 06:30:58.607"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:58.607" endtime="20220705 06:30:59.064"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:59.064" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:30:59.064" endtime="20220705 06:30:59.203"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:59.204" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:30:59.204" endtime="20220705 06:30:59.204"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:59.204" endtime="20220705 06:30:59.243"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:59.244" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:30:59.243" endtime="20220705 06:30:59.293"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:30:59.293" endtime="20220705 06:30:59.343"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:59.343" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:30:59.343" endtime="20220705 06:30:59.525"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:59.526" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:30:59.525" endtime="20220705 06:30:59.526"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:59.526" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:30:59.526" endtime="20220705 06:30:59.640"/>
</kw>
<status status="PASS" starttime="20220705 06:30:58.606" endtime="20220705 06:30:59.640"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:59.641" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:30:59.641" endtime="20220705 06:30:59.641"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 06:30:59.717" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220705 06:30:59.641" endtime="20220705 06:30:59.717"/>
</kw>
<status status="PASS" starttime="20220705 06:30:59.640" endtime="20220705 06:30:59.717"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:30:59.719" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:30:59.718" endtime="20220705 06:30:59.719"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:59.719" endtime="20220705 06:30:59.745"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:30:59.745" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 06:30:59.745" endtime="20220705 06:30:59.820"/>
</kw>
<status status="PASS" starttime="20220705 06:30:59.718" endtime="20220705 06:30:59.820"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 06:30:59.848" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 06:30:59.821" endtime="20220705 06:30:59.848"/>
</kw>
<msg timestamp="20220705 06:30:59.848" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 06:30:59.821" endtime="20220705 06:30:59.848"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:30:59.849" endtime="20220705 06:31:00.360"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:00.361" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 06:31:00.360" endtime="20220705 06:31:00.449"/>
</kw>
<status status="PASS" starttime="20220705 06:30:59.849" endtime="20220705 06:31:00.449"/>
</kw>
<status status="PASS" starttime="20220705 06:30:59.848" endtime="20220705 06:31:00.449"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:00.450" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:31:00.450" endtime="20220705 06:31:00.528"/>
</kw>
<status status="PASS" starttime="20220705 06:31:00.449" endtime="20220705 06:31:00.528"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:00.529" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:31:00.528" endtime="20220705 06:31:00.696"/>
</kw>
<status status="PASS" starttime="20220705 06:30:59.820" endtime="20220705 06:31:00.696"/>
</kw>
<status status="PASS" starttime="20220705 06:30:59.718" endtime="20220705 06:31:00.697"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:30:58.604" endtime="20220705 06:31:00.697"/>
</test>
<test id="s1-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:31:00.699" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 06:31:00.699" endtime="20220705 06:31:00.699"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:31:00.700" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 06:31:00.699" endtime="20220705 06:31:00.700"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:00.701" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:31:00.700" endtime="20220705 06:31:00.701"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:00.701" endtime="20220705 06:31:00.747"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:00.748" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:31:00.747" endtime="20220705 06:31:00.831"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:00.831" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:31:00.831" endtime="20220705 06:31:00.831"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:00.832" endtime="20220705 06:31:00.877"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:00.877" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:00.877" endtime="20220705 06:31:00.934"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:31:00.934" endtime="20220705 06:31:00.971"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:00.972" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:00.971" endtime="20220705 06:31:01.064"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:01.065" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:31:01.064" endtime="20220705 06:31:01.065"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:01.065" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:31:01.065" endtime="20220705 06:31:01.151"/>
</kw>
<status status="PASS" starttime="20220705 06:31:00.700" endtime="20220705 06:31:01.151"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:31:01.151" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220705 06:31:01.151" endtime="20220705 06:31:01.152"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:01.153" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:31:01.152" endtime="20220705 06:31:01.153"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:01.153" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220705 06:31:01.153" endtime="20220705 06:31:01.153"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:01.153" endtime="20220705 06:31:01.212"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220705 06:31:01.213" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 06:31:01.212" endtime="20220705 06:31:01.494"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 06:31:01.494" endtime="20220705 06:31:01.513"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:01.514" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220705 06:31:01.513" endtime="20220705 06:31:01.581"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:01.581" endtime="20220705 06:31:01.627"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:01.628" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220705 06:31:01.628" endtime="20220705 06:31:01.708"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:31:01.709" endtime="20220705 06:31:01.749"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:01.750" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220705 06:31:01.750" endtime="20220705 06:31:01.861"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:01.861" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220705 06:31:01.861" endtime="20220705 06:31:01.943"/>
</kw>
<status status="PASS" starttime="20220705 06:31:01.152" endtime="20220705 06:31:01.943"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:01.944" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220705 06:31:01.944" endtime="20220705 06:31:01.944"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 06:31:01.982" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220705 06:31:01.945" endtime="20220705 06:31:01.982"/>
</kw>
<status status="PASS" starttime="20220705 06:31:01.943" endtime="20220705 06:31:01.983"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:01.984" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220705 06:31:01.984" endtime="20220705 06:31:01.984"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:01.985" endtime="20220705 06:31:02.015"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:02.016" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220705 06:31:02.015" endtime="20220705 06:31:02.105"/>
</kw>
<status status="PASS" starttime="20220705 06:31:01.983" endtime="20220705 06:31:02.105"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 06:31:02.293" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 06:31:02.106" endtime="20220705 06:31:02.293"/>
</kw>
<msg timestamp="20220705 06:31:02.294" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 06:31:02.106" endtime="20220705 06:31:02.294"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:02.295" endtime="20220705 06:31:02.340"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:02.340" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 06:31:02.340" endtime="20220705 06:31:02.419"/>
</kw>
<status status="PASS" starttime="20220705 06:31:02.294" endtime="20220705 06:31:02.419"/>
</kw>
<status status="PASS" starttime="20220705 06:31:02.294" endtime="20220705 06:31:02.419"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:02.420" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:31:02.420" endtime="20220705 06:31:02.511"/>
</kw>
<status status="PASS" starttime="20220705 06:31:02.419" endtime="20220705 06:31:02.511"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:02.512" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:31:02.511" endtime="20220705 06:31:02.694"/>
</kw>
<status status="PASS" starttime="20220705 06:31:02.105" endtime="20220705 06:31:02.694"/>
</kw>
<status status="PASS" starttime="20220705 06:31:01.983" endtime="20220705 06:31:02.695"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:31:00.697" endtime="20220705 06:31:02.695"/>
</test>
<test id="s1-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:31:02.696" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 06:31:02.696" endtime="20220705 06:31:02.696"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:31:02.697" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 06:31:02.697" endtime="20220705 06:31:02.697"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:02.698" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:31:02.697" endtime="20220705 06:31:02.698"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:02.698" endtime="20220705 06:31:02.791"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:02.791" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:31:02.791" endtime="20220705 06:31:02.853"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:02.854" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:31:02.853" endtime="20220705 06:31:02.854"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:02.854" endtime="20220705 06:31:02.916"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:02.917" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:02.916" endtime="20220705 06:31:02.969"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:31:02.969" endtime="20220705 06:31:03.007"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:03.008" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:03.007" endtime="20220705 06:31:03.099"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:03.099" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:31:03.099" endtime="20220705 06:31:03.099"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:03.100" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:31:03.100" endtime="20220705 06:31:03.170"/>
</kw>
<status status="PASS" starttime="20220705 06:31:02.697" endtime="20220705 06:31:03.170"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:03.171" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:31:03.171" endtime="20220705 06:31:03.171"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:03.171" endtime="20220705 06:31:03.235"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:03.236" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 06:31:03.236" endtime="20220705 06:31:03.294"/>
</kw>
<status status="PASS" starttime="20220705 06:31:03.170" endtime="20220705 06:31:03.294"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 06:31:03.553" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 06:31:03.295" endtime="20220705 06:31:03.553"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 06:31:03.553" endtime="20220705 06:31:03.553"/>
</return>
<msg timestamp="20220705 06:31:03.553" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220705 06:31:03.294" endtime="20220705 06:31:03.553"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:03.554" endtime="20220705 06:31:03.605"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:03.605" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220705 06:31:03.605" endtime="20220705 06:31:03.663"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:31:03.663" endtime="20220705 06:31:03.702"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:03.703" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220705 06:31:03.703" endtime="20220705 06:31:03.870"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:03.871" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220705 06:31:03.870" endtime="20220705 06:31:04.009"/>
</kw>
<status status="PASS" starttime="20220705 06:31:03.553" endtime="20220705 06:31:04.009"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 06:31:04.028" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220705 06:31:04.009" endtime="20220705 06:31:04.028"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 06:31:04.028" endtime="20220705 06:31:04.028"/>
</return>
<msg timestamp="20220705 06:31:04.028" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220705 06:31:04.009" endtime="20220705 06:31:04.028"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 06:31:04.028" endtime="20220705 06:31:04.030"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 06:31:04.050" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 06:31:04.031" endtime="20220705 06:31:04.050"/>
</kw>
<msg timestamp="20220705 06:31:04.050" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 06:31:04.030" endtime="20220705 06:31:04.050"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:04.051" endtime="20220705 06:31:04.116"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:04.116" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 06:31:04.116" endtime="20220705 06:31:04.205"/>
</kw>
<status status="PASS" starttime="20220705 06:31:04.051" endtime="20220705 06:31:04.205"/>
</kw>
<status status="PASS" starttime="20220705 06:31:04.050" endtime="20220705 06:31:04.205"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:04.206" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:31:04.206" endtime="20220705 06:31:04.269"/>
</kw>
<status status="PASS" starttime="20220705 06:31:04.206" endtime="20220705 06:31:04.269"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:04.270" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:31:04.269" endtime="20220705 06:31:04.445"/>
</kw>
<status status="PASS" starttime="20220705 06:31:04.030" endtime="20220705 06:31:04.445"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:31:02.695" endtime="20220705 06:31:04.445"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:31:04.448" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 06:31:04.448" endtime="20220705 06:31:04.448"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:31:04.448" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 06:31:04.448" endtime="20220705 06:31:04.448"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:04.450" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 06:31:04.449" endtime="20220705 06:31:04.450"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 06:31:04.483" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 06:31:04.450" endtime="20220705 06:31:04.483"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 06:31:04.483" endtime="20220705 06:31:04.483"/>
</return>
<msg timestamp="20220705 06:31:04.483" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220705 06:31:04.448" endtime="20220705 06:31:04.483"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:04.485" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:31:04.484" endtime="20220705 06:31:04.485"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:04.485" endtime="20220705 06:31:04.510"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:04.511" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:31:04.510" endtime="20220705 06:31:04.554"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:04.554" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:31:04.554" endtime="20220705 06:31:04.554"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:04.555" endtime="20220705 06:31:04.599"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:04.600" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:04.600" endtime="20220705 06:31:04.646"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:31:04.646" endtime="20220705 06:31:04.684"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:04.685" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:04.685" endtime="20220705 06:31:04.779"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:04.780" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:31:04.780" endtime="20220705 06:31:04.780"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:04.781" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:31:04.780" endtime="20220705 06:31:04.838"/>
</kw>
<status status="PASS" starttime="20220705 06:31:04.484" endtime="20220705 06:31:04.838"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:04.839" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:31:04.839" endtime="20220705 06:31:04.839"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:04.839" endtime="20220705 06:31:04.892"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:04.893" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 06:31:04.892" endtime="20220705 06:31:04.940"/>
</kw>
<status status="PASS" starttime="20220705 06:31:04.838" endtime="20220705 06:31:04.941"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 06:31:05.128" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 06:31:04.941" endtime="20220705 06:31:05.129"/>
</kw>
<msg timestamp="20220705 06:31:05.129" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 06:31:04.941" endtime="20220705 06:31:05.129"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:05.130" endtime="20220705 06:31:05.194"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:05.194" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 06:31:05.194" endtime="20220705 06:31:05.261"/>
</kw>
<status status="PASS" starttime="20220705 06:31:05.129" endtime="20220705 06:31:05.261"/>
</kw>
<status status="PASS" starttime="20220705 06:31:05.129" endtime="20220705 06:31:05.261"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:05.262" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:31:05.262" endtime="20220705 06:31:05.332"/>
</kw>
<status status="PASS" starttime="20220705 06:31:05.261" endtime="20220705 06:31:05.332"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:05.332" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:31:05.332" endtime="20220705 06:31:05.509"/>
</kw>
<status status="PASS" starttime="20220705 06:31:04.941" endtime="20220705 06:31:05.509"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:05.511" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 06:31:05.510" endtime="20220705 06:31:05.511"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 06:31:05.530" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 06:31:05.511" endtime="20220705 06:31:05.530"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 06:31:05.530" endtime="20220705 06:31:05.530"/>
</return>
<msg timestamp="20220705 06:31:05.530" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220705 06:31:05.510" endtime="20220705 06:31:05.530"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 06:31:05.530" endtime="20220705 06:31:05.531"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:31:04.446" endtime="20220705 06:31:05.531"/>
</test>
<test id="s1-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:31:05.533" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 06:31:05.533" endtime="20220705 06:31:05.533"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:31:05.533" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 06:31:05.533" endtime="20220705 06:31:05.533"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:05.534" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:31:05.534" endtime="20220705 06:31:05.534"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:05.534" endtime="20220705 06:31:05.561"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:05.561" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:31:05.561" endtime="20220705 06:31:05.675"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:05.676" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:31:05.676" endtime="20220705 06:31:05.676"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:05.676" endtime="20220705 06:31:05.745"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:05.745" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:05.745" endtime="20220705 06:31:05.798"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:31:05.798" endtime="20220705 06:31:05.905"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:05.906" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:05.905" endtime="20220705 06:31:06.241"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:06.242" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:31:06.241" endtime="20220705 06:31:06.242"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:06.242" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:31:06.242" endtime="20220705 06:31:06.537"/>
</kw>
<status status="PASS" starttime="20220705 06:31:05.533" endtime="20220705 06:31:06.537"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:31:06.537" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220705 06:31:06.537" endtime="20220705 06:31:06.537"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:06.539" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:31:06.538" endtime="20220705 06:31:06.539"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:06.539" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 06:31:06.539" endtime="20220705 06:31:06.539"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:06.539" endtime="20220705 06:31:06.840"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220705 06:31:06.840" endtime="20220705 06:31:07.443"/>
</kw>
<status status="PASS" starttime="20220705 06:31:06.538" endtime="20220705 06:31:07.444"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:07.445" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:31:07.444" endtime="20220705 06:31:07.445"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 06:31:07.507" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220705 06:31:07.445" endtime="20220705 06:31:07.507"/>
</kw>
<status status="PASS" starttime="20220705 06:31:07.444" endtime="20220705 06:31:07.508"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:07.509" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 06:31:07.509" endtime="20220705 06:31:07.509"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:07.509" endtime="20220705 06:31:07.540"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:07.540" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 06:31:07.540" endtime="20220705 06:31:07.594"/>
</kw>
<status status="PASS" starttime="20220705 06:31:07.508" endtime="20220705 06:31:07.594"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 06:31:07.915" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 06:31:07.595" endtime="20220705 06:31:07.915"/>
</kw>
<msg timestamp="20220705 06:31:07.915" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 06:31:07.595" endtime="20220705 06:31:07.915"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:07.916" endtime="20220705 06:31:07.999"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:07.999" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 06:31:07.999" endtime="20220705 06:31:08.079"/>
</kw>
<status status="PASS" starttime="20220705 06:31:07.916" endtime="20220705 06:31:08.079"/>
</kw>
<status status="PASS" starttime="20220705 06:31:07.915" endtime="20220705 06:31:08.079"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:08.080" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:31:08.080" endtime="20220705 06:31:08.179"/>
</kw>
<status status="PASS" starttime="20220705 06:31:08.080" endtime="20220705 06:31:08.179"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:08.180" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 06:31:08.179" endtime="20220705 06:31:08.448"/>
</kw>
<status status="PASS" starttime="20220705 06:31:07.594" endtime="20220705 06:31:08.448"/>
</kw>
<status status="PASS" starttime="20220705 06:31:07.508" endtime="20220705 06:31:08.448"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:31:05.532" endtime="20220705 06:31:08.448"/>
</test>
<test id="s1-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:31:08.452" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:31:08.451" endtime="20220705 06:31:08.452"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:31:08.452" endtime="20220705 06:31:08.452"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:08.454" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:31:08.452" endtime="20220705 06:31:08.454"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:31:08.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:08.454" endtime="20220705 06:31:08.623"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:08.623" endtime="20220705 06:31:08.623"/>
</return>
<msg timestamp="20220705 06:31:08.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:08.451" endtime="20220705 06:31:08.623"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:08.623" endtime="20220705 06:31:08.623"/>
</return>
<msg timestamp="20220705 06:31:08.623" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:08.450" endtime="20220705 06:31:08.623"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:08.624" endtime="20220705 06:31:08.713"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:08.713" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220705 06:31:08.713" endtime="20220705 06:31:08.942"/>
</kw>
<status status="PASS" starttime="20220705 06:31:08.624" endtime="20220705 06:31:08.942"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:08.943" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220705 06:31:08.942" endtime="20220705 06:31:08.943"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:08.943" endtime="20220705 06:31:09.301"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:09.302" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220705 06:31:09.302" endtime="20220705 06:31:09.520"/>
</kw>
<status status="PASS" starttime="20220705 06:31:08.942" endtime="20220705 06:31:09.520"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:31:09.520" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 06:31:09.520" endtime="20220705 06:31:09.520"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 06:31:09.521" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220705 06:31:09.521" endtime="20220705 06:31:09.521"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:09.522" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:31:09.521" endtime="20220705 06:31:09.522"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:09.522" endtime="20220705 06:31:10.205"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:10.206" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:31:10.206" endtime="20220705 06:31:10.318"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:10.319" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:31:10.318" endtime="20220705 06:31:10.319"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:10.319" endtime="20220705 06:31:10.379"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:10.379" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:10.379" endtime="20220705 06:31:10.488"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:31:10.489" endtime="20220705 06:31:10.538"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:10.539" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:10.538" endtime="20220705 06:31:10.667"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:10.668" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:31:10.667" endtime="20220705 06:31:10.668"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:10.668" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:31:10.668" endtime="20220705 06:31:10.758"/>
</kw>
<status status="PASS" starttime="20220705 06:31:09.521" endtime="20220705 06:31:10.759"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:10.760" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220705 06:31:10.759" endtime="20220705 06:31:10.760"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:10.760" endtime="20220705 06:31:10.804"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:10.805" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220705 06:31:10.804" endtime="20220705 06:31:10.856"/>
</kw>
<status status="PASS" starttime="20220705 06:31:10.759" endtime="20220705 06:31:10.857"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:10.857" endtime="20220705 06:31:11.134"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:11.135" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220705 06:31:11.135" endtime="20220705 06:31:11.211"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220705 06:31:11.212" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220705 06:31:11.212" endtime="20220705 06:31:11.342"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:11.343" endtime="20220705 06:31:11.619"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:11.619" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220705 06:31:11.619" endtime="20220705 06:31:11.773"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:31:11.773" endtime="20220705 06:31:11.787"/>
</kw>
<status status="PASS" starttime="20220705 06:31:10.857" endtime="20220705 06:31:11.787"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:11.788" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 06:31:11.787" endtime="20220705 06:31:11.788"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 06:31:11.797" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 06:31:11.788" endtime="20220705 06:31:11.797"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 06:31:11.798" endtime="20220705 06:31:11.798"/>
</return>
<msg timestamp="20220705 06:31:11.798" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220705 06:31:11.787" endtime="20220705 06:31:11.798"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220705 06:31:11.798" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220705 06:31:11.798" endtime="20220705 06:31:11.798"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 06:31:11.798" endtime="20220705 06:31:11.799"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:31:11.799" endtime="20220705 06:31:11.905"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:11.909" level="INFO">${url} = boards/62c3daac359f901a232072da</msg>
<status status="PASS" starttime="20220705 06:31:11.909" endtime="20220705 06:31:11.909"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:31:11.961" level="INFO">${response} = None</msg>
<msg timestamp="20220705 06:31:11.961" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220705 06:31:11.909" endtime="20220705 06:31:11.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:11.962" endtime="20220705 06:31:11.962"/>
</return>
<msg timestamp="20220705 06:31:11.962" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220705 06:31:11.908" endtime="20220705 06:31:11.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:11.962" endtime="20220705 06:31:11.962"/>
</return>
<status status="FAIL" starttime="20220705 06:31:11.906" endtime="20220705 06:31:11.962"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:14.966" level="INFO">${url} = boards/62c3daac359f901a232072da</msg>
<status status="PASS" starttime="20220705 06:31:14.966" endtime="20220705 06:31:14.966"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:31:15.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:14.966" endtime="20220705 06:31:15.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:15.298" endtime="20220705 06:31:15.298"/>
</return>
<msg timestamp="20220705 06:31:15.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:14.965" endtime="20220705 06:31:15.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:15.298" endtime="20220705 06:31:15.298"/>
</return>
<status status="PASS" starttime="20220705 06:31:14.963" endtime="20220705 06:31:15.299"/>
</kw>
<status status="PASS" starttime="20220705 06:31:11.905" endtime="20220705 06:31:15.299"/>
</kw>
<status status="PASS" starttime="20220705 06:31:11.799" endtime="20220705 06:31:15.299"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 06:31:08.449" endtime="20220705 06:31:15.299"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:15.303" level="INFO">${url} = boards/62c3da9b14f59a6eb34809c4</msg>
<status status="PASS" starttime="20220705 06:31:15.302" endtime="20220705 06:31:15.303"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:31:15.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:15.303" endtime="20220705 06:31:15.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:15.647" endtime="20220705 06:31:15.647"/>
</return>
<msg timestamp="20220705 06:31:15.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:15.302" endtime="20220705 06:31:15.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:15.647" endtime="20220705 06:31:15.647"/>
</return>
<status status="PASS" starttime="20220705 06:31:15.301" endtime="20220705 06:31:15.647"/>
</kw>
<status status="PASS" starttime="20220705 06:31:15.301" endtime="20220705 06:31:15.647"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:31:15.648" endtime="20220705 06:31:15.649"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220705 06:31:15.649" endtime="20220705 06:31:15.649"/>
</kw>
<status status="PASS" starttime="20220705 06:31:15.300" endtime="20220705 06:31:15.649"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220705 06:30:51.691" endtime="20220705 06:31:15.649"/>
</suite>
<suite id="s1-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:31:15.668" endtime="20220705 06:31:15.668"/>
</kw>
<status status="PASS" starttime="20220705 06:31:15.668" endtime="20220705 06:31:15.668"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:31:15.670" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:31:15.669" endtime="20220705 06:31:15.670"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:31:15.670" endtime="20220705 06:31:15.670"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:15.671" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:31:15.670" endtime="20220705 06:31:15.671"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:31:15.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:15.671" endtime="20220705 06:31:15.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:15.861" endtime="20220705 06:31:15.861"/>
</return>
<msg timestamp="20220705 06:31:15.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:15.669" endtime="20220705 06:31:15.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:15.861" endtime="20220705 06:31:15.861"/>
</return>
<msg timestamp="20220705 06:31:15.861" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:15.669" endtime="20220705 06:31:15.861"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:31:15.863" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3dab302232f23e9c9f228</msg>
<status status="PASS" starttime="20220705 06:31:15.862" endtime="20220705 06:31:15.863"/>
</kw>
<status status="PASS" starttime="20220705 06:31:15.669" endtime="20220705 06:31:15.863"/>
</kw>
<status status="PASS" starttime="20220705 06:31:15.668" endtime="20220705 06:31:15.863"/>
</kw>
<test id="s1-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:31:15.865" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:31:15.865" endtime="20220705 06:31:16.886"/>
</kw>
<status status="PASS" starttime="20220705 06:31:15.865" endtime="20220705 06:31:16.886"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:16.887" endtime="20220705 06:31:16.887"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:16.886" endtime="20220705 06:31:16.887"/>
</branch>
<status status="PASS" starttime="20220705 06:31:15.865" endtime="20220705 06:31:16.887"/>
</if>
<status status="PASS" starttime="20220705 06:31:15.864" endtime="20220705 06:31:16.887"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:31:16.887" endtime="20220705 06:31:17.021"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:31:17.031" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:31:17.022" endtime="20220705 06:31:17.031"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:17.031" endtime="20220705 06:31:17.031"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:17.031" endtime="20220705 06:31:17.031"/>
</branch>
<status status="PASS" starttime="20220705 06:31:17.031" endtime="20220705 06:31:17.031"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:17.032" endtime="20220705 06:31:17.064"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:17.065" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:31:17.064" endtime="20220705 06:31:17.165"/>
</kw>
<status status="PASS" starttime="20220705 06:31:17.031" endtime="20220705 06:31:17.165"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:31:17.165" endtime="20220705 06:31:17.898"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:31:17.905" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:31:17.899" endtime="20220705 06:31:17.905"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:17.906" endtime="20220705 06:31:17.944"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:17.945" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:31:17.945" endtime="20220705 06:31:18.799"/>
</kw>
<status status="PASS" starttime="20220705 06:31:17.906" endtime="20220705 06:31:18.799"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:31:18.799" endtime="20220705 06:31:18.799"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:18.799" endtime="20220705 06:31:18.799"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:18.799" endtime="20220705 06:31:18.800"/>
</branch>
<status status="PASS" starttime="20220705 06:31:17.905" endtime="20220705 06:31:18.800"/>
</if>
<status status="PASS" starttime="20220705 06:31:17.898" endtime="20220705 06:31:18.800"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:31:18.800" endtime="20220705 06:31:18.815"/>
</kw>
<status status="PASS" starttime="20220705 06:31:18.800" endtime="20220705 06:31:18.816"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:18.816" endtime="20220705 06:31:18.875"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:18.876" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:31:18.924" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:31:18.993" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:31:18.876" endtime="20220705 06:31:18.993"/>
</kw>
<status status="PASS" starttime="20220705 06:31:18.816" endtime="20220705 06:31:18.993"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:31:19.016" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3da...</msg>
<status status="PASS" starttime="20220705 06:31:18.993" endtime="20220705 06:31:19.016"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:31:19.016" endtime="20220705 06:31:19.016"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:19.016" endtime="20220705 06:31:19.016"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:19.016" endtime="20220705 06:31:19.016"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:19.017" endtime="20220705 06:31:19.096"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:19.096" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:31:19.096" endtime="20220705 06:31:19.210"/>
</kw>
<status status="PASS" starttime="20220705 06:31:19.016" endtime="20220705 06:31:19.210"/>
</branch>
<status status="PASS" starttime="20220705 06:31:19.016" endtime="20220705 06:31:19.210"/>
</if>
<status status="PASS" starttime="20220705 06:31:18.993" endtime="20220705 06:31:19.211"/>
</kw>
<status status="PASS" starttime="20220705 06:31:17.021" endtime="20220705 06:31:19.211"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:19.212" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 06:31:19.211" endtime="20220705 06:31:19.212"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:19.212" endtime="20220705 06:31:22.134"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:22.135" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 06:31:22.134" endtime="20220705 06:31:22.466"/>
</kw>
<status status="PASS" starttime="20220705 06:31:19.211" endtime="20220705 06:31:22.466"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:22.467" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:31:22.467" endtime="20220705 06:31:22.467"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:22.467" endtime="20220705 06:31:22.913"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:22.914" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:31:22.913" endtime="20220705 06:31:23.035"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:23.036" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:31:23.036" endtime="20220705 06:31:23.036"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:23.036" endtime="20220705 06:31:23.095"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:23.095" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:23.095" endtime="20220705 06:31:23.143"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:31:23.143" endtime="20220705 06:31:23.176"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:23.177" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:23.176" endtime="20220705 06:31:23.278"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:23.279" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:31:23.279" endtime="20220705 06:31:23.279"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:23.279" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:31:23.279" endtime="20220705 06:31:23.366"/>
</kw>
<status status="PASS" starttime="20220705 06:31:22.466" endtime="20220705 06:31:23.367"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:23.368" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 06:31:23.367" endtime="20220705 06:31:23.368"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:23.369" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220705 06:31:23.368" endtime="20220705 06:31:23.369"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:23.369" endtime="20220705 06:31:23.420"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220705 06:31:28.421" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220705 06:31:23.421" endtime="20220705 06:31:28.422"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220705 06:31:28.423" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220705 06:31:28.422" endtime="20220705 06:31:28.774"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220705 06:31:33.775" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220705 06:31:28.774" endtime="20220705 06:31:33.775"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 06:31:33.775" endtime="20220705 06:31:33.792"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:33.792" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220705 06:31:33.792" endtime="20220705 06:31:33.874"/>
</kw>
<status status="PASS" starttime="20220705 06:31:23.367" endtime="20220705 06:31:33.874"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:33.875" endtime="20220705 06:31:33.953"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:33.953" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220705 06:31:33.953" endtime="20220705 06:31:34.028"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:34.028" endtime="20220705 06:31:34.072"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:34.073" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220705 06:31:34.072" endtime="20220705 06:31:34.129"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:34.130" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220705 06:31:34.130" endtime="20220705 06:31:34.224"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:34.225" endtime="20220705 06:31:34.282"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:31:34.283" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220705 06:31:34.560" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 06:31:34.560" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 06:31:34.282" endtime="20220705 06:31:34.592"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:31:34.593" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220705 06:31:34.593" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220705 06:31:34.593" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220705 06:31:34.592" endtime="20220705 06:31:34.609"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:31:34.610" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220705 06:31:34.610" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220705 06:31:34.610" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220705 06:31:34.609" endtime="20220705 06:31:34.626"/>
</kw>
<status status="PASS" starttime="20220705 06:31:33.874" endtime="20220705 06:31:34.626"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:34.627" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:31:34.627" endtime="20220705 06:31:34.627"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:34.627" endtime="20220705 06:31:34.658"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:34.659" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:31:34.659" endtime="20220705 06:31:34.750"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:34.751" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:31:34.751" endtime="20220705 06:31:34.751"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:34.751" endtime="20220705 06:31:34.789"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:34.790" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:34.789" endtime="20220705 06:31:34.835"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:31:34.836" endtime="20220705 06:31:34.871"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:34.872" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:34.871" endtime="20220705 06:31:34.935"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:34.936" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:31:34.936" endtime="20220705 06:31:34.936"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:34.937" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:31:34.936" endtime="20220705 06:31:35.010"/>
</kw>
<status status="PASS" starttime="20220705 06:31:34.626" endtime="20220705 06:31:35.011"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:35.012" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 06:31:35.011" endtime="20220705 06:31:35.012"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:35.012" endtime="20220705 06:31:35.062"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:35.063" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 06:31:35.062" endtime="20220705 06:31:35.122"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:35.123" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 06:31:35.122" endtime="20220705 06:31:35.123"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:35.123" endtime="20220705 06:31:35.174"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:35.175" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:35.174" endtime="20220705 06:31:35.244"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 06:31:35.245" endtime="20220705 06:31:35.281"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:35.281" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 06:31:35.281" endtime="20220705 06:31:35.344"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:35.345" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 06:31:35.345" endtime="20220705 06:31:35.345"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:35.346" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 06:31:35.345" endtime="20220705 06:31:35.435"/>
</kw>
<status status="PASS" starttime="20220705 06:31:35.011" endtime="20220705 06:31:35.435"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:35.436" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220705 06:31:35.436" endtime="20220705 06:31:35.526"/>
</kw>
<status status="PASS" starttime="20220705 06:31:35.436" endtime="20220705 06:31:35.526"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:35.527" endtime="20220705 06:31:35.669"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:35.670" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220705 06:31:35.669" endtime="20220705 06:31:35.843"/>
</kw>
<status status="PASS" starttime="20220705 06:31:35.526" endtime="20220705 06:31:35.843"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:35.844" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 06:31:35.844" endtime="20220705 06:31:35.844"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 06:31:35.893" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220705 06:31:35.844" endtime="20220705 06:31:35.894"/>
</kw>
<status status="PASS" starttime="20220705 06:31:35.843" endtime="20220705 06:31:35.894"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:35.894" endtime="20220705 06:31:35.941"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:35.942" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220705 06:31:35.941" endtime="20220705 06:31:36.084"/>
</kw>
<status status="PASS" starttime="20220705 06:31:35.894" endtime="20220705 06:31:36.084"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:36.086" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 06:31:36.085" endtime="20220705 06:31:36.086"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 06:31:36.118" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220705 06:31:36.086" endtime="20220705 06:31:36.118"/>
</kw>
<status status="PASS" starttime="20220705 06:31:36.085" endtime="20220705 06:31:36.119"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:31:36.119" endtime="20220705 06:31:36.219"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:31:15.864" endtime="20220705 06:31:36.219"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:36.223" level="INFO">${url} = boards/62c3dab302232f23e9c9f228</msg>
<status status="PASS" starttime="20220705 06:31:36.222" endtime="20220705 06:31:36.223"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:31:36.590" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:36.223" endtime="20220705 06:31:36.590"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:36.590" endtime="20220705 06:31:36.591"/>
</return>
<msg timestamp="20220705 06:31:36.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:36.222" endtime="20220705 06:31:36.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:36.591" endtime="20220705 06:31:36.591"/>
</return>
<status status="PASS" starttime="20220705 06:31:36.222" endtime="20220705 06:31:36.591"/>
</kw>
<status status="PASS" starttime="20220705 06:31:36.221" endtime="20220705 06:31:36.591"/>
</kw>
<status status="PASS" starttime="20220705 06:31:36.221" endtime="20220705 06:31:36.591"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:31:36.592" endtime="20220705 06:31:36.593"/>
</kw>
<status status="PASS" starttime="20220705 06:31:36.221" endtime="20220705 06:31:36.593"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220705 06:31:15.652" endtime="20220705 06:31:36.593"/>
</suite>
<suite id="s1-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 06:31:36.607" endtime="20220705 06:31:36.607"/>
</kw>
<status status="PASS" starttime="20220705 06:31:36.607" endtime="20220705 06:31:36.607"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 06:31:36.608" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 06:31:36.608" endtime="20220705 06:31:36.609"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 06:31:36.609" endtime="20220705 06:31:36.609"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:36.610" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 06:31:36.609" endtime="20220705 06:31:36.610"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 06:31:36.833" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:36.610" endtime="20220705 06:31:36.833"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:36.833" endtime="20220705 06:31:36.833"/>
</return>
<msg timestamp="20220705 06:31:36.833" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:36.608" endtime="20220705 06:31:36.833"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:31:36.833" endtime="20220705 06:31:36.833"/>
</return>
<msg timestamp="20220705 06:31:36.834" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:31:36.608" endtime="20220705 06:31:36.834"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 06:31:36.835" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3dac860d09a5891d4ac00</msg>
<status status="PASS" starttime="20220705 06:31:36.834" endtime="20220705 06:31:36.835"/>
</kw>
<status status="PASS" starttime="20220705 06:31:36.607" endtime="20220705 06:31:36.835"/>
</kw>
<status status="PASS" starttime="20220705 06:31:36.607" endtime="20220705 06:31:36.835"/>
</kw>
<test id="s1-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:31:36.837" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:31:36.837" endtime="20220705 06:31:37.767"/>
</kw>
<status status="PASS" starttime="20220705 06:31:36.837" endtime="20220705 06:31:37.767"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:37.767" endtime="20220705 06:31:37.767"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:37.767" endtime="20220705 06:31:37.767"/>
</branch>
<status status="PASS" starttime="20220705 06:31:36.836" endtime="20220705 06:31:37.767"/>
</if>
<status status="PASS" starttime="20220705 06:31:36.836" endtime="20220705 06:31:37.767"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:31:37.768" endtime="20220705 06:31:37.881"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:31:37.889" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:31:37.882" endtime="20220705 06:31:37.889"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:37.889" endtime="20220705 06:31:37.889"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:37.889" endtime="20220705 06:31:37.889"/>
</branch>
<status status="PASS" starttime="20220705 06:31:37.889" endtime="20220705 06:31:37.890"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:37.890" endtime="20220705 06:31:37.928"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:37.929" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:31:37.929" endtime="20220705 06:31:38.027"/>
</kw>
<status status="PASS" starttime="20220705 06:31:37.890" endtime="20220705 06:31:38.027"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:31:38.027" endtime="20220705 06:31:38.739"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:31:38.754" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:31:38.740" endtime="20220705 06:31:38.754"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:38.754" endtime="20220705 06:31:38.793"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:38.794" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:31:38.793" endtime="20220705 06:31:39.586"/>
</kw>
<status status="PASS" starttime="20220705 06:31:38.754" endtime="20220705 06:31:39.586"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:31:39.586" endtime="20220705 06:31:39.586"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:39.586" endtime="20220705 06:31:39.586"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:39.586" endtime="20220705 06:31:39.586"/>
</branch>
<status status="PASS" starttime="20220705 06:31:38.754" endtime="20220705 06:31:39.586"/>
</if>
<status status="PASS" starttime="20220705 06:31:38.740" endtime="20220705 06:31:39.587"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:31:39.587" endtime="20220705 06:31:39.606"/>
</kw>
<status status="PASS" starttime="20220705 06:31:39.587" endtime="20220705 06:31:39.606"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:39.607" endtime="20220705 06:31:39.647"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:39.647" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:31:39.696" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:31:39.763" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:31:39.647" endtime="20220705 06:31:39.763"/>
</kw>
<status status="PASS" starttime="20220705 06:31:39.606" endtime="20220705 06:31:39.764"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:31:39.775" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3da...</msg>
<status status="PASS" starttime="20220705 06:31:39.764" endtime="20220705 06:31:39.775"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:31:39.776" endtime="20220705 06:31:39.776"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:39.776" endtime="20220705 06:31:39.776"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:39.776" endtime="20220705 06:31:39.776"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:39.776" endtime="20220705 06:31:39.827"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:39.827" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:31:39.827" endtime="20220705 06:31:39.929"/>
</kw>
<status status="PASS" starttime="20220705 06:31:39.776" endtime="20220705 06:31:39.930"/>
</branch>
<status status="PASS" starttime="20220705 06:31:39.776" endtime="20220705 06:31:39.930"/>
</if>
<status status="PASS" starttime="20220705 06:31:39.764" endtime="20220705 06:31:39.930"/>
</kw>
<status status="PASS" starttime="20220705 06:31:37.881" endtime="20220705 06:31:39.930"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:39.931" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 06:31:39.930" endtime="20220705 06:31:39.931"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:39.931" endtime="20220705 06:31:42.872"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:42.873" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 06:31:42.872" endtime="20220705 06:31:43.187"/>
</kw>
<status status="PASS" starttime="20220705 06:31:39.930" endtime="20220705 06:31:43.187"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 06:31:43.188" endtime="20220705 06:31:43.585"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:43.586" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 06:31:43.585" endtime="20220705 06:31:43.718"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:43.718" endtime="20220705 06:31:43.799"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:43.800" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 06:31:43.799" endtime="20220705 06:31:43.909"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:31:43.910" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 06:31:44.208" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 06:31:44.208" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 06:31:43.909" endtime="20220705 06:31:44.246"/>
</kw>
<status status="PASS" starttime="20220705 06:31:43.187" endtime="20220705 06:31:44.246"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:44.247" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 06:31:44.247" endtime="20220705 06:31:44.247"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:44.247" endtime="20220705 06:31:44.284"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 06:31:44.304" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220705 06:31:44.284" endtime="20220705 06:31:44.305"/>
</kw>
<status status="PASS" starttime="20220705 06:31:44.246" endtime="20220705 06:31:44.305"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:44.306" endtime="20220705 06:31:44.388"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:44.389" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 06:31:44.389" endtime="20220705 06:31:44.457"/>
</kw>
<status status="PASS" starttime="20220705 06:31:44.389" endtime="20220705 06:31:44.457"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:44.457" endtime="20220705 06:31:44.520"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:44.521" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 06:31:44.520" endtime="20220705 06:31:44.581"/>
</kw>
<status status="PASS" starttime="20220705 06:31:44.520" endtime="20220705 06:31:44.581"/>
</kw>
<status status="PASS" starttime="20220705 06:31:44.306" endtime="20220705 06:31:44.581"/>
</kw>
<status status="PASS" starttime="20220705 06:31:44.305" endtime="20220705 06:31:44.581"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:31:44.581" endtime="20220705 06:31:44.662"/>
</kw>
<status status="PASS" starttime="20220705 06:31:44.305" endtime="20220705 06:31:44.662"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:31:36.835" endtime="20220705 06:31:44.662"/>
</test>
<test id="s1-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:31:44.665" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:31:44.665" endtime="20220705 06:31:45.650"/>
</kw>
<status status="PASS" starttime="20220705 06:31:44.665" endtime="20220705 06:31:45.650"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:45.651" endtime="20220705 06:31:45.651"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:45.650" endtime="20220705 06:31:45.651"/>
</branch>
<status status="PASS" starttime="20220705 06:31:44.665" endtime="20220705 06:31:45.651"/>
</if>
<status status="PASS" starttime="20220705 06:31:44.664" endtime="20220705 06:31:45.651"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:31:45.651" endtime="20220705 06:31:45.760"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:31:45.768" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:31:45.761" endtime="20220705 06:31:45.768"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:45.769" endtime="20220705 06:31:45.769"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:45.769" endtime="20220705 06:31:45.769"/>
</branch>
<status status="PASS" starttime="20220705 06:31:45.768" endtime="20220705 06:31:45.769"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:45.769" endtime="20220705 06:31:45.800"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:45.800" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:31:45.800" endtime="20220705 06:31:45.909"/>
</kw>
<status status="PASS" starttime="20220705 06:31:45.769" endtime="20220705 06:31:45.910"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:31:45.910" endtime="20220705 06:31:46.638"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:31:46.648" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:31:46.639" endtime="20220705 06:31:46.648"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:46.649" endtime="20220705 06:31:46.692"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:46.693" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:31:46.692" endtime="20220705 06:31:47.466"/>
</kw>
<status status="PASS" starttime="20220705 06:31:46.649" endtime="20220705 06:31:47.466"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:31:47.466" endtime="20220705 06:31:47.467"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:47.467" endtime="20220705 06:31:47.467"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:47.466" endtime="20220705 06:31:47.467"/>
</branch>
<status status="PASS" starttime="20220705 06:31:46.648" endtime="20220705 06:31:47.467"/>
</if>
<status status="PASS" starttime="20220705 06:31:46.638" endtime="20220705 06:31:47.467"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:31:47.467" endtime="20220705 06:31:47.488"/>
</kw>
<status status="PASS" starttime="20220705 06:31:47.467" endtime="20220705 06:31:47.488"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:47.489" endtime="20220705 06:31:47.535"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:47.536" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:31:47.602" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:31:47.674" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:31:47.535" endtime="20220705 06:31:47.675"/>
</kw>
<status status="PASS" starttime="20220705 06:31:47.489" endtime="20220705 06:31:47.675"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:31:47.682" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3da...</msg>
<status status="PASS" starttime="20220705 06:31:47.675" endtime="20220705 06:31:47.682"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:31:47.682" endtime="20220705 06:31:47.683"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:47.683" endtime="20220705 06:31:47.683"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:47.682" endtime="20220705 06:31:47.683"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:47.683" endtime="20220705 06:31:47.745"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:47.745" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:31:47.745" endtime="20220705 06:31:47.841"/>
</kw>
<status status="PASS" starttime="20220705 06:31:47.683" endtime="20220705 06:31:47.841"/>
</branch>
<status status="PASS" starttime="20220705 06:31:47.682" endtime="20220705 06:31:47.841"/>
</if>
<status status="PASS" starttime="20220705 06:31:47.675" endtime="20220705 06:31:47.841"/>
</kw>
<status status="PASS" starttime="20220705 06:31:45.760" endtime="20220705 06:31:47.841"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:47.842" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 06:31:47.842" endtime="20220705 06:31:47.842"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:47.842" endtime="20220705 06:31:50.790"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:50.790" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 06:31:50.790" endtime="20220705 06:31:51.136"/>
</kw>
<status status="PASS" starttime="20220705 06:31:47.841" endtime="20220705 06:31:51.136"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 06:31:51.136" endtime="20220705 06:31:51.553"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:51.554" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 06:31:51.554" endtime="20220705 06:31:51.700"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:51.700" endtime="20220705 06:31:51.766"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:51.767" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 06:31:51.766" endtime="20220705 06:31:51.855"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:31:51.856" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 06:31:52.169" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 06:31:52.169" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 06:31:51.856" endtime="20220705 06:31:52.203"/>
</kw>
<status status="PASS" starttime="20220705 06:31:51.136" endtime="20220705 06:31:52.203"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:52.204" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220705 06:31:52.204" endtime="20220705 06:31:52.204"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:52.204" endtime="20220705 06:31:52.261"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:52.262" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220705 06:31:52.262" endtime="20220705 06:31:52.335"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:52.335" endtime="20220705 06:31:52.376"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:31:52.377" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 06:31:52.665" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220705 06:31:52.665" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220705 06:31:52.376" endtime="20220705 06:31:52.686"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:52.687" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220705 06:31:52.687" endtime="20220705 06:31:52.793"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:31:52.794" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220705 06:31:52.794" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220705 06:31:52.794" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 06:31:52.793" endtime="20220705 06:31:52.810"/>
</kw>
<status status="PASS" starttime="20220705 06:31:52.203" endtime="20220705 06:31:52.810"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:52.811" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 06:31:52.811" endtime="20220705 06:31:52.811"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:52.811" endtime="20220705 06:31:52.855"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 06:31:52.866" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220705 06:31:52.855" endtime="20220705 06:31:52.866"/>
</kw>
<status status="PASS" starttime="20220705 06:31:52.810" endtime="20220705 06:31:52.866"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:52.868" endtime="20220705 06:31:52.933"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:52.934" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 06:31:52.934" endtime="20220705 06:31:53.021"/>
</kw>
<status status="PASS" starttime="20220705 06:31:52.933" endtime="20220705 06:31:53.021"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:53.021" endtime="20220705 06:31:53.088"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:53.089" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 06:31:53.089" endtime="20220705 06:31:53.161"/>
</kw>
<status status="PASS" starttime="20220705 06:31:53.088" endtime="20220705 06:31:53.161"/>
</kw>
<status status="PASS" starttime="20220705 06:31:52.867" endtime="20220705 06:31:53.161"/>
</kw>
<status status="PASS" starttime="20220705 06:31:52.867" endtime="20220705 06:31:53.161"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:31:53.161" endtime="20220705 06:31:53.266"/>
</kw>
<status status="PASS" starttime="20220705 06:31:52.866" endtime="20220705 06:31:53.266"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:31:44.663" endtime="20220705 06:31:53.267"/>
</test>
<test id="s1-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:31:53.269" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:31:53.269" endtime="20220705 06:31:54.292"/>
</kw>
<status status="PASS" starttime="20220705 06:31:53.269" endtime="20220705 06:31:54.292"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:54.292" endtime="20220705 06:31:54.292"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:54.292" endtime="20220705 06:31:54.292"/>
</branch>
<status status="PASS" starttime="20220705 06:31:53.269" endtime="20220705 06:31:54.293"/>
</if>
<status status="PASS" starttime="20220705 06:31:53.268" endtime="20220705 06:31:54.293"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 06:31:54.293" endtime="20220705 06:31:54.402"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:31:54.411" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:31:54.403" endtime="20220705 06:31:54.411"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:54.411" endtime="20220705 06:31:54.411"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:54.411" endtime="20220705 06:31:54.411"/>
</branch>
<status status="PASS" starttime="20220705 06:31:54.411" endtime="20220705 06:31:54.411"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:54.412" endtime="20220705 06:31:54.451"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:54.452" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:31:54.452" endtime="20220705 06:31:54.571"/>
</kw>
<status status="PASS" starttime="20220705 06:31:54.412" endtime="20220705 06:31:54.572"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:31:54.572" endtime="20220705 06:31:55.320"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:31:55.327" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:31:55.321" endtime="20220705 06:31:55.327"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:55.328" endtime="20220705 06:31:55.363"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:55.364" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:31:55.363" endtime="20220705 06:31:56.158"/>
</kw>
<status status="PASS" starttime="20220705 06:31:55.328" endtime="20220705 06:31:56.158"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:31:56.158" endtime="20220705 06:31:56.158"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:56.158" endtime="20220705 06:31:56.158"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:56.158" endtime="20220705 06:31:56.158"/>
</branch>
<status status="PASS" starttime="20220705 06:31:55.328" endtime="20220705 06:31:56.158"/>
</if>
<status status="PASS" starttime="20220705 06:31:55.320" endtime="20220705 06:31:56.158"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:31:56.159" endtime="20220705 06:31:56.171"/>
</kw>
<status status="PASS" starttime="20220705 06:31:56.159" endtime="20220705 06:31:56.171"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:56.171" endtime="20220705 06:31:56.438"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:56.439" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:31:56.483" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:31:56.557" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:31:56.438" endtime="20220705 06:31:56.557"/>
</kw>
<status status="PASS" starttime="20220705 06:31:56.171" endtime="20220705 06:31:56.557"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:31:56.572" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3da...</msg>
<status status="PASS" starttime="20220705 06:31:56.558" endtime="20220705 06:31:56.572"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:31:56.572" endtime="20220705 06:31:56.572"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:31:56.572" endtime="20220705 06:31:56.572"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:31:56.572" endtime="20220705 06:31:56.572"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:31:56.572" endtime="20220705 06:31:56.639"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:56.640" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:31:56.640" endtime="20220705 06:31:56.760"/>
</kw>
<status status="PASS" starttime="20220705 06:31:56.572" endtime="20220705 06:31:56.760"/>
</branch>
<status status="PASS" starttime="20220705 06:31:56.572" endtime="20220705 06:31:56.760"/>
</if>
<status status="PASS" starttime="20220705 06:31:56.558" endtime="20220705 06:31:56.760"/>
</kw>
<status status="PASS" starttime="20220705 06:31:54.402" endtime="20220705 06:31:56.760"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:31:56.761" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 06:31:56.761" endtime="20220705 06:31:56.761"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:31:56.761" endtime="20220705 06:31:59.663"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 06:31:59.664" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 06:31:59.663" endtime="20220705 06:31:59.981"/>
</kw>
<status status="PASS" starttime="20220705 06:31:56.760" endtime="20220705 06:31:59.981"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 06:31:59.982" endtime="20220705 06:32:00.407"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:32:00.408" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 06:32:00.408" endtime="20220705 06:32:00.567"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:32:00.568" endtime="20220705 06:32:00.641"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:32:00.641" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 06:32:00.641" endtime="20220705 06:32:00.740"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 06:32:00.741" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 06:32:01.036" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 06:32:01.036" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 06:32:00.740" endtime="20220705 06:32:01.064"/>
</kw>
<status status="PASS" starttime="20220705 06:31:59.982" endtime="20220705 06:32:01.064"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:32:01.065" endtime="20220705 06:32:01.119"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:32:01.120" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 06:32:01.119" endtime="20220705 06:32:01.201"/>
</kw>
<status status="PASS" starttime="20220705 06:32:01.119" endtime="20220705 06:32:01.201"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:32:01.201" endtime="20220705 06:32:01.277"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:32:01.278" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 06:32:01.277" endtime="20220705 06:32:01.341"/>
</kw>
<status status="PASS" starttime="20220705 06:32:01.277" endtime="20220705 06:32:01.341"/>
</kw>
<status status="PASS" starttime="20220705 06:32:01.065" endtime="20220705 06:32:01.341"/>
</kw>
<status status="PASS" starttime="20220705 06:32:01.064" endtime="20220705 06:32:01.341"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:32:01.342" endtime="20220705 06:32:01.409"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:32:01.410" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 06:32:01.409" endtime="20220705 06:32:01.496"/>
</kw>
<status status="PASS" starttime="20220705 06:32:01.342" endtime="20220705 06:32:01.497"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:32:01.497" endtime="20220705 06:32:01.550"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:32:01.551" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220705 06:32:01.551" endtime="20220705 06:32:01.688"/>
</kw>
<status status="PASS" starttime="20220705 06:32:01.551" endtime="20220705 06:32:01.688"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:32:01.688" endtime="20220705 06:32:01.727"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:32:01.728" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220705 06:32:01.728" endtime="20220705 06:32:01.790"/>
</kw>
<status status="PASS" starttime="20220705 06:32:01.728" endtime="20220705 06:32:01.791"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:32:01.791" endtime="20220705 06:32:01.842"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:32:01.843" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220705 06:32:01.843" endtime="20220705 06:32:01.916"/>
</kw>
<status status="PASS" starttime="20220705 06:32:01.842" endtime="20220705 06:32:01.916"/>
</kw>
<status status="PASS" starttime="20220705 06:32:01.497" endtime="20220705 06:32:01.916"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:32:01.917" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220705 06:32:01.917" endtime="20220705 06:32:01.917"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:32:01.917" endtime="20220705 06:32:02.175"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 06:32:02.186" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220705 06:32:02.176" endtime="20220705 06:32:02.186"/>
</kw>
<status status="PASS" starttime="20220705 06:32:01.916" endtime="20220705 06:32:02.186"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:32:02.187" endtime="20220705 06:32:02.235"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 06:32:02.236" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220705 06:32:02.235" endtime="20220705 06:32:02.335"/>
</kw>
<status status="PASS" starttime="20220705 06:32:02.186" endtime="20220705 06:32:02.335"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:32:02.335" endtime="20220705 06:32:02.423"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:31:53.267" endtime="20220705 06:32:02.423"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 06:32:02.427" level="INFO">${url} = boards/62c3dac860d09a5891d4ac00</msg>
<status status="PASS" starttime="20220705 06:32:02.426" endtime="20220705 06:32:02.427"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 06:32:02.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:32:02.427" endtime="20220705 06:32:02.775"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:32:02.775" endtime="20220705 06:32:02.775"/>
</return>
<msg timestamp="20220705 06:32:02.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 06:32:02.426" endtime="20220705 06:32:02.775"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 06:32:02.776" endtime="20220705 06:32:02.776"/>
</return>
<status status="PASS" starttime="20220705 06:32:02.426" endtime="20220705 06:32:02.776"/>
</kw>
<status status="PASS" starttime="20220705 06:32:02.425" endtime="20220705 06:32:02.776"/>
</kw>
<status status="PASS" starttime="20220705 06:32:02.425" endtime="20220705 06:32:02.776"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 06:32:02.776" endtime="20220705 06:32:02.777"/>
</kw>
<status status="PASS" starttime="20220705 06:32:02.425" endtime="20220705 06:32:02.777"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220705 06:31:36.595" endtime="20220705 06:32:02.777"/>
</suite>
<suite id="s1-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 06:32:02.787" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 06:32:02.786" endtime="20220705 06:32:03.753"/>
</kw>
<status status="PASS" starttime="20220705 06:32:02.786" endtime="20220705 06:32:03.753"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 06:32:03.753" endtime="20220705 06:32:03.753"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:32:03.753" endtime="20220705 06:32:03.753"/>
</branch>
<status status="PASS" starttime="20220705 06:32:02.786" endtime="20220705 06:32:03.753"/>
</if>
<status status="PASS" starttime="20220705 06:32:02.786" endtime="20220705 06:32:03.753"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:32:03.754" endtime="20220705 06:32:03.799"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:32:03.800" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 06:32:03.799" endtime="20220705 06:32:03.917"/>
</kw>
<status status="PASS" starttime="20220705 06:32:03.754" endtime="20220705 06:32:03.917"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 06:32:03.917" endtime="20220705 06:32:04.637"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:32:04.644" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 06:32:04.638" endtime="20220705 06:32:04.644"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:32:04.645" endtime="20220705 06:32:04.680"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:32:04.680" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 06:32:04.680" endtime="20220705 06:32:05.435"/>
</kw>
<status status="PASS" starttime="20220705 06:32:04.644" endtime="20220705 06:32:05.435"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:32:05.435" endtime="20220705 06:32:05.436"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:32:05.436" endtime="20220705 06:32:05.436"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:32:05.435" endtime="20220705 06:32:05.436"/>
</branch>
<status status="PASS" starttime="20220705 06:32:04.644" endtime="20220705 06:32:05.436"/>
</if>
<status status="PASS" starttime="20220705 06:32:04.638" endtime="20220705 06:32:05.436"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:32:05.436" endtime="20220705 06:32:05.451"/>
</kw>
<status status="PASS" starttime="20220705 06:32:05.436" endtime="20220705 06:32:05.451"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:32:05.452" endtime="20220705 06:32:05.507"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 06:32:05.507" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 06:32:05.563" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 06:32:05.637" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 06:32:05.507" endtime="20220705 06:32:05.637"/>
</kw>
<status status="PASS" starttime="20220705 06:32:05.451" endtime="20220705 06:32:05.637"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 06:32:05.645" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c3da...</msg>
<status status="PASS" starttime="20220705 06:32:05.638" endtime="20220705 06:32:05.645"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 06:32:05.645" endtime="20220705 06:32:05.646"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 06:32:05.646" endtime="20220705 06:32:05.646"/>
</kw>
<status status="NOT RUN" starttime="20220705 06:32:05.645" endtime="20220705 06:32:05.646"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 06:32:05.646" endtime="20220705 06:32:05.688"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 06:32:05.689" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 06:32:05.688" endtime="20220705 06:32:05.771"/>
</kw>
<status status="PASS" starttime="20220705 06:32:05.646" endtime="20220705 06:32:05.771"/>
</branch>
<status status="PASS" starttime="20220705 06:32:05.645" endtime="20220705 06:32:05.771"/>
</if>
<status status="PASS" starttime="20220705 06:32:05.637" endtime="20220705 06:32:05.771"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 06:32:05.772" endtime="20220705 06:32:08.627"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 06:32:08.627" endtime="20220705 06:32:08.672"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 06:32:08.672" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220705 06:32:08.672" endtime="20220705 06:32:08.710"/>
</kw>
<status status="PASS" starttime="20220705 06:32:05.772" endtime="20220705 06:32:08.710"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 06:32:08.710" endtime="20220705 06:32:08.793"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 06:32:02.785" endtime="20220705 06:32:08.793"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220705 06:32:02.779" endtime="20220705 06:32:08.794"/>
</suite>
<status status="PASS" starttime="20220705 06:30:10.810" endtime="20220705 06:32:08.796"/>
</suite>
<status status="PASS" starttime="20220705 06:30:10.794" endtime="20220705 06:32:08.799"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.update.description</stat>
<stat pass="1" fail="0" skip="0">board.update.name</stat>
<stat pass="1" fail="0" skip="0">card.comment</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.drag</stat>
<stat pass="1" fail="0" skip="0">card.move</stat>
<stat pass="1" fail="0" skip="0">card.title_board</stat>
<stat pass="15" fail="0" skip="0">gui</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="2" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="4" fail="0" skip="0">regression</stat>
<stat pass="11" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="15" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1" name="Gui">Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="Trello Gui Board">Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s2" name="Trello Gui Cards">Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Trello Gui Labels">Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Gui Lists">Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Trello Gui Login">Trello.Gui.Trello Gui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
