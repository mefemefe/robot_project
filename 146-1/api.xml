<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 10:29:01.811" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 10:29:01.982" endtime="20220705 10:29:01.983"/>
</kw>
<status status="PASS" starttime="20220705 10:29:01.980" endtime="20220705 10:29:01.983"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:01.985" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:01.985" endtime="20220705 10:29:01.985"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:01.985" endtime="20220705 10:29:01.986"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:01.987" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:29:01.986" endtime="20220705 10:29:01.987"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:02.266" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:01.987" endtime="20220705 10:29:02.266"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:02.266" endtime="20220705 10:29:02.266"/>
</return>
<msg timestamp="20220705 10:29:02.267" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:01.984" endtime="20220705 10:29:02.267"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:02.267" endtime="20220705 10:29:02.267"/>
</return>
<msg timestamp="20220705 10:29:02.267" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:01.984" endtime="20220705 10:29:02.267"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:02.268" endtime="20220705 10:29:02.273"/>
</kw>
<status status="PASS" starttime="20220705 10:29:02.267" endtime="20220705 10:29:02.273"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:02.276" level="INFO">${url} = boards/62c4126e9f107b6d9b0153dc</msg>
<status status="PASS" starttime="20220705 10:29:02.275" endtime="20220705 10:29:02.276"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:02.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:02.276" endtime="20220705 10:29:02.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:02.695" endtime="20220705 10:29:02.695"/>
</return>
<msg timestamp="20220705 10:29:02.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:02.275" endtime="20220705 10:29:02.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:02.695" endtime="20220705 10:29:02.695"/>
</return>
<status status="PASS" starttime="20220705 10:29:02.274" endtime="20220705 10:29:02.696"/>
</kw>
<status status="PASS" starttime="20220705 10:29:02.273" endtime="20220705 10:29:02.696"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:29:01.983" endtime="20220705 10:29:02.696"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:02.698" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:02.698" endtime="20220705 10:29:02.698"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:02.699" endtime="20220705 10:29:02.699"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:02.700" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:29:02.699" endtime="20220705 10:29:02.700"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:02.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:02.700" endtime="20220705 10:29:02.917"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:02.917" endtime="20220705 10:29:02.917"/>
</return>
<msg timestamp="20220705 10:29:02.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:02.697" endtime="20220705 10:29:02.918"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:02.918" endtime="20220705 10:29:02.918"/>
</return>
<msg timestamp="20220705 10:29:02.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:02.697" endtime="20220705 10:29:02.918"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:02.919" endtime="20220705 10:29:02.923"/>
</kw>
<status status="PASS" starttime="20220705 10:29:02.918" endtime="20220705 10:29:02.923"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:02.925" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:02.925" endtime="20220705 10:29:02.925"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:02.925" endtime="20220705 10:29:02.926"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:02.926" level="INFO">${url} = boards/62c4126e9bd3d73fb22d952d</msg>
<status status="PASS" starttime="20220705 10:29:02.926" endtime="20220705 10:29:02.926"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:03.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:02.926" endtime="20220705 10:29:03.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:03.062" endtime="20220705 10:29:03.063"/>
</return>
<msg timestamp="20220705 10:29:03.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:02.924" endtime="20220705 10:29:03.063"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:03.063" endtime="20220705 10:29:03.063"/>
</return>
<status status="PASS" starttime="20220705 10:29:02.924" endtime="20220705 10:29:03.063"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:03.066" level="INFO">${url} = boards/62c4126e9bd3d73fb22d952d</msg>
<status status="PASS" starttime="20220705 10:29:03.065" endtime="20220705 10:29:03.066"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:03.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:03.066" endtime="20220705 10:29:03.173"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:03.173" endtime="20220705 10:29:03.173"/>
</return>
<msg timestamp="20220705 10:29:03.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:03.065" endtime="20220705 10:29:03.173"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:03.173" endtime="20220705 10:29:03.173"/>
</return>
<msg timestamp="20220705 10:29:03.174" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:03.063" endtime="20220705 10:29:03.174"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:03.174" endtime="20220705 10:29:03.179"/>
</kw>
<status status="PASS" starttime="20220705 10:29:03.174" endtime="20220705 10:29:03.179"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:03.179" endtime="20220705 10:29:03.180"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:03.183" level="INFO">${url} = boards/62c4126e9bd3d73fb22d952d</msg>
<status status="PASS" starttime="20220705 10:29:03.182" endtime="20220705 10:29:03.183"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:03.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:03.183" endtime="20220705 10:29:03.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:03.551" endtime="20220705 10:29:03.551"/>
</return>
<msg timestamp="20220705 10:29:03.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:03.181" endtime="20220705 10:29:03.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:03.552" endtime="20220705 10:29:03.552"/>
</return>
<status status="PASS" starttime="20220705 10:29:03.180" endtime="20220705 10:29:03.552"/>
</kw>
<status status="PASS" starttime="20220705 10:29:03.180" endtime="20220705 10:29:03.552"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:29:02.696" endtime="20220705 10:29:03.552"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:03.555" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:03.554" endtime="20220705 10:29:03.555"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:03.555" endtime="20220705 10:29:03.555"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:03.556" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:29:03.555" endtime="20220705 10:29:03.556"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:03.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:03.556" endtime="20220705 10:29:03.783"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:03.783" endtime="20220705 10:29:03.783"/>
</return>
<msg timestamp="20220705 10:29:03.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:03.554" endtime="20220705 10:29:03.784"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:03.784" endtime="20220705 10:29:03.784"/>
</return>
<msg timestamp="20220705 10:29:03.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:03.553" endtime="20220705 10:29:03.784"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:03.786" level="INFO">${url} = boards/62c4126fd7a889495927aed6</msg>
<status status="PASS" starttime="20220705 10:29:03.786" endtime="20220705 10:29:03.786"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:04.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:03.787" endtime="20220705 10:29:04.320"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:04.321" endtime="20220705 10:29:04.321"/>
</return>
<msg timestamp="20220705 10:29:04.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:03.785" endtime="20220705 10:29:04.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:04.321" endtime="20220705 10:29:04.321"/>
</return>
<status status="PASS" starttime="20220705 10:29:03.784" endtime="20220705 10:29:04.321"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:04.323" level="INFO">${url} = boards/62c4126fd7a889495927aed6</msg>
<status status="PASS" starttime="20220705 10:29:04.323" endtime="20220705 10:29:04.323"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:04.483" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:29:04.324" endtime="20220705 10:29:04.484"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:04.484" endtime="20220705 10:29:04.484"/>
</return>
<msg timestamp="20220705 10:29:04.484" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:29:04.322" endtime="20220705 10:29:04.484"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:04.484" endtime="20220705 10:29:04.484"/>
</return>
<status status="PASS" starttime="20220705 10:29:04.321" endtime="20220705 10:29:04.484"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:29:03.552" endtime="20220705 10:29:04.484"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:04.487" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:04.487" endtime="20220705 10:29:04.487"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:04.487" endtime="20220705 10:29:04.488"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:04.488" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:29:04.488" endtime="20220705 10:29:04.489"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:04.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:04.489" endtime="20220705 10:29:04.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:04.709" endtime="20220705 10:29:04.709"/>
</return>
<msg timestamp="20220705 10:29:04.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:04.486" endtime="20220705 10:29:04.710"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:04.710" endtime="20220705 10:29:04.710"/>
</return>
<msg timestamp="20220705 10:29:04.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:04.486" endtime="20220705 10:29:04.710"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:04.711" endtime="20220705 10:29:04.716"/>
</kw>
<status status="PASS" starttime="20220705 10:29:04.710" endtime="20220705 10:29:04.716"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:04.718" level="INFO">${url} = boards/62c41270512eee03e881af55</msg>
<status status="PASS" starttime="20220705 10:29:04.717" endtime="20220705 10:29:04.718"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:04.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:04.718" endtime="20220705 10:29:04.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:04.830" endtime="20220705 10:29:04.831"/>
</return>
<msg timestamp="20220705 10:29:04.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:04.717" endtime="20220705 10:29:04.831"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:04.831" endtime="20220705 10:29:04.831"/>
</return>
<msg timestamp="20220705 10:29:04.831" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:04.716" endtime="20220705 10:29:04.831"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:04.832" endtime="20220705 10:29:04.836"/>
</kw>
<status status="PASS" starttime="20220705 10:29:04.831" endtime="20220705 10:29:04.836"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:04.837" endtime="20220705 10:29:04.837"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:04.840" level="INFO">${url} = boards/62c41270512eee03e881af55</msg>
<status status="PASS" starttime="20220705 10:29:04.839" endtime="20220705 10:29:04.840"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:05.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:04.840" endtime="20220705 10:29:05.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:05.306" endtime="20220705 10:29:05.307"/>
</return>
<msg timestamp="20220705 10:29:05.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:04.839" endtime="20220705 10:29:05.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:05.307" endtime="20220705 10:29:05.307"/>
</return>
<status status="PASS" starttime="20220705 10:29:04.838" endtime="20220705 10:29:05.307"/>
</kw>
<status status="PASS" starttime="20220705 10:29:04.838" endtime="20220705 10:29:05.307"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:29:04.485" endtime="20220705 10:29:05.307"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:05.310" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:05.310" endtime="20220705 10:29:05.310"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:05.310" endtime="20220705 10:29:05.310"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:05.311" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:29:05.310" endtime="20220705 10:29:05.311"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:05.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:05.311" endtime="20220705 10:29:05.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:05.610" endtime="20220705 10:29:05.610"/>
</return>
<msg timestamp="20220705 10:29:05.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:05.309" endtime="20220705 10:29:05.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:05.610" endtime="20220705 10:29:05.610"/>
</return>
<msg timestamp="20220705 10:29:05.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:05.309" endtime="20220705 10:29:05.611"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:05.611" endtime="20220705 10:29:05.616"/>
</kw>
<status status="PASS" starttime="20220705 10:29:05.611" endtime="20220705 10:29:05.616"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:05.618" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:05.618" endtime="20220705 10:29:05.618"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:05.618" endtime="20220705 10:29:05.618"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:05.619" level="INFO">${url} = boards/62c41271f7a5a02ffe23cd42</msg>
<status status="PASS" starttime="20220705 10:29:05.619" endtime="20220705 10:29:05.619"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:05.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:05.619" endtime="20220705 10:29:05.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:05.773" endtime="20220705 10:29:05.773"/>
</return>
<msg timestamp="20220705 10:29:05.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:05.617" endtime="20220705 10:29:05.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:05.774" endtime="20220705 10:29:05.774"/>
</return>
<status status="PASS" starttime="20220705 10:29:05.616" endtime="20220705 10:29:05.774"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:05.776" level="INFO">${url} = boards/62c41271f7a5a02ffe23cd42</msg>
<status status="PASS" starttime="20220705 10:29:05.776" endtime="20220705 10:29:05.776"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:05.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:05.776" endtime="20220705 10:29:05.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:05.885" endtime="20220705 10:29:05.885"/>
</return>
<msg timestamp="20220705 10:29:05.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:05.775" endtime="20220705 10:29:05.885"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:05.885" endtime="20220705 10:29:05.885"/>
</return>
<msg timestamp="20220705 10:29:05.885" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:05.774" endtime="20220705 10:29:05.885"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:05.886" endtime="20220705 10:29:05.886"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:05.889" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:05.888" endtime="20220705 10:29:05.889"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:05.889" endtime="20220705 10:29:05.889"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:05.890" level="INFO">${url} = boards/62c41271f7a5a02ffe23cd42</msg>
<status status="PASS" starttime="20220705 10:29:05.889" endtime="20220705 10:29:05.890"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:06.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:05.890" endtime="20220705 10:29:06.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:06.040" endtime="20220705 10:29:06.040"/>
</return>
<msg timestamp="20220705 10:29:06.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:05.888" endtime="20220705 10:29:06.041"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:06.041" endtime="20220705 10:29:06.041"/>
</return>
<status status="PASS" starttime="20220705 10:29:05.887" endtime="20220705 10:29:06.041"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:06.043" level="INFO">${url} = boards/62c41271f7a5a02ffe23cd42</msg>
<status status="PASS" starttime="20220705 10:29:06.043" endtime="20220705 10:29:06.043"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:06.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.043" endtime="20220705 10:29:06.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:06.164" endtime="20220705 10:29:06.164"/>
</return>
<msg timestamp="20220705 10:29:06.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.042" endtime="20220705 10:29:06.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:06.164" endtime="20220705 10:29:06.164"/>
</return>
<msg timestamp="20220705 10:29:06.164" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.041" endtime="20220705 10:29:06.164"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:06.165" endtime="20220705 10:29:06.165"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:06.168" level="INFO">${url} = boards/62c41271f7a5a02ffe23cd42</msg>
<status status="PASS" starttime="20220705 10:29:06.168" endtime="20220705 10:29:06.168"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:06.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.168" endtime="20220705 10:29:06.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:06.550" endtime="20220705 10:29:06.550"/>
</return>
<msg timestamp="20220705 10:29:06.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.167" endtime="20220705 10:29:06.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:06.551" endtime="20220705 10:29:06.551"/>
</return>
<status status="PASS" starttime="20220705 10:29:06.166" endtime="20220705 10:29:06.551"/>
</kw>
<status status="PASS" starttime="20220705 10:29:06.166" endtime="20220705 10:29:06.551"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:29:05.308" endtime="20220705 10:29:06.551"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 10:29:06.552" endtime="20220705 10:29:06.553"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 10:29:01.838" endtime="20220705 10:29:06.554"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 10:29:06.568" endtime="20220705 10:29:06.568"/>
</kw>
<status status="PASS" starttime="20220705 10:29:06.568" endtime="20220705 10:29:06.568"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:06.570" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:06.569" endtime="20220705 10:29:06.570"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:06.570" endtime="20220705 10:29:06.570"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:06.571" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:29:06.570" endtime="20220705 10:29:06.571"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:06.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.571" endtime="20220705 10:29:06.799"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:06.799" endtime="20220705 10:29:06.799"/>
</return>
<msg timestamp="20220705 10:29:06.800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.569" endtime="20220705 10:29:06.800"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:06.800" endtime="20220705 10:29:06.800"/>
</return>
<msg timestamp="20220705 10:29:06.800" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.569" endtime="20220705 10:29:06.800"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:29:06.801" level="INFO">${TEST_SUITE_BOARD_ID} = 62c41272753af56f428b3f6c</msg>
<status status="PASS" starttime="20220705 10:29:06.800" endtime="20220705 10:29:06.801"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:06.803" level="INFO">${url} = boards/62c41272753af56f428b3f6c/lists/</msg>
<status status="PASS" starttime="20220705 10:29:06.802" endtime="20220705 10:29:06.803"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:06.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.803" endtime="20220705 10:29:06.910"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:06.910" endtime="20220705 10:29:06.911"/>
</return>
<msg timestamp="20220705 10:29:06.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.802" endtime="20220705 10:29:06.911"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:06.911" endtime="20220705 10:29:06.911"/>
</return>
<msg timestamp="20220705 10:29:06.911" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.801" endtime="20220705 10:29:06.911"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:29:06.912" level="INFO">${TEST_SUITE_LIST_ID} = 62c41272753af56f428b3f73</msg>
<status status="PASS" starttime="20220705 10:29:06.911" endtime="20220705 10:29:06.912"/>
</kw>
<status status="PASS" starttime="20220705 10:29:06.568" endtime="20220705 10:29:06.913"/>
</kw>
<status status="PASS" starttime="20220705 10:29:06.567" endtime="20220705 10:29:06.913"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:06.915" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:06.915" endtime="20220705 10:29:06.915"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:06.915" endtime="20220705 10:29:06.915"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:06.916" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 10:29:06.916" endtime="20220705 10:29:06.916"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:07.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.917" endtime="20220705 10:29:07.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:07.134" endtime="20220705 10:29:07.134"/>
</return>
<msg timestamp="20220705 10:29:07.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.914" endtime="20220705 10:29:07.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:07.135" endtime="20220705 10:29:07.135"/>
</return>
<msg timestamp="20220705 10:29:07.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:06.913" endtime="20220705 10:29:07.135"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:07.136" endtime="20220705 10:29:07.141"/>
</kw>
<status status="PASS" starttime="20220705 10:29:07.135" endtime="20220705 10:29:07.142"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:07.142" endtime="20220705 10:29:07.142"/>
</return>
<msg timestamp="20220705 10:29:07.143" level="INFO">${CARD_ID} = 62c41273da36a65ee6897151</msg>
<status status="PASS" starttime="20220705 10:29:07.142" endtime="20220705 10:29:07.143"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:07.144" level="INFO">${url} = cards/62c41273da36a65ee6897151</msg>
<status status="PASS" starttime="20220705 10:29:07.144" endtime="20220705 10:29:07.145"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:07.261" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.145" endtime="20220705 10:29:07.261"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:07.261" endtime="20220705 10:29:07.261"/>
</return>
<msg timestamp="20220705 10:29:07.261" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.144" endtime="20220705 10:29:07.261"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:07.261" endtime="20220705 10:29:07.261"/>
</return>
<msg timestamp="20220705 10:29:07.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.143" endtime="20220705 10:29:07.262"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:07.262" endtime="20220705 10:29:07.262"/>
</return>
<msg timestamp="20220705 10:29:07.263" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 10:29:07.262" endtime="20220705 10:29:07.263"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:07.263" endtime="20220705 10:29:07.264"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:07.266" level="INFO">${url} = cards/62c41273da36a65ee6897151</msg>
<status status="PASS" starttime="20220705 10:29:07.265" endtime="20220705 10:29:07.266"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:07.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.266" endtime="20220705 10:29:07.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:07.486" endtime="20220705 10:29:07.486"/>
</return>
<msg timestamp="20220705 10:29:07.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.265" endtime="20220705 10:29:07.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:07.486" endtime="20220705 10:29:07.486"/>
</return>
<status status="PASS" starttime="20220705 10:29:07.264" endtime="20220705 10:29:07.486"/>
</kw>
<status status="PASS" starttime="20220705 10:29:07.264" endtime="20220705 10:29:07.486"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:29:06.913" endtime="20220705 10:29:07.486"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:07.489" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:07.489" endtime="20220705 10:29:07.489"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:07.489" endtime="20220705 10:29:07.490"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:07.491" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 10:29:07.490" endtime="20220705 10:29:07.491"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:07.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.491" endtime="20220705 10:29:07.685"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:07.685" endtime="20220705 10:29:07.685"/>
</return>
<msg timestamp="20220705 10:29:07.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.488" endtime="20220705 10:29:07.685"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:07.685" endtime="20220705 10:29:07.685"/>
</return>
<msg timestamp="20220705 10:29:07.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.488" endtime="20220705 10:29:07.685"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:07.686" endtime="20220705 10:29:07.686"/>
</return>
<msg timestamp="20220705 10:29:07.687" level="INFO">${CARD_ID} = 62c41273696444622baf3dff</msg>
<status status="PASS" starttime="20220705 10:29:07.686" endtime="20220705 10:29:07.687"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:07.690" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:07.689" endtime="20220705 10:29:07.690"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:07.690" endtime="20220705 10:29:07.690"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:07.690" level="INFO">${url} = cards/62c41273696444622baf3dff</msg>
<status status="PASS" starttime="20220705 10:29:07.690" endtime="20220705 10:29:07.691"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:07.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.691" endtime="20220705 10:29:07.871"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:07.871" endtime="20220705 10:29:07.872"/>
</return>
<msg timestamp="20220705 10:29:07.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.689" endtime="20220705 10:29:07.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:07.872" endtime="20220705 10:29:07.872"/>
</return>
<msg timestamp="20220705 10:29:07.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.688" endtime="20220705 10:29:07.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:07.872" endtime="20220705 10:29:07.872"/>
</return>
<status status="PASS" starttime="20220705 10:29:07.687" endtime="20220705 10:29:07.872"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:07.874" level="INFO">${url} = cards/62c41273696444622baf3dff</msg>
<status status="PASS" starttime="20220705 10:29:07.874" endtime="20220705 10:29:07.874"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:07.991" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.874" endtime="20220705 10:29:07.991"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:07.991" endtime="20220705 10:29:07.991"/>
</return>
<msg timestamp="20220705 10:29:07.991" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.873" endtime="20220705 10:29:07.991"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:07.991" endtime="20220705 10:29:07.991"/>
</return>
<msg timestamp="20220705 10:29:07.992" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.873" endtime="20220705 10:29:07.992"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:07.992" endtime="20220705 10:29:07.992"/>
</return>
<msg timestamp="20220705 10:29:07.993" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 10:29:07.992" endtime="20220705 10:29:07.993"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 10:29:07.994" endtime="20220705 10:29:07.994"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:07.996" level="INFO">${url} = cards/62c41273696444622baf3dff</msg>
<status status="PASS" starttime="20220705 10:29:07.995" endtime="20220705 10:29:07.996"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:08.174" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.996" endtime="20220705 10:29:08.174"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:08.174" endtime="20220705 10:29:08.174"/>
</return>
<msg timestamp="20220705 10:29:08.174" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:07.995" endtime="20220705 10:29:08.174"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:08.174" endtime="20220705 10:29:08.174"/>
</return>
<status status="PASS" starttime="20220705 10:29:07.994" endtime="20220705 10:29:08.175"/>
</kw>
<status status="PASS" starttime="20220705 10:29:07.994" endtime="20220705 10:29:08.175"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 10:29:07.487" endtime="20220705 10:29:08.175"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:08.178" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:08.178" endtime="20220705 10:29:08.178"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:08.178" endtime="20220705 10:29:08.179"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:08.180" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 10:29:08.179" endtime="20220705 10:29:08.180"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:08.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:08.180" endtime="20220705 10:29:08.382"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:08.382" endtime="20220705 10:29:08.382"/>
</return>
<msg timestamp="20220705 10:29:08.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:08.177" endtime="20220705 10:29:08.382"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:08.382" endtime="20220705 10:29:08.382"/>
</return>
<msg timestamp="20220705 10:29:08.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:08.176" endtime="20220705 10:29:08.382"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:08.383" endtime="20220705 10:29:08.383"/>
</return>
<msg timestamp="20220705 10:29:08.384" level="INFO">${CARD_ID} = 62c412742766642e095dee8d</msg>
<status status="PASS" starttime="20220705 10:29:08.383" endtime="20220705 10:29:08.384"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:08.386" level="INFO">${url} = cards/62c412742766642e095dee8d</msg>
<status status="PASS" starttime="20220705 10:29:08.385" endtime="20220705 10:29:08.386"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:08.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:08.386" endtime="20220705 10:29:08.587"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:08.587" endtime="20220705 10:29:08.587"/>
</return>
<msg timestamp="20220705 10:29:08.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:08.385" endtime="20220705 10:29:08.588"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:08.588" endtime="20220705 10:29:08.588"/>
</return>
<msg timestamp="20220705 10:29:08.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:08.384" endtime="20220705 10:29:08.588"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:08.589" endtime="20220705 10:29:08.591"/>
</kw>
<status status="PASS" starttime="20220705 10:29:08.588" endtime="20220705 10:29:08.591"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:08.593" level="INFO">${url} = cards/62c412742766642e095dee8d</msg>
<status status="PASS" starttime="20220705 10:29:08.593" endtime="20220705 10:29:08.593"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:08.686" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:29:08.593" endtime="20220705 10:29:08.687"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:08.687" endtime="20220705 10:29:08.687"/>
</return>
<msg timestamp="20220705 10:29:08.687" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:29:08.592" endtime="20220705 10:29:08.687"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:08.687" endtime="20220705 10:29:08.687"/>
</return>
<status status="PASS" starttime="20220705 10:29:08.591" endtime="20220705 10:29:08.687"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:29:08.175" endtime="20220705 10:29:08.688"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:08.690" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:08.690" endtime="20220705 10:29:08.690"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:08.691" endtime="20220705 10:29:08.691"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:08.692" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 10:29:08.691" endtime="20220705 10:29:08.692"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:08.886" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:08.692" endtime="20220705 10:29:08.886"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:08.887" endtime="20220705 10:29:08.887"/>
</return>
<msg timestamp="20220705 10:29:08.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:08.689" endtime="20220705 10:29:08.887"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:08.887" endtime="20220705 10:29:08.887"/>
</return>
<msg timestamp="20220705 10:29:08.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:08.689" endtime="20220705 10:29:08.887"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:08.888" endtime="20220705 10:29:08.888"/>
</return>
<msg timestamp="20220705 10:29:08.889" level="INFO">${CARD_ID} = 62c4127409638a033aca2db5</msg>
<status status="PASS" starttime="20220705 10:29:08.888" endtime="20220705 10:29:08.889"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:08.891" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:08.890" endtime="20220705 10:29:08.891"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:08.891" endtime="20220705 10:29:08.891"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:08.892" level="INFO">${url} = cards/62c4127409638a033aca2db5</msg>
<status status="PASS" starttime="20220705 10:29:08.891" endtime="20220705 10:29:08.892"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:09.183" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:08.892" endtime="20220705 10:29:09.183"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:09.183" endtime="20220705 10:29:09.183"/>
</return>
<msg timestamp="20220705 10:29:09.184" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:08.890" endtime="20220705 10:29:09.184"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:09.184" endtime="20220705 10:29:09.184"/>
</return>
<msg timestamp="20220705 10:29:09.184" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:08.889" endtime="20220705 10:29:09.184"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:09.185" endtime="20220705 10:29:09.191"/>
</kw>
<status status="PASS" starttime="20220705 10:29:09.184" endtime="20220705 10:29:09.191"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:09.193" level="INFO">${url} = cards/62c4127409638a033aca2db5</msg>
<status status="PASS" starttime="20220705 10:29:09.192" endtime="20220705 10:29:09.193"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:09.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:09.193" endtime="20220705 10:29:09.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:09.418" endtime="20220705 10:29:09.418"/>
</return>
<msg timestamp="20220705 10:29:09.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:09.192" endtime="20220705 10:29:09.419"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:09.419" endtime="20220705 10:29:09.419"/>
</return>
<msg timestamp="20220705 10:29:09.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:09.191" endtime="20220705 10:29:09.419"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:09.419" endtime="20220705 10:29:09.420"/>
</return>
<msg timestamp="20220705 10:29:09.420" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 10:29:09.419" endtime="20220705 10:29:09.420"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:09.421" endtime="20220705 10:29:09.421"/>
</return>
<msg timestamp="20220705 10:29:09.422" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 10:29:09.421" endtime="20220705 10:29:09.422"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:09.422" endtime="20220705 10:29:09.422"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:09.422" endtime="20220705 10:29:09.422"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:09.424" level="INFO">${url} = cards/62c4127409638a033aca2db5</msg>
<status status="PASS" starttime="20220705 10:29:09.424" endtime="20220705 10:29:09.424"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:09.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:09.424" endtime="20220705 10:29:09.649"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:09.649" endtime="20220705 10:29:09.649"/>
</return>
<msg timestamp="20220705 10:29:09.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:09.423" endtime="20220705 10:29:09.650"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:09.650" endtime="20220705 10:29:09.650"/>
</return>
<status status="PASS" starttime="20220705 10:29:09.423" endtime="20220705 10:29:09.650"/>
</kw>
<status status="PASS" starttime="20220705 10:29:09.423" endtime="20220705 10:29:09.650"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 10:29:08.688" endtime="20220705 10:29:09.650"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:09.654" level="INFO">${url} = boards/62c41272753af56f428b3f6c</msg>
<status status="PASS" starttime="20220705 10:29:09.653" endtime="20220705 10:29:09.654"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:10.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:09.654" endtime="20220705 10:29:10.094"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:10.094" endtime="20220705 10:29:10.094"/>
</return>
<msg timestamp="20220705 10:29:10.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:09.653" endtime="20220705 10:29:10.094"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:10.094" endtime="20220705 10:29:10.094"/>
</return>
<status status="PASS" starttime="20220705 10:29:09.652" endtime="20220705 10:29:10.095"/>
</kw>
<status status="PASS" starttime="20220705 10:29:09.651" endtime="20220705 10:29:10.095"/>
</kw>
<status status="PASS" starttime="20220705 10:29:09.651" endtime="20220705 10:29:10.095"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 10:29:10.095" endtime="20220705 10:29:10.096"/>
</kw>
<status status="PASS" starttime="20220705 10:29:09.651" endtime="20220705 10:29:10.096"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 10:29:06.555" endtime="20220705 10:29:10.096"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 10:29:10.111" endtime="20220705 10:29:10.111"/>
</kw>
<status status="PASS" starttime="20220705 10:29:10.110" endtime="20220705 10:29:10.112"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:10.113" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:10.113" endtime="20220705 10:29:10.113"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:10.113" endtime="20220705 10:29:10.113"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:10.114" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:29:10.113" endtime="20220705 10:29:10.114"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:10.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:10.114" endtime="20220705 10:29:10.516"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:10.516" endtime="20220705 10:29:10.516"/>
</return>
<msg timestamp="20220705 10:29:10.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:10.112" endtime="20220705 10:29:10.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:10.517" endtime="20220705 10:29:10.517"/>
</return>
<msg timestamp="20220705 10:29:10.517" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:10.112" endtime="20220705 10:29:10.517"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:29:10.518" level="INFO">${TEST_SUITE_BOARD_ID} = 62c41276d8c8f88e66829092</msg>
<status status="PASS" starttime="20220705 10:29:10.517" endtime="20220705 10:29:10.518"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:10.520" level="INFO">${url} = boards/62c41276d8c8f88e66829092/lists/</msg>
<status status="PASS" starttime="20220705 10:29:10.519" endtime="20220705 10:29:10.520"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:10.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:10.520" endtime="20220705 10:29:10.636"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:10.636" endtime="20220705 10:29:10.636"/>
</return>
<msg timestamp="20220705 10:29:10.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:10.519" endtime="20220705 10:29:10.636"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:10.636" endtime="20220705 10:29:10.636"/>
</return>
<msg timestamp="20220705 10:29:10.637" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:10.518" endtime="20220705 10:29:10.637"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:29:10.638" level="INFO">${TEST_SUITE_LIST_ID} = 62c41276d8c8f88e66829099</msg>
<status status="PASS" starttime="20220705 10:29:10.637" endtime="20220705 10:29:10.638"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:10.640" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:10.640" endtime="20220705 10:29:10.640"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:10.640" endtime="20220705 10:29:10.640"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:10.641" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 10:29:10.640" endtime="20220705 10:29:10.641"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:10.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:10.641" endtime="20220705 10:29:10.882"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:10.882" endtime="20220705 10:29:10.883"/>
</return>
<msg timestamp="20220705 10:29:10.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:10.639" endtime="20220705 10:29:10.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:10.883" endtime="20220705 10:29:10.883"/>
</return>
<msg timestamp="20220705 10:29:10.883" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:10.638" endtime="20220705 10:29:10.883"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:29:10.884" level="INFO">${TEST_SUITE_CARD_ID} = 62c41276cd125883cc3e8831</msg>
<status status="PASS" starttime="20220705 10:29:10.883" endtime="20220705 10:29:10.884"/>
</kw>
<status status="PASS" starttime="20220705 10:29:10.112" endtime="20220705 10:29:10.885"/>
</kw>
<status status="PASS" starttime="20220705 10:29:10.110" endtime="20220705 10:29:10.885"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:10.887" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:10.887" endtime="20220705 10:29:10.887"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:10.887" endtime="20220705 10:29:10.888"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:10.889" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 10:29:10.888" endtime="20220705 10:29:10.889"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:11.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:10.889" endtime="20220705 10:29:11.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:11.067" endtime="20220705 10:29:11.068"/>
</return>
<msg timestamp="20220705 10:29:11.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:10.886" endtime="20220705 10:29:11.068"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:11.068" endtime="20220705 10:29:11.068"/>
</return>
<msg timestamp="20220705 10:29:11.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:10.886" endtime="20220705 10:29:11.068"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:11.069" endtime="20220705 10:29:11.069"/>
</return>
<msg timestamp="20220705 10:29:11.070" level="INFO">${checklist_id} = 62c41276113f024a3b9dd61e</msg>
<status status="PASS" starttime="20220705 10:29:11.068" endtime="20220705 10:29:11.070"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:11.071" level="INFO">${url} = checklists/62c41276113f024a3b9dd61e</msg>
<status status="PASS" starttime="20220705 10:29:11.071" endtime="20220705 10:29:11.071"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:11.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.072" endtime="20220705 10:29:11.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:11.176" endtime="20220705 10:29:11.176"/>
</return>
<msg timestamp="20220705 10:29:11.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.070" endtime="20220705 10:29:11.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:11.176" endtime="20220705 10:29:11.176"/>
</return>
<msg timestamp="20220705 10:29:11.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.070" endtime="20220705 10:29:11.177"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:11.177" endtime="20220705 10:29:11.177"/>
</return>
<msg timestamp="20220705 10:29:11.178" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 10:29:11.177" endtime="20220705 10:29:11.178"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:11.179" endtime="20220705 10:29:11.179"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:11.181" level="INFO">${url} = checklists/62c41276113f024a3b9dd61e</msg>
<status status="PASS" starttime="20220705 10:29:11.180" endtime="20220705 10:29:11.181"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:11.353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.181" endtime="20220705 10:29:11.353"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:11.353" endtime="20220705 10:29:11.354"/>
</return>
<msg timestamp="20220705 10:29:11.354" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.180" endtime="20220705 10:29:11.354"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:11.354" endtime="20220705 10:29:11.354"/>
</return>
<status status="PASS" starttime="20220705 10:29:11.179" endtime="20220705 10:29:11.354"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:29:10.885" endtime="20220705 10:29:11.354"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:11.358" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:11.357" endtime="20220705 10:29:11.358"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:11.358" endtime="20220705 10:29:11.358"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:11.359" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 10:29:11.358" endtime="20220705 10:29:11.359"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:11.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.359" endtime="20220705 10:29:11.632"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:11.632" endtime="20220705 10:29:11.632"/>
</return>
<msg timestamp="20220705 10:29:11.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.357" endtime="20220705 10:29:11.632"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:11.632" endtime="20220705 10:29:11.632"/>
</return>
<msg timestamp="20220705 10:29:11.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.356" endtime="20220705 10:29:11.633"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:11.633" endtime="20220705 10:29:11.633"/>
</return>
<msg timestamp="20220705 10:29:11.634" level="INFO">${checklist_id} = 62c41277ff2f688ce72d8e68</msg>
<status status="PASS" starttime="20220705 10:29:11.633" endtime="20220705 10:29:11.635"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:11.636" level="INFO">${url} = checklists/62c41277ff2f688ce72d8e68</msg>
<status status="PASS" starttime="20220705 10:29:11.636" endtime="20220705 10:29:11.636"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:11.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.636" endtime="20220705 10:29:11.796"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:11.796" endtime="20220705 10:29:11.797"/>
</return>
<msg timestamp="20220705 10:29:11.797" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.635" endtime="20220705 10:29:11.797"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:11.797" endtime="20220705 10:29:11.797"/>
</return>
<msg timestamp="20220705 10:29:11.797" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.635" endtime="20220705 10:29:11.797"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:11.798" endtime="20220705 10:29:11.800"/>
</kw>
<status status="PASS" starttime="20220705 10:29:11.797" endtime="20220705 10:29:11.800"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:11.802" level="INFO">${url} = checklists/62c41277ff2f688ce72d8e68</msg>
<status status="PASS" starttime="20220705 10:29:11.801" endtime="20220705 10:29:11.802"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:11.892" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:29:11.802" endtime="20220705 10:29:11.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:11.892" endtime="20220705 10:29:11.892"/>
</return>
<msg timestamp="20220705 10:29:11.893" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:29:11.801" endtime="20220705 10:29:11.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:11.893" endtime="20220705 10:29:11.893"/>
</return>
<status status="PASS" starttime="20220705 10:29:11.800" endtime="20220705 10:29:11.893"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:29:11.355" endtime="20220705 10:29:11.893"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:11.898" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:11.896" endtime="20220705 10:29:11.899"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:11.899" endtime="20220705 10:29:11.899"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:11.900" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 10:29:11.899" endtime="20220705 10:29:11.900"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:12.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.900" endtime="20220705 10:29:12.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:12.081" endtime="20220705 10:29:12.081"/>
</return>
<msg timestamp="20220705 10:29:12.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.896" endtime="20220705 10:29:12.082"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:12.082" endtime="20220705 10:29:12.082"/>
</return>
<msg timestamp="20220705 10:29:12.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:11.895" endtime="20220705 10:29:12.082"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:12.083" endtime="20220705 10:29:12.083"/>
</return>
<msg timestamp="20220705 10:29:12.084" level="INFO">${checklist_id} = 62c41277e21b16662a6df138</msg>
<status status="PASS" starttime="20220705 10:29:12.082" endtime="20220705 10:29:12.084"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:12.086" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:12.085" endtime="20220705 10:29:12.086"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:12.086" endtime="20220705 10:29:12.086"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:12.087" level="INFO">${url} = checklists/62c41277e21b16662a6df138</msg>
<status status="PASS" starttime="20220705 10:29:12.086" endtime="20220705 10:29:12.087"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:12.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:12.087" endtime="20220705 10:29:12.240"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:12.240" endtime="20220705 10:29:12.240"/>
</return>
<msg timestamp="20220705 10:29:12.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:12.085" endtime="20220705 10:29:12.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:12.241" endtime="20220705 10:29:12.241"/>
</return>
<msg timestamp="20220705 10:29:12.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:12.084" endtime="20220705 10:29:12.241"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:12.243" level="INFO">${url} = checklists/62c41277e21b16662a6df138</msg>
<status status="PASS" starttime="20220705 10:29:12.242" endtime="20220705 10:29:12.243"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:12.352" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:12.243" endtime="20220705 10:29:12.352"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:12.352" endtime="20220705 10:29:12.352"/>
</return>
<msg timestamp="20220705 10:29:12.353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:12.242" endtime="20220705 10:29:12.353"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:12.353" endtime="20220705 10:29:12.353"/>
</return>
<msg timestamp="20220705 10:29:12.353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:12.241" endtime="20220705 10:29:12.353"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:12.354" endtime="20220705 10:29:12.354"/>
</return>
<msg timestamp="20220705 10:29:12.355" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 10:29:12.353" endtime="20220705 10:29:12.355"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:12.355" endtime="20220705 10:29:12.356"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:12.367" level="INFO">${url} = checklists/62c41277e21b16662a6df138</msg>
<status status="PASS" starttime="20220705 10:29:12.367" endtime="20220705 10:29:12.367"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:12.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:12.367" endtime="20220705 10:29:12.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:12.538" endtime="20220705 10:29:12.538"/>
</return>
<msg timestamp="20220705 10:29:12.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:12.366" endtime="20220705 10:29:12.538"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:12.538" endtime="20220705 10:29:12.538"/>
</return>
<status status="PASS" starttime="20220705 10:29:12.356" endtime="20220705 10:29:12.538"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 10:29:11.894" endtime="20220705 10:29:12.538"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:12.541" level="INFO">${url} = boards/62c41276d8c8f88e66829092</msg>
<status status="PASS" starttime="20220705 10:29:12.541" endtime="20220705 10:29:12.541"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:13.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:12.541" endtime="20220705 10:29:13.001"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:13.001" endtime="20220705 10:29:13.001"/>
</return>
<msg timestamp="20220705 10:29:13.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:12.540" endtime="20220705 10:29:13.001"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:13.001" endtime="20220705 10:29:13.002"/>
</return>
<status status="PASS" starttime="20220705 10:29:12.540" endtime="20220705 10:29:13.002"/>
</kw>
<status status="PASS" starttime="20220705 10:29:12.540" endtime="20220705 10:29:13.002"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 10:29:13.002" endtime="20220705 10:29:13.003"/>
</kw>
<status status="PASS" starttime="20220705 10:29:12.539" endtime="20220705 10:29:13.003"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 10:29:10.098" endtime="20220705 10:29:13.003"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 10:29:13.015" endtime="20220705 10:29:13.016"/>
</kw>
<status status="PASS" starttime="20220705 10:29:13.015" endtime="20220705 10:29:13.016"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:13.017" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:13.017" endtime="20220705 10:29:13.017"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:13.017" endtime="20220705 10:29:13.018"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:13.019" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:29:13.018" endtime="20220705 10:29:13.019"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:13.276" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:13.019" endtime="20220705 10:29:13.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:13.277" endtime="20220705 10:29:13.277"/>
</return>
<msg timestamp="20220705 10:29:13.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:13.017" endtime="20220705 10:29:13.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:13.277" endtime="20220705 10:29:13.277"/>
</return>
<msg timestamp="20220705 10:29:13.277" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:13.016" endtime="20220705 10:29:13.277"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:29:13.279" level="INFO">${TEST_SUITE_BOARD_ID} = 62c412797de0545915192201</msg>
<status status="PASS" starttime="20220705 10:29:13.278" endtime="20220705 10:29:13.279"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:13.388" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:13.279" endtime="20220705 10:29:13.388"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:29:13.389" level="INFO">${TEST_SUITE_LIST_ID} = 62c412797de0545915192208</msg>
<status status="PASS" starttime="20220705 10:29:13.389" endtime="20220705 10:29:13.390"/>
</kw>
<status status="PASS" starttime="20220705 10:29:13.016" endtime="20220705 10:29:13.390"/>
</kw>
<status status="PASS" starttime="20220705 10:29:13.015" endtime="20220705 10:29:13.390"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:13.392" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:13.392" endtime="20220705 10:29:13.392"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:13.392" endtime="20220705 10:29:13.393"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:13.394" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 10:29:13.393" endtime="20220705 10:29:13.394"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:13.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:13.394" endtime="20220705 10:29:13.694"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:13.694" endtime="20220705 10:29:13.694"/>
</return>
<msg timestamp="20220705 10:29:13.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:13.391" endtime="20220705 10:29:13.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:13.695" endtime="20220705 10:29:13.695"/>
</return>
<msg timestamp="20220705 10:29:13.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:13.391" endtime="20220705 10:29:13.695"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:13.696" endtime="20220705 10:29:13.698"/>
</kw>
<status status="PASS" starttime="20220705 10:29:13.695" endtime="20220705 10:29:13.698"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:13.699" endtime="20220705 10:29:13.699"/>
</return>
<msg timestamp="20220705 10:29:13.699" level="INFO">${LABEL_ID} = 62c41279a409b155f7f20e20</msg>
<status status="PASS" starttime="20220705 10:29:13.698" endtime="20220705 10:29:13.699"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:13.701" level="INFO">${url} = labels/62c41279a409b155f7f20e20</msg>
<status status="PASS" starttime="20220705 10:29:13.701" endtime="20220705 10:29:13.701"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:13.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:13.701" endtime="20220705 10:29:13.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:13.803" endtime="20220705 10:29:13.803"/>
</return>
<msg timestamp="20220705 10:29:13.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:13.700" endtime="20220705 10:29:13.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:13.803" endtime="20220705 10:29:13.803"/>
</return>
<msg timestamp="20220705 10:29:13.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:13.700" endtime="20220705 10:29:13.803"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:13.804" endtime="20220705 10:29:13.804"/>
</return>
<msg timestamp="20220705 10:29:13.805" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 10:29:13.804" endtime="20220705 10:29:13.805"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:13.805" endtime="20220705 10:29:13.805"/>
</return>
<msg timestamp="20220705 10:29:13.806" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 10:29:13.805" endtime="20220705 10:29:13.806"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:13.806" endtime="20220705 10:29:13.807"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:13.807" endtime="20220705 10:29:13.808"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:13.810" level="INFO">${url} = labels/62c41279a409b155f7f20e20</msg>
<status status="PASS" starttime="20220705 10:29:13.809" endtime="20220705 10:29:13.810"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:14.012" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:13.810" endtime="20220705 10:29:14.012"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:14.012" endtime="20220705 10:29:14.012"/>
</return>
<msg timestamp="20220705 10:29:14.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:13.809" endtime="20220705 10:29:14.013"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:14.013" endtime="20220705 10:29:14.013"/>
</return>
<status status="PASS" starttime="20220705 10:29:13.808" endtime="20220705 10:29:14.013"/>
</kw>
<status status="PASS" starttime="20220705 10:29:13.808" endtime="20220705 10:29:14.013"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:29:13.390" endtime="20220705 10:29:14.013"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:14.016" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:14.015" endtime="20220705 10:29:14.016"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:14.016" endtime="20220705 10:29:14.016"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:14.017" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 10:29:14.016" endtime="20220705 10:29:14.017"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:14.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:14.017" endtime="20220705 10:29:14.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:14.163" endtime="20220705 10:29:14.163"/>
</return>
<msg timestamp="20220705 10:29:14.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:14.015" endtime="20220705 10:29:14.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:14.164" endtime="20220705 10:29:14.164"/>
</return>
<msg timestamp="20220705 10:29:14.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:14.014" endtime="20220705 10:29:14.164"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:14.165" endtime="20220705 10:29:14.167"/>
</kw>
<status status="PASS" starttime="20220705 10:29:14.164" endtime="20220705 10:29:14.167"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:14.168" endtime="20220705 10:29:14.168"/>
</return>
<msg timestamp="20220705 10:29:14.173" level="INFO">${LABEL_ID} = 62c4127a5614be76211cf340</msg>
<status status="PASS" starttime="20220705 10:29:14.167" endtime="20220705 10:29:14.173"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:14.174" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:14.174" endtime="20220705 10:29:14.174"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:14.174" endtime="20220705 10:29:14.175"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:14.175" level="INFO">${url} = labels/62c4127a5614be76211cf340</msg>
<status status="PASS" starttime="20220705 10:29:14.175" endtime="20220705 10:29:14.175"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:14.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:14.175" endtime="20220705 10:29:14.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:14.332" endtime="20220705 10:29:14.332"/>
</return>
<msg timestamp="20220705 10:29:14.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:14.173" endtime="20220705 10:29:14.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:14.333" endtime="20220705 10:29:14.333"/>
</return>
<msg timestamp="20220705 10:29:14.333" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:14.173" endtime="20220705 10:29:14.333"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:14.334" endtime="20220705 10:29:14.334"/>
</return>
<msg timestamp="20220705 10:29:14.335" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 10:29:14.333" endtime="20220705 10:29:14.335"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:14.335" endtime="20220705 10:29:14.335"/>
</return>
<msg timestamp="20220705 10:29:14.336" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 10:29:14.335" endtime="20220705 10:29:14.336"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:14.336" endtime="20220705 10:29:14.336"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:14.336" endtime="20220705 10:29:14.337"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:14.339" level="INFO">${url} = labels/62c4127a5614be76211cf340</msg>
<status status="PASS" starttime="20220705 10:29:14.338" endtime="20220705 10:29:14.339"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:14.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:14.339" endtime="20220705 10:29:14.522"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:14.522" endtime="20220705 10:29:14.522"/>
</return>
<msg timestamp="20220705 10:29:14.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:14.338" endtime="20220705 10:29:14.522"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:14.522" endtime="20220705 10:29:14.523"/>
</return>
<status status="PASS" starttime="20220705 10:29:14.337" endtime="20220705 10:29:14.523"/>
</kw>
<status status="PASS" starttime="20220705 10:29:14.337" endtime="20220705 10:29:14.523"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:29:14.013" endtime="20220705 10:29:14.523"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:14.526" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:14.525" endtime="20220705 10:29:14.526"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:14.526" endtime="20220705 10:29:14.526"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:14.527" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 10:29:14.526" endtime="20220705 10:29:14.527"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:14.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:14.527" endtime="20220705 10:29:14.790"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:14.790" endtime="20220705 10:29:14.790"/>
</return>
<msg timestamp="20220705 10:29:14.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:14.525" endtime="20220705 10:29:14.790"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:14.790" endtime="20220705 10:29:14.791"/>
</return>
<msg timestamp="20220705 10:29:14.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:14.524" endtime="20220705 10:29:14.791"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 10:29:14.791" endtime="20220705 10:29:14.792"/>
</return>
<msg timestamp="20220705 10:29:14.792" level="INFO">${LABEL_ID} = 62c4127a16a8637a94296182</msg>
<status status="PASS" starttime="20220705 10:29:14.791" endtime="20220705 10:29:14.792"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:14.794" level="INFO">${url} = labels/62c4127a16a8637a94296182</msg>
<status status="PASS" starttime="20220705 10:29:14.794" endtime="20220705 10:29:14.794"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:14.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:14.795" endtime="20220705 10:29:14.955"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:14.955" endtime="20220705 10:29:14.955"/>
</return>
<msg timestamp="20220705 10:29:14.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:14.793" endtime="20220705 10:29:14.955"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:14.955" endtime="20220705 10:29:14.955"/>
</return>
<status status="PASS" starttime="20220705 10:29:14.793" endtime="20220705 10:29:14.956"/>
</kw>
<status status="PASS" starttime="20220705 10:29:14.793" endtime="20220705 10:29:14.956"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:14.957" level="INFO">${url} = labels/62c4127a16a8637a94296182</msg>
<status status="PASS" starttime="20220705 10:29:14.957" endtime="20220705 10:29:14.957"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:15.065" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:29:14.957" endtime="20220705 10:29:15.065"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:15.065" endtime="20220705 10:29:15.065"/>
</return>
<msg timestamp="20220705 10:29:15.065" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 10:29:14.956" endtime="20220705 10:29:15.066"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:15.066" endtime="20220705 10:29:15.066"/>
</return>
<status status="PASS" starttime="20220705 10:29:14.956" endtime="20220705 10:29:15.066"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:29:14.523" endtime="20220705 10:29:15.066"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:15.069" level="INFO">${url} = boards/62c412797de0545915192201</msg>
<status status="PASS" starttime="20220705 10:29:15.069" endtime="20220705 10:29:15.069"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:15.421" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:15.069" endtime="20220705 10:29:15.421"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:15.421" endtime="20220705 10:29:15.421"/>
</return>
<msg timestamp="20220705 10:29:15.421" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:15.068" endtime="20220705 10:29:15.421"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:15.421" endtime="20220705 10:29:15.421"/>
</return>
<status status="PASS" starttime="20220705 10:29:15.068" endtime="20220705 10:29:15.421"/>
</kw>
<status status="PASS" starttime="20220705 10:29:15.067" endtime="20220705 10:29:15.421"/>
</kw>
<status status="PASS" starttime="20220705 10:29:15.067" endtime="20220705 10:29:15.422"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 10:29:15.422" endtime="20220705 10:29:15.423"/>
</kw>
<status status="PASS" starttime="20220705 10:29:15.067" endtime="20220705 10:29:15.423"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 10:29:13.005" endtime="20220705 10:29:15.423"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 10:29:15.435" endtime="20220705 10:29:15.435"/>
</kw>
<status status="PASS" starttime="20220705 10:29:15.435" endtime="20220705 10:29:15.435"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:15.437" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:15.437" endtime="20220705 10:29:15.437"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:15.437" endtime="20220705 10:29:15.438"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:15.438" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 10:29:15.438" endtime="20220705 10:29:15.438"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:15.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:15.439" endtime="20220705 10:29:15.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:15.695" endtime="20220705 10:29:15.695"/>
</return>
<msg timestamp="20220705 10:29:15.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:15.436" endtime="20220705 10:29:15.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:15.695" endtime="20220705 10:29:15.695"/>
</return>
<msg timestamp="20220705 10:29:15.696" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:15.436" endtime="20220705 10:29:15.696"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 10:29:15.697" level="INFO">${TEST_SUITE_BOARD_ID} = 62c4127b87ec6a024be3c5a2</msg>
<status status="PASS" starttime="20220705 10:29:15.696" endtime="20220705 10:29:15.697"/>
</kw>
<status status="PASS" starttime="20220705 10:29:15.696" endtime="20220705 10:29:15.697"/>
</kw>
<status status="PASS" starttime="20220705 10:29:15.435" endtime="20220705 10:29:15.697"/>
</kw>
<status status="PASS" starttime="20220705 10:29:15.434" endtime="20220705 10:29:15.697"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:15.700" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:15.699" endtime="20220705 10:29:15.700"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:15.700" endtime="20220705 10:29:15.700"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:15.701" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 10:29:15.700" endtime="20220705 10:29:15.701"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:15.895" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:15.701" endtime="20220705 10:29:15.895"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:15.895" endtime="20220705 10:29:15.895"/>
</return>
<msg timestamp="20220705 10:29:15.895" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:15.699" endtime="20220705 10:29:15.895"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:15.895" endtime="20220705 10:29:15.895"/>
</return>
<msg timestamp="20220705 10:29:15.896" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:15.698" endtime="20220705 10:29:15.896"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:15.896" endtime="20220705 10:29:15.899"/>
</kw>
<status status="PASS" starttime="20220705 10:29:15.896" endtime="20220705 10:29:15.899"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 10:29:15.698" endtime="20220705 10:29:15.899"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:15.901" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:15.901" endtime="20220705 10:29:15.901"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:15.901" endtime="20220705 10:29:15.902"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:15.903" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 10:29:15.902" endtime="20220705 10:29:15.903"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:16.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:15.903" endtime="20220705 10:29:16.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:16.052" endtime="20220705 10:29:16.052"/>
</return>
<msg timestamp="20220705 10:29:16.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:15.900" endtime="20220705 10:29:16.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:16.052" endtime="20220705 10:29:16.053"/>
</return>
<msg timestamp="20220705 10:29:16.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:15.900" endtime="20220705 10:29:16.053"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:16.053" endtime="20220705 10:29:16.055"/>
</kw>
<status status="PASS" starttime="20220705 10:29:16.053" endtime="20220705 10:29:16.056"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:16.057" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:16.057" endtime="20220705 10:29:16.057"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:16.058" endtime="20220705 10:29:16.058"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:16.058" level="INFO">${url} = lists/62c4127b2b40075329481761</msg>
<status status="PASS" starttime="20220705 10:29:16.058" endtime="20220705 10:29:16.058"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:16.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.059" endtime="20220705 10:29:16.181"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:16.181" endtime="20220705 10:29:16.181"/>
</return>
<msg timestamp="20220705 10:29:16.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.057" endtime="20220705 10:29:16.181"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:16.181" endtime="20220705 10:29:16.181"/>
</return>
<status status="PASS" starttime="20220705 10:29:16.056" endtime="20220705 10:29:16.182"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:16.184" level="INFO">${url} = lists/62c4127b2b40075329481761</msg>
<status status="PASS" starttime="20220705 10:29:16.183" endtime="20220705 10:29:16.184"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:16.278" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.184" endtime="20220705 10:29:16.278"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:16.278" endtime="20220705 10:29:16.278"/>
</return>
<msg timestamp="20220705 10:29:16.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.183" endtime="20220705 10:29:16.279"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:16.279" endtime="20220705 10:29:16.279"/>
</return>
<msg timestamp="20220705 10:29:16.279" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.182" endtime="20220705 10:29:16.279"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 10:29:16.280" endtime="20220705 10:29:16.282"/>
</kw>
<status status="PASS" starttime="20220705 10:29:16.279" endtime="20220705 10:29:16.282"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 10:29:16.282" endtime="20220705 10:29:16.283"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 10:29:15.899" endtime="20220705 10:29:16.283"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:16.286" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:16.286" endtime="20220705 10:29:16.286"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:16.286" endtime="20220705 10:29:16.288"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:16.289" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 10:29:16.288" endtime="20220705 10:29:16.289"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:16.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.289" endtime="20220705 10:29:16.427"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:16.427" endtime="20220705 10:29:16.427"/>
</return>
<msg timestamp="20220705 10:29:16.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.285" endtime="20220705 10:29:16.428"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:16.428" endtime="20220705 10:29:16.428"/>
</return>
<msg timestamp="20220705 10:29:16.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.284" endtime="20220705 10:29:16.428"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 10:29:16.430" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 10:29:16.430" endtime="20220705 10:29:16.430"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 10:29:16.430" endtime="20220705 10:29:16.431"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:16.431" level="INFO">${url} = lists/62c4127c1f01ea48fc539f58/closed</msg>
<status status="PASS" starttime="20220705 10:29:16.431" endtime="20220705 10:29:16.431"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 10:29:16.597" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.431" endtime="20220705 10:29:16.597"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:16.597" endtime="20220705 10:29:16.598"/>
</return>
<msg timestamp="20220705 10:29:16.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.429" endtime="20220705 10:29:16.598"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:16.598" endtime="20220705 10:29:16.598"/>
</return>
<status status="PASS" starttime="20220705 10:29:16.428" endtime="20220705 10:29:16.598"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:16.601" level="INFO">${url} = lists/62c4127c1f01ea48fc539f58</msg>
<status status="PASS" starttime="20220705 10:29:16.600" endtime="20220705 10:29:16.601"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 10:29:16.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.601" endtime="20220705 10:29:16.700"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:16.700" endtime="20220705 10:29:16.700"/>
</return>
<msg timestamp="20220705 10:29:16.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.599" endtime="20220705 10:29:16.700"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:16.700" endtime="20220705 10:29:16.700"/>
</return>
<msg timestamp="20220705 10:29:16.700" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.598" endtime="20220705 10:29:16.700"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 10:29:16.701" endtime="20220705 10:29:16.702"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 10:29:16.284" endtime="20220705 10:29:16.702"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 10:29:16.705" level="INFO">${url} = boards/62c4127b87ec6a024be3c5a2</msg>
<status status="PASS" starttime="20220705 10:29:16.705" endtime="20220705 10:29:16.705"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 10:29:17.122" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.705" endtime="20220705 10:29:17.122"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:17.122" endtime="20220705 10:29:17.122"/>
</return>
<msg timestamp="20220705 10:29:17.122" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 10:29:16.704" endtime="20220705 10:29:17.122"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 10:29:17.122" endtime="20220705 10:29:17.122"/>
</return>
<status status="PASS" starttime="20220705 10:29:16.703" endtime="20220705 10:29:17.123"/>
</kw>
<status status="PASS" starttime="20220705 10:29:16.703" endtime="20220705 10:29:17.123"/>
</kw>
<status status="PASS" starttime="20220705 10:29:16.703" endtime="20220705 10:29:17.123"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 10:29:17.123" endtime="20220705 10:29:17.124"/>
</kw>
<status status="PASS" starttime="20220705 10:29:16.702" endtime="20220705 10:29:17.124"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 10:29:15.425" endtime="20220705 10:29:17.124"/>
</suite>
<status status="PASS" starttime="20220705 10:29:01.837" endtime="20220705 10:29:17.126"/>
</suite>
<status status="PASS" starttime="20220705 10:29:01.812" endtime="20220705 10:29:17.129"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
