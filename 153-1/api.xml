<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 14:41:56.842" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:41:56.963" endtime="20220705 14:41:56.963"/>
</kw>
<status status="PASS" starttime="20220705 14:41:56.962" endtime="20220705 14:41:56.964"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:41:56.966" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:41:56.965" endtime="20220705 14:41:56.966"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:41:56.966" endtime="20220705 14:41:56.966"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:41:56.967" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:41:56.966" endtime="20220705 14:41:56.967"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:41:57.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:56.967" endtime="20220705 14:41:57.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:57.233" endtime="20220705 14:41:57.233"/>
</return>
<msg timestamp="20220705 14:41:57.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:56.965" endtime="20220705 14:41:57.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:57.233" endtime="20220705 14:41:57.233"/>
</return>
<msg timestamp="20220705 14:41:57.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:56.964" endtime="20220705 14:41:57.234"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:41:57.234" endtime="20220705 14:41:57.239"/>
</kw>
<status status="PASS" starttime="20220705 14:41:57.234" endtime="20220705 14:41:57.239"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:41:57.241" level="INFO">${url} = boards/62c44db5b5be3213f5786c59</msg>
<status status="PASS" starttime="20220705 14:41:57.241" endtime="20220705 14:41:57.241"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:41:57.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:57.241" endtime="20220705 14:41:57.634"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:57.634" endtime="20220705 14:41:57.634"/>
</return>
<msg timestamp="20220705 14:41:57.635" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:57.240" endtime="20220705 14:41:57.635"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:57.635" endtime="20220705 14:41:57.635"/>
</return>
<status status="PASS" starttime="20220705 14:41:57.240" endtime="20220705 14:41:57.635"/>
</kw>
<status status="PASS" starttime="20220705 14:41:57.239" endtime="20220705 14:41:57.635"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:41:56.964" endtime="20220705 14:41:57.635"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:41:57.639" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:41:57.639" endtime="20220705 14:41:57.640"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:41:57.640" endtime="20220705 14:41:57.640"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:41:57.642" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:41:57.640" endtime="20220705 14:41:57.642"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:41:57.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:57.642" endtime="20220705 14:41:57.869"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:57.869" endtime="20220705 14:41:57.869"/>
</return>
<msg timestamp="20220705 14:41:57.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:57.638" endtime="20220705 14:41:57.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:57.870" endtime="20220705 14:41:57.870"/>
</return>
<msg timestamp="20220705 14:41:57.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:57.637" endtime="20220705 14:41:57.870"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:41:57.871" endtime="20220705 14:41:57.878"/>
</kw>
<status status="PASS" starttime="20220705 14:41:57.870" endtime="20220705 14:41:57.878"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:41:57.880" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:41:57.879" endtime="20220705 14:41:57.880"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:41:57.880" endtime="20220705 14:41:57.880"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:41:57.880" level="INFO">${url} = boards/62c44db58f5d9d4585f1553e</msg>
<status status="PASS" starttime="20220705 14:41:57.880" endtime="20220705 14:41:57.880"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:41:58.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:57.880" endtime="20220705 14:41:58.037"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:58.037" endtime="20220705 14:41:58.037"/>
</return>
<msg timestamp="20220705 14:41:58.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:57.879" endtime="20220705 14:41:58.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:58.038" endtime="20220705 14:41:58.038"/>
</return>
<status status="PASS" starttime="20220705 14:41:57.878" endtime="20220705 14:41:58.038"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:41:58.040" level="INFO">${url} = boards/62c44db58f5d9d4585f1553e</msg>
<status status="PASS" starttime="20220705 14:41:58.039" endtime="20220705 14:41:58.040"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:41:58.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:58.040" endtime="20220705 14:41:58.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:58.146" endtime="20220705 14:41:58.146"/>
</return>
<msg timestamp="20220705 14:41:58.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:58.039" endtime="20220705 14:41:58.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:58.146" endtime="20220705 14:41:58.146"/>
</return>
<msg timestamp="20220705 14:41:58.147" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:58.038" endtime="20220705 14:41:58.147"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:41:58.147" endtime="20220705 14:41:58.151"/>
</kw>
<status status="PASS" starttime="20220705 14:41:58.147" endtime="20220705 14:41:58.151"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:41:58.151" endtime="20220705 14:41:58.152"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:41:58.154" level="INFO">${url} = boards/62c44db58f5d9d4585f1553e</msg>
<status status="PASS" starttime="20220705 14:41:58.154" endtime="20220705 14:41:58.154"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:41:58.627" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:58.154" endtime="20220705 14:41:58.627"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:58.627" endtime="20220705 14:41:58.627"/>
</return>
<msg timestamp="20220705 14:41:58.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:58.153" endtime="20220705 14:41:58.628"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:58.628" endtime="20220705 14:41:58.628"/>
</return>
<status status="PASS" starttime="20220705 14:41:58.152" endtime="20220705 14:41:58.628"/>
</kw>
<status status="PASS" starttime="20220705 14:41:58.152" endtime="20220705 14:41:58.629"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:41:57.636" endtime="20220705 14:41:58.629"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:41:58.632" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:41:58.632" endtime="20220705 14:41:58.632"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:41:58.632" endtime="20220705 14:41:58.633"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:41:58.635" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:41:58.633" endtime="20220705 14:41:58.635"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:41:58.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:58.635" endtime="20220705 14:41:58.881"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:58.881" endtime="20220705 14:41:58.881"/>
</return>
<msg timestamp="20220705 14:41:58.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:58.631" endtime="20220705 14:41:58.882"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:58.882" endtime="20220705 14:41:58.882"/>
</return>
<msg timestamp="20220705 14:41:58.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:58.630" endtime="20220705 14:41:58.883"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:41:58.886" level="INFO">${url} = boards/62c44db6721fc887a5174411</msg>
<status status="PASS" starttime="20220705 14:41:58.885" endtime="20220705 14:41:58.886"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:41:59.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:58.886" endtime="20220705 14:41:59.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:59.283" endtime="20220705 14:41:59.283"/>
</return>
<msg timestamp="20220705 14:41:59.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:58.884" endtime="20220705 14:41:59.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:59.283" endtime="20220705 14:41:59.283"/>
</return>
<status status="PASS" starttime="20220705 14:41:58.883" endtime="20220705 14:41:59.284"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:41:59.286" level="INFO">${url} = boards/62c44db6721fc887a5174411</msg>
<status status="PASS" starttime="20220705 14:41:59.285" endtime="20220705 14:41:59.286"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:41:59.387" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:41:59.286" endtime="20220705 14:41:59.387"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:59.387" endtime="20220705 14:41:59.387"/>
</return>
<msg timestamp="20220705 14:41:59.387" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:41:59.285" endtime="20220705 14:41:59.387"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:59.387" endtime="20220705 14:41:59.387"/>
</return>
<status status="PASS" starttime="20220705 14:41:59.284" endtime="20220705 14:41:59.388"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:41:58.629" endtime="20220705 14:41:59.388"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:41:59.392" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:41:59.391" endtime="20220705 14:41:59.392"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:41:59.392" endtime="20220705 14:41:59.392"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:41:59.394" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:41:59.392" endtime="20220705 14:41:59.394"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:41:59.653" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:59.394" endtime="20220705 14:41:59.653"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:59.653" endtime="20220705 14:41:59.653"/>
</return>
<msg timestamp="20220705 14:41:59.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:59.390" endtime="20220705 14:41:59.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:59.654" endtime="20220705 14:41:59.654"/>
</return>
<msg timestamp="20220705 14:41:59.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:59.390" endtime="20220705 14:41:59.654"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:41:59.655" endtime="20220705 14:41:59.661"/>
</kw>
<status status="PASS" starttime="20220705 14:41:59.654" endtime="20220705 14:41:59.661"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:41:59.662" level="INFO">${url} = boards/62c44db757d52014f80322f1</msg>
<status status="PASS" starttime="20220705 14:41:59.662" endtime="20220705 14:41:59.662"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:41:59.781" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:59.662" endtime="20220705 14:41:59.781"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:59.781" endtime="20220705 14:41:59.781"/>
</return>
<msg timestamp="20220705 14:41:59.781" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:59.662" endtime="20220705 14:41:59.781"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:41:59.781" endtime="20220705 14:41:59.781"/>
</return>
<msg timestamp="20220705 14:41:59.782" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:59.661" endtime="20220705 14:41:59.782"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:41:59.782" endtime="20220705 14:41:59.786"/>
</kw>
<status status="PASS" starttime="20220705 14:41:59.782" endtime="20220705 14:41:59.786"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:41:59.786" endtime="20220705 14:41:59.787"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:41:59.790" level="INFO">${url} = boards/62c44db757d52014f80322f1</msg>
<status status="PASS" starttime="20220705 14:41:59.789" endtime="20220705 14:41:59.790"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:00.239" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:59.790" endtime="20220705 14:42:00.239"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:00.239" endtime="20220705 14:42:00.239"/>
</return>
<msg timestamp="20220705 14:42:00.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:41:59.789" endtime="20220705 14:42:00.240"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:00.240" endtime="20220705 14:42:00.240"/>
</return>
<status status="PASS" starttime="20220705 14:41:59.787" endtime="20220705 14:42:00.241"/>
</kw>
<status status="PASS" starttime="20220705 14:41:59.787" endtime="20220705 14:42:00.241"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:41:59.389" endtime="20220705 14:42:00.241"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:00.244" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:00.244" endtime="20220705 14:42:00.244"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:00.245" endtime="20220705 14:42:00.245"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:00.247" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:42:00.245" endtime="20220705 14:42:00.247"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:00.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:00.247" endtime="20220705 14:42:00.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:00.486" endtime="20220705 14:42:00.486"/>
</return>
<msg timestamp="20220705 14:42:00.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:00.243" endtime="20220705 14:42:00.487"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:00.487" endtime="20220705 14:42:00.487"/>
</return>
<msg timestamp="20220705 14:42:00.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:00.242" endtime="20220705 14:42:00.487"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:42:00.488" endtime="20220705 14:42:00.492"/>
</kw>
<status status="PASS" starttime="20220705 14:42:00.488" endtime="20220705 14:42:00.492"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:00.494" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:00.494" endtime="20220705 14:42:00.494"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:00.494" endtime="20220705 14:42:00.495"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:00.495" level="INFO">${url} = boards/62c44db860e93630b4731c19</msg>
<status status="PASS" starttime="20220705 14:42:00.495" endtime="20220705 14:42:00.495"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:00.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:00.495" endtime="20220705 14:42:00.643"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:00.643" endtime="20220705 14:42:00.643"/>
</return>
<msg timestamp="20220705 14:42:00.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:00.493" endtime="20220705 14:42:00.644"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:00.644" endtime="20220705 14:42:00.644"/>
</return>
<status status="PASS" starttime="20220705 14:42:00.493" endtime="20220705 14:42:00.644"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:00.648" level="INFO">${url} = boards/62c44db860e93630b4731c19</msg>
<status status="PASS" starttime="20220705 14:42:00.647" endtime="20220705 14:42:00.648"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:00.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:00.648" endtime="20220705 14:42:00.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:00.750" endtime="20220705 14:42:00.750"/>
</return>
<msg timestamp="20220705 14:42:00.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:00.646" endtime="20220705 14:42:00.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:00.751" endtime="20220705 14:42:00.751"/>
</return>
<msg timestamp="20220705 14:42:00.751" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:00.645" endtime="20220705 14:42:00.751"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:42:00.751" endtime="20220705 14:42:00.752"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:00.755" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:00.755" endtime="20220705 14:42:00.755"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:00.756" endtime="20220705 14:42:00.756"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:00.756" level="INFO">${url} = boards/62c44db860e93630b4731c19</msg>
<status status="PASS" starttime="20220705 14:42:00.756" endtime="20220705 14:42:00.756"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:00.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:00.756" endtime="20220705 14:42:00.915"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:00.915" endtime="20220705 14:42:00.915"/>
</return>
<msg timestamp="20220705 14:42:00.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:00.753" endtime="20220705 14:42:00.916"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:00.916" endtime="20220705 14:42:00.916"/>
</return>
<status status="PASS" starttime="20220705 14:42:00.752" endtime="20220705 14:42:00.916"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:00.918" level="INFO">${url} = boards/62c44db860e93630b4731c19</msg>
<status status="PASS" starttime="20220705 14:42:00.918" endtime="20220705 14:42:00.918"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:01.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:00.918" endtime="20220705 14:42:01.032"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:01.032" endtime="20220705 14:42:01.032"/>
</return>
<msg timestamp="20220705 14:42:01.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:00.917" endtime="20220705 14:42:01.032"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:01.032" endtime="20220705 14:42:01.033"/>
</return>
<msg timestamp="20220705 14:42:01.033" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:00.916" endtime="20220705 14:42:01.033"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:42:01.033" endtime="20220705 14:42:01.034"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:01.036" level="INFO">${url} = boards/62c44db860e93630b4731c19</msg>
<status status="PASS" starttime="20220705 14:42:01.036" endtime="20220705 14:42:01.036"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:01.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:01.036" endtime="20220705 14:42:01.438"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:01.438" endtime="20220705 14:42:01.438"/>
</return>
<msg timestamp="20220705 14:42:01.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:01.035" endtime="20220705 14:42:01.438"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:01.439" endtime="20220705 14:42:01.439"/>
</return>
<status status="PASS" starttime="20220705 14:42:01.034" endtime="20220705 14:42:01.439"/>
</kw>
<status status="PASS" starttime="20220705 14:42:01.034" endtime="20220705 14:42:01.439"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:42:00.241" endtime="20220705 14:42:01.439"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 14:42:01.441" endtime="20220705 14:42:01.443"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 14:41:56.863" endtime="20220705 14:42:01.443"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:42:01.459" endtime="20220705 14:42:01.460"/>
</kw>
<status status="PASS" starttime="20220705 14:42:01.459" endtime="20220705 14:42:01.460"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:01.461" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:01.461" endtime="20220705 14:42:01.461"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:01.461" endtime="20220705 14:42:01.461"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:01.462" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:42:01.461" endtime="20220705 14:42:01.462"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:01.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:01.462" endtime="20220705 14:42:01.701"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:01.701" endtime="20220705 14:42:01.701"/>
</return>
<msg timestamp="20220705 14:42:01.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:01.460" endtime="20220705 14:42:01.701"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:01.701" endtime="20220705 14:42:01.701"/>
</return>
<msg timestamp="20220705 14:42:01.702" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:01.460" endtime="20220705 14:42:01.702"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:42:01.703" level="INFO">${TEST_SUITE_BOARD_ID} = 62c44db976c32085ff17cfaf</msg>
<status status="PASS" starttime="20220705 14:42:01.702" endtime="20220705 14:42:01.703"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:01.704" level="INFO">${url} = boards/62c44db976c32085ff17cfaf/lists/</msg>
<status status="PASS" starttime="20220705 14:42:01.704" endtime="20220705 14:42:01.704"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:01.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:01.704" endtime="20220705 14:42:01.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:01.812" endtime="20220705 14:42:01.812"/>
</return>
<msg timestamp="20220705 14:42:01.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:01.703" endtime="20220705 14:42:01.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:01.812" endtime="20220705 14:42:01.812"/>
</return>
<msg timestamp="20220705 14:42:01.813" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:01.703" endtime="20220705 14:42:01.813"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:42:01.814" level="INFO">${TEST_SUITE_LIST_ID} = 62c44db976c32085ff17cfb6</msg>
<status status="PASS" starttime="20220705 14:42:01.813" endtime="20220705 14:42:01.815"/>
</kw>
<status status="PASS" starttime="20220705 14:42:01.460" endtime="20220705 14:42:01.815"/>
</kw>
<status status="PASS" starttime="20220705 14:42:01.459" endtime="20220705 14:42:01.815"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:01.818" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:01.818" endtime="20220705 14:42:01.818"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:01.818" endtime="20220705 14:42:01.818"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:01.819" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 14:42:01.818" endtime="20220705 14:42:01.819"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:02.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:01.819" endtime="20220705 14:42:02.072"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:02.072" endtime="20220705 14:42:02.072"/>
</return>
<msg timestamp="20220705 14:42:02.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:01.817" endtime="20220705 14:42:02.072"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:02.072" endtime="20220705 14:42:02.072"/>
</return>
<msg timestamp="20220705 14:42:02.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:01.816" endtime="20220705 14:42:02.072"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:42:02.073" endtime="20220705 14:42:02.078"/>
</kw>
<status status="PASS" starttime="20220705 14:42:02.072" endtime="20220705 14:42:02.078"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:02.079" endtime="20220705 14:42:02.079"/>
</return>
<msg timestamp="20220705 14:42:02.079" level="INFO">${CARD_ID} = 62c44db920720e4b64014250</msg>
<status status="PASS" starttime="20220705 14:42:02.078" endtime="20220705 14:42:02.079"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:02.080" level="INFO">${url} = cards/62c44db920720e4b64014250</msg>
<status status="PASS" starttime="20220705 14:42:02.080" endtime="20220705 14:42:02.080"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:02.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.080" endtime="20220705 14:42:02.215"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:02.215" endtime="20220705 14:42:02.216"/>
</return>
<msg timestamp="20220705 14:42:02.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.080" endtime="20220705 14:42:02.216"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:02.216" endtime="20220705 14:42:02.216"/>
</return>
<msg timestamp="20220705 14:42:02.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.079" endtime="20220705 14:42:02.216"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:02.217" endtime="20220705 14:42:02.217"/>
</return>
<msg timestamp="20220705 14:42:02.218" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 14:42:02.217" endtime="20220705 14:42:02.218"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:42:02.218" endtime="20220705 14:42:02.219"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:02.221" level="INFO">${url} = cards/62c44db920720e4b64014250</msg>
<status status="PASS" starttime="20220705 14:42:02.221" endtime="20220705 14:42:02.221"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:02.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.221" endtime="20220705 14:42:02.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:02.446" endtime="20220705 14:42:02.446"/>
</return>
<msg timestamp="20220705 14:42:02.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.220" endtime="20220705 14:42:02.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:02.446" endtime="20220705 14:42:02.446"/>
</return>
<status status="PASS" starttime="20220705 14:42:02.220" endtime="20220705 14:42:02.447"/>
</kw>
<status status="PASS" starttime="20220705 14:42:02.219" endtime="20220705 14:42:02.447"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:42:01.815" endtime="20220705 14:42:02.447"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:02.450" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:02.449" endtime="20220705 14:42:02.450"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:02.450" endtime="20220705 14:42:02.451"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:02.452" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 14:42:02.451" endtime="20220705 14:42:02.452"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:02.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.452" endtime="20220705 14:42:02.659"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:02.659" endtime="20220705 14:42:02.659"/>
</return>
<msg timestamp="20220705 14:42:02.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.448" endtime="20220705 14:42:02.659"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:02.659" endtime="20220705 14:42:02.659"/>
</return>
<msg timestamp="20220705 14:42:02.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.448" endtime="20220705 14:42:02.659"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:02.660" endtime="20220705 14:42:02.660"/>
</return>
<msg timestamp="20220705 14:42:02.661" level="INFO">${CARD_ID} = 62c44dba11525703dc2ffc58</msg>
<status status="PASS" starttime="20220705 14:42:02.660" endtime="20220705 14:42:02.661"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:02.663" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:02.663" endtime="20220705 14:42:02.663"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:02.663" endtime="20220705 14:42:02.663"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:02.664" level="INFO">${url} = cards/62c44dba11525703dc2ffc58</msg>
<status status="PASS" starttime="20220705 14:42:02.664" endtime="20220705 14:42:02.664"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:02.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.664" endtime="20220705 14:42:02.880"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:02.880" endtime="20220705 14:42:02.880"/>
</return>
<msg timestamp="20220705 14:42:02.880" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.662" endtime="20220705 14:42:02.880"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:02.880" endtime="20220705 14:42:02.880"/>
</return>
<msg timestamp="20220705 14:42:02.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.661" endtime="20220705 14:42:02.881"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:02.881" endtime="20220705 14:42:02.881"/>
</return>
<status status="PASS" starttime="20220705 14:42:02.661" endtime="20220705 14:42:02.881"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:02.884" level="INFO">${url} = cards/62c44dba11525703dc2ffc58</msg>
<status status="PASS" starttime="20220705 14:42:02.884" endtime="20220705 14:42:02.884"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:03.007" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.884" endtime="20220705 14:42:03.007"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:03.007" endtime="20220705 14:42:03.007"/>
</return>
<msg timestamp="20220705 14:42:03.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.882" endtime="20220705 14:42:03.008"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:03.008" endtime="20220705 14:42:03.008"/>
</return>
<msg timestamp="20220705 14:42:03.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:02.881" endtime="20220705 14:42:03.008"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:03.009" endtime="20220705 14:42:03.009"/>
</return>
<msg timestamp="20220705 14:42:03.010" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 14:42:03.008" endtime="20220705 14:42:03.010"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 14:42:03.010" endtime="20220705 14:42:03.011"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:03.013" level="INFO">${url} = cards/62c44dba11525703dc2ffc58</msg>
<status status="PASS" starttime="20220705 14:42:03.012" endtime="20220705 14:42:03.013"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:03.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:03.013" endtime="20220705 14:42:03.197"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:03.197" endtime="20220705 14:42:03.197"/>
</return>
<msg timestamp="20220705 14:42:03.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:03.012" endtime="20220705 14:42:03.197"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:03.197" endtime="20220705 14:42:03.197"/>
</return>
<status status="PASS" starttime="20220705 14:42:03.011" endtime="20220705 14:42:03.198"/>
</kw>
<status status="PASS" starttime="20220705 14:42:03.011" endtime="20220705 14:42:03.198"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:42:02.447" endtime="20220705 14:42:03.198"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:03.202" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:03.202" endtime="20220705 14:42:03.203"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:03.203" endtime="20220705 14:42:03.203"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:03.205" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 14:42:03.203" endtime="20220705 14:42:03.205"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:03.445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:03.205" endtime="20220705 14:42:03.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:03.446" endtime="20220705 14:42:03.446"/>
</return>
<msg timestamp="20220705 14:42:03.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:03.200" endtime="20220705 14:42:03.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:03.446" endtime="20220705 14:42:03.446"/>
</return>
<msg timestamp="20220705 14:42:03.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:03.200" endtime="20220705 14:42:03.447"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:03.448" endtime="20220705 14:42:03.448"/>
</return>
<msg timestamp="20220705 14:42:03.449" level="INFO">${CARD_ID} = 62c44dbb41645a2b1446acc2</msg>
<status status="PASS" starttime="20220705 14:42:03.447" endtime="20220705 14:42:03.449"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:03.451" level="INFO">${url} = cards/62c44dbb41645a2b1446acc2</msg>
<status status="PASS" starttime="20220705 14:42:03.451" endtime="20220705 14:42:03.452"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:03.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:03.452" endtime="20220705 14:42:03.666"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:03.666" endtime="20220705 14:42:03.666"/>
</return>
<msg timestamp="20220705 14:42:03.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:03.450" endtime="20220705 14:42:03.667"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:03.667" endtime="20220705 14:42:03.667"/>
</return>
<msg timestamp="20220705 14:42:03.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:03.449" endtime="20220705 14:42:03.667"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:42:03.668" endtime="20220705 14:42:03.669"/>
</kw>
<status status="PASS" starttime="20220705 14:42:03.667" endtime="20220705 14:42:03.669"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:03.670" level="INFO">${url} = cards/62c44dbb41645a2b1446acc2</msg>
<status status="PASS" starttime="20220705 14:42:03.670" endtime="20220705 14:42:03.670"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:03.763" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:42:03.670" endtime="20220705 14:42:03.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:03.763" endtime="20220705 14:42:03.763"/>
</return>
<msg timestamp="20220705 14:42:03.763" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:42:03.670" endtime="20220705 14:42:03.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:03.763" endtime="20220705 14:42:03.763"/>
</return>
<status status="PASS" starttime="20220705 14:42:03.669" endtime="20220705 14:42:03.764"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:42:03.198" endtime="20220705 14:42:03.764"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:03.767" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:03.767" endtime="20220705 14:42:03.767"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:03.767" endtime="20220705 14:42:03.768"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:03.769" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 14:42:03.768" endtime="20220705 14:42:03.769"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:03.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:03.769" endtime="20220705 14:42:03.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:03.995" endtime="20220705 14:42:03.995"/>
</return>
<msg timestamp="20220705 14:42:03.995" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:03.767" endtime="20220705 14:42:03.995"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:03.995" endtime="20220705 14:42:03.995"/>
</return>
<msg timestamp="20220705 14:42:03.996" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:03.766" endtime="20220705 14:42:03.996"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:03.997" endtime="20220705 14:42:03.997"/>
</return>
<msg timestamp="20220705 14:42:03.998" level="INFO">${CARD_ID} = 62c44dbb57150c1a55d28f59</msg>
<status status="PASS" starttime="20220705 14:42:03.996" endtime="20220705 14:42:03.998"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:03.999" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:03.999" endtime="20220705 14:42:03.999"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:03.999" endtime="20220705 14:42:04.000"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:04.000" level="INFO">${url} = cards/62c44dbb57150c1a55d28f59</msg>
<status status="PASS" starttime="20220705 14:42:04.000" endtime="20220705 14:42:04.000"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:04.182" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:04.000" endtime="20220705 14:42:04.182"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:04.182" endtime="20220705 14:42:04.182"/>
</return>
<msg timestamp="20220705 14:42:04.182" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:03.999" endtime="20220705 14:42:04.183"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:04.183" endtime="20220705 14:42:04.183"/>
</return>
<msg timestamp="20220705 14:42:04.183" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:03.998" endtime="20220705 14:42:04.183"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:42:04.184" endtime="20220705 14:42:04.193"/>
</kw>
<status status="PASS" starttime="20220705 14:42:04.183" endtime="20220705 14:42:04.193"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:04.194" level="INFO">${url} = cards/62c44dbb57150c1a55d28f59</msg>
<status status="PASS" starttime="20220705 14:42:04.194" endtime="20220705 14:42:04.194"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:04.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:04.194" endtime="20220705 14:42:04.316"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:04.316" endtime="20220705 14:42:04.316"/>
</return>
<msg timestamp="20220705 14:42:04.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:04.193" endtime="20220705 14:42:04.316"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:04.316" endtime="20220705 14:42:04.316"/>
</return>
<msg timestamp="20220705 14:42:04.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:04.193" endtime="20220705 14:42:04.316"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:04.317" endtime="20220705 14:42:04.317"/>
</return>
<msg timestamp="20220705 14:42:04.318" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 14:42:04.316" endtime="20220705 14:42:04.318"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:04.318" endtime="20220705 14:42:04.318"/>
</return>
<msg timestamp="20220705 14:42:04.319" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 14:42:04.318" endtime="20220705 14:42:04.319"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:42:04.319" endtime="20220705 14:42:04.319"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:42:04.319" endtime="20220705 14:42:04.320"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:04.322" level="INFO">${url} = cards/62c44dbb57150c1a55d28f59</msg>
<status status="PASS" starttime="20220705 14:42:04.321" endtime="20220705 14:42:04.322"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:04.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:04.322" endtime="20220705 14:42:04.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:04.541" endtime="20220705 14:42:04.541"/>
</return>
<msg timestamp="20220705 14:42:04.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:04.320" endtime="20220705 14:42:04.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:04.541" endtime="20220705 14:42:04.542"/>
</return>
<status status="PASS" starttime="20220705 14:42:04.320" endtime="20220705 14:42:04.542"/>
</kw>
<status status="PASS" starttime="20220705 14:42:04.320" endtime="20220705 14:42:04.542"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:42:03.765" endtime="20220705 14:42:04.542"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:04.547" level="INFO">${url} = boards/62c44db976c32085ff17cfaf</msg>
<status status="PASS" starttime="20220705 14:42:04.547" endtime="20220705 14:42:04.547"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:04.963" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:04.547" endtime="20220705 14:42:04.963"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:04.963" endtime="20220705 14:42:04.963"/>
</return>
<msg timestamp="20220705 14:42:04.963" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:04.546" endtime="20220705 14:42:04.963"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:04.963" endtime="20220705 14:42:04.963"/>
</return>
<status status="PASS" starttime="20220705 14:42:04.545" endtime="20220705 14:42:04.964"/>
</kw>
<status status="PASS" starttime="20220705 14:42:04.544" endtime="20220705 14:42:04.964"/>
</kw>
<status status="PASS" starttime="20220705 14:42:04.544" endtime="20220705 14:42:04.964"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 14:42:04.964" endtime="20220705 14:42:04.965"/>
</kw>
<status status="PASS" starttime="20220705 14:42:04.544" endtime="20220705 14:42:04.965"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 14:42:01.446" endtime="20220705 14:42:04.965"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:42:04.977" endtime="20220705 14:42:04.977"/>
</kw>
<status status="PASS" starttime="20220705 14:42:04.976" endtime="20220705 14:42:04.977"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:04.978" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:04.978" endtime="20220705 14:42:04.978"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:04.978" endtime="20220705 14:42:04.979"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:04.979" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:42:04.979" endtime="20220705 14:42:04.979"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:05.221" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:04.980" endtime="20220705 14:42:05.221"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:05.221" endtime="20220705 14:42:05.221"/>
</return>
<msg timestamp="20220705 14:42:05.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:04.978" endtime="20220705 14:42:05.222"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:05.222" endtime="20220705 14:42:05.222"/>
</return>
<msg timestamp="20220705 14:42:05.222" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:04.977" endtime="20220705 14:42:05.222"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:42:05.224" level="INFO">${TEST_SUITE_BOARD_ID} = 62c44dbd60efc01dbd5ee7fc</msg>
<status status="PASS" starttime="20220705 14:42:05.222" endtime="20220705 14:42:05.224"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:05.226" level="INFO">${url} = boards/62c44dbd60efc01dbd5ee7fc/lists/</msg>
<status status="PASS" starttime="20220705 14:42:05.226" endtime="20220705 14:42:05.226"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:05.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.227" endtime="20220705 14:42:05.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:05.340" endtime="20220705 14:42:05.340"/>
</return>
<msg timestamp="20220705 14:42:05.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.225" endtime="20220705 14:42:05.341"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:05.341" endtime="20220705 14:42:05.341"/>
</return>
<msg timestamp="20220705 14:42:05.341" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.224" endtime="20220705 14:42:05.341"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:42:05.342" level="INFO">${TEST_SUITE_LIST_ID} = 62c44dbd60efc01dbd5ee803</msg>
<status status="PASS" starttime="20220705 14:42:05.341" endtime="20220705 14:42:05.342"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:05.345" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:05.344" endtime="20220705 14:42:05.345"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:05.345" endtime="20220705 14:42:05.345"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:05.346" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 14:42:05.345" endtime="20220705 14:42:05.346"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:05.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.346" endtime="20220705 14:42:05.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:05.591" endtime="20220705 14:42:05.592"/>
</return>
<msg timestamp="20220705 14:42:05.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.344" endtime="20220705 14:42:05.592"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:05.592" endtime="20220705 14:42:05.592"/>
</return>
<msg timestamp="20220705 14:42:05.592" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.343" endtime="20220705 14:42:05.592"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:42:05.593" level="INFO">${TEST_SUITE_CARD_ID} = 62c44dbd8e78f45e0df0935a</msg>
<status status="PASS" starttime="20220705 14:42:05.592" endtime="20220705 14:42:05.593"/>
</kw>
<status status="PASS" starttime="20220705 14:42:04.977" endtime="20220705 14:42:05.593"/>
</kw>
<status status="PASS" starttime="20220705 14:42:04.976" endtime="20220705 14:42:05.593"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:05.595" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:05.595" endtime="20220705 14:42:05.595"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:05.595" endtime="20220705 14:42:05.595"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:05.596" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 14:42:05.595" endtime="20220705 14:42:05.596"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:05.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.596" endtime="20220705 14:42:05.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:05.766" endtime="20220705 14:42:05.766"/>
</return>
<msg timestamp="20220705 14:42:05.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.594" endtime="20220705 14:42:05.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:05.766" endtime="20220705 14:42:05.766"/>
</return>
<msg timestamp="20220705 14:42:05.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.594" endtime="20220705 14:42:05.767"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:05.767" endtime="20220705 14:42:05.767"/>
</return>
<msg timestamp="20220705 14:42:05.768" level="INFO">${checklist_id} = 62c44dbdc065507fba03ab75</msg>
<status status="PASS" starttime="20220705 14:42:05.767" endtime="20220705 14:42:05.768"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:05.770" level="INFO">${url} = checklists/62c44dbdc065507fba03ab75</msg>
<status status="PASS" starttime="20220705 14:42:05.770" endtime="20220705 14:42:05.770"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:05.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.770" endtime="20220705 14:42:05.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:05.878" endtime="20220705 14:42:05.878"/>
</return>
<msg timestamp="20220705 14:42:05.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.769" endtime="20220705 14:42:05.879"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:05.879" endtime="20220705 14:42:05.879"/>
</return>
<msg timestamp="20220705 14:42:05.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.768" endtime="20220705 14:42:05.879"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:05.880" endtime="20220705 14:42:05.880"/>
</return>
<msg timestamp="20220705 14:42:05.882" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 14:42:05.880" endtime="20220705 14:42:05.882"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:42:05.882" endtime="20220705 14:42:05.883"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:05.885" level="INFO">${url} = checklists/62c44dbdc065507fba03ab75</msg>
<status status="PASS" starttime="20220705 14:42:05.885" endtime="20220705 14:42:05.885"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:06.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.885" endtime="20220705 14:42:06.072"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:06.072" endtime="20220705 14:42:06.072"/>
</return>
<msg timestamp="20220705 14:42:06.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:05.884" endtime="20220705 14:42:06.073"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:06.073" endtime="20220705 14:42:06.073"/>
</return>
<status status="PASS" starttime="20220705 14:42:05.883" endtime="20220705 14:42:06.073"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:42:05.593" endtime="20220705 14:42:06.073"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:06.076" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:06.075" endtime="20220705 14:42:06.076"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:06.076" endtime="20220705 14:42:06.076"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:06.077" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 14:42:06.076" endtime="20220705 14:42:06.077"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:06.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.077" endtime="20220705 14:42:06.268"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:06.268" endtime="20220705 14:42:06.268"/>
</return>
<msg timestamp="20220705 14:42:06.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.075" endtime="20220705 14:42:06.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:06.269" endtime="20220705 14:42:06.269"/>
</return>
<msg timestamp="20220705 14:42:06.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.074" endtime="20220705 14:42:06.269"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:06.270" endtime="20220705 14:42:06.270"/>
</return>
<msg timestamp="20220705 14:42:06.272" level="INFO">${checklist_id} = 62c44dbe27fa2a49ecae01e6</msg>
<status status="PASS" starttime="20220705 14:42:06.269" endtime="20220705 14:42:06.272"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:06.274" level="INFO">${url} = checklists/62c44dbe27fa2a49ecae01e6</msg>
<status status="PASS" starttime="20220705 14:42:06.273" endtime="20220705 14:42:06.274"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:06.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.274" endtime="20220705 14:42:06.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:06.453" endtime="20220705 14:42:06.453"/>
</return>
<msg timestamp="20220705 14:42:06.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.273" endtime="20220705 14:42:06.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:06.454" endtime="20220705 14:42:06.454"/>
</return>
<msg timestamp="20220705 14:42:06.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.272" endtime="20220705 14:42:06.454"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:42:06.455" endtime="20220705 14:42:06.457"/>
</kw>
<status status="PASS" starttime="20220705 14:42:06.454" endtime="20220705 14:42:06.457"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:06.458" level="INFO">${url} = checklists/62c44dbe27fa2a49ecae01e6</msg>
<status status="PASS" starttime="20220705 14:42:06.458" endtime="20220705 14:42:06.458"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:06.548" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:42:06.458" endtime="20220705 14:42:06.548"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:06.549" endtime="20220705 14:42:06.549"/>
</return>
<msg timestamp="20220705 14:42:06.549" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:42:06.457" endtime="20220705 14:42:06.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:06.549" endtime="20220705 14:42:06.549"/>
</return>
<status status="PASS" starttime="20220705 14:42:06.457" endtime="20220705 14:42:06.550"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:42:06.073" endtime="20220705 14:42:06.550"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:06.556" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:06.553" endtime="20220705 14:42:06.556"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:06.556" endtime="20220705 14:42:06.557"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:06.557" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 14:42:06.557" endtime="20220705 14:42:06.557"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:06.742" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.558" endtime="20220705 14:42:06.742"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:06.742" endtime="20220705 14:42:06.742"/>
</return>
<msg timestamp="20220705 14:42:06.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.552" endtime="20220705 14:42:06.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:06.743" endtime="20220705 14:42:06.743"/>
</return>
<msg timestamp="20220705 14:42:06.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.551" endtime="20220705 14:42:06.743"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:06.744" endtime="20220705 14:42:06.744"/>
</return>
<msg timestamp="20220705 14:42:06.746" level="INFO">${checklist_id} = 62c44dbed561d33faf5986d9</msg>
<status status="PASS" starttime="20220705 14:42:06.744" endtime="20220705 14:42:06.746"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:06.748" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:06.747" endtime="20220705 14:42:06.748"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:06.748" endtime="20220705 14:42:06.748"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:06.749" level="INFO">${url} = checklists/62c44dbed561d33faf5986d9</msg>
<status status="PASS" starttime="20220705 14:42:06.748" endtime="20220705 14:42:06.749"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:06.909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.749" endtime="20220705 14:42:06.909"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:06.909" endtime="20220705 14:42:06.910"/>
</return>
<msg timestamp="20220705 14:42:06.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.747" endtime="20220705 14:42:06.910"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:06.910" endtime="20220705 14:42:06.910"/>
</return>
<msg timestamp="20220705 14:42:06.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.746" endtime="20220705 14:42:06.910"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:06.912" level="INFO">${url} = checklists/62c44dbed561d33faf5986d9</msg>
<status status="PASS" starttime="20220705 14:42:06.912" endtime="20220705 14:42:06.912"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:07.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.912" endtime="20220705 14:42:07.041"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:07.041" endtime="20220705 14:42:07.042"/>
</return>
<msg timestamp="20220705 14:42:07.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.911" endtime="20220705 14:42:07.042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:07.042" endtime="20220705 14:42:07.042"/>
</return>
<msg timestamp="20220705 14:42:07.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:06.911" endtime="20220705 14:42:07.043"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:07.043" endtime="20220705 14:42:07.043"/>
</return>
<msg timestamp="20220705 14:42:07.044" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 14:42:07.043" endtime="20220705 14:42:07.044"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:42:07.044" endtime="20220705 14:42:07.045"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:07.060" level="INFO">${url} = checklists/62c44dbed561d33faf5986d9</msg>
<status status="PASS" starttime="20220705 14:42:07.059" endtime="20220705 14:42:07.060"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:07.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:07.060" endtime="20220705 14:42:07.220"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:07.220" endtime="20220705 14:42:07.220"/>
</return>
<msg timestamp="20220705 14:42:07.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:07.059" endtime="20220705 14:42:07.221"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:07.221" endtime="20220705 14:42:07.221"/>
</return>
<status status="PASS" starttime="20220705 14:42:07.045" endtime="20220705 14:42:07.221"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:42:06.550" endtime="20220705 14:42:07.221"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:07.224" level="INFO">${url} = boards/62c44dbd60efc01dbd5ee7fc</msg>
<status status="PASS" starttime="20220705 14:42:07.224" endtime="20220705 14:42:07.224"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:07.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:07.224" endtime="20220705 14:42:07.689"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:07.689" endtime="20220705 14:42:07.689"/>
</return>
<msg timestamp="20220705 14:42:07.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:07.223" endtime="20220705 14:42:07.689"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:07.689" endtime="20220705 14:42:07.690"/>
</return>
<status status="PASS" starttime="20220705 14:42:07.223" endtime="20220705 14:42:07.690"/>
</kw>
<status status="PASS" starttime="20220705 14:42:07.222" endtime="20220705 14:42:07.690"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 14:42:07.690" endtime="20220705 14:42:07.692"/>
</kw>
<status status="PASS" starttime="20220705 14:42:07.222" endtime="20220705 14:42:07.692"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 14:42:04.967" endtime="20220705 14:42:07.692"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:42:07.703" endtime="20220705 14:42:07.704"/>
</kw>
<status status="PASS" starttime="20220705 14:42:07.703" endtime="20220705 14:42:07.704"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:07.705" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:07.705" endtime="20220705 14:42:07.705"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:07.705" endtime="20220705 14:42:07.705"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:07.706" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:42:07.706" endtime="20220705 14:42:07.706"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:07.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:07.706" endtime="20220705 14:42:07.944"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:07.944" endtime="20220705 14:42:07.944"/>
</return>
<msg timestamp="20220705 14:42:07.945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:07.705" endtime="20220705 14:42:07.945"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:07.945" endtime="20220705 14:42:07.945"/>
</return>
<msg timestamp="20220705 14:42:07.945" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:07.704" endtime="20220705 14:42:07.945"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:42:07.946" level="INFO">${TEST_SUITE_BOARD_ID} = 62c44dbfea7f8f25cf7a92f3</msg>
<status status="PASS" starttime="20220705 14:42:07.945" endtime="20220705 14:42:07.946"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:08.053" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:07.947" endtime="20220705 14:42:08.053"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:42:08.055" level="INFO">${TEST_SUITE_LIST_ID} = 62c44dbfea7f8f25cf7a92fa</msg>
<status status="PASS" starttime="20220705 14:42:08.054" endtime="20220705 14:42:08.055"/>
</kw>
<status status="PASS" starttime="20220705 14:42:07.704" endtime="20220705 14:42:08.056"/>
</kw>
<status status="PASS" starttime="20220705 14:42:07.703" endtime="20220705 14:42:08.056"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:08.059" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:08.059" endtime="20220705 14:42:08.059"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:08.059" endtime="20220705 14:42:08.060"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:08.060" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 14:42:08.060" endtime="20220705 14:42:08.061"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:08.213" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.061" endtime="20220705 14:42:08.214"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:08.214" endtime="20220705 14:42:08.214"/>
</return>
<msg timestamp="20220705 14:42:08.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.059" endtime="20220705 14:42:08.214"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:08.214" endtime="20220705 14:42:08.214"/>
</return>
<msg timestamp="20220705 14:42:08.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.057" endtime="20220705 14:42:08.215"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:42:08.216" endtime="20220705 14:42:08.219"/>
</kw>
<status status="PASS" starttime="20220705 14:42:08.215" endtime="20220705 14:42:08.219"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:08.220" endtime="20220705 14:42:08.220"/>
</return>
<msg timestamp="20220705 14:42:08.221" level="INFO">${LABEL_ID} = 62c44dc0f064383fd0c43053</msg>
<status status="PASS" starttime="20220705 14:42:08.220" endtime="20220705 14:42:08.221"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:08.222" level="INFO">${url} = labels/62c44dc0f064383fd0c43053</msg>
<status status="PASS" starttime="20220705 14:42:08.222" endtime="20220705 14:42:08.222"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:08.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.222" endtime="20220705 14:42:08.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:08.506" endtime="20220705 14:42:08.506"/>
</return>
<msg timestamp="20220705 14:42:08.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.221" endtime="20220705 14:42:08.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:08.506" endtime="20220705 14:42:08.506"/>
</return>
<msg timestamp="20220705 14:42:08.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.221" endtime="20220705 14:42:08.506"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:08.507" endtime="20220705 14:42:08.507"/>
</return>
<msg timestamp="20220705 14:42:08.507" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 14:42:08.506" endtime="20220705 14:42:08.507"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:08.508" endtime="20220705 14:42:08.508"/>
</return>
<msg timestamp="20220705 14:42:08.508" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 14:42:08.507" endtime="20220705 14:42:08.508"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:42:08.508" endtime="20220705 14:42:08.509"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:42:08.509" endtime="20220705 14:42:08.509"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:08.511" level="INFO">${url} = labels/62c44dc0f064383fd0c43053</msg>
<status status="PASS" starttime="20220705 14:42:08.510" endtime="20220705 14:42:08.511"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:08.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.511" endtime="20220705 14:42:08.675"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:08.676" endtime="20220705 14:42:08.676"/>
</return>
<msg timestamp="20220705 14:42:08.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.510" endtime="20220705 14:42:08.676"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:08.676" endtime="20220705 14:42:08.676"/>
</return>
<status status="PASS" starttime="20220705 14:42:08.510" endtime="20220705 14:42:08.677"/>
</kw>
<status status="PASS" starttime="20220705 14:42:08.509" endtime="20220705 14:42:08.677"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:42:08.056" endtime="20220705 14:42:08.677"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:08.679" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:08.679" endtime="20220705 14:42:08.679"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:08.679" endtime="20220705 14:42:08.680"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:08.680" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 14:42:08.680" endtime="20220705 14:42:08.680"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:08.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.680" endtime="20220705 14:42:08.825"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:08.825" endtime="20220705 14:42:08.825"/>
</return>
<msg timestamp="20220705 14:42:08.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.678" endtime="20220705 14:42:08.826"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:08.826" endtime="20220705 14:42:08.826"/>
</return>
<msg timestamp="20220705 14:42:08.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.678" endtime="20220705 14:42:08.826"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:42:08.827" endtime="20220705 14:42:08.830"/>
</kw>
<status status="PASS" starttime="20220705 14:42:08.827" endtime="20220705 14:42:08.830"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:08.831" endtime="20220705 14:42:08.831"/>
</return>
<msg timestamp="20220705 14:42:08.831" level="INFO">${LABEL_ID} = 62c44dc0803e24870f48feb1</msg>
<status status="PASS" starttime="20220705 14:42:08.830" endtime="20220705 14:42:08.831"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:08.832" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:08.832" endtime="20220705 14:42:08.832"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:08.832" endtime="20220705 14:42:08.832"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:08.833" level="INFO">${url} = labels/62c44dc0803e24870f48feb1</msg>
<status status="PASS" starttime="20220705 14:42:08.832" endtime="20220705 14:42:08.833"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:08.997" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.833" endtime="20220705 14:42:08.997"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:08.997" endtime="20220705 14:42:08.997"/>
</return>
<msg timestamp="20220705 14:42:08.998" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.831" endtime="20220705 14:42:08.998"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:08.998" endtime="20220705 14:42:08.998"/>
</return>
<msg timestamp="20220705 14:42:08.998" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:08.831" endtime="20220705 14:42:08.998"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:08.999" endtime="20220705 14:42:08.999"/>
</return>
<msg timestamp="20220705 14:42:09.001" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 14:42:08.999" endtime="20220705 14:42:09.001"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:09.002" endtime="20220705 14:42:09.002"/>
</return>
<msg timestamp="20220705 14:42:09.003" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 14:42:09.001" endtime="20220705 14:42:09.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:42:09.003" endtime="20220705 14:42:09.004"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:42:09.004" endtime="20220705 14:42:09.004"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:09.007" level="INFO">${url} = labels/62c44dc0803e24870f48feb1</msg>
<status status="PASS" starttime="20220705 14:42:09.007" endtime="20220705 14:42:09.007"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:09.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:09.007" endtime="20220705 14:42:09.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:09.180" endtime="20220705 14:42:09.180"/>
</return>
<msg timestamp="20220705 14:42:09.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:09.006" endtime="20220705 14:42:09.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:09.180" endtime="20220705 14:42:09.180"/>
</return>
<status status="PASS" starttime="20220705 14:42:09.005" endtime="20220705 14:42:09.181"/>
</kw>
<status status="PASS" starttime="20220705 14:42:09.005" endtime="20220705 14:42:09.181"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:42:08.677" endtime="20220705 14:42:09.181"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:09.184" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:09.183" endtime="20220705 14:42:09.184"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:09.184" endtime="20220705 14:42:09.184"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:09.185" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 14:42:09.184" endtime="20220705 14:42:09.185"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:09.337" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:09.185" endtime="20220705 14:42:09.337"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:09.337" endtime="20220705 14:42:09.337"/>
</return>
<msg timestamp="20220705 14:42:09.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:09.183" endtime="20220705 14:42:09.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:09.338" endtime="20220705 14:42:09.338"/>
</return>
<msg timestamp="20220705 14:42:09.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:09.182" endtime="20220705 14:42:09.338"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:42:09.339" endtime="20220705 14:42:09.339"/>
</return>
<msg timestamp="20220705 14:42:09.340" level="INFO">${LABEL_ID} = 62c44dc153e31b45952bfa09</msg>
<status status="PASS" starttime="20220705 14:42:09.338" endtime="20220705 14:42:09.340"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:09.342" level="INFO">${url} = labels/62c44dc153e31b45952bfa09</msg>
<status status="PASS" starttime="20220705 14:42:09.341" endtime="20220705 14:42:09.342"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:09.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:09.342" endtime="20220705 14:42:09.529"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:09.529" endtime="20220705 14:42:09.529"/>
</return>
<msg timestamp="20220705 14:42:09.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:09.341" endtime="20220705 14:42:09.529"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:09.529" endtime="20220705 14:42:09.529"/>
</return>
<status status="PASS" starttime="20220705 14:42:09.340" endtime="20220705 14:42:09.529"/>
</kw>
<status status="PASS" starttime="20220705 14:42:09.340" endtime="20220705 14:42:09.530"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:09.531" level="INFO">${url} = labels/62c44dc153e31b45952bfa09</msg>
<status status="PASS" starttime="20220705 14:42:09.531" endtime="20220705 14:42:09.531"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:09.628" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:42:09.531" endtime="20220705 14:42:09.628"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:09.628" endtime="20220705 14:42:09.628"/>
</return>
<msg timestamp="20220705 14:42:09.628" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:42:09.530" endtime="20220705 14:42:09.628"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:09.628" endtime="20220705 14:42:09.628"/>
</return>
<status status="PASS" starttime="20220705 14:42:09.530" endtime="20220705 14:42:09.629"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:42:09.181" endtime="20220705 14:42:09.629"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:09.632" level="INFO">${url} = boards/62c44dbfea7f8f25cf7a92f3</msg>
<status status="PASS" starttime="20220705 14:42:09.632" endtime="20220705 14:42:09.632"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:10.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:09.632" endtime="20220705 14:42:10.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:10.095" endtime="20220705 14:42:10.095"/>
</return>
<msg timestamp="20220705 14:42:10.096" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:09.632" endtime="20220705 14:42:10.096"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:10.096" endtime="20220705 14:42:10.096"/>
</return>
<status status="PASS" starttime="20220705 14:42:09.631" endtime="20220705 14:42:10.096"/>
</kw>
<status status="PASS" starttime="20220705 14:42:09.631" endtime="20220705 14:42:10.096"/>
</kw>
<status status="PASS" starttime="20220705 14:42:09.630" endtime="20220705 14:42:10.097"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 14:42:10.097" endtime="20220705 14:42:10.098"/>
</kw>
<status status="PASS" starttime="20220705 14:42:09.630" endtime="20220705 14:42:10.098"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 14:42:07.693" endtime="20220705 14:42:10.098"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:42:10.110" endtime="20220705 14:42:10.110"/>
</kw>
<status status="PASS" starttime="20220705 14:42:10.110" endtime="20220705 14:42:10.110"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:10.112" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:10.111" endtime="20220705 14:42:10.112"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:10.112" endtime="20220705 14:42:10.112"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:10.113" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:42:10.112" endtime="20220705 14:42:10.113"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:10.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.113" endtime="20220705 14:42:10.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:10.390" endtime="20220705 14:42:10.390"/>
</return>
<msg timestamp="20220705 14:42:10.391" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.111" endtime="20220705 14:42:10.391"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:10.391" endtime="20220705 14:42:10.391"/>
</return>
<msg timestamp="20220705 14:42:10.392" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.111" endtime="20220705 14:42:10.392"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:42:10.393" level="INFO">${TEST_SUITE_BOARD_ID} = 62c44dc292a144097091820f</msg>
<status status="PASS" starttime="20220705 14:42:10.392" endtime="20220705 14:42:10.393"/>
</kw>
<status status="PASS" starttime="20220705 14:42:10.392" endtime="20220705 14:42:10.393"/>
</kw>
<status status="PASS" starttime="20220705 14:42:10.111" endtime="20220705 14:42:10.394"/>
</kw>
<status status="PASS" starttime="20220705 14:42:10.110" endtime="20220705 14:42:10.394"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:10.396" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:10.396" endtime="20220705 14:42:10.396"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:10.396" endtime="20220705 14:42:10.396"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:10.397" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 14:42:10.396" endtime="20220705 14:42:10.397"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:10.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.397" endtime="20220705 14:42:10.554"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:10.554" endtime="20220705 14:42:10.554"/>
</return>
<msg timestamp="20220705 14:42:10.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.395" endtime="20220705 14:42:10.554"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:10.554" endtime="20220705 14:42:10.554"/>
</return>
<msg timestamp="20220705 14:42:10.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.394" endtime="20220705 14:42:10.555"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:42:10.555" endtime="20220705 14:42:10.558"/>
</kw>
<status status="PASS" starttime="20220705 14:42:10.555" endtime="20220705 14:42:10.558"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:42:10.394" endtime="20220705 14:42:10.558"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:10.561" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:10.560" endtime="20220705 14:42:10.561"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:10.561" endtime="20220705 14:42:10.561"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:10.562" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 14:42:10.561" endtime="20220705 14:42:10.562"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:10.725" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.562" endtime="20220705 14:42:10.725"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:10.726" endtime="20220705 14:42:10.726"/>
</return>
<msg timestamp="20220705 14:42:10.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.560" endtime="20220705 14:42:10.726"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:10.726" endtime="20220705 14:42:10.726"/>
</return>
<msg timestamp="20220705 14:42:10.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.559" endtime="20220705 14:42:10.726"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:42:10.727" endtime="20220705 14:42:10.729"/>
</kw>
<status status="PASS" starttime="20220705 14:42:10.727" endtime="20220705 14:42:10.729"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:10.731" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:10.730" endtime="20220705 14:42:10.731"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:10.731" endtime="20220705 14:42:10.731"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:10.732" level="INFO">${url} = lists/62c44dc208786f208738360f</msg>
<status status="PASS" starttime="20220705 14:42:10.731" endtime="20220705 14:42:10.732"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:10.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.732" endtime="20220705 14:42:10.857"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:10.857" endtime="20220705 14:42:10.857"/>
</return>
<msg timestamp="20220705 14:42:10.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.730" endtime="20220705 14:42:10.857"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:10.857" endtime="20220705 14:42:10.857"/>
</return>
<status status="PASS" starttime="20220705 14:42:10.729" endtime="20220705 14:42:10.857"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:10.861" level="INFO">${url} = lists/62c44dc208786f208738360f</msg>
<status status="PASS" starttime="20220705 14:42:10.860" endtime="20220705 14:42:10.861"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:10.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.861" endtime="20220705 14:42:10.965"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:10.965" endtime="20220705 14:42:10.965"/>
</return>
<msg timestamp="20220705 14:42:10.966" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.860" endtime="20220705 14:42:10.966"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:10.966" endtime="20220705 14:42:10.966"/>
</return>
<msg timestamp="20220705 14:42:10.966" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.858" endtime="20220705 14:42:10.966"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:42:10.967" endtime="20220705 14:42:10.970"/>
</kw>
<status status="PASS" starttime="20220705 14:42:10.967" endtime="20220705 14:42:10.971"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:42:10.971" endtime="20220705 14:42:10.972"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:42:10.558" endtime="20220705 14:42:10.973"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:10.977" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:10.976" endtime="20220705 14:42:10.977"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:10.977" endtime="20220705 14:42:10.979"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:10.980" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 14:42:10.979" endtime="20220705 14:42:10.980"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:11.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.980" endtime="20220705 14:42:11.169"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:11.169" endtime="20220705 14:42:11.170"/>
</return>
<msg timestamp="20220705 14:42:11.170" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.975" endtime="20220705 14:42:11.170"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:11.170" endtime="20220705 14:42:11.170"/>
</return>
<msg timestamp="20220705 14:42:11.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:10.974" endtime="20220705 14:42:11.171"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:42:11.173" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:42:11.173" endtime="20220705 14:42:11.173"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:42:11.173" endtime="20220705 14:42:11.174"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:11.175" level="INFO">${url} = lists/62c44dc3df861b5e6cdee852/closed</msg>
<status status="PASS" starttime="20220705 14:42:11.174" endtime="20220705 14:42:11.175"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:42:11.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:11.175" endtime="20220705 14:42:11.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:11.328" endtime="20220705 14:42:11.328"/>
</return>
<msg timestamp="20220705 14:42:11.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:11.172" endtime="20220705 14:42:11.329"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:11.329" endtime="20220705 14:42:11.329"/>
</return>
<status status="PASS" starttime="20220705 14:42:11.171" endtime="20220705 14:42:11.329"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:11.333" level="INFO">${url} = lists/62c44dc3df861b5e6cdee852</msg>
<status status="PASS" starttime="20220705 14:42:11.332" endtime="20220705 14:42:11.333"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:42:11.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:11.333" endtime="20220705 14:42:11.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:11.434" endtime="20220705 14:42:11.434"/>
</return>
<msg timestamp="20220705 14:42:11.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:11.331" endtime="20220705 14:42:11.435"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:11.435" endtime="20220705 14:42:11.435"/>
</return>
<msg timestamp="20220705 14:42:11.435" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:11.330" endtime="20220705 14:42:11.435"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 14:42:11.435" endtime="20220705 14:42:11.436"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:42:10.973" endtime="20220705 14:42:11.436"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:42:11.440" level="INFO">${url} = boards/62c44dc292a144097091820f</msg>
<status status="PASS" starttime="20220705 14:42:11.439" endtime="20220705 14:42:11.440"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:42:11.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:11.440" endtime="20220705 14:42:11.930"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:11.930" endtime="20220705 14:42:11.930"/>
</return>
<msg timestamp="20220705 14:42:11.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:42:11.439" endtime="20220705 14:42:11.930"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:42:11.930" endtime="20220705 14:42:11.931"/>
</return>
<status status="PASS" starttime="20220705 14:42:11.438" endtime="20220705 14:42:11.931"/>
</kw>
<status status="PASS" starttime="20220705 14:42:11.437" endtime="20220705 14:42:11.931"/>
</kw>
<status status="PASS" starttime="20220705 14:42:11.437" endtime="20220705 14:42:11.931"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 14:42:11.931" endtime="20220705 14:42:11.933"/>
</kw>
<status status="PASS" starttime="20220705 14:42:11.437" endtime="20220705 14:42:11.933"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 14:42:10.100" endtime="20220705 14:42:11.933"/>
</suite>
<status status="PASS" starttime="20220705 14:41:56.861" endtime="20220705 14:42:11.936"/>
</suite>
<status status="PASS" starttime="20220705 14:41:56.843" endtime="20220705 14:42:11.939"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
