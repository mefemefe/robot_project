<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 14:42:55.615" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Gui" source="/trello/gui">
<suite id="s1-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:42:55.875" endtime="20220705 14:42:55.875"/>
</kw>
<status status="PASS" starttime="20220705 14:42:55.875" endtime="20220705 14:42:55.876"/>
</kw>
<status status="PASS" starttime="20220705 14:42:55.874" endtime="20220705 14:42:55.876"/>
</kw>
<test id="s1-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 14:42:55.878" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 14:42:55.877" endtime="20220705 14:42:57.785"/>
</kw>
<status status="PASS" starttime="20220705 14:42:55.877" endtime="20220705 14:42:57.785"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:42:57.785" endtime="20220705 14:42:57.785"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:42:57.785" endtime="20220705 14:42:57.785"/>
</branch>
<status status="PASS" starttime="20220705 14:42:55.877" endtime="20220705 14:42:57.785"/>
</if>
<status status="PASS" starttime="20220705 14:42:55.877" endtime="20220705 14:42:57.785"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 14:42:57.786" endtime="20220705 14:42:57.919"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:42:57.939" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:42:57.919" endtime="20220705 14:42:57.939"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:42:57.940" endtime="20220705 14:42:57.940"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:42:57.940" endtime="20220705 14:42:57.940"/>
</branch>
<status status="PASS" starttime="20220705 14:42:57.939" endtime="20220705 14:42:57.940"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:42:57.940" endtime="20220705 14:42:57.998"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:42:57.998" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 14:42:57.998" endtime="20220705 14:42:58.133"/>
</kw>
<status status="PASS" starttime="20220705 14:42:57.940" endtime="20220705 14:42:58.133"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 14:42:58.133" endtime="20220705 14:42:58.979"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:42:58.996" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:42:58.980" endtime="20220705 14:42:58.996"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:42:58.997" endtime="20220705 14:42:59.056"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:42:59.056" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 14:42:59.056" endtime="20220705 14:43:00.055"/>
</kw>
<status status="PASS" starttime="20220705 14:42:58.997" endtime="20220705 14:43:00.055"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:43:00.056" endtime="20220705 14:43:00.056"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:00.056" endtime="20220705 14:43:00.056"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:00.056" endtime="20220705 14:43:00.056"/>
</branch>
<status status="PASS" starttime="20220705 14:42:58.996" endtime="20220705 14:43:00.056"/>
</if>
<status status="PASS" starttime="20220705 14:42:58.980" endtime="20220705 14:43:00.056"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 14:43:00.057" endtime="20220705 14:43:00.087"/>
</kw>
<status status="PASS" starttime="20220705 14:43:00.057" endtime="20220705 14:43:00.087"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:00.088" endtime="20220705 14:43:00.162"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:00.163" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 14:43:00.237" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 14:43:00.329" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 14:43:00.162" endtime="20220705 14:43:00.329"/>
</kw>
<status status="PASS" starttime="20220705 14:43:00.087" endtime="20220705 14:43:00.329"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:43:00.342" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c44d...</msg>
<status status="PASS" starttime="20220705 14:43:00.329" endtime="20220705 14:43:00.342"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:43:00.343" endtime="20220705 14:43:00.343"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:00.343" endtime="20220705 14:43:00.343"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:00.342" endtime="20220705 14:43:00.343"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:43:00.343" endtime="20220705 14:43:00.405"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:00.405" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 14:43:00.405" endtime="20220705 14:43:00.523"/>
</kw>
<status status="PASS" starttime="20220705 14:43:00.343" endtime="20220705 14:43:00.524"/>
</branch>
<status status="PASS" starttime="20220705 14:43:00.342" endtime="20220705 14:43:00.524"/>
</if>
<status status="PASS" starttime="20220705 14:43:00.329" endtime="20220705 14:43:00.524"/>
</kw>
<status status="PASS" starttime="20220705 14:42:57.919" endtime="20220705 14:43:00.524"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 14:43:00.525" endtime="20220705 14:43:04.357"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:04.358" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220705 14:43:04.358" endtime="20220705 14:43:04.526"/>
</kw>
<status status="PASS" starttime="20220705 14:43:04.358" endtime="20220705 14:43:04.526"/>
</kw>
<status status="PASS" starttime="20220705 14:43:00.524" endtime="20220705 14:43:04.526"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:04.527" endtime="20220705 14:43:04.669"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:04.669" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220705 14:43:04.669" endtime="20220705 14:43:04.915"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:43:04.915" endtime="20220705 14:43:05.065"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:05.066" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220705 14:43:05.066" endtime="20220705 14:43:05.168"/>
</kw>
<status status="PASS" starttime="20220705 14:43:04.526" endtime="20220705 14:43:05.168"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:05.169" endtime="20220705 14:43:06.694"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 14:43:06.694" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220705 14:43:06.694" endtime="20220705 14:43:06.753"/>
</kw>
<status status="PASS" starttime="20220705 14:43:05.168" endtime="20220705 14:43:06.753"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:06.754" endtime="20220705 14:43:06.799"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:06.800" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 14:43:06.800" endtime="20220705 14:43:06.888"/>
</kw>
<status status="PASS" starttime="20220705 14:43:06.754" endtime="20220705 14:43:06.889"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:06.889" endtime="20220705 14:43:06.957"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:06.957" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220705 14:43:06.957" endtime="20220705 14:43:07.229"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:07.230" endtime="20220705 14:43:07.309"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:07.310" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220705 14:43:07.309" endtime="20220705 14:43:07.413"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:07.413" endtime="20220705 14:43:07.464"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:07.465" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220705 14:43:07.465" endtime="20220705 14:43:07.606"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:07.607" endtime="20220705 14:43:07.998"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:07.998" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220705 14:43:07.998" endtime="20220705 14:43:08.088"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:08.089" endtime="20220705 14:43:08.131"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:08.131" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220705 14:43:08.131" endtime="20220705 14:43:08.211"/>
</kw>
<status status="PASS" starttime="20220705 14:43:06.889" endtime="20220705 14:43:08.211"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 14:43:08.211" endtime="20220705 14:43:08.303"/>
</kw>
<status status="PASS" starttime="20220705 14:43:06.754" endtime="20220705 14:43:08.303"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:42:55.876" endtime="20220705 14:43:08.303"/>
</test>
<test id="s1-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:43:08.307" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:43:08.307" endtime="20220705 14:43:08.307"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:43:08.308" endtime="20220705 14:43:08.308"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:08.309" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:43:08.308" endtime="20220705 14:43:08.309"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:43:08.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:08.310" endtime="20220705 14:43:08.616"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:43:08.616" endtime="20220705 14:43:08.616"/>
</return>
<msg timestamp="20220705 14:43:08.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:08.306" endtime="20220705 14:43:08.616"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:43:08.616" endtime="20220705 14:43:08.616"/>
</return>
<msg timestamp="20220705 14:43:08.617" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:08.306" endtime="20220705 14:43:08.617"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 14:43:08.618" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 14:43:08.617" endtime="20220705 14:43:09.849"/>
</kw>
<status status="PASS" starttime="20220705 14:43:08.617" endtime="20220705 14:43:09.849"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:09.850" endtime="20220705 14:43:09.850"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:09.849" endtime="20220705 14:43:09.850"/>
</branch>
<status status="PASS" starttime="20220705 14:43:08.617" endtime="20220705 14:43:09.850"/>
</if>
<status status="PASS" starttime="20220705 14:43:08.617" endtime="20220705 14:43:09.850"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 14:43:09.850" endtime="20220705 14:43:09.973"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:43:09.992" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:43:09.974" endtime="20220705 14:43:09.992"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:09.992" endtime="20220705 14:43:09.992"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:09.992" endtime="20220705 14:43:09.992"/>
</branch>
<status status="PASS" starttime="20220705 14:43:09.992" endtime="20220705 14:43:09.992"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:09.993" endtime="20220705 14:43:10.042"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:10.043" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 14:43:10.043" endtime="20220705 14:43:10.196"/>
</kw>
<status status="PASS" starttime="20220705 14:43:09.993" endtime="20220705 14:43:10.196"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 14:43:10.196" endtime="20220705 14:43:10.980"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:43:10.992" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:43:10.980" endtime="20220705 14:43:10.992"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:43:10.993" endtime="20220705 14:43:11.047"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:11.048" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 14:43:11.047" endtime="20220705 14:43:12.128"/>
</kw>
<status status="PASS" starttime="20220705 14:43:10.992" endtime="20220705 14:43:12.128"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:43:12.128" endtime="20220705 14:43:12.128"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:12.128" endtime="20220705 14:43:12.128"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:12.128" endtime="20220705 14:43:12.128"/>
</branch>
<status status="PASS" starttime="20220705 14:43:10.992" endtime="20220705 14:43:12.128"/>
</if>
<status status="PASS" starttime="20220705 14:43:10.980" endtime="20220705 14:43:12.128"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 14:43:12.129" endtime="20220705 14:43:12.156"/>
</kw>
<status status="PASS" starttime="20220705 14:43:12.128" endtime="20220705 14:43:12.156"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:12.157" endtime="20220705 14:43:12.212"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:12.213" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 14:43:12.273" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 14:43:12.342" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 14:43:12.212" endtime="20220705 14:43:12.342"/>
</kw>
<status status="PASS" starttime="20220705 14:43:12.156" endtime="20220705 14:43:12.342"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:43:12.360" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c44d...</msg>
<status status="PASS" starttime="20220705 14:43:12.343" endtime="20220705 14:43:12.360"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:43:12.361" endtime="20220705 14:43:12.361"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:12.361" endtime="20220705 14:43:12.361"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:12.360" endtime="20220705 14:43:12.361"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:43:12.361" endtime="20220705 14:43:12.441"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:12.442" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 14:43:12.441" endtime="20220705 14:43:12.564"/>
</kw>
<status status="PASS" starttime="20220705 14:43:12.361" endtime="20220705 14:43:12.564"/>
</branch>
<status status="PASS" starttime="20220705 14:43:12.360" endtime="20220705 14:43:12.564"/>
</if>
<status status="PASS" starttime="20220705 14:43:12.342" endtime="20220705 14:43:12.564"/>
</kw>
<status status="PASS" starttime="20220705 14:43:09.973" endtime="20220705 14:43:12.565"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:12.565" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220705 14:43:12.565" endtime="20220705 14:43:12.565"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:12.566" endtime="20220705 14:43:16.552"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:16.553" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220705 14:43:16.552" endtime="20220705 14:43:17.004"/>
</kw>
<status status="PASS" starttime="20220705 14:43:12.565" endtime="20220705 14:43:17.004"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:17.005" endtime="20220705 14:43:17.649"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 14:43:17.649" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220705 14:43:17.649" endtime="20220705 14:43:17.743"/>
</kw>
<status status="PASS" starttime="20220705 14:43:17.004" endtime="20220705 14:43:17.743"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:17.743" endtime="20220705 14:43:17.793"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:17.794" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 14:43:17.793" endtime="20220705 14:43:17.875"/>
</kw>
<status status="PASS" starttime="20220705 14:43:17.743" endtime="20220705 14:43:17.875"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:17.876" endtime="20220705 14:43:17.933"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:17.934" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220705 14:43:17.934" endtime="20220705 14:43:18.217"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:18.217" endtime="20220705 14:43:18.378"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:18.379" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220705 14:43:18.378" endtime="20220705 14:43:18.451"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:18.451" endtime="20220705 14:43:18.500"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:18.501" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220705 14:43:18.501" endtime="20220705 14:43:18.619"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:18.619" endtime="20220705 14:43:18.962"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:18.963" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220705 14:43:18.963" endtime="20220705 14:43:19.049"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:19.049" endtime="20220705 14:43:19.089"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:19.090" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220705 14:43:19.089" endtime="20220705 14:43:19.148"/>
</kw>
<status status="PASS" starttime="20220705 14:43:17.876" endtime="20220705 14:43:19.148"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 14:43:19.149" endtime="20220705 14:43:19.251"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220705 14:43:19.251" endtime="20220705 14:43:19.251"/>
</kw>
<status status="PASS" starttime="20220705 14:43:19.149" endtime="20220705 14:43:19.251"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:43:08.305" endtime="20220705 14:43:19.251"/>
</test>
<test id="s1-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:43:19.254" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:43:19.254" endtime="20220705 14:43:19.254"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:43:19.255" endtime="20220705 14:43:19.255"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:19.256" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:43:19.255" endtime="20220705 14:43:19.256"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:43:19.482" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:19.256" endtime="20220705 14:43:19.482"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:43:19.482" endtime="20220705 14:43:19.482"/>
</return>
<msg timestamp="20220705 14:43:19.482" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:19.254" endtime="20220705 14:43:19.482"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:43:19.482" endtime="20220705 14:43:19.482"/>
</return>
<msg timestamp="20220705 14:43:19.483" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:19.253" endtime="20220705 14:43:19.483"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 14:43:19.484" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 14:43:19.484" endtime="20220705 14:43:20.679"/>
</kw>
<status status="PASS" starttime="20220705 14:43:19.483" endtime="20220705 14:43:20.679"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:20.679" endtime="20220705 14:43:20.679"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:20.679" endtime="20220705 14:43:20.679"/>
</branch>
<status status="PASS" starttime="20220705 14:43:19.483" endtime="20220705 14:43:20.679"/>
</if>
<status status="PASS" starttime="20220705 14:43:19.483" endtime="20220705 14:43:20.679"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 14:43:20.679" endtime="20220705 14:43:20.826"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:43:20.838" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:43:20.828" endtime="20220705 14:43:20.839"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:20.839" endtime="20220705 14:43:20.839"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:20.839" endtime="20220705 14:43:20.839"/>
</branch>
<status status="PASS" starttime="20220705 14:43:20.839" endtime="20220705 14:43:20.839"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:20.839" endtime="20220705 14:43:20.884"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:20.885" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 14:43:20.884" endtime="20220705 14:43:21.060"/>
</kw>
<status status="PASS" starttime="20220705 14:43:20.839" endtime="20220705 14:43:21.061"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 14:43:21.061" endtime="20220705 14:43:21.840"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:43:21.848" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:43:21.841" endtime="20220705 14:43:21.848"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:43:21.849" endtime="20220705 14:43:21.913"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:21.913" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 14:43:21.913" endtime="20220705 14:43:22.880"/>
</kw>
<status status="PASS" starttime="20220705 14:43:21.849" endtime="20220705 14:43:22.880"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:43:22.881" endtime="20220705 14:43:22.881"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:22.881" endtime="20220705 14:43:22.881"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:22.881" endtime="20220705 14:43:22.881"/>
</branch>
<status status="PASS" starttime="20220705 14:43:21.848" endtime="20220705 14:43:22.881"/>
</if>
<status status="PASS" starttime="20220705 14:43:21.840" endtime="20220705 14:43:22.881"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 14:43:22.882" endtime="20220705 14:43:22.909"/>
</kw>
<status status="PASS" starttime="20220705 14:43:22.881" endtime="20220705 14:43:22.910"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:22.911" endtime="20220705 14:43:22.980"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:22.981" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 14:43:23.046" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 14:43:23.125" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 14:43:22.980" endtime="20220705 14:43:23.126"/>
</kw>
<status status="PASS" starttime="20220705 14:43:22.910" endtime="20220705 14:43:23.126"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:43:23.138" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c44e...</msg>
<status status="PASS" starttime="20220705 14:43:23.126" endtime="20220705 14:43:23.138"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:43:23.138" endtime="20220705 14:43:23.138"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:23.138" endtime="20220705 14:43:23.138"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:23.138" endtime="20220705 14:43:23.138"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:43:23.138" endtime="20220705 14:43:23.194"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:23.194" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 14:43:23.194" endtime="20220705 14:43:23.295"/>
</kw>
<status status="PASS" starttime="20220705 14:43:23.138" endtime="20220705 14:43:23.295"/>
</branch>
<status status="PASS" starttime="20220705 14:43:23.138" endtime="20220705 14:43:23.295"/>
</if>
<status status="PASS" starttime="20220705 14:43:23.126" endtime="20220705 14:43:23.295"/>
</kw>
<status status="PASS" starttime="20220705 14:43:20.827" endtime="20220705 14:43:23.295"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:23.296" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220705 14:43:23.296" endtime="20220705 14:43:23.296"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:23.297" endtime="20220705 14:43:27.165"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:27.166" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220705 14:43:27.165" endtime="20220705 14:43:27.545"/>
</kw>
<status status="PASS" starttime="20220705 14:43:23.295" endtime="20220705 14:43:27.545"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:27.546" endtime="20220705 14:43:28.145"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 14:43:28.146" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220705 14:43:28.146" endtime="20220705 14:43:28.238"/>
</kw>
<status status="PASS" starttime="20220705 14:43:27.545" endtime="20220705 14:43:28.238"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:28.238" endtime="20220705 14:43:28.276"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:28.277" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 14:43:28.276" endtime="20220705 14:43:28.344"/>
</kw>
<status status="PASS" starttime="20220705 14:43:28.238" endtime="20220705 14:43:28.344"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:28.345" endtime="20220705 14:43:28.431"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:28.432" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220705 14:43:28.431" endtime="20220705 14:43:28.634"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:28.634" endtime="20220705 14:43:28.719"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:28.719" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220705 14:43:28.719" endtime="20220705 14:43:28.846"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:28.847" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220705 14:43:28.847" endtime="20220705 14:43:29.001"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:29.001" endtime="20220705 14:43:29.045"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:29.045" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220705 14:43:29.045" endtime="20220705 14:43:29.152"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:29.153" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220705 14:43:29.153" endtime="20220705 14:43:29.249"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:29.250" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220705 14:43:29.249" endtime="20220705 14:43:29.354"/>
</kw>
<status status="PASS" starttime="20220705 14:43:28.344" endtime="20220705 14:43:29.354"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 14:43:29.355" endtime="20220705 14:43:29.474"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:29.477" level="INFO">${url} = boards/62c44e07d14e7e5efd941bd4</msg>
<status status="PASS" starttime="20220705 14:43:29.477" endtime="20220705 14:43:29.477"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:43:29.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:29.477" endtime="20220705 14:43:29.886"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:43:29.886" endtime="20220705 14:43:29.886"/>
</return>
<msg timestamp="20220705 14:43:29.886" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:29.476" endtime="20220705 14:43:29.886"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:43:29.886" endtime="20220705 14:43:29.886"/>
</return>
<status status="PASS" starttime="20220705 14:43:29.475" endtime="20220705 14:43:29.887"/>
</kw>
<status status="PASS" starttime="20220705 14:43:29.475" endtime="20220705 14:43:29.887"/>
</kw>
<status status="PASS" starttime="20220705 14:43:29.354" endtime="20220705 14:43:29.887"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:43:19.253" endtime="20220705 14:43:29.887"/>
</test>
<test id="s1-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:43:29.890" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:43:29.890" endtime="20220705 14:43:29.890"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:43:29.891" endtime="20220705 14:43:29.891"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:29.892" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:43:29.891" endtime="20220705 14:43:29.892"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:43:30.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:29.892" endtime="20220705 14:43:30.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:43:30.253" endtime="20220705 14:43:30.253"/>
</return>
<msg timestamp="20220705 14:43:30.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:29.890" endtime="20220705 14:43:30.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:43:30.254" endtime="20220705 14:43:30.254"/>
</return>
<msg timestamp="20220705 14:43:30.254" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:29.889" endtime="20220705 14:43:30.254"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 14:43:30.257" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 14:43:30.256" endtime="20220705 14:43:31.359"/>
</kw>
<status status="PASS" starttime="20220705 14:43:30.256" endtime="20220705 14:43:31.359"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:31.359" endtime="20220705 14:43:31.359"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:31.359" endtime="20220705 14:43:31.359"/>
</branch>
<status status="PASS" starttime="20220705 14:43:30.255" endtime="20220705 14:43:31.359"/>
</if>
<status status="PASS" starttime="20220705 14:43:30.254" endtime="20220705 14:43:31.359"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 14:43:31.360" endtime="20220705 14:43:31.483"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:43:31.512" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:43:31.484" endtime="20220705 14:43:31.512"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:31.512" endtime="20220705 14:43:31.512"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:31.512" endtime="20220705 14:43:31.512"/>
</branch>
<status status="PASS" starttime="20220705 14:43:31.512" endtime="20220705 14:43:31.512"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:31.513" endtime="20220705 14:43:31.553"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:31.554" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 14:43:31.554" endtime="20220705 14:43:31.667"/>
</kw>
<status status="PASS" starttime="20220705 14:43:31.512" endtime="20220705 14:43:31.667"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 14:43:31.667" endtime="20220705 14:43:32.423"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:43:32.439" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:43:32.423" endtime="20220705 14:43:32.439"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:43:32.439" endtime="20220705 14:43:32.497"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:32.497" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 14:43:32.497" endtime="20220705 14:43:33.546"/>
</kw>
<status status="PASS" starttime="20220705 14:43:32.439" endtime="20220705 14:43:33.546"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:43:33.546" endtime="20220705 14:43:33.546"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:33.547" endtime="20220705 14:43:33.547"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:33.546" endtime="20220705 14:43:33.547"/>
</branch>
<status status="PASS" starttime="20220705 14:43:32.439" endtime="20220705 14:43:33.547"/>
</if>
<status status="PASS" starttime="20220705 14:43:32.423" endtime="20220705 14:43:33.547"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 14:43:33.547" endtime="20220705 14:43:33.560"/>
</kw>
<status status="PASS" starttime="20220705 14:43:33.547" endtime="20220705 14:43:33.560"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:33.560" endtime="20220705 14:43:33.612"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:33.612" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 14:43:33.676" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 14:43:33.733" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 14:43:33.612" endtime="20220705 14:43:33.733"/>
</kw>
<status status="PASS" starttime="20220705 14:43:33.560" endtime="20220705 14:43:33.733"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:43:33.744" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c44e...</msg>
<status status="PASS" starttime="20220705 14:43:33.734" endtime="20220705 14:43:33.744"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:43:33.744" endtime="20220705 14:43:33.744"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:33.744" endtime="20220705 14:43:33.744"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:33.744" endtime="20220705 14:43:33.744"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:43:33.745" endtime="20220705 14:43:33.786"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:33.787" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 14:43:33.786" endtime="20220705 14:43:33.882"/>
</kw>
<status status="PASS" starttime="20220705 14:43:33.744" endtime="20220705 14:43:33.882"/>
</branch>
<status status="PASS" starttime="20220705 14:43:33.744" endtime="20220705 14:43:33.882"/>
</if>
<status status="PASS" starttime="20220705 14:43:33.734" endtime="20220705 14:43:33.882"/>
</kw>
<status status="PASS" starttime="20220705 14:43:31.483" endtime="20220705 14:43:33.882"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:33.883" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220705 14:43:33.883" endtime="20220705 14:43:33.883"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:33.883" endtime="20220705 14:43:37.771"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:37.772" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220705 14:43:37.771" endtime="20220705 14:43:38.199"/>
</kw>
<status status="PASS" starttime="20220705 14:43:33.882" endtime="20220705 14:43:38.199"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:38.200" endtime="20220705 14:43:38.762"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 14:43:38.763" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220705 14:43:38.762" endtime="20220705 14:43:38.833"/>
</kw>
<status status="PASS" starttime="20220705 14:43:38.200" endtime="20220705 14:43:38.833"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:38.834" endtime="20220705 14:43:38.886"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:38.934" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220705 14:43:38.886" endtime="20220705 14:43:38.934"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220705 14:43:38.935" level="INFO">Length is 8</msg>
<msg timestamp="20220705 14:43:38.935" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220705 14:43:38.934" endtime="20220705 14:43:38.935"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:38.936" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220705 14:43:38.935" endtime="20220705 14:43:38.995"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:43:38.996" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 14:43:39.327" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 14:43:38.995" endtime="20220705 14:43:39.348"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220705 14:43:39.349" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:43:39.350" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 14:43:39.631" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 14:43:39.349" endtime="20220705 14:43:39.645"/>
</kw>
<msg timestamp="20220705 14:43:39.645" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:43:39.646" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 14:43:39.925" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 14:43:39.645" endtime="20220705 14:43:39.966"/>
</kw>
<msg timestamp="20220705 14:43:39.966" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:43:39.967" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 14:43:40.248" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 14:43:39.967" endtime="20220705 14:43:40.263"/>
</kw>
<msg timestamp="20220705 14:43:40.263" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:43:40.264" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 14:43:40.543" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 14:43:40.263" endtime="20220705 14:43:40.557"/>
</kw>
<msg timestamp="20220705 14:43:40.557" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:43:40.558" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 14:43:40.837" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 14:43:40.557" endtime="20220705 14:43:40.851"/>
</kw>
<msg timestamp="20220705 14:43:40.852" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:43:40.852" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 14:43:41.152" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 14:43:40.852" endtime="20220705 14:43:41.167"/>
</kw>
<msg timestamp="20220705 14:43:41.167" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:43:41.168" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 14:43:41.457" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 14:43:41.168" endtime="20220705 14:43:41.475"/>
</kw>
<msg timestamp="20220705 14:43:41.475" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:43:41.476" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 14:43:41.758" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 14:43:41.476" endtime="20220705 14:43:41.775"/>
</kw>
<status status="PASS" starttime="20220705 14:43:39.349" endtime="20220705 14:43:41.775"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:43:41.775" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 14:43:42.054" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220705 14:43:41.775" endtime="20220705 14:43:42.116"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:43:42.117" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 14:43:42.415" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 14:43:42.116" endtime="20220705 14:43:42.508"/>
</kw>
<status status="PASS" starttime="20220705 14:43:38.834" endtime="20220705 14:43:42.508"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:42.509" endtime="20220705 14:43:42.540"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 14:43:42.541" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220705 14:43:42.540" endtime="20220705 14:43:42.585"/>
</kw>
<status status="PASS" starttime="20220705 14:43:42.508" endtime="20220705 14:43:42.585"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 14:43:42.586" endtime="20220705 14:43:42.676"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:42.680" level="INFO">${url} = boards/62c44e11ef56eb270dabaeae</msg>
<status status="PASS" starttime="20220705 14:43:42.680" endtime="20220705 14:43:42.680"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:43:43.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:42.680" endtime="20220705 14:43:43.109"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:43:43.109" endtime="20220705 14:43:43.109"/>
</return>
<msg timestamp="20220705 14:43:43.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:42.679" endtime="20220705 14:43:43.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:43:43.110" endtime="20220705 14:43:43.110"/>
</return>
<status status="PASS" starttime="20220705 14:43:42.678" endtime="20220705 14:43:43.110"/>
</kw>
<status status="PASS" starttime="20220705 14:43:42.677" endtime="20220705 14:43:43.110"/>
</kw>
<status status="PASS" starttime="20220705 14:43:42.585" endtime="20220705 14:43:43.111"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:43:29.889" endtime="20220705 14:43:43.111"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 14:43:43.113" endtime="20220705 14:43:43.115"/>
</kw>
<status status="PASS" starttime="20220705 14:43:43.113" endtime="20220705 14:43:43.115"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220705 14:42:55.636" endtime="20220705 14:43:43.115"/>
</suite>
<suite id="s1-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:43:43.132" endtime="20220705 14:43:43.133"/>
</kw>
<status status="PASS" starttime="20220705 14:43:43.132" endtime="20220705 14:43:43.133"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:43:43.134" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:43:43.133" endtime="20220705 14:43:43.134"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:43:43.134" endtime="20220705 14:43:43.134"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:43.135" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:43:43.134" endtime="20220705 14:43:43.135"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:43:43.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:43.135" endtime="20220705 14:43:43.516"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:43:43.516" endtime="20220705 14:43:43.516"/>
</return>
<msg timestamp="20220705 14:43:43.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:43.133" endtime="20220705 14:43:43.516"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:43:43.517" endtime="20220705 14:43:43.517"/>
</return>
<msg timestamp="20220705 14:43:43.517" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:43:43.133" endtime="20220705 14:43:43.517"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:43:43.519" level="INFO">${TEST_SUITE_BOARD_ID} = 62c44e1fe31af68677fc1ae0</msg>
<status status="PASS" starttime="20220705 14:43:43.517" endtime="20220705 14:43:43.519"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 14:43:43.521" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 14:43:43.520" endtime="20220705 14:43:44.598"/>
</kw>
<status status="PASS" starttime="20220705 14:43:43.520" endtime="20220705 14:43:44.598"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:44.598" endtime="20220705 14:43:44.598"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:44.598" endtime="20220705 14:43:44.598"/>
</branch>
<status status="PASS" starttime="20220705 14:43:43.520" endtime="20220705 14:43:44.598"/>
</if>
<status status="PASS" starttime="20220705 14:43:43.520" endtime="20220705 14:43:44.598"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 14:43:44.598" endtime="20220705 14:43:44.725"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:43:44.739" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:43:44.726" endtime="20220705 14:43:44.740"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:44.740" endtime="20220705 14:43:44.740"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:44.740" endtime="20220705 14:43:44.740"/>
</branch>
<status status="PASS" starttime="20220705 14:43:44.740" endtime="20220705 14:43:44.740"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:44.741" endtime="20220705 14:43:44.775"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:44.775" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 14:43:44.775" endtime="20220705 14:43:44.880"/>
</kw>
<status status="PASS" starttime="20220705 14:43:44.740" endtime="20220705 14:43:44.880"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 14:43:44.881" endtime="20220705 14:43:45.622"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:43:45.632" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:43:45.623" endtime="20220705 14:43:45.632"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:43:45.632" endtime="20220705 14:43:45.672"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:45.673" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 14:43:45.672" endtime="20220705 14:43:46.748"/>
</kw>
<status status="PASS" starttime="20220705 14:43:45.632" endtime="20220705 14:43:46.749"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:43:46.749" endtime="20220705 14:43:46.749"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:46.749" endtime="20220705 14:43:46.749"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:46.749" endtime="20220705 14:43:46.749"/>
</branch>
<status status="PASS" starttime="20220705 14:43:45.632" endtime="20220705 14:43:46.749"/>
</if>
<status status="PASS" starttime="20220705 14:43:45.623" endtime="20220705 14:43:46.749"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 14:43:46.750" endtime="20220705 14:43:46.767"/>
</kw>
<status status="PASS" starttime="20220705 14:43:46.749" endtime="20220705 14:43:46.767"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:46.768" endtime="20220705 14:43:46.827"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:46.828" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 14:43:46.891" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 14:43:46.966" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 14:43:46.828" endtime="20220705 14:43:46.966"/>
</kw>
<status status="PASS" starttime="20220705 14:43:46.767" endtime="20220705 14:43:46.966"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:43:46.985" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c44e...</msg>
<status status="PASS" starttime="20220705 14:43:46.967" endtime="20220705 14:43:46.985"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:43:46.985" endtime="20220705 14:43:46.985"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:43:46.985" endtime="20220705 14:43:46.985"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:43:46.985" endtime="20220705 14:43:46.986"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:43:46.986" endtime="20220705 14:43:47.042"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:47.042" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 14:43:47.042" endtime="20220705 14:43:47.150"/>
</kw>
<status status="PASS" starttime="20220705 14:43:46.986" endtime="20220705 14:43:47.150"/>
</branch>
<status status="PASS" starttime="20220705 14:43:46.985" endtime="20220705 14:43:47.150"/>
</if>
<status status="PASS" starttime="20220705 14:43:46.966" endtime="20220705 14:43:47.150"/>
</kw>
<status status="PASS" starttime="20220705 14:43:44.725" endtime="20220705 14:43:47.150"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:47.151" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220705 14:43:47.151" endtime="20220705 14:43:47.151"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:47.151" endtime="20220705 14:43:50.925"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:50.926" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220705 14:43:50.926" endtime="20220705 14:43:51.355"/>
</kw>
<status status="PASS" starttime="20220705 14:43:47.150" endtime="20220705 14:43:51.355"/>
</kw>
<status status="PASS" starttime="20220705 14:43:43.131" endtime="20220705 14:43:51.355"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:43:51.357" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 14:43:51.357" endtime="20220705 14:43:51.357"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:43:51.357" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 14:43:51.357" endtime="20220705 14:43:51.358"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:51.359" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 14:43:51.358" endtime="20220705 14:43:51.359"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:51.359" endtime="20220705 14:43:51.999"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:52.000" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 14:43:52.000" endtime="20220705 14:43:52.112"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:52.113" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 14:43:52.112" endtime="20220705 14:43:52.113"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:52.113" endtime="20220705 14:43:52.158"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:52.159" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:43:52.159" endtime="20220705 14:43:52.249"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 14:43:52.249" endtime="20220705 14:43:52.354"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:52.355" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:43:52.354" endtime="20220705 14:43:52.447"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:52.448" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 14:43:52.448" endtime="20220705 14:43:52.448"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:52.449" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 14:43:52.448" endtime="20220705 14:43:52.537"/>
</kw>
<status status="PASS" starttime="20220705 14:43:51.358" endtime="20220705 14:43:52.537"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:52.538" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 14:43:52.538" endtime="20220705 14:43:52.538"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 14:43:52.610" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220705 14:43:52.539" endtime="20220705 14:43:52.610"/>
</kw>
<status status="PASS" starttime="20220705 14:43:52.537" endtime="20220705 14:43:52.610"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:52.612" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 14:43:52.611" endtime="20220705 14:43:52.612"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:52.612" endtime="20220705 14:43:52.645"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:52.645" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 14:43:52.645" endtime="20220705 14:43:52.731"/>
</kw>
<status status="PASS" starttime="20220705 14:43:52.611" endtime="20220705 14:43:52.732"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 14:43:52.770" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 14:43:52.733" endtime="20220705 14:43:52.770"/>
</kw>
<msg timestamp="20220705 14:43:52.770" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 14:43:52.732" endtime="20220705 14:43:52.770"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:52.771" endtime="20220705 14:43:53.300"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:53.301" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 14:43:53.300" endtime="20220705 14:43:53.388"/>
</kw>
<status status="PASS" starttime="20220705 14:43:52.771" endtime="20220705 14:43:53.388"/>
</kw>
<status status="PASS" starttime="20220705 14:43:52.771" endtime="20220705 14:43:53.388"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:53.389" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 14:43:53.389" endtime="20220705 14:43:53.477"/>
</kw>
<status status="PASS" starttime="20220705 14:43:53.388" endtime="20220705 14:43:53.478"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:53.478" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 14:43:53.478" endtime="20220705 14:43:53.689"/>
</kw>
<status status="PASS" starttime="20220705 14:43:52.732" endtime="20220705 14:43:53.689"/>
</kw>
<status status="PASS" starttime="20220705 14:43:52.610" endtime="20220705 14:43:53.689"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:43:51.355" endtime="20220705 14:43:53.689"/>
</test>
<test id="s1-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:43:53.693" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 14:43:53.693" endtime="20220705 14:43:53.693"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:43:53.693" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 14:43:53.693" endtime="20220705 14:43:53.693"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:53.694" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 14:43:53.694" endtime="20220705 14:43:53.694"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:53.695" endtime="20220705 14:43:53.730"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:53.731" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 14:43:53.730" endtime="20220705 14:43:53.797"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:53.798" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 14:43:53.798" endtime="20220705 14:43:53.798"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:53.798" endtime="20220705 14:43:53.839"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:53.840" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:43:53.839" endtime="20220705 14:43:53.913"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 14:43:53.914" endtime="20220705 14:43:53.954"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:53.955" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:43:53.954" endtime="20220705 14:43:54.036"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:54.037" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 14:43:54.037" endtime="20220705 14:43:54.037"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:54.038" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 14:43:54.037" endtime="20220705 14:43:54.105"/>
</kw>
<status status="PASS" starttime="20220705 14:43:53.693" endtime="20220705 14:43:54.105"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:43:54.105" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220705 14:43:54.105" endtime="20220705 14:43:54.105"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:54.107" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 14:43:54.106" endtime="20220705 14:43:54.107"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:54.107" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220705 14:43:54.107" endtime="20220705 14:43:54.107"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:54.107" endtime="20220705 14:43:54.164"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220705 14:43:54.164" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 14:43:54.164" endtime="20220705 14:43:54.455"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 14:43:54.455" endtime="20220705 14:43:54.477"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:54.477" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220705 14:43:54.477" endtime="20220705 14:43:54.567"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:54.567" endtime="20220705 14:43:54.618"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:54.618" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220705 14:43:54.618" endtime="20220705 14:43:54.687"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 14:43:54.687" endtime="20220705 14:43:54.738"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:54.739" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220705 14:43:54.738" endtime="20220705 14:43:54.926"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:54.927" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220705 14:43:54.926" endtime="20220705 14:43:55.013"/>
</kw>
<status status="PASS" starttime="20220705 14:43:54.105" endtime="20220705 14:43:55.013"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:55.015" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220705 14:43:55.014" endtime="20220705 14:43:55.015"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 14:43:55.056" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220705 14:43:55.015" endtime="20220705 14:43:55.056"/>
</kw>
<status status="PASS" starttime="20220705 14:43:55.013" endtime="20220705 14:43:55.056"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:55.061" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220705 14:43:55.060" endtime="20220705 14:43:55.061"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:55.061" endtime="20220705 14:43:55.104"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:55.105" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220705 14:43:55.105" endtime="20220705 14:43:55.191"/>
</kw>
<status status="PASS" starttime="20220705 14:43:55.057" endtime="20220705 14:43:55.191"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 14:43:55.446" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 14:43:55.192" endtime="20220705 14:43:55.446"/>
</kw>
<msg timestamp="20220705 14:43:55.446" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 14:43:55.192" endtime="20220705 14:43:55.447"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:55.448" endtime="20220705 14:43:55.501"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:55.502" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 14:43:55.502" endtime="20220705 14:43:55.597"/>
</kw>
<status status="PASS" starttime="20220705 14:43:55.447" endtime="20220705 14:43:55.597"/>
</kw>
<status status="PASS" starttime="20220705 14:43:55.447" endtime="20220705 14:43:55.598"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:55.598" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 14:43:55.598" endtime="20220705 14:43:55.682"/>
</kw>
<status status="PASS" starttime="20220705 14:43:55.598" endtime="20220705 14:43:55.682"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:55.683" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 14:43:55.682" endtime="20220705 14:43:55.894"/>
</kw>
<status status="PASS" starttime="20220705 14:43:55.192" endtime="20220705 14:43:55.895"/>
</kw>
<status status="PASS" starttime="20220705 14:43:55.057" endtime="20220705 14:43:55.895"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:43:53.691" endtime="20220705 14:43:55.895"/>
</test>
<test id="s1-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:43:55.897" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 14:43:55.897" endtime="20220705 14:43:55.897"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:43:55.897" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 14:43:55.897" endtime="20220705 14:43:55.897"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:55.899" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 14:43:55.898" endtime="20220705 14:43:55.899"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:55.899" endtime="20220705 14:43:55.954"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:55.955" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 14:43:55.954" endtime="20220705 14:43:56.027"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:56.028" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 14:43:56.027" endtime="20220705 14:43:56.028"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:56.028" endtime="20220705 14:43:56.104"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:56.105" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:43:56.105" endtime="20220705 14:43:56.183"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 14:43:56.184" endtime="20220705 14:43:56.226"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:56.227" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:43:56.226" endtime="20220705 14:43:56.328"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:56.329" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 14:43:56.328" endtime="20220705 14:43:56.329"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:56.329" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 14:43:56.329" endtime="20220705 14:43:56.409"/>
</kw>
<status status="PASS" starttime="20220705 14:43:55.897" endtime="20220705 14:43:56.409"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:56.411" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 14:43:56.411" endtime="20220705 14:43:56.411"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:56.411" endtime="20220705 14:43:56.492"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:56.492" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 14:43:56.492" endtime="20220705 14:43:56.562"/>
</kw>
<status status="PASS" starttime="20220705 14:43:56.410" endtime="20220705 14:43:56.562"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 14:43:56.856" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 14:43:56.563" endtime="20220705 14:43:56.856"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 14:43:56.856" endtime="20220705 14:43:56.856"/>
</return>
<msg timestamp="20220705 14:43:56.856" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220705 14:43:56.562" endtime="20220705 14:43:56.856"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:56.857" endtime="20220705 14:43:56.941"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:56.941" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220705 14:43:56.941" endtime="20220705 14:43:57.011"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 14:43:57.012" endtime="20220705 14:43:57.062"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:57.063" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220705 14:43:57.063" endtime="20220705 14:43:57.230"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:57.230" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220705 14:43:57.230" endtime="20220705 14:43:57.391"/>
</kw>
<status status="PASS" starttime="20220705 14:43:56.856" endtime="20220705 14:43:57.392"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 14:43:57.409" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220705 14:43:57.392" endtime="20220705 14:43:57.409"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 14:43:57.409" endtime="20220705 14:43:57.410"/>
</return>
<msg timestamp="20220705 14:43:57.410" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220705 14:43:57.392" endtime="20220705 14:43:57.410"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 14:43:57.410" endtime="20220705 14:43:57.411"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 14:43:57.430" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 14:43:57.412" endtime="20220705 14:43:57.431"/>
</kw>
<msg timestamp="20220705 14:43:57.431" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 14:43:57.412" endtime="20220705 14:43:57.431"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:57.432" endtime="20220705 14:43:57.466"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:57.467" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 14:43:57.466" endtime="20220705 14:43:57.604"/>
</kw>
<status status="PASS" starttime="20220705 14:43:57.431" endtime="20220705 14:43:57.604"/>
</kw>
<status status="PASS" starttime="20220705 14:43:57.431" endtime="20220705 14:43:57.604"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:57.605" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 14:43:57.605" endtime="20220705 14:43:57.720"/>
</kw>
<status status="PASS" starttime="20220705 14:43:57.604" endtime="20220705 14:43:57.720"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:57.720" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 14:43:57.720" endtime="20220705 14:43:57.905"/>
</kw>
<status status="PASS" starttime="20220705 14:43:57.411" endtime="20220705 14:43:57.905"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:43:55.896" endtime="20220705 14:43:57.905"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:43:57.908" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 14:43:57.908" endtime="20220705 14:43:57.908"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:43:57.908" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 14:43:57.908" endtime="20220705 14:43:57.908"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:57.910" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 14:43:57.909" endtime="20220705 14:43:57.910"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 14:43:57.957" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 14:43:57.910" endtime="20220705 14:43:57.957"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 14:43:57.957" endtime="20220705 14:43:57.957"/>
</return>
<msg timestamp="20220705 14:43:57.957" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220705 14:43:57.909" endtime="20220705 14:43:57.957"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:57.958" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 14:43:57.958" endtime="20220705 14:43:57.959"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:57.959" endtime="20220705 14:43:57.998"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:57.998" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 14:43:57.998" endtime="20220705 14:43:58.056"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:58.056" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 14:43:58.056" endtime="20220705 14:43:58.056"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:58.057" endtime="20220705 14:43:58.101"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:58.102" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:43:58.102" endtime="20220705 14:43:58.161"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 14:43:58.161" endtime="20220705 14:43:58.202"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:58.202" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:43:58.202" endtime="20220705 14:43:58.302"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:58.303" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 14:43:58.303" endtime="20220705 14:43:58.303"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:58.303" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 14:43:58.303" endtime="20220705 14:43:58.381"/>
</kw>
<status status="PASS" starttime="20220705 14:43:57.957" endtime="20220705 14:43:58.381"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:58.382" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 14:43:58.382" endtime="20220705 14:43:58.382"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:58.382" endtime="20220705 14:43:58.438"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:58.439" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 14:43:58.439" endtime="20220705 14:43:58.496"/>
</kw>
<status status="PASS" starttime="20220705 14:43:58.381" endtime="20220705 14:43:58.496"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 14:43:58.759" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 14:43:58.497" endtime="20220705 14:43:58.759"/>
</kw>
<msg timestamp="20220705 14:43:58.759" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 14:43:58.497" endtime="20220705 14:43:58.759"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:58.760" endtime="20220705 14:43:58.806"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:58.806" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 14:43:58.806" endtime="20220705 14:43:58.876"/>
</kw>
<status status="PASS" starttime="20220705 14:43:58.760" endtime="20220705 14:43:58.876"/>
</kw>
<status status="PASS" starttime="20220705 14:43:58.759" endtime="20220705 14:43:58.876"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:58.877" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 14:43:58.877" endtime="20220705 14:43:58.981"/>
</kw>
<status status="PASS" starttime="20220705 14:43:58.876" endtime="20220705 14:43:58.981"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:58.982" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 14:43:58.981" endtime="20220705 14:43:59.159"/>
</kw>
<status status="PASS" starttime="20220705 14:43:58.497" endtime="20220705 14:43:59.159"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:59.160" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 14:43:59.160" endtime="20220705 14:43:59.160"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 14:43:59.192" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 14:43:59.160" endtime="20220705 14:43:59.192"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 14:43:59.193" endtime="20220705 14:43:59.193"/>
</return>
<msg timestamp="20220705 14:43:59.193" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220705 14:43:59.159" endtime="20220705 14:43:59.193"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 14:43:59.193" endtime="20220705 14:43:59.194"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:43:57.907" endtime="20220705 14:43:59.194"/>
</test>
<test id="s1-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:43:59.197" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 14:43:59.196" endtime="20220705 14:43:59.197"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:43:59.197" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 14:43:59.197" endtime="20220705 14:43:59.197"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:59.198" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 14:43:59.198" endtime="20220705 14:43:59.198"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:59.198" endtime="20220705 14:43:59.237"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:59.238" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 14:43:59.238" endtime="20220705 14:43:59.314"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:59.315" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 14:43:59.315" endtime="20220705 14:43:59.315"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:59.315" endtime="20220705 14:43:59.344"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:59.345" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:43:59.344" endtime="20220705 14:43:59.407"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 14:43:59.407" endtime="20220705 14:43:59.438"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:59.438" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:43:59.438" endtime="20220705 14:43:59.537"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:59.538" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 14:43:59.537" endtime="20220705 14:43:59.538"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:43:59.538" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 14:43:59.538" endtime="20220705 14:43:59.643"/>
</kw>
<status status="PASS" starttime="20220705 14:43:59.197" endtime="20220705 14:43:59.643"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:43:59.644" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220705 14:43:59.644" endtime="20220705 14:43:59.644"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:59.646" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 14:43:59.645" endtime="20220705 14:43:59.646"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:43:59.646" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 14:43:59.646" endtime="20220705 14:43:59.646"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:43:59.646" endtime="20220705 14:43:59.765"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220705 14:43:59.766" endtime="20220705 14:44:00.369"/>
</kw>
<status status="PASS" starttime="20220705 14:43:59.644" endtime="20220705 14:44:00.369"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:00.370" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 14:44:00.370" endtime="20220705 14:44:00.370"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 14:44:00.430" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220705 14:44:00.370" endtime="20220705 14:44:00.430"/>
</kw>
<status status="PASS" starttime="20220705 14:44:00.369" endtime="20220705 14:44:00.430"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:00.432" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 14:44:00.431" endtime="20220705 14:44:00.432"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:00.432" endtime="20220705 14:44:00.461"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:00.462" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 14:44:00.461" endtime="20220705 14:44:00.515"/>
</kw>
<status status="PASS" starttime="20220705 14:44:00.431" endtime="20220705 14:44:00.515"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 14:44:00.747" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 14:44:00.517" endtime="20220705 14:44:00.747"/>
</kw>
<msg timestamp="20220705 14:44:00.747" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 14:44:00.516" endtime="20220705 14:44:00.747"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:00.748" endtime="20220705 14:44:00.840"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:00.843" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 14:44:00.841" endtime="20220705 14:44:00.948"/>
</kw>
<status status="PASS" starttime="20220705 14:44:00.748" endtime="20220705 14:44:00.948"/>
</kw>
<status status="PASS" starttime="20220705 14:44:00.748" endtime="20220705 14:44:00.948"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:00.949" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 14:44:00.949" endtime="20220705 14:44:01.039"/>
</kw>
<status status="PASS" starttime="20220705 14:44:00.948" endtime="20220705 14:44:01.039"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:01.040" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 14:44:01.039" endtime="20220705 14:44:01.259"/>
</kw>
<status status="PASS" starttime="20220705 14:44:00.516" endtime="20220705 14:44:01.259"/>
</kw>
<status status="PASS" starttime="20220705 14:44:00.430" endtime="20220705 14:44:01.260"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:43:59.195" endtime="20220705 14:44:01.260"/>
</test>
<test id="s1-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:44:01.263" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:44:01.263" endtime="20220705 14:44:01.263"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:44:01.264" endtime="20220705 14:44:01.264"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:01.265" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:44:01.264" endtime="20220705 14:44:01.265"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:44:01.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:01.266" endtime="20220705 14:44:01.532"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:01.532" endtime="20220705 14:44:01.532"/>
</return>
<msg timestamp="20220705 14:44:01.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:01.262" endtime="20220705 14:44:01.533"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:01.533" endtime="20220705 14:44:01.533"/>
</return>
<msg timestamp="20220705 14:44:01.533" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:01.262" endtime="20220705 14:44:01.533"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:01.533" endtime="20220705 14:44:01.599"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:01.600" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220705 14:44:01.599" endtime="20220705 14:44:01.755"/>
</kw>
<status status="PASS" starttime="20220705 14:44:01.533" endtime="20220705 14:44:01.756"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:01.757" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220705 14:44:01.756" endtime="20220705 14:44:01.757"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:01.757" endtime="20220705 14:44:02.043"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:02.044" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220705 14:44:02.043" endtime="20220705 14:44:02.279"/>
</kw>
<status status="PASS" starttime="20220705 14:44:01.756" endtime="20220705 14:44:02.279"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:44:02.280" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 14:44:02.279" endtime="20220705 14:44:02.280"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 14:44:02.280" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220705 14:44:02.280" endtime="20220705 14:44:02.280"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:02.281" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 14:44:02.281" endtime="20220705 14:44:02.281"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:02.282" endtime="20220705 14:44:02.979"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:02.979" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 14:44:02.979" endtime="20220705 14:44:03.103"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:03.103" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 14:44:03.103" endtime="20220705 14:44:03.104"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:03.104" endtime="20220705 14:44:03.155"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:03.156" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:44:03.155" endtime="20220705 14:44:03.246"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 14:44:03.247" endtime="20220705 14:44:03.304"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:03.304" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:44:03.304" endtime="20220705 14:44:03.451"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:03.452" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 14:44:03.451" endtime="20220705 14:44:03.452"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:03.452" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 14:44:03.452" endtime="20220705 14:44:03.630"/>
</kw>
<status status="PASS" starttime="20220705 14:44:02.280" endtime="20220705 14:44:03.630"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:03.632" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220705 14:44:03.631" endtime="20220705 14:44:03.632"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:03.632" endtime="20220705 14:44:03.715"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:03.716" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220705 14:44:03.716" endtime="20220705 14:44:03.783"/>
</kw>
<status status="PASS" starttime="20220705 14:44:03.631" endtime="20220705 14:44:03.783"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:03.784" endtime="20220705 14:44:04.264"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:04.264" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220705 14:44:04.264" endtime="20220705 14:44:04.393"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220705 14:44:04.394" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220705 14:44:04.394" endtime="20220705 14:44:04.690"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:04.690" endtime="20220705 14:44:04.969"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:04.970" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220705 14:44:04.969" endtime="20220705 14:44:05.197"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 14:44:05.198" endtime="20220705 14:44:05.221"/>
</kw>
<status status="PASS" starttime="20220705 14:44:03.783" endtime="20220705 14:44:05.221"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:05.222" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 14:44:05.222" endtime="20220705 14:44:05.222"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 14:44:05.235" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 14:44:05.222" endtime="20220705 14:44:05.235"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 14:44:05.235" endtime="20220705 14:44:05.235"/>
</return>
<msg timestamp="20220705 14:44:05.235" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220705 14:44:05.221" endtime="20220705 14:44:05.235"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220705 14:44:05.235" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220705 14:44:05.235" endtime="20220705 14:44:05.235"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:44:05.236" endtime="20220705 14:44:05.236"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 14:44:05.236" endtime="20220705 14:44:05.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:05.380" level="INFO">${url} = boards/62c44e3111c9c46e7af004cf</msg>
<status status="PASS" starttime="20220705 14:44:05.380" endtime="20220705 14:44:05.381"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:44:05.488" level="INFO">${response} = None</msg>
<msg timestamp="20220705 14:44:05.488" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220705 14:44:05.381" endtime="20220705 14:44:05.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:05.488" endtime="20220705 14:44:05.488"/>
</return>
<msg timestamp="20220705 14:44:05.489" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220705 14:44:05.379" endtime="20220705 14:44:05.489"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:05.489" endtime="20220705 14:44:05.489"/>
</return>
<status status="FAIL" starttime="20220705 14:44:05.377" endtime="20220705 14:44:05.489"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:08.495" level="INFO">${url} = boards/62c44e3111c9c46e7af004cf</msg>
<status status="PASS" starttime="20220705 14:44:08.494" endtime="20220705 14:44:08.495"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:44:08.996" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:08.495" endtime="20220705 14:44:08.996"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:08.996" endtime="20220705 14:44:08.996"/>
</return>
<msg timestamp="20220705 14:44:08.997" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:08.493" endtime="20220705 14:44:08.997"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:08.997" endtime="20220705 14:44:08.997"/>
</return>
<status status="PASS" starttime="20220705 14:44:08.490" endtime="20220705 14:44:08.997"/>
</kw>
<status status="PASS" starttime="20220705 14:44:05.376" endtime="20220705 14:44:08.997"/>
</kw>
<status status="PASS" starttime="20220705 14:44:05.236" endtime="20220705 14:44:08.998"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:44:01.261" endtime="20220705 14:44:08.998"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:09.003" level="INFO">${url} = boards/62c44e1fe31af68677fc1ae0</msg>
<status status="PASS" starttime="20220705 14:44:09.002" endtime="20220705 14:44:09.003"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:44:09.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:09.003" endtime="20220705 14:44:09.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:09.457" endtime="20220705 14:44:09.457"/>
</return>
<msg timestamp="20220705 14:44:09.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:09.002" endtime="20220705 14:44:09.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:09.458" endtime="20220705 14:44:09.458"/>
</return>
<status status="PASS" starttime="20220705 14:44:09.001" endtime="20220705 14:44:09.458"/>
</kw>
<status status="PASS" starttime="20220705 14:44:09.000" endtime="20220705 14:44:09.458"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 14:44:09.458" endtime="20220705 14:44:09.459"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220705 14:44:09.460" endtime="20220705 14:44:09.460"/>
</kw>
<status status="PASS" starttime="20220705 14:44:08.999" endtime="20220705 14:44:09.460"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220705 14:43:43.117" endtime="20220705 14:44:09.460"/>
</suite>
<suite id="s1-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:44:09.480" endtime="20220705 14:44:09.480"/>
</kw>
<status status="PASS" starttime="20220705 14:44:09.480" endtime="20220705 14:44:09.481"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:44:09.482" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:44:09.482" endtime="20220705 14:44:09.482"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:44:09.483" endtime="20220705 14:44:09.483"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:09.485" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:44:09.483" endtime="20220705 14:44:09.485"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:44:09.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:09.485" endtime="20220705 14:44:09.791"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:09.791" endtime="20220705 14:44:09.792"/>
</return>
<msg timestamp="20220705 14:44:09.792" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:09.481" endtime="20220705 14:44:09.792"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:09.792" endtime="20220705 14:44:09.792"/>
</return>
<msg timestamp="20220705 14:44:09.792" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:09.481" endtime="20220705 14:44:09.792"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:44:09.794" level="INFO">${TEST_SUITE_BOARD_ID} = 62c44e394625ae4b16edcc71</msg>
<status status="PASS" starttime="20220705 14:44:09.792" endtime="20220705 14:44:09.794"/>
</kw>
<status status="PASS" starttime="20220705 14:44:09.481" endtime="20220705 14:44:09.794"/>
</kw>
<status status="PASS" starttime="20220705 14:44:09.479" endtime="20220705 14:44:09.794"/>
</kw>
<test id="s1-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 14:44:09.796" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 14:44:09.796" endtime="20220705 14:44:10.889"/>
</kw>
<status status="PASS" starttime="20220705 14:44:09.796" endtime="20220705 14:44:10.889"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:10.889" endtime="20220705 14:44:10.889"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:10.889" endtime="20220705 14:44:10.889"/>
</branch>
<status status="PASS" starttime="20220705 14:44:09.795" endtime="20220705 14:44:10.889"/>
</if>
<status status="PASS" starttime="20220705 14:44:09.795" endtime="20220705 14:44:10.889"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 14:44:10.889" endtime="20220705 14:44:11.008"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:44:11.023" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:44:11.009" endtime="20220705 14:44:11.023"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:11.023" endtime="20220705 14:44:11.023"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:11.023" endtime="20220705 14:44:11.023"/>
</branch>
<status status="PASS" starttime="20220705 14:44:11.023" endtime="20220705 14:44:11.024"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:11.024" endtime="20220705 14:44:11.069"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:11.070" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 14:44:11.069" endtime="20220705 14:44:11.193"/>
</kw>
<status status="PASS" starttime="20220705 14:44:11.024" endtime="20220705 14:44:11.193"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 14:44:11.193" endtime="20220705 14:44:11.933"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:44:11.940" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:44:11.934" endtime="20220705 14:44:11.940"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:11.941" endtime="20220705 14:44:12.006"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:12.006" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 14:44:12.006" endtime="20220705 14:44:13.143"/>
</kw>
<status status="PASS" starttime="20220705 14:44:11.941" endtime="20220705 14:44:13.143"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:44:13.144" endtime="20220705 14:44:13.144"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:13.144" endtime="20220705 14:44:13.144"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:13.143" endtime="20220705 14:44:13.144"/>
</branch>
<status status="PASS" starttime="20220705 14:44:11.940" endtime="20220705 14:44:13.144"/>
</if>
<status status="PASS" starttime="20220705 14:44:11.933" endtime="20220705 14:44:13.144"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 14:44:13.145" endtime="20220705 14:44:13.157"/>
</kw>
<status status="PASS" starttime="20220705 14:44:13.145" endtime="20220705 14:44:13.157"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:13.158" endtime="20220705 14:44:13.226"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:13.227" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 14:44:13.291" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 14:44:13.360" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 14:44:13.227" endtime="20220705 14:44:13.360"/>
</kw>
<status status="PASS" starttime="20220705 14:44:13.158" endtime="20220705 14:44:13.360"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:44:13.374" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c44e...</msg>
<status status="PASS" starttime="20220705 14:44:13.360" endtime="20220705 14:44:13.374"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:44:13.375" endtime="20220705 14:44:13.375"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:13.375" endtime="20220705 14:44:13.375"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:13.375" endtime="20220705 14:44:13.375"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:13.375" endtime="20220705 14:44:13.453"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:13.453" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 14:44:13.453" endtime="20220705 14:44:13.569"/>
</kw>
<status status="PASS" starttime="20220705 14:44:13.375" endtime="20220705 14:44:13.569"/>
</branch>
<status status="PASS" starttime="20220705 14:44:13.374" endtime="20220705 14:44:13.569"/>
</if>
<status status="PASS" starttime="20220705 14:44:13.360" endtime="20220705 14:44:13.569"/>
</kw>
<status status="PASS" starttime="20220705 14:44:11.008" endtime="20220705 14:44:13.569"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:13.570" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 14:44:13.570" endtime="20220705 14:44:13.570"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:13.571" endtime="20220705 14:44:17.614"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:17.615" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 14:44:17.614" endtime="20220705 14:44:18.064"/>
</kw>
<status status="PASS" starttime="20220705 14:44:13.570" endtime="20220705 14:44:18.064"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:18.065" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 14:44:18.065" endtime="20220705 14:44:18.065"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:18.066" endtime="20220705 14:44:18.699"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:18.700" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 14:44:18.699" endtime="20220705 14:44:18.779"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:18.780" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 14:44:18.779" endtime="20220705 14:44:18.780"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:18.780" endtime="20220705 14:44:18.858"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:18.859" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:44:18.858" endtime="20220705 14:44:18.931"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 14:44:18.931" endtime="20220705 14:44:18.964"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:18.964" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:44:18.964" endtime="20220705 14:44:19.081"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:19.082" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 14:44:19.082" endtime="20220705 14:44:19.082"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:19.083" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 14:44:19.082" endtime="20220705 14:44:19.205"/>
</kw>
<status status="PASS" starttime="20220705 14:44:18.064" endtime="20220705 14:44:19.205"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:19.206" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 14:44:19.206" endtime="20220705 14:44:19.206"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:19.207" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220705 14:44:19.206" endtime="20220705 14:44:19.207"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:19.207" endtime="20220705 14:44:19.294"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220705 14:44:24.295" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220705 14:44:19.294" endtime="20220705 14:44:24.295"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220705 14:44:24.295" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220705 14:44:24.295" endtime="20220705 14:44:24.590"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220705 14:44:29.591" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220705 14:44:24.591" endtime="20220705 14:44:29.591"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 14:44:29.592" endtime="20220705 14:44:29.610"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:29.610" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220705 14:44:29.610" endtime="20220705 14:44:29.699"/>
</kw>
<status status="PASS" starttime="20220705 14:44:19.205" endtime="20220705 14:44:29.699"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:29.699" endtime="20220705 14:44:29.773"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:29.773" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220705 14:44:29.773" endtime="20220705 14:44:29.860"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:29.860" endtime="20220705 14:44:29.924"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:29.925" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220705 14:44:29.925" endtime="20220705 14:44:29.994"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:29.995" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220705 14:44:29.995" endtime="20220705 14:44:30.096"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:30.096" endtime="20220705 14:44:30.142"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:44:30.142" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220705 14:44:30.425" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 14:44:30.425" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 14:44:30.142" endtime="20220705 14:44:30.480"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:44:30.481" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220705 14:44:30.481" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220705 14:44:30.481" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220705 14:44:30.480" endtime="20220705 14:44:30.510"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:44:30.511" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220705 14:44:30.511" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220705 14:44:30.511" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220705 14:44:30.510" endtime="20220705 14:44:30.532"/>
</kw>
<status status="PASS" starttime="20220705 14:44:29.699" endtime="20220705 14:44:30.532"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:30.533" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 14:44:30.533" endtime="20220705 14:44:30.533"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:30.533" endtime="20220705 14:44:30.566"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:30.566" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 14:44:30.566" endtime="20220705 14:44:30.637"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:30.638" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 14:44:30.638" endtime="20220705 14:44:30.638"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:30.638" endtime="20220705 14:44:30.697"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:30.697" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:44:30.697" endtime="20220705 14:44:30.755"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 14:44:30.756" endtime="20220705 14:44:30.805"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:30.805" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:44:30.805" endtime="20220705 14:44:30.891"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:30.892" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 14:44:30.891" endtime="20220705 14:44:30.892"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:30.892" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 14:44:30.892" endtime="20220705 14:44:30.963"/>
</kw>
<status status="PASS" starttime="20220705 14:44:30.532" endtime="20220705 14:44:30.964"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:30.965" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 14:44:30.964" endtime="20220705 14:44:30.965"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:30.965" endtime="20220705 14:44:31.023"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:31.024" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 14:44:31.023" endtime="20220705 14:44:31.093"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:31.093" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 14:44:31.093" endtime="20220705 14:44:31.093"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:31.094" endtime="20220705 14:44:31.135"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:31.135" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:44:31.135" endtime="20220705 14:44:31.193"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 14:44:31.193" endtime="20220705 14:44:31.273"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:31.274" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 14:44:31.273" endtime="20220705 14:44:31.343"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:31.344" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 14:44:31.343" endtime="20220705 14:44:31.344"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:31.344" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 14:44:31.344" endtime="20220705 14:44:31.429"/>
</kw>
<status status="PASS" starttime="20220705 14:44:30.964" endtime="20220705 14:44:31.430"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:31.430" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220705 14:44:31.430" endtime="20220705 14:44:31.554"/>
</kw>
<status status="PASS" starttime="20220705 14:44:31.430" endtime="20220705 14:44:31.554"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:31.554" endtime="20220705 14:44:31.710"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:31.711" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220705 14:44:31.710" endtime="20220705 14:44:31.875"/>
</kw>
<status status="PASS" starttime="20220705 14:44:31.554" endtime="20220705 14:44:31.875"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:31.877" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 14:44:31.876" endtime="20220705 14:44:31.877"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 14:44:31.964" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220705 14:44:31.877" endtime="20220705 14:44:31.964"/>
</kw>
<status status="PASS" starttime="20220705 14:44:31.875" endtime="20220705 14:44:31.964"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:31.965" endtime="20220705 14:44:32.003"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:32.004" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220705 14:44:32.004" endtime="20220705 14:44:32.136"/>
</kw>
<status status="PASS" starttime="20220705 14:44:31.964" endtime="20220705 14:44:32.136"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:32.137" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 14:44:32.137" endtime="20220705 14:44:32.137"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 14:44:32.177" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220705 14:44:32.138" endtime="20220705 14:44:32.177"/>
</kw>
<status status="PASS" starttime="20220705 14:44:32.136" endtime="20220705 14:44:32.178"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 14:44:32.178" endtime="20220705 14:44:32.275"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:44:09.794" endtime="20220705 14:44:32.275"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:32.279" level="INFO">${url} = boards/62c44e394625ae4b16edcc71</msg>
<status status="PASS" starttime="20220705 14:44:32.279" endtime="20220705 14:44:32.279"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:44:32.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:32.279" endtime="20220705 14:44:32.767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:32.767" endtime="20220705 14:44:32.767"/>
</return>
<msg timestamp="20220705 14:44:32.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:32.278" endtime="20220705 14:44:32.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:32.768" endtime="20220705 14:44:32.768"/>
</return>
<status status="PASS" starttime="20220705 14:44:32.278" endtime="20220705 14:44:32.768"/>
</kw>
<status status="PASS" starttime="20220705 14:44:32.278" endtime="20220705 14:44:32.768"/>
</kw>
<status status="PASS" starttime="20220705 14:44:32.278" endtime="20220705 14:44:32.768"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 14:44:32.769" endtime="20220705 14:44:32.770"/>
</kw>
<status status="PASS" starttime="20220705 14:44:32.277" endtime="20220705 14:44:32.770"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220705 14:44:09.462" endtime="20220705 14:44:32.771"/>
</suite>
<suite id="s1-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:44:32.787" endtime="20220705 14:44:32.787"/>
</kw>
<status status="PASS" starttime="20220705 14:44:32.786" endtime="20220705 14:44:32.787"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:44:32.788" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:44:32.788" endtime="20220705 14:44:32.788"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:44:32.789" endtime="20220705 14:44:32.789"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:32.790" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:44:32.789" endtime="20220705 14:44:32.790"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:44:33.088" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:32.790" endtime="20220705 14:44:33.088"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:33.088" endtime="20220705 14:44:33.089"/>
</return>
<msg timestamp="20220705 14:44:33.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:32.788" endtime="20220705 14:44:33.089"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:44:33.089" endtime="20220705 14:44:33.089"/>
</return>
<msg timestamp="20220705 14:44:33.089" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:44:32.787" endtime="20220705 14:44:33.089"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:44:33.091" level="INFO">${TEST_SUITE_BOARD_ID} = 62c44e50ad2b6b1c3e9a64bc</msg>
<status status="PASS" starttime="20220705 14:44:33.090" endtime="20220705 14:44:33.091"/>
</kw>
<status status="PASS" starttime="20220705 14:44:32.787" endtime="20220705 14:44:33.091"/>
</kw>
<status status="PASS" starttime="20220705 14:44:32.786" endtime="20220705 14:44:33.091"/>
</kw>
<test id="s1-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 14:44:33.093" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 14:44:33.093" endtime="20220705 14:44:34.160"/>
</kw>
<status status="PASS" starttime="20220705 14:44:33.093" endtime="20220705 14:44:34.160"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:34.161" endtime="20220705 14:44:34.161"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:34.160" endtime="20220705 14:44:34.161"/>
</branch>
<status status="PASS" starttime="20220705 14:44:33.092" endtime="20220705 14:44:34.161"/>
</if>
<status status="PASS" starttime="20220705 14:44:33.092" endtime="20220705 14:44:34.161"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 14:44:34.161" endtime="20220705 14:44:34.277"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:44:34.285" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:44:34.278" endtime="20220705 14:44:34.285"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:34.286" endtime="20220705 14:44:34.286"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:34.286" endtime="20220705 14:44:34.286"/>
</branch>
<status status="PASS" starttime="20220705 14:44:34.285" endtime="20220705 14:44:34.286"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:34.286" endtime="20220705 14:44:34.320"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:34.321" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 14:44:34.320" endtime="20220705 14:44:34.442"/>
</kw>
<status status="PASS" starttime="20220705 14:44:34.286" endtime="20220705 14:44:34.443"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 14:44:34.443" endtime="20220705 14:44:35.168"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:44:35.178" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:44:35.168" endtime="20220705 14:44:35.178"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:35.179" endtime="20220705 14:44:35.236"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:35.236" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 14:44:35.236" endtime="20220705 14:44:36.294"/>
</kw>
<status status="PASS" starttime="20220705 14:44:35.178" endtime="20220705 14:44:36.294"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:44:36.294" endtime="20220705 14:44:36.294"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:36.294" endtime="20220705 14:44:36.294"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:36.294" endtime="20220705 14:44:36.294"/>
</branch>
<status status="PASS" starttime="20220705 14:44:35.178" endtime="20220705 14:44:36.294"/>
</if>
<status status="PASS" starttime="20220705 14:44:35.168" endtime="20220705 14:44:36.295"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 14:44:36.295" endtime="20220705 14:44:36.307"/>
</kw>
<status status="PASS" starttime="20220705 14:44:36.295" endtime="20220705 14:44:36.307"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:36.308" endtime="20220705 14:44:36.348"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:36.349" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 14:44:36.406" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 14:44:36.469" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 14:44:36.348" endtime="20220705 14:44:36.469"/>
</kw>
<status status="PASS" starttime="20220705 14:44:36.308" endtime="20220705 14:44:36.470"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:44:36.477" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c44e...</msg>
<status status="PASS" starttime="20220705 14:44:36.470" endtime="20220705 14:44:36.477"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:44:36.478" endtime="20220705 14:44:36.478"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:36.478" endtime="20220705 14:44:36.478"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:36.478" endtime="20220705 14:44:36.478"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:36.478" endtime="20220705 14:44:36.534"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:36.534" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 14:44:36.534" endtime="20220705 14:44:36.630"/>
</kw>
<status status="PASS" starttime="20220705 14:44:36.478" endtime="20220705 14:44:36.631"/>
</branch>
<status status="PASS" starttime="20220705 14:44:36.477" endtime="20220705 14:44:36.631"/>
</if>
<status status="PASS" starttime="20220705 14:44:36.470" endtime="20220705 14:44:36.631"/>
</kw>
<status status="PASS" starttime="20220705 14:44:34.277" endtime="20220705 14:44:36.631"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:36.632" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 14:44:36.632" endtime="20220705 14:44:36.632"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:36.632" endtime="20220705 14:44:43.823"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:43.824" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 14:44:43.824" endtime="20220705 14:44:44.261"/>
</kw>
<status status="PASS" starttime="20220705 14:44:36.631" endtime="20220705 14:44:44.261"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 14:44:44.262" endtime="20220705 14:44:44.770"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:44.771" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 14:44:44.770" endtime="20220705 14:44:44.939"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:44.939" endtime="20220705 14:44:44.996"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:44.997" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 14:44:44.996" endtime="20220705 14:44:45.157"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:44:45.157" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 14:44:45.487" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 14:44:45.487" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 14:44:45.157" endtime="20220705 14:44:45.515"/>
</kw>
<status status="PASS" starttime="20220705 14:44:44.261" endtime="20220705 14:44:45.516"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:45.517" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 14:44:45.516" endtime="20220705 14:44:45.517"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:45.517" endtime="20220705 14:44:45.564"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 14:44:45.575" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220705 14:44:45.564" endtime="20220705 14:44:45.575"/>
</kw>
<status status="PASS" starttime="20220705 14:44:45.516" endtime="20220705 14:44:45.575"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:45.577" endtime="20220705 14:44:45.621"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:45.622" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 14:44:45.622" endtime="20220705 14:44:45.718"/>
</kw>
<status status="PASS" starttime="20220705 14:44:45.622" endtime="20220705 14:44:45.718"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:45.718" endtime="20220705 14:44:45.784"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:45.785" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 14:44:45.785" endtime="20220705 14:44:45.872"/>
</kw>
<status status="PASS" starttime="20220705 14:44:45.785" endtime="20220705 14:44:45.872"/>
</kw>
<status status="PASS" starttime="20220705 14:44:45.577" endtime="20220705 14:44:45.872"/>
</kw>
<status status="PASS" starttime="20220705 14:44:45.576" endtime="20220705 14:44:45.872"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 14:44:45.873" endtime="20220705 14:44:45.969"/>
</kw>
<status status="PASS" starttime="20220705 14:44:45.576" endtime="20220705 14:44:45.969"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:44:33.092" endtime="20220705 14:44:45.969"/>
</test>
<test id="s1-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 14:44:45.973" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 14:44:45.973" endtime="20220705 14:44:47.060"/>
</kw>
<status status="PASS" starttime="20220705 14:44:45.973" endtime="20220705 14:44:47.060"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:47.061" endtime="20220705 14:44:47.061"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:47.060" endtime="20220705 14:44:47.061"/>
</branch>
<status status="PASS" starttime="20220705 14:44:45.972" endtime="20220705 14:44:47.061"/>
</if>
<status status="PASS" starttime="20220705 14:44:45.972" endtime="20220705 14:44:47.061"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 14:44:47.061" endtime="20220705 14:44:47.172"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:44:47.183" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:44:47.173" endtime="20220705 14:44:47.183"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:47.184" endtime="20220705 14:44:47.184"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:47.184" endtime="20220705 14:44:47.184"/>
</branch>
<status status="PASS" starttime="20220705 14:44:47.183" endtime="20220705 14:44:47.184"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:47.185" endtime="20220705 14:44:47.224"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:47.225" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 14:44:47.224" endtime="20220705 14:44:47.342"/>
</kw>
<status status="PASS" starttime="20220705 14:44:47.184" endtime="20220705 14:44:47.343"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 14:44:47.343" endtime="20220705 14:44:48.090"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:44:48.100" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:44:48.090" endtime="20220705 14:44:48.100"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:48.100" endtime="20220705 14:44:48.146"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:48.147" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 14:44:48.147" endtime="20220705 14:44:49.100"/>
</kw>
<status status="PASS" starttime="20220705 14:44:48.100" endtime="20220705 14:44:49.100"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:44:49.101" endtime="20220705 14:44:49.101"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:49.101" endtime="20220705 14:44:49.101"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:49.100" endtime="20220705 14:44:49.101"/>
</branch>
<status status="PASS" starttime="20220705 14:44:48.100" endtime="20220705 14:44:49.101"/>
</if>
<status status="PASS" starttime="20220705 14:44:48.090" endtime="20220705 14:44:49.101"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 14:44:49.102" endtime="20220705 14:44:49.112"/>
</kw>
<status status="PASS" starttime="20220705 14:44:49.101" endtime="20220705 14:44:49.112"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:49.113" endtime="20220705 14:44:49.161"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:49.162" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 14:44:49.215" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 14:44:49.285" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 14:44:49.161" endtime="20220705 14:44:49.285"/>
</kw>
<status status="PASS" starttime="20220705 14:44:49.112" endtime="20220705 14:44:49.285"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:44:49.297" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c44e...</msg>
<status status="PASS" starttime="20220705 14:44:49.286" endtime="20220705 14:44:49.297"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:44:49.298" endtime="20220705 14:44:49.298"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:49.298" endtime="20220705 14:44:49.298"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:49.297" endtime="20220705 14:44:49.298"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:49.298" endtime="20220705 14:44:49.353"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:49.354" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 14:44:49.353" endtime="20220705 14:44:49.460"/>
</kw>
<status status="PASS" starttime="20220705 14:44:49.298" endtime="20220705 14:44:49.460"/>
</branch>
<status status="PASS" starttime="20220705 14:44:49.297" endtime="20220705 14:44:49.460"/>
</if>
<status status="PASS" starttime="20220705 14:44:49.285" endtime="20220705 14:44:49.460"/>
</kw>
<status status="PASS" starttime="20220705 14:44:47.172" endtime="20220705 14:44:49.460"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:49.461" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 14:44:49.461" endtime="20220705 14:44:49.462"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:49.462" endtime="20220705 14:44:53.416"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:53.416" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 14:44:53.416" endtime="20220705 14:44:53.859"/>
</kw>
<status status="PASS" starttime="20220705 14:44:49.461" endtime="20220705 14:44:53.859"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 14:44:53.860" endtime="20220705 14:44:54.358"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:54.359" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 14:44:54.358" endtime="20220705 14:44:54.549"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:54.549" endtime="20220705 14:44:54.621"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:54.622" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 14:44:54.622" endtime="20220705 14:44:54.729"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:44:54.730" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 14:44:55.028" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 14:44:55.028" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 14:44:54.729" endtime="20220705 14:44:55.098"/>
</kw>
<status status="PASS" starttime="20220705 14:44:53.859" endtime="20220705 14:44:55.098"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:55.099" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220705 14:44:55.099" endtime="20220705 14:44:55.099"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:55.099" endtime="20220705 14:44:55.172"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:55.172" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220705 14:44:55.172" endtime="20220705 14:44:55.222"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:55.223" endtime="20220705 14:44:55.292"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:44:55.293" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 14:44:55.590" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220705 14:44:55.590" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220705 14:44:55.292" endtime="20220705 14:44:55.600"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:55.601" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220705 14:44:55.600" endtime="20220705 14:44:55.721"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:44:55.722" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220705 14:44:55.722" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220705 14:44:55.722" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 14:44:55.721" endtime="20220705 14:44:55.741"/>
</kw>
<status status="PASS" starttime="20220705 14:44:55.098" endtime="20220705 14:44:55.741"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:55.742" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 14:44:55.742" endtime="20220705 14:44:55.742"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:55.742" endtime="20220705 14:44:55.791"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 14:44:55.806" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220705 14:44:55.791" endtime="20220705 14:44:55.806"/>
</kw>
<status status="PASS" starttime="20220705 14:44:55.741" endtime="20220705 14:44:55.806"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:55.807" endtime="20220705 14:44:55.896"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:55.897" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 14:44:55.897" endtime="20220705 14:44:55.971"/>
</kw>
<status status="PASS" starttime="20220705 14:44:55.896" endtime="20220705 14:44:55.971"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:55.971" endtime="20220705 14:44:56.049"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:56.050" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 14:44:56.050" endtime="20220705 14:44:56.133"/>
</kw>
<status status="PASS" starttime="20220705 14:44:56.049" endtime="20220705 14:44:56.133"/>
</kw>
<status status="PASS" starttime="20220705 14:44:55.807" endtime="20220705 14:44:56.133"/>
</kw>
<status status="PASS" starttime="20220705 14:44:55.807" endtime="20220705 14:44:56.133"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 14:44:56.134" endtime="20220705 14:44:56.306"/>
</kw>
<status status="PASS" starttime="20220705 14:44:55.806" endtime="20220705 14:44:56.306"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:44:45.971" endtime="20220705 14:44:56.306"/>
</test>
<test id="s1-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 14:44:56.311" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 14:44:56.311" endtime="20220705 14:44:57.419"/>
</kw>
<status status="PASS" starttime="20220705 14:44:56.310" endtime="20220705 14:44:57.419"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:57.420" endtime="20220705 14:44:57.420"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:57.420" endtime="20220705 14:44:57.420"/>
</branch>
<status status="PASS" starttime="20220705 14:44:56.310" endtime="20220705 14:44:57.420"/>
</if>
<status status="PASS" starttime="20220705 14:44:56.310" endtime="20220705 14:44:57.420"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 14:44:57.420" endtime="20220705 14:44:57.532"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:44:57.541" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:44:57.533" endtime="20220705 14:44:57.541"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:57.542" endtime="20220705 14:44:57.542"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:57.542" endtime="20220705 14:44:57.542"/>
</branch>
<status status="PASS" starttime="20220705 14:44:57.541" endtime="20220705 14:44:57.542"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:57.542" endtime="20220705 14:44:57.576"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:57.576" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 14:44:57.576" endtime="20220705 14:44:57.699"/>
</kw>
<status status="PASS" starttime="20220705 14:44:57.542" endtime="20220705 14:44:57.699"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 14:44:57.699" endtime="20220705 14:44:58.438"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:44:58.445" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:44:58.438" endtime="20220705 14:44:58.445"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:58.445" endtime="20220705 14:44:58.499"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:58.499" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 14:44:58.499" endtime="20220705 14:44:59.512"/>
</kw>
<status status="PASS" starttime="20220705 14:44:58.445" endtime="20220705 14:44:59.512"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:44:59.512" endtime="20220705 14:44:59.512"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:59.512" endtime="20220705 14:44:59.512"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:59.512" endtime="20220705 14:44:59.512"/>
</branch>
<status status="PASS" starttime="20220705 14:44:58.445" endtime="20220705 14:44:59.513"/>
</if>
<status status="PASS" starttime="20220705 14:44:58.438" endtime="20220705 14:44:59.513"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 14:44:59.513" endtime="20220705 14:44:59.525"/>
</kw>
<status status="PASS" starttime="20220705 14:44:59.513" endtime="20220705 14:44:59.525"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:59.526" endtime="20220705 14:44:59.570"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:59.570" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 14:44:59.619" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 14:44:59.691" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 14:44:59.570" endtime="20220705 14:44:59.691"/>
</kw>
<status status="PASS" starttime="20220705 14:44:59.526" endtime="20220705 14:44:59.691"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:44:59.705" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c44e...</msg>
<status status="PASS" starttime="20220705 14:44:59.692" endtime="20220705 14:44:59.705"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:44:59.706" endtime="20220705 14:44:59.706"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:44:59.706" endtime="20220705 14:44:59.706"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:44:59.706" endtime="20220705 14:44:59.706"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:44:59.706" endtime="20220705 14:44:59.772"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:44:59.773" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 14:44:59.773" endtime="20220705 14:44:59.872"/>
</kw>
<status status="PASS" starttime="20220705 14:44:59.706" endtime="20220705 14:44:59.872"/>
</branch>
<status status="PASS" starttime="20220705 14:44:59.706" endtime="20220705 14:44:59.872"/>
</if>
<status status="PASS" starttime="20220705 14:44:59.691" endtime="20220705 14:44:59.872"/>
</kw>
<status status="PASS" starttime="20220705 14:44:57.533" endtime="20220705 14:44:59.872"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:44:59.873" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 14:44:59.873" endtime="20220705 14:44:59.873"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:44:59.873" endtime="20220705 14:45:03.856"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:03.857" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 14:45:03.856" endtime="20220705 14:45:04.289"/>
</kw>
<status status="PASS" starttime="20220705 14:44:59.872" endtime="20220705 14:45:04.289"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 14:45:04.290" endtime="20220705 14:45:04.806"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:04.807" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 14:45:04.806" endtime="20220705 14:45:04.993"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:45:04.993" endtime="20220705 14:45:05.048"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:05.049" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 14:45:05.048" endtime="20220705 14:45:05.206"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 14:45:05.207" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 14:45:05.638" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 14:45:05.638" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 14:45:05.206" endtime="20220705 14:45:05.667"/>
</kw>
<status status="PASS" starttime="20220705 14:45:04.289" endtime="20220705 14:45:05.668"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:45:05.669" endtime="20220705 14:45:05.732"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:05.734" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 14:45:05.733" endtime="20220705 14:45:05.827"/>
</kw>
<status status="PASS" starttime="20220705 14:45:05.733" endtime="20220705 14:45:05.827"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220705 14:45:16.037" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220705 14:45:15.920" endtime="20220705 14:45:16.037"/>
</kw>
<msg timestamp="20220705 14:45:16.038" level="FAIL">Element with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220705 14:45:05.827" endtime="20220705 14:45:16.039"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20220705 14:45:16.039" endtime="20220705 14:45:16.039"/>
</kw>
<status status="FAIL" starttime="20220705 14:45:05.669" endtime="20220705 14:45:16.040"/>
</kw>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:45:19.042" endtime="20220705 14:45:19.084"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:19.085" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 14:45:19.085" endtime="20220705 14:45:19.137"/>
</kw>
<status status="PASS" starttime="20220705 14:45:19.084" endtime="20220705 14:45:19.137"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:45:19.137" endtime="20220705 14:45:19.213"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:19.214" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 14:45:19.213" endtime="20220705 14:45:19.303"/>
</kw>
<status status="PASS" starttime="20220705 14:45:19.213" endtime="20220705 14:45:19.303"/>
</kw>
<status status="PASS" starttime="20220705 14:45:19.040" endtime="20220705 14:45:19.303"/>
</kw>
<status status="PASS" starttime="20220705 14:45:05.668" endtime="20220705 14:45:19.303"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:45:19.304" endtime="20220705 14:45:19.357"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:19.357" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 14:45:19.357" endtime="20220705 14:45:19.433"/>
</kw>
<status status="PASS" starttime="20220705 14:45:19.303" endtime="20220705 14:45:19.434"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:45:19.434" endtime="20220705 14:45:19.495"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:19.497" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220705 14:45:19.496" endtime="20220705 14:45:19.673"/>
</kw>
<status status="PASS" starttime="20220705 14:45:19.495" endtime="20220705 14:45:19.673"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:45:19.674" endtime="20220705 14:45:19.718"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:19.719" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220705 14:45:19.718" endtime="20220705 14:45:19.816"/>
</kw>
<status status="PASS" starttime="20220705 14:45:19.718" endtime="20220705 14:45:19.816"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:45:19.816" endtime="20220705 14:45:19.869"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:19.870" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220705 14:45:19.870" endtime="20220705 14:45:19.935"/>
</kw>
<status status="PASS" starttime="20220705 14:45:19.870" endtime="20220705 14:45:19.936"/>
</kw>
<status status="PASS" starttime="20220705 14:45:19.434" endtime="20220705 14:45:19.936"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:45:19.937" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220705 14:45:19.936" endtime="20220705 14:45:19.937"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:45:19.937" endtime="20220705 14:45:20.196"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 14:45:20.206" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220705 14:45:20.196" endtime="20220705 14:45:20.206"/>
</kw>
<status status="PASS" starttime="20220705 14:45:19.936" endtime="20220705 14:45:20.206"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:45:20.206" endtime="20220705 14:45:20.277"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:20.277" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220705 14:45:20.277" endtime="20220705 14:45:20.346"/>
</kw>
<status status="PASS" starttime="20220705 14:45:20.206" endtime="20220705 14:45:20.347"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 14:45:20.347" endtime="20220705 14:45:20.436"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:44:56.309" endtime="20220705 14:45:20.436"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:45:20.439" level="INFO">${url} = boards/62c44e50ad2b6b1c3e9a64bc</msg>
<status status="PASS" starttime="20220705 14:45:20.439" endtime="20220705 14:45:20.439"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:45:20.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:45:20.440" endtime="20220705 14:45:20.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:45:20.901" endtime="20220705 14:45:20.901"/>
</return>
<msg timestamp="20220705 14:45:20.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:45:20.439" endtime="20220705 14:45:20.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:45:20.901" endtime="20220705 14:45:20.902"/>
</return>
<status status="PASS" starttime="20220705 14:45:20.438" endtime="20220705 14:45:20.902"/>
</kw>
<status status="PASS" starttime="20220705 14:45:20.438" endtime="20220705 14:45:20.902"/>
</kw>
<status status="PASS" starttime="20220705 14:45:20.438" endtime="20220705 14:45:20.902"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 14:45:20.902" endtime="20220705 14:45:20.905"/>
</kw>
<status status="PASS" starttime="20220705 14:45:20.438" endtime="20220705 14:45:20.905"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220705 14:44:32.774" endtime="20220705 14:45:20.905"/>
</suite>
<suite id="s1-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 14:45:20.916" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 14:45:20.915" endtime="20220705 14:45:21.987"/>
</kw>
<status status="PASS" starttime="20220705 14:45:20.915" endtime="20220705 14:45:21.987"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 14:45:21.987" endtime="20220705 14:45:21.987"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:45:21.987" endtime="20220705 14:45:21.987"/>
</branch>
<status status="PASS" starttime="20220705 14:45:20.915" endtime="20220705 14:45:21.987"/>
</if>
<status status="PASS" starttime="20220705 14:45:20.914" endtime="20220705 14:45:21.987"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:45:21.988" endtime="20220705 14:45:22.052"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:22.053" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 14:45:22.053" endtime="20220705 14:45:22.210"/>
</kw>
<status status="PASS" starttime="20220705 14:45:21.987" endtime="20220705 14:45:22.210"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 14:45:22.210" endtime="20220705 14:45:22.946"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:45:22.953" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 14:45:22.947" endtime="20220705 14:45:22.953"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:45:22.954" endtime="20220705 14:45:23.006"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:23.006" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 14:45:23.006" endtime="20220705 14:45:24.059"/>
</kw>
<status status="PASS" starttime="20220705 14:45:22.954" endtime="20220705 14:45:24.059"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:45:24.059" endtime="20220705 14:45:24.059"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:45:24.059" endtime="20220705 14:45:24.060"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:45:24.059" endtime="20220705 14:45:24.060"/>
</branch>
<status status="PASS" starttime="20220705 14:45:22.953" endtime="20220705 14:45:24.060"/>
</if>
<status status="PASS" starttime="20220705 14:45:22.946" endtime="20220705 14:45:24.060"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 14:45:24.060" endtime="20220705 14:45:24.072"/>
</kw>
<status status="PASS" starttime="20220705 14:45:24.060" endtime="20220705 14:45:24.072"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:45:24.073" endtime="20220705 14:45:24.114"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:24.114" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 14:45:24.174" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 14:45:24.264" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 14:45:24.114" endtime="20220705 14:45:24.264"/>
</kw>
<status status="PASS" starttime="20220705 14:45:24.072" endtime="20220705 14:45:24.264"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 14:45:24.281" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c44e...</msg>
<status status="PASS" starttime="20220705 14:45:24.265" endtime="20220705 14:45:24.281"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 14:45:24.282" endtime="20220705 14:45:24.282"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 14:45:24.282" endtime="20220705 14:45:24.282"/>
</kw>
<status status="NOT RUN" starttime="20220705 14:45:24.281" endtime="20220705 14:45:24.282"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 14:45:24.282" endtime="20220705 14:45:24.333"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 14:45:24.333" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 14:45:24.333" endtime="20220705 14:45:24.422"/>
</kw>
<status status="PASS" starttime="20220705 14:45:24.282" endtime="20220705 14:45:24.422"/>
</branch>
<status status="PASS" starttime="20220705 14:45:24.281" endtime="20220705 14:45:24.422"/>
</if>
<status status="PASS" starttime="20220705 14:45:24.264" endtime="20220705 14:45:24.422"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 14:45:24.423" endtime="20220705 14:45:28.443"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 14:45:28.443" endtime="20220705 14:45:28.489"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 14:45:28.490" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220705 14:45:28.489" endtime="20220705 14:45:28.537"/>
</kw>
<status status="PASS" starttime="20220705 14:45:24.422" endtime="20220705 14:45:28.537"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 14:45:28.538" endtime="20220705 14:45:28.640"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:45:20.913" endtime="20220705 14:45:28.640"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220705 14:45:20.908" endtime="20220705 14:45:28.642"/>
</suite>
<status status="PASS" starttime="20220705 14:42:55.634" endtime="20220705 14:45:28.644"/>
</suite>
<status status="PASS" starttime="20220705 14:42:55.616" endtime="20220705 14:45:28.647"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.update.description</stat>
<stat pass="1" fail="0" skip="0">board.update.name</stat>
<stat pass="1" fail="0" skip="0">card.comment</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.drag</stat>
<stat pass="1" fail="0" skip="0">card.move</stat>
<stat pass="1" fail="0" skip="0">card.title_board</stat>
<stat pass="15" fail="0" skip="0">gui</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="2" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="4" fail="0" skip="0">regression</stat>
<stat pass="11" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="15" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1" name="Gui">Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="Trello Gui Board">Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s2" name="Trello Gui Cards">Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Trello Gui Labels">Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Gui Lists">Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Trello Gui Login">Trello.Gui.Trello Gui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
