<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 18:51:01.649" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Gui" source="/trello/gui">
<suite id="s1-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:51:01.908" endtime="20220705 18:51:01.909"/>
</kw>
<status status="PASS" starttime="20220705 18:51:01.908" endtime="20220705 18:51:01.909"/>
</kw>
<status status="PASS" starttime="20220705 18:51:01.908" endtime="20220705 18:51:01.909"/>
</kw>
<test id="s1-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 18:51:01.911" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 18:51:01.911" endtime="20220705 18:51:03.693"/>
</kw>
<status status="PASS" starttime="20220705 18:51:01.910" endtime="20220705 18:51:03.693"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:03.693" endtime="20220705 18:51:03.693"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:03.693" endtime="20220705 18:51:03.693"/>
</branch>
<status status="PASS" starttime="20220705 18:51:01.910" endtime="20220705 18:51:03.693"/>
</if>
<status status="PASS" starttime="20220705 18:51:01.910" endtime="20220705 18:51:03.693"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 18:51:03.693" endtime="20220705 18:51:03.826"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:03.845" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:51:03.826" endtime="20220705 18:51:03.845"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:03.845" endtime="20220705 18:51:03.846"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:03.845" endtime="20220705 18:51:03.846"/>
</branch>
<status status="PASS" starttime="20220705 18:51:03.845" endtime="20220705 18:51:03.846"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:03.846" endtime="20220705 18:51:03.898"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:03.898" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 18:51:03.898" endtime="20220705 18:51:04.038"/>
</kw>
<status status="PASS" starttime="20220705 18:51:03.846" endtime="20220705 18:51:04.038"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 18:51:04.039" endtime="20220705 18:51:04.599"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:04.616" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:51:04.599" endtime="20220705 18:51:04.616"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:51:04.616" endtime="20220705 18:51:04.683"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:04.683" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 18:51:04.683" endtime="20220705 18:51:05.487"/>
</kw>
<status status="PASS" starttime="20220705 18:51:04.616" endtime="20220705 18:51:05.488"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:51:05.488" endtime="20220705 18:51:05.488"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:05.488" endtime="20220705 18:51:05.488"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:05.488" endtime="20220705 18:51:05.488"/>
</branch>
<status status="PASS" starttime="20220705 18:51:04.616" endtime="20220705 18:51:05.488"/>
</if>
<status status="PASS" starttime="20220705 18:51:04.599" endtime="20220705 18:51:05.488"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 18:51:05.489" endtime="20220705 18:51:05.514"/>
</kw>
<status status="PASS" starttime="20220705 18:51:05.488" endtime="20220705 18:51:05.514"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:05.515" endtime="20220705 18:51:05.585"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:05.585" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 18:51:05.652" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 18:51:05.717" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 18:51:05.585" endtime="20220705 18:51:05.717"/>
</kw>
<status status="PASS" starttime="20220705 18:51:05.515" endtime="20220705 18:51:05.717"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:05.728" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c488...</msg>
<status status="PASS" starttime="20220705 18:51:05.718" endtime="20220705 18:51:05.728"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:51:05.728" endtime="20220705 18:51:05.728"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:05.729" endtime="20220705 18:51:05.729"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:05.728" endtime="20220705 18:51:05.729"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:51:05.729" endtime="20220705 18:51:05.788"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:05.788" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 18:51:05.788" endtime="20220705 18:51:05.910"/>
</kw>
<status status="PASS" starttime="20220705 18:51:05.729" endtime="20220705 18:51:05.910"/>
</branch>
<status status="PASS" starttime="20220705 18:51:05.728" endtime="20220705 18:51:05.911"/>
</if>
<status status="PASS" starttime="20220705 18:51:05.717" endtime="20220705 18:51:05.911"/>
</kw>
<status status="PASS" starttime="20220705 18:51:03.826" endtime="20220705 18:51:05.911"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 18:51:05.911" endtime="20220705 18:51:09.212"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:09.213" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220705 18:51:09.213" endtime="20220705 18:51:09.343"/>
</kw>
<status status="PASS" starttime="20220705 18:51:09.212" endtime="20220705 18:51:09.343"/>
</kw>
<status status="PASS" starttime="20220705 18:51:05.911" endtime="20220705 18:51:09.343"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:09.344" endtime="20220705 18:51:09.638"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:09.639" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220705 18:51:09.638" endtime="20220705 18:51:09.802"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:51:09.802" endtime="20220705 18:51:09.873"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:09.873" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220705 18:51:09.873" endtime="20220705 18:51:09.947"/>
</kw>
<status status="PASS" starttime="20220705 18:51:09.343" endtime="20220705 18:51:09.947"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:09.947" endtime="20220705 18:51:11.196"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 18:51:11.197" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220705 18:51:11.196" endtime="20220705 18:51:11.272"/>
</kw>
<status status="PASS" starttime="20220705 18:51:09.947" endtime="20220705 18:51:11.272"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:11.273" endtime="20220705 18:51:11.309"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:11.310" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 18:51:11.310" endtime="20220705 18:51:11.381"/>
</kw>
<status status="PASS" starttime="20220705 18:51:11.273" endtime="20220705 18:51:11.382"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:11.382" endtime="20220705 18:51:11.449"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:11.450" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220705 18:51:11.449" endtime="20220705 18:51:11.662"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:11.662" endtime="20220705 18:51:11.958"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:11.958" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220705 18:51:11.958" endtime="20220705 18:51:12.015"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:12.015" endtime="20220705 18:51:12.072"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:12.073" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220705 18:51:12.072" endtime="20220705 18:51:12.187"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:12.187" endtime="20220705 18:51:12.483"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:12.483" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220705 18:51:12.483" endtime="20220705 18:51:12.555"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:12.555" endtime="20220705 18:51:12.600"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:12.600" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220705 18:51:12.600" endtime="20220705 18:51:12.657"/>
</kw>
<status status="PASS" starttime="20220705 18:51:11.382" endtime="20220705 18:51:12.657"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 18:51:12.657" endtime="20220705 18:51:12.752"/>
</kw>
<status status="PASS" starttime="20220705 18:51:11.273" endtime="20220705 18:51:12.752"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:51:01.909" endtime="20220705 18:51:12.752"/>
</test>
<test id="s1-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:51:12.756" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:51:12.756" endtime="20220705 18:51:12.756"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:51:12.756" endtime="20220705 18:51:12.756"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:12.758" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:51:12.757" endtime="20220705 18:51:12.758"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:51:12.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:12.758" endtime="20220705 18:51:12.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:12.979" endtime="20220705 18:51:12.979"/>
</return>
<msg timestamp="20220705 18:51:12.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:12.755" endtime="20220705 18:51:12.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:12.979" endtime="20220705 18:51:12.979"/>
</return>
<msg timestamp="20220705 18:51:12.979" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:12.755" endtime="20220705 18:51:12.979"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 18:51:12.981" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 18:51:12.980" endtime="20220705 18:51:13.877"/>
</kw>
<status status="PASS" starttime="20220705 18:51:12.980" endtime="20220705 18:51:13.877"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:13.877" endtime="20220705 18:51:13.877"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:13.877" endtime="20220705 18:51:13.877"/>
</branch>
<status status="PASS" starttime="20220705 18:51:12.980" endtime="20220705 18:51:13.878"/>
</if>
<status status="PASS" starttime="20220705 18:51:12.980" endtime="20220705 18:51:13.878"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 18:51:13.878" endtime="20220705 18:51:14.002"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:14.020" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:51:14.003" endtime="20220705 18:51:14.020"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:14.020" endtime="20220705 18:51:14.020"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:14.020" endtime="20220705 18:51:14.020"/>
</branch>
<status status="PASS" starttime="20220705 18:51:14.020" endtime="20220705 18:51:14.020"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:14.021" endtime="20220705 18:51:14.055"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:14.055" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 18:51:14.055" endtime="20220705 18:51:14.182"/>
</kw>
<status status="PASS" starttime="20220705 18:51:14.020" endtime="20220705 18:51:14.182"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 18:51:14.183" endtime="20220705 18:51:14.734"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:14.743" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:51:14.735" endtime="20220705 18:51:14.743"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:51:14.744" endtime="20220705 18:51:14.796"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:14.797" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 18:51:14.797" endtime="20220705 18:51:15.596"/>
</kw>
<status status="PASS" starttime="20220705 18:51:14.744" endtime="20220705 18:51:15.597"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:51:15.597" endtime="20220705 18:51:15.597"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:15.597" endtime="20220705 18:51:15.597"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:15.597" endtime="20220705 18:51:15.597"/>
</branch>
<status status="PASS" starttime="20220705 18:51:14.744" endtime="20220705 18:51:15.597"/>
</if>
<status status="PASS" starttime="20220705 18:51:14.734" endtime="20220705 18:51:15.597"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 18:51:15.598" endtime="20220705 18:51:15.613"/>
</kw>
<status status="PASS" starttime="20220705 18:51:15.597" endtime="20220705 18:51:15.613"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:15.614" endtime="20220705 18:51:15.657"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:15.657" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 18:51:15.707" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 18:51:15.779" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 18:51:15.657" endtime="20220705 18:51:15.779"/>
</kw>
<status status="PASS" starttime="20220705 18:51:15.613" endtime="20220705 18:51:15.779"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:15.795" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c488...</msg>
<status status="PASS" starttime="20220705 18:51:15.779" endtime="20220705 18:51:15.795"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:51:15.796" endtime="20220705 18:51:15.796"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:15.796" endtime="20220705 18:51:15.796"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:15.795" endtime="20220705 18:51:15.796"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:51:15.796" endtime="20220705 18:51:15.879"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:15.880" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 18:51:15.879" endtime="20220705 18:51:15.980"/>
</kw>
<status status="PASS" starttime="20220705 18:51:15.796" endtime="20220705 18:51:15.980"/>
</branch>
<status status="PASS" starttime="20220705 18:51:15.795" endtime="20220705 18:51:15.980"/>
</if>
<status status="PASS" starttime="20220705 18:51:15.779" endtime="20220705 18:51:15.980"/>
</kw>
<status status="PASS" starttime="20220705 18:51:14.002" endtime="20220705 18:51:15.981"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:15.981" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220705 18:51:15.981" endtime="20220705 18:51:15.981"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:15.982" endtime="20220705 18:51:19.003"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:19.004" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220705 18:51:19.004" endtime="20220705 18:51:19.371"/>
</kw>
<status status="PASS" starttime="20220705 18:51:15.981" endtime="20220705 18:51:19.371"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:19.371" endtime="20220705 18:51:19.805"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 18:51:19.806" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220705 18:51:19.806" endtime="20220705 18:51:19.924"/>
</kw>
<status status="PASS" starttime="20220705 18:51:19.371" endtime="20220705 18:51:19.924"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:19.925" endtime="20220705 18:51:19.987"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:19.988" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 18:51:19.987" endtime="20220705 18:51:20.078"/>
</kw>
<status status="PASS" starttime="20220705 18:51:19.924" endtime="20220705 18:51:20.078"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:20.078" endtime="20220705 18:51:20.152"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:20.152" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220705 18:51:20.152" endtime="20220705 18:51:20.368"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:20.369" endtime="20220705 18:51:20.646"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:20.647" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220705 18:51:20.646" endtime="20220705 18:51:20.708"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:20.708" endtime="20220705 18:51:20.748"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:20.749" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220705 18:51:20.748" endtime="20220705 18:51:20.853"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:20.853" endtime="20220705 18:51:21.118"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:21.119" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220705 18:51:21.118" endtime="20220705 18:51:21.193"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:21.193" endtime="20220705 18:51:21.253"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:21.253" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220705 18:51:21.253" endtime="20220705 18:51:21.330"/>
</kw>
<status status="PASS" starttime="20220705 18:51:20.078" endtime="20220705 18:51:21.330"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 18:51:21.330" endtime="20220705 18:51:21.448"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220705 18:51:21.448" endtime="20220705 18:51:21.448"/>
</kw>
<status status="PASS" starttime="20220705 18:51:21.330" endtime="20220705 18:51:21.448"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:51:12.754" endtime="20220705 18:51:21.448"/>
</test>
<test id="s1-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:51:21.451" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:51:21.451" endtime="20220705 18:51:21.451"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:51:21.452" endtime="20220705 18:51:21.452"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:21.453" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:51:21.452" endtime="20220705 18:51:21.453"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:51:21.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:21.453" endtime="20220705 18:51:21.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:21.693" endtime="20220705 18:51:21.693"/>
</return>
<msg timestamp="20220705 18:51:21.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:21.451" endtime="20220705 18:51:21.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:21.693" endtime="20220705 18:51:21.693"/>
</return>
<msg timestamp="20220705 18:51:21.694" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:21.450" endtime="20220705 18:51:21.694"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 18:51:21.695" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 18:51:21.694" endtime="20220705 18:51:22.678"/>
</kw>
<status status="PASS" starttime="20220705 18:51:21.694" endtime="20220705 18:51:22.678"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:22.678" endtime="20220705 18:51:22.678"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:22.678" endtime="20220705 18:51:22.678"/>
</branch>
<status status="PASS" starttime="20220705 18:51:21.694" endtime="20220705 18:51:22.679"/>
</if>
<status status="PASS" starttime="20220705 18:51:21.694" endtime="20220705 18:51:22.679"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 18:51:22.679" endtime="20220705 18:51:22.791"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:22.805" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:51:22.792" endtime="20220705 18:51:22.805"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:22.805" endtime="20220705 18:51:22.805"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:22.805" endtime="20220705 18:51:22.805"/>
</branch>
<status status="PASS" starttime="20220705 18:51:22.805" endtime="20220705 18:51:22.805"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:22.806" endtime="20220705 18:51:22.854"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:22.855" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 18:51:22.855" endtime="20220705 18:51:22.954"/>
</kw>
<status status="PASS" starttime="20220705 18:51:22.805" endtime="20220705 18:51:22.954"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 18:51:22.954" endtime="20220705 18:51:23.696"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:23.707" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:51:23.696" endtime="20220705 18:51:23.707"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:51:23.708" endtime="20220705 18:51:23.760"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:23.761" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 18:51:23.760" endtime="20220705 18:51:24.478"/>
</kw>
<status status="PASS" starttime="20220705 18:51:23.708" endtime="20220705 18:51:24.478"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:51:24.478" endtime="20220705 18:51:24.478"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:24.478" endtime="20220705 18:51:24.478"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:24.478" endtime="20220705 18:51:24.478"/>
</branch>
<status status="PASS" starttime="20220705 18:51:23.707" endtime="20220705 18:51:24.478"/>
</if>
<status status="PASS" starttime="20220705 18:51:23.696" endtime="20220705 18:51:24.478"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 18:51:24.479" endtime="20220705 18:51:24.495"/>
</kw>
<status status="PASS" starttime="20220705 18:51:24.478" endtime="20220705 18:51:24.496"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:24.496" endtime="20220705 18:51:24.787"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:24.787" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 18:51:24.827" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 18:51:24.888" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 18:51:24.787" endtime="20220705 18:51:24.888"/>
</kw>
<status status="PASS" starttime="20220705 18:51:24.496" endtime="20220705 18:51:24.888"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:24.899" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c488...</msg>
<status status="PASS" starttime="20220705 18:51:24.889" endtime="20220705 18:51:24.899"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:51:24.899" endtime="20220705 18:51:24.900"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:24.900" endtime="20220705 18:51:24.900"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:24.899" endtime="20220705 18:51:24.900"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:51:24.900" endtime="20220705 18:51:24.981"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:24.982" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 18:51:24.981" endtime="20220705 18:51:25.078"/>
</kw>
<status status="PASS" starttime="20220705 18:51:24.900" endtime="20220705 18:51:25.078"/>
</branch>
<status status="PASS" starttime="20220705 18:51:24.899" endtime="20220705 18:51:25.078"/>
</if>
<status status="PASS" starttime="20220705 18:51:24.889" endtime="20220705 18:51:25.078"/>
</kw>
<status status="PASS" starttime="20220705 18:51:22.791" endtime="20220705 18:51:25.078"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:25.079" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220705 18:51:25.079" endtime="20220705 18:51:25.079"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:25.079" endtime="20220705 18:51:28.134"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:28.134" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220705 18:51:28.134" endtime="20220705 18:51:28.515"/>
</kw>
<status status="PASS" starttime="20220705 18:51:25.079" endtime="20220705 18:51:28.515"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:28.516" endtime="20220705 18:51:29.021"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 18:51:29.021" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220705 18:51:29.021" endtime="20220705 18:51:29.072"/>
</kw>
<status status="PASS" starttime="20220705 18:51:28.515" endtime="20220705 18:51:29.072"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:29.073" endtime="20220705 18:51:29.119"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:29.119" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 18:51:29.119" endtime="20220705 18:51:29.202"/>
</kw>
<status status="PASS" starttime="20220705 18:51:29.072" endtime="20220705 18:51:29.202"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:29.203" endtime="20220705 18:51:29.259"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:29.260" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220705 18:51:29.260" endtime="20220705 18:51:29.408"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:29.408" endtime="20220705 18:51:29.455"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:29.456" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220705 18:51:29.455" endtime="20220705 18:51:29.525"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:29.525" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220705 18:51:29.525" endtime="20220705 18:51:29.667"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:29.667" endtime="20220705 18:51:29.723"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:29.724" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220705 18:51:29.723" endtime="20220705 18:51:29.818"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:29.818" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220705 18:51:29.818" endtime="20220705 18:51:29.906"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:29.906" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220705 18:51:29.906" endtime="20220705 18:51:29.992"/>
</kw>
<status status="PASS" starttime="20220705 18:51:29.203" endtime="20220705 18:51:29.992"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 18:51:29.993" endtime="20220705 18:51:30.082"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:30.085" level="INFO">${url} = boards/62c4882900594f0acea536a8</msg>
<status status="PASS" starttime="20220705 18:51:30.085" endtime="20220705 18:51:30.085"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:51:30.430" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:30.085" endtime="20220705 18:51:30.430"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:30.431" endtime="20220705 18:51:30.431"/>
</return>
<msg timestamp="20220705 18:51:30.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:30.084" endtime="20220705 18:51:30.431"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:30.431" endtime="20220705 18:51:30.431"/>
</return>
<status status="PASS" starttime="20220705 18:51:30.083" endtime="20220705 18:51:30.431"/>
</kw>
<status status="PASS" starttime="20220705 18:51:30.082" endtime="20220705 18:51:30.431"/>
</kw>
<status status="PASS" starttime="20220705 18:51:29.992" endtime="20220705 18:51:30.431"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:51:21.450" endtime="20220705 18:51:30.431"/>
</test>
<test id="s1-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:51:30.433" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:51:30.433" endtime="20220705 18:51:30.433"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:51:30.434" endtime="20220705 18:51:30.434"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:30.435" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:51:30.434" endtime="20220705 18:51:30.435"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:51:30.601" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:30.435" endtime="20220705 18:51:30.601"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:30.601" endtime="20220705 18:51:30.601"/>
</return>
<msg timestamp="20220705 18:51:30.601" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:30.433" endtime="20220705 18:51:30.601"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:30.601" endtime="20220705 18:51:30.601"/>
</return>
<msg timestamp="20220705 18:51:30.602" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:30.432" endtime="20220705 18:51:30.602"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 18:51:30.603" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 18:51:30.602" endtime="20220705 18:51:31.521"/>
</kw>
<status status="PASS" starttime="20220705 18:51:30.602" endtime="20220705 18:51:31.521"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:31.521" endtime="20220705 18:51:31.521"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:31.521" endtime="20220705 18:51:31.521"/>
</branch>
<status status="PASS" starttime="20220705 18:51:30.602" endtime="20220705 18:51:31.521"/>
</if>
<status status="PASS" starttime="20220705 18:51:30.602" endtime="20220705 18:51:31.521"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 18:51:31.522" endtime="20220705 18:51:31.629"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:31.643" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:51:31.630" endtime="20220705 18:51:31.643"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:31.644" endtime="20220705 18:51:31.644"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:31.644" endtime="20220705 18:51:31.644"/>
</branch>
<status status="PASS" starttime="20220705 18:51:31.643" endtime="20220705 18:51:31.644"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:31.644" endtime="20220705 18:51:31.685"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:31.686" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 18:51:31.686" endtime="20220705 18:51:31.799"/>
</kw>
<status status="PASS" starttime="20220705 18:51:31.644" endtime="20220705 18:51:31.799"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 18:51:31.799" endtime="20220705 18:51:32.524"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:32.531" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:51:32.524" endtime="20220705 18:51:32.531"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:51:32.531" endtime="20220705 18:51:32.594"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:32.594" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 18:51:32.594" endtime="20220705 18:51:33.350"/>
</kw>
<status status="PASS" starttime="20220705 18:51:32.531" endtime="20220705 18:51:33.350"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:51:33.350" endtime="20220705 18:51:33.350"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:33.350" endtime="20220705 18:51:33.350"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:33.350" endtime="20220705 18:51:33.351"/>
</branch>
<status status="PASS" starttime="20220705 18:51:32.531" endtime="20220705 18:51:33.351"/>
</if>
<status status="PASS" starttime="20220705 18:51:32.524" endtime="20220705 18:51:33.351"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 18:51:33.351" endtime="20220705 18:51:33.365"/>
</kw>
<status status="PASS" starttime="20220705 18:51:33.351" endtime="20220705 18:51:33.365"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:33.365" endtime="20220705 18:51:33.412"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:33.413" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 18:51:33.464" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 18:51:33.533" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 18:51:33.412" endtime="20220705 18:51:33.533"/>
</kw>
<status status="PASS" starttime="20220705 18:51:33.365" endtime="20220705 18:51:33.533"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:33.548" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c488...</msg>
<status status="PASS" starttime="20220705 18:51:33.534" endtime="20220705 18:51:33.548"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:51:33.548" endtime="20220705 18:51:33.548"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:33.549" endtime="20220705 18:51:33.549"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:33.548" endtime="20220705 18:51:33.549"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:51:33.549" endtime="20220705 18:51:33.590"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:33.591" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 18:51:33.591" endtime="20220705 18:51:33.671"/>
</kw>
<status status="PASS" starttime="20220705 18:51:33.549" endtime="20220705 18:51:33.671"/>
</branch>
<status status="PASS" starttime="20220705 18:51:33.548" endtime="20220705 18:51:33.671"/>
</if>
<status status="PASS" starttime="20220705 18:51:33.533" endtime="20220705 18:51:33.671"/>
</kw>
<status status="PASS" starttime="20220705 18:51:31.629" endtime="20220705 18:51:33.671"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:33.672" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220705 18:51:33.672" endtime="20220705 18:51:33.672"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:33.672" endtime="20220705 18:51:36.726"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:36.726" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220705 18:51:36.726" endtime="20220705 18:51:37.133"/>
</kw>
<status status="PASS" starttime="20220705 18:51:33.671" endtime="20220705 18:51:37.134"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:37.134" endtime="20220705 18:51:37.586"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 18:51:37.587" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220705 18:51:37.587" endtime="20220705 18:51:37.647"/>
</kw>
<status status="PASS" starttime="20220705 18:51:37.134" endtime="20220705 18:51:37.647"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:37.648" endtime="20220705 18:51:37.682"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:37.711" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220705 18:51:37.683" endtime="20220705 18:51:37.711"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220705 18:51:37.712" level="INFO">Length is 8</msg>
<msg timestamp="20220705 18:51:37.712" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220705 18:51:37.711" endtime="20220705 18:51:37.712"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:37.712" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220705 18:51:37.712" endtime="20220705 18:51:37.764"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:51:37.764" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 18:51:38.099" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 18:51:37.764" endtime="20220705 18:51:38.115"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220705 18:51:38.115" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:51:38.116" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 18:51:38.418" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 18:51:38.115" endtime="20220705 18:51:38.437"/>
</kw>
<msg timestamp="20220705 18:51:38.437" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:51:38.438" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 18:51:38.735" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 18:51:38.437" endtime="20220705 18:51:38.748"/>
</kw>
<msg timestamp="20220705 18:51:38.748" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:51:38.749" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 18:51:39.028" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 18:51:38.749" endtime="20220705 18:51:39.045"/>
</kw>
<msg timestamp="20220705 18:51:39.045" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:51:39.046" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 18:51:39.335" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 18:51:39.045" endtime="20220705 18:51:39.345"/>
</kw>
<msg timestamp="20220705 18:51:39.345" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:51:39.346" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 18:51:39.628" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 18:51:39.345" endtime="20220705 18:51:39.647"/>
</kw>
<msg timestamp="20220705 18:51:39.647" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:51:39.648" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 18:51:39.921" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 18:51:39.647" endtime="20220705 18:51:39.934"/>
</kw>
<msg timestamp="20220705 18:51:39.935" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:51:39.935" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 18:51:40.221" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 18:51:39.935" endtime="20220705 18:51:40.237"/>
</kw>
<msg timestamp="20220705 18:51:40.237" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:51:40.238" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 18:51:40.522" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 18:51:40.238" endtime="20220705 18:51:40.533"/>
</kw>
<status status="PASS" starttime="20220705 18:51:38.115" endtime="20220705 18:51:40.533"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:51:40.534" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 18:51:40.808" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220705 18:51:40.534" endtime="20220705 18:51:40.868"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:51:40.869" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220705 18:51:41.149" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220705 18:51:40.868" endtime="20220705 18:51:41.280"/>
</kw>
<status status="PASS" starttime="20220705 18:51:37.647" endtime="20220705 18:51:41.280"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:41.281" endtime="20220705 18:51:41.306"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 18:51:41.307" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220705 18:51:41.306" endtime="20220705 18:51:41.343"/>
</kw>
<status status="PASS" starttime="20220705 18:51:41.280" endtime="20220705 18:51:41.343"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 18:51:41.343" endtime="20220705 18:51:41.423"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:41.426" level="INFO">${url} = boards/62c488321cec925dda6d4d08</msg>
<status status="PASS" starttime="20220705 18:51:41.426" endtime="20220705 18:51:41.426"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:51:41.800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:41.426" endtime="20220705 18:51:41.800"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:41.800" endtime="20220705 18:51:41.801"/>
</return>
<msg timestamp="20220705 18:51:41.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:41.425" endtime="20220705 18:51:41.801"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:41.801" endtime="20220705 18:51:41.801"/>
</return>
<status status="PASS" starttime="20220705 18:51:41.424" endtime="20220705 18:51:41.801"/>
</kw>
<status status="PASS" starttime="20220705 18:51:41.423" endtime="20220705 18:51:41.801"/>
</kw>
<status status="PASS" starttime="20220705 18:51:41.343" endtime="20220705 18:51:41.801"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:51:30.432" endtime="20220705 18:51:41.801"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 18:51:41.802" endtime="20220705 18:51:41.803"/>
</kw>
<status status="PASS" starttime="20220705 18:51:41.802" endtime="20220705 18:51:41.803"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220705 18:51:01.668" endtime="20220705 18:51:41.803"/>
</suite>
<suite id="s1-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:51:41.818" endtime="20220705 18:51:41.818"/>
</kw>
<status status="PASS" starttime="20220705 18:51:41.818" endtime="20220705 18:51:41.818"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:51:41.819" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:51:41.819" endtime="20220705 18:51:41.819"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:51:41.819" endtime="20220705 18:51:41.820"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:41.821" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:51:41.820" endtime="20220705 18:51:41.821"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:51:42.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:41.821" endtime="20220705 18:51:42.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:42.046" endtime="20220705 18:51:42.046"/>
</return>
<msg timestamp="20220705 18:51:42.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:41.819" endtime="20220705 18:51:42.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:42.046" endtime="20220705 18:51:42.046"/>
</return>
<msg timestamp="20220705 18:51:42.046" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:41.819" endtime="20220705 18:51:42.046"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:51:42.048" level="INFO">${TEST_SUITE_BOARD_ID} = 62c4883d8a4a9c1e254da69e</msg>
<status status="PASS" starttime="20220705 18:51:42.046" endtime="20220705 18:51:42.048"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 18:51:42.049" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 18:51:42.048" endtime="20220705 18:51:42.957"/>
</kw>
<status status="PASS" starttime="20220705 18:51:42.048" endtime="20220705 18:51:42.957"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:42.957" endtime="20220705 18:51:42.957"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:42.957" endtime="20220705 18:51:42.957"/>
</branch>
<status status="PASS" starttime="20220705 18:51:42.048" endtime="20220705 18:51:42.957"/>
</if>
<status status="PASS" starttime="20220705 18:51:42.048" endtime="20220705 18:51:42.957"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 18:51:42.957" endtime="20220705 18:51:43.069"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:43.079" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:51:43.070" endtime="20220705 18:51:43.079"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:43.080" endtime="20220705 18:51:43.080"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:43.080" endtime="20220705 18:51:43.080"/>
</branch>
<status status="PASS" starttime="20220705 18:51:43.079" endtime="20220705 18:51:43.080"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:43.080" endtime="20220705 18:51:43.112"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:43.112" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 18:51:43.112" endtime="20220705 18:51:43.221"/>
</kw>
<status status="PASS" starttime="20220705 18:51:43.080" endtime="20220705 18:51:43.221"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 18:51:43.221" endtime="20220705 18:51:43.927"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:43.933" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:51:43.928" endtime="20220705 18:51:43.933"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:51:43.934" endtime="20220705 18:51:43.972"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:43.973" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 18:51:43.973" endtime="20220705 18:51:44.693"/>
</kw>
<status status="PASS" starttime="20220705 18:51:43.933" endtime="20220705 18:51:44.693"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:51:44.693" endtime="20220705 18:51:44.693"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:44.694" endtime="20220705 18:51:44.694"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:44.693" endtime="20220705 18:51:44.694"/>
</branch>
<status status="PASS" starttime="20220705 18:51:43.933" endtime="20220705 18:51:44.694"/>
</if>
<status status="PASS" starttime="20220705 18:51:43.927" endtime="20220705 18:51:44.694"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 18:51:44.694" endtime="20220705 18:51:44.702"/>
</kw>
<status status="PASS" starttime="20220705 18:51:44.694" endtime="20220705 18:51:44.702"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:44.703" endtime="20220705 18:51:44.749"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:44.750" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 18:51:44.819" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 18:51:44.873" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 18:51:44.750" endtime="20220705 18:51:44.874"/>
</kw>
<status status="PASS" starttime="20220705 18:51:44.703" endtime="20220705 18:51:44.874"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:51:44.891" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c488...</msg>
<status status="PASS" starttime="20220705 18:51:44.874" endtime="20220705 18:51:44.891"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:51:44.892" endtime="20220705 18:51:44.892"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:51:44.892" endtime="20220705 18:51:44.892"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:51:44.891" endtime="20220705 18:51:44.892"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:51:44.892" endtime="20220705 18:51:44.957"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:44.957" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 18:51:44.957" endtime="20220705 18:51:45.052"/>
</kw>
<status status="PASS" starttime="20220705 18:51:44.892" endtime="20220705 18:51:45.052"/>
</branch>
<status status="PASS" starttime="20220705 18:51:44.891" endtime="20220705 18:51:45.052"/>
</if>
<status status="PASS" starttime="20220705 18:51:44.874" endtime="20220705 18:51:45.053"/>
</kw>
<status status="PASS" starttime="20220705 18:51:43.069" endtime="20220705 18:51:45.053"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:45.053" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220705 18:51:45.053" endtime="20220705 18:51:45.053"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:45.054" endtime="20220705 18:51:48.130"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:48.130" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220705 18:51:48.130" endtime="20220705 18:51:48.522"/>
</kw>
<status status="PASS" starttime="20220705 18:51:45.053" endtime="20220705 18:51:48.522"/>
</kw>
<status status="PASS" starttime="20220705 18:51:41.818" endtime="20220705 18:51:48.522"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:48.524" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 18:51:48.523" endtime="20220705 18:51:48.524"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:48.524" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 18:51:48.524" endtime="20220705 18:51:48.524"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:48.525" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 18:51:48.525" endtime="20220705 18:51:48.525"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:48.525" endtime="20220705 18:51:49.032"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:49.033" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 18:51:49.032" endtime="20220705 18:51:49.110"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:49.111" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 18:51:49.110" endtime="20220705 18:51:49.111"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:49.111" endtime="20220705 18:51:49.145"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:49.146" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:51:49.145" endtime="20220705 18:51:49.192"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 18:51:49.193" endtime="20220705 18:51:49.232"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:49.232" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:51:49.232" endtime="20220705 18:51:49.315"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:49.316" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 18:51:49.315" endtime="20220705 18:51:49.316"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:49.316" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 18:51:49.316" endtime="20220705 18:51:49.483"/>
</kw>
<status status="PASS" starttime="20220705 18:51:48.524" endtime="20220705 18:51:49.483"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:49.484" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 18:51:49.484" endtime="20220705 18:51:49.484"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 18:51:49.525" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220705 18:51:49.485" endtime="20220705 18:51:49.525"/>
</kw>
<status status="PASS" starttime="20220705 18:51:49.483" endtime="20220705 18:51:49.525"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:49.526" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 18:51:49.526" endtime="20220705 18:51:49.526"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:49.527" endtime="20220705 18:51:49.551"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:49.551" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 18:51:49.551" endtime="20220705 18:51:49.619"/>
</kw>
<status status="PASS" starttime="20220705 18:51:49.525" endtime="20220705 18:51:49.619"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 18:51:49.706" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 18:51:49.620" endtime="20220705 18:51:49.707"/>
</kw>
<msg timestamp="20220705 18:51:49.707" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 18:51:49.620" endtime="20220705 18:51:49.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:49.708" endtime="20220705 18:51:50.022"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:50.023" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 18:51:50.022" endtime="20220705 18:51:50.126"/>
</kw>
<status status="PASS" starttime="20220705 18:51:49.707" endtime="20220705 18:51:50.126"/>
</kw>
<status status="PASS" starttime="20220705 18:51:49.707" endtime="20220705 18:51:50.126"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:50.127" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 18:51:50.127" endtime="20220705 18:51:50.199"/>
</kw>
<status status="PASS" starttime="20220705 18:51:50.127" endtime="20220705 18:51:50.199"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:50.200" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 18:51:50.199" endtime="20220705 18:51:50.380"/>
</kw>
<status status="PASS" starttime="20220705 18:51:49.619" endtime="20220705 18:51:50.380"/>
</kw>
<status status="PASS" starttime="20220705 18:51:49.525" endtime="20220705 18:51:50.380"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:51:48.522" endtime="20220705 18:51:50.380"/>
</test>
<test id="s1-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:50.382" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 18:51:50.381" endtime="20220705 18:51:50.382"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:50.382" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 18:51:50.382" endtime="20220705 18:51:50.382"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:50.383" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 18:51:50.382" endtime="20220705 18:51:50.383"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:50.383" endtime="20220705 18:51:50.414"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:50.414" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 18:51:50.414" endtime="20220705 18:51:50.468"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:50.469" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 18:51:50.469" endtime="20220705 18:51:50.469"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:50.469" endtime="20220705 18:51:50.498"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:50.499" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:51:50.499" endtime="20220705 18:51:50.560"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 18:51:50.560" endtime="20220705 18:51:50.591"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:50.591" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:51:50.591" endtime="20220705 18:51:50.673"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:50.673" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 18:51:50.673" endtime="20220705 18:51:50.673"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:50.674" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 18:51:50.673" endtime="20220705 18:51:50.736"/>
</kw>
<status status="PASS" starttime="20220705 18:51:50.382" endtime="20220705 18:51:50.736"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:50.736" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220705 18:51:50.736" endtime="20220705 18:51:50.736"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:50.737" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 18:51:50.737" endtime="20220705 18:51:50.737"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:50.738" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220705 18:51:50.738" endtime="20220705 18:51:50.738"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:50.738" endtime="20220705 18:51:50.785"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220705 18:51:50.786" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 18:51:50.786" endtime="20220705 18:51:51.069"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 18:51:51.070" endtime="20220705 18:51:51.089"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:51.089" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220705 18:51:51.089" endtime="20220705 18:51:51.167"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:51.167" endtime="20220705 18:51:51.206"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:51.206" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220705 18:51:51.206" endtime="20220705 18:51:51.258"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 18:51:51.258" endtime="20220705 18:51:51.301"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:51.302" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220705 18:51:51.302" endtime="20220705 18:51:51.401"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:51.402" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220705 18:51:51.401" endtime="20220705 18:51:51.505"/>
</kw>
<status status="PASS" starttime="20220705 18:51:50.736" endtime="20220705 18:51:51.505"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:51.506" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220705 18:51:51.506" endtime="20220705 18:51:51.506"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 18:51:51.549" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220705 18:51:51.506" endtime="20220705 18:51:51.549"/>
</kw>
<status status="PASS" starttime="20220705 18:51:51.505" endtime="20220705 18:51:51.549"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:51.551" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220705 18:51:51.550" endtime="20220705 18:51:51.551"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:51.551" endtime="20220705 18:51:51.582"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:51.582" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220705 18:51:51.582" endtime="20220705 18:51:51.641"/>
</kw>
<status status="PASS" starttime="20220705 18:51:51.550" endtime="20220705 18:51:51.641"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 18:51:51.845" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 18:51:51.642" endtime="20220705 18:51:51.845"/>
</kw>
<msg timestamp="20220705 18:51:51.845" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 18:51:51.642" endtime="20220705 18:51:51.845"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:51.846" endtime="20220705 18:51:51.878"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:51.879" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 18:51:51.878" endtime="20220705 18:51:51.954"/>
</kw>
<status status="PASS" starttime="20220705 18:51:51.845" endtime="20220705 18:51:51.954"/>
</kw>
<status status="PASS" starttime="20220705 18:51:51.845" endtime="20220705 18:51:51.954"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:51.955" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 18:51:51.955" endtime="20220705 18:51:52.017"/>
</kw>
<status status="PASS" starttime="20220705 18:51:51.955" endtime="20220705 18:51:52.017"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:52.018" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 18:51:52.018" endtime="20220705 18:51:52.207"/>
</kw>
<status status="PASS" starttime="20220705 18:51:51.642" endtime="20220705 18:51:52.207"/>
</kw>
<status status="PASS" starttime="20220705 18:51:51.550" endtime="20220705 18:51:52.207"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:51:50.381" endtime="20220705 18:51:52.207"/>
</test>
<test id="s1-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:52.209" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 18:51:52.208" endtime="20220705 18:51:52.209"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:52.209" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 18:51:52.209" endtime="20220705 18:51:52.209"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:52.210" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 18:51:52.210" endtime="20220705 18:51:52.210"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:52.210" endtime="20220705 18:51:52.269"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:52.269" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 18:51:52.269" endtime="20220705 18:51:52.330"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:52.330" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 18:51:52.330" endtime="20220705 18:51:52.330"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:52.330" endtime="20220705 18:51:52.385"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:52.386" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:51:52.385" endtime="20220705 18:51:52.441"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 18:51:52.441" endtime="20220705 18:51:52.479"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:52.479" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:51:52.479" endtime="20220705 18:51:52.593"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:52.594" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 18:51:52.593" endtime="20220705 18:51:52.594"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:52.594" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 18:51:52.594" endtime="20220705 18:51:52.670"/>
</kw>
<status status="PASS" starttime="20220705 18:51:52.209" endtime="20220705 18:51:52.670"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:52.671" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 18:51:52.671" endtime="20220705 18:51:52.671"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:52.672" endtime="20220705 18:51:52.757"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:52.757" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 18:51:52.757" endtime="20220705 18:51:52.804"/>
</kw>
<status status="PASS" starttime="20220705 18:51:52.671" endtime="20220705 18:51:52.804"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 18:51:52.975" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 18:51:52.804" endtime="20220705 18:51:52.975"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 18:51:52.975" endtime="20220705 18:51:52.975"/>
</return>
<msg timestamp="20220705 18:51:52.975" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220705 18:51:52.804" endtime="20220705 18:51:52.975"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:52.976" endtime="20220705 18:51:53.050"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:53.050" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220705 18:51:53.050" endtime="20220705 18:51:53.104"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 18:51:53.105" endtime="20220705 18:51:53.164"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:53.164" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220705 18:51:53.164" endtime="20220705 18:51:53.283"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:53.284" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220705 18:51:53.284" endtime="20220705 18:51:53.429"/>
</kw>
<status status="PASS" starttime="20220705 18:51:52.975" endtime="20220705 18:51:53.429"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 18:51:53.452" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220705 18:51:53.430" endtime="20220705 18:51:53.452"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 18:51:53.452" endtime="20220705 18:51:53.452"/>
</return>
<msg timestamp="20220705 18:51:53.452" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220705 18:51:53.430" endtime="20220705 18:51:53.452"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 18:51:53.452" endtime="20220705 18:51:53.453"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 18:51:53.471" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 18:51:53.454" endtime="20220705 18:51:53.471"/>
</kw>
<msg timestamp="20220705 18:51:53.471" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 18:51:53.454" endtime="20220705 18:51:53.471"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:53.472" endtime="20220705 18:51:53.560"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:53.561" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 18:51:53.560" endtime="20220705 18:51:53.624"/>
</kw>
<status status="PASS" starttime="20220705 18:51:53.471" endtime="20220705 18:51:53.624"/>
</kw>
<status status="PASS" starttime="20220705 18:51:53.471" endtime="20220705 18:51:53.624"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:53.625" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 18:51:53.625" endtime="20220705 18:51:53.688"/>
</kw>
<status status="PASS" starttime="20220705 18:51:53.624" endtime="20220705 18:51:53.688"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:53.689" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 18:51:53.688" endtime="20220705 18:51:53.846"/>
</kw>
<status status="PASS" starttime="20220705 18:51:53.454" endtime="20220705 18:51:53.846"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:51:52.208" endtime="20220705 18:51:53.846"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:53.848" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 18:51:53.848" endtime="20220705 18:51:53.848"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:53.848" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 18:51:53.848" endtime="20220705 18:51:53.849"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:53.850" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 18:51:53.849" endtime="20220705 18:51:53.850"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 18:51:53.878" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 18:51:53.850" endtime="20220705 18:51:53.878"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 18:51:53.878" endtime="20220705 18:51:53.878"/>
</return>
<msg timestamp="20220705 18:51:53.878" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220705 18:51:53.849" endtime="20220705 18:51:53.878"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:53.879" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 18:51:53.879" endtime="20220705 18:51:53.879"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:53.879" endtime="20220705 18:51:53.905"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:53.906" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 18:51:53.906" endtime="20220705 18:51:53.949"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:53.949" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 18:51:53.949" endtime="20220705 18:51:53.949"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:53.949" endtime="20220705 18:51:54.019"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:54.020" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:51:54.019" endtime="20220705 18:51:54.068"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 18:51:54.068" endtime="20220705 18:51:54.096"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:54.097" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:51:54.096" endtime="20220705 18:51:54.170"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:54.171" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 18:51:54.170" endtime="20220705 18:51:54.171"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:54.171" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 18:51:54.171" endtime="20220705 18:51:54.238"/>
</kw>
<status status="PASS" starttime="20220705 18:51:53.878" endtime="20220705 18:51:54.238"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:54.240" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 18:51:54.239" endtime="20220705 18:51:54.240"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:54.240" endtime="20220705 18:51:54.290"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:54.290" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 18:51:54.290" endtime="20220705 18:51:54.335"/>
</kw>
<status status="PASS" starttime="20220705 18:51:54.239" endtime="20220705 18:51:54.335"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 18:51:54.533" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 18:51:54.336" endtime="20220705 18:51:54.533"/>
</kw>
<msg timestamp="20220705 18:51:54.533" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 18:51:54.336" endtime="20220705 18:51:54.533"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:54.534" endtime="20220705 18:51:54.566"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:54.566" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 18:51:54.566" endtime="20220705 18:51:54.642"/>
</kw>
<status status="PASS" starttime="20220705 18:51:54.534" endtime="20220705 18:51:54.642"/>
</kw>
<status status="PASS" starttime="20220705 18:51:54.534" endtime="20220705 18:51:54.642"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:54.643" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 18:51:54.643" endtime="20220705 18:51:54.740"/>
</kw>
<status status="PASS" starttime="20220705 18:51:54.642" endtime="20220705 18:51:54.740"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:54.741" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 18:51:54.741" endtime="20220705 18:51:54.889"/>
</kw>
<status status="PASS" starttime="20220705 18:51:54.335" endtime="20220705 18:51:54.889"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:54.890" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 18:51:54.890" endtime="20220705 18:51:54.890"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 18:51:54.908" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 18:51:54.890" endtime="20220705 18:51:54.908"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 18:51:54.908" endtime="20220705 18:51:54.908"/>
</return>
<msg timestamp="20220705 18:51:54.909" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220705 18:51:54.889" endtime="20220705 18:51:54.909"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 18:51:54.909" endtime="20220705 18:51:54.909"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:51:53.847" endtime="20220705 18:51:54.909"/>
</test>
<test id="s1-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:54.911" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 18:51:54.910" endtime="20220705 18:51:54.911"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:54.911" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220705 18:51:54.911" endtime="20220705 18:51:54.911"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:54.912" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 18:51:54.911" endtime="20220705 18:51:54.912"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:54.912" endtime="20220705 18:51:54.941"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:54.941" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 18:51:54.941" endtime="20220705 18:51:55.005"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:55.006" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 18:51:55.005" endtime="20220705 18:51:55.006"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:55.006" endtime="20220705 18:51:55.047"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:55.047" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:51:55.047" endtime="20220705 18:51:55.207"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 18:51:55.207" endtime="20220705 18:51:55.324"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:55.325" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:51:55.324" endtime="20220705 18:51:55.609"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:55.610" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 18:51:55.609" endtime="20220705 18:51:55.610"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:55.610" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 18:51:55.610" endtime="20220705 18:51:55.803"/>
</kw>
<status status="PASS" starttime="20220705 18:51:54.911" endtime="20220705 18:51:55.803"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:55.804" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220705 18:51:55.803" endtime="20220705 18:51:55.804"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:55.805" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 18:51:55.804" endtime="20220705 18:51:55.805"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:55.805" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 18:51:55.805" endtime="20220705 18:51:55.805"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:55.805" endtime="20220705 18:51:56.096"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220705 18:51:56.097" endtime="20220705 18:51:56.675"/>
</kw>
<status status="PASS" starttime="20220705 18:51:55.804" endtime="20220705 18:51:56.676"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:56.677" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 18:51:56.676" endtime="20220705 18:51:56.677"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 18:51:56.758" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220705 18:51:56.677" endtime="20220705 18:51:56.758"/>
</kw>
<status status="PASS" starttime="20220705 18:51:56.676" endtime="20220705 18:51:56.758"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:56.759" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220705 18:51:56.759" endtime="20220705 18:51:56.759"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:56.760" endtime="20220705 18:51:56.796"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:56.796" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220705 18:51:56.796" endtime="20220705 18:51:56.867"/>
</kw>
<status status="PASS" starttime="20220705 18:51:56.759" endtime="20220705 18:51:56.867"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 18:51:57.146" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220705 18:51:56.868" endtime="20220705 18:51:57.147"/>
</kw>
<msg timestamp="20220705 18:51:57.147" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220705 18:51:56.868" endtime="20220705 18:51:57.147"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:57.147" endtime="20220705 18:51:57.182"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:57.183" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220705 18:51:57.183" endtime="20220705 18:51:57.311"/>
</kw>
<status status="PASS" starttime="20220705 18:51:57.147" endtime="20220705 18:51:57.311"/>
</kw>
<status status="PASS" starttime="20220705 18:51:57.147" endtime="20220705 18:51:57.311"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:57.312" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220705 18:51:57.312" endtime="20220705 18:51:57.389"/>
</kw>
<status status="PASS" starttime="20220705 18:51:57.311" endtime="20220705 18:51:57.389"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:57.389" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220705 18:51:57.389" endtime="20220705 18:51:57.599"/>
</kw>
<status status="PASS" starttime="20220705 18:51:56.867" endtime="20220705 18:51:57.600"/>
</kw>
<status status="PASS" starttime="20220705 18:51:56.758" endtime="20220705 18:51:57.600"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:51:54.910" endtime="20220705 18:51:57.600"/>
</test>
<test id="s1-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:51:57.602" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:51:57.602" endtime="20220705 18:51:57.602"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:51:57.602" endtime="20220705 18:51:57.602"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:57.604" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:51:57.603" endtime="20220705 18:51:57.604"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:51:57.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:57.604" endtime="20220705 18:51:57.760"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:57.760" endtime="20220705 18:51:57.760"/>
</return>
<msg timestamp="20220705 18:51:57.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:57.601" endtime="20220705 18:51:57.760"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:51:57.760" endtime="20220705 18:51:57.760"/>
</return>
<msg timestamp="20220705 18:51:57.761" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:51:57.601" endtime="20220705 18:51:57.761"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:51:57.761" endtime="20220705 18:51:57.885"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:57.885" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220705 18:51:57.885" endtime="20220705 18:51:58.130"/>
</kw>
<status status="PASS" starttime="20220705 18:51:57.761" endtime="20220705 18:51:58.130"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:58.131" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220705 18:51:58.131" endtime="20220705 18:51:58.131"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:58.131" endtime="20220705 18:51:58.481"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:58.481" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220705 18:51:58.481" endtime="20220705 18:51:58.706"/>
</kw>
<status status="PASS" starttime="20220705 18:51:58.130" endtime="20220705 18:51:58.706"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:58.707" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220705 18:51:58.706" endtime="20220705 18:51:58.707"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220705 18:51:58.707" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220705 18:51:58.707" endtime="20220705 18:51:58.707"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:58.708" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 18:51:58.708" endtime="20220705 18:51:58.708"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:58.708" endtime="20220705 18:51:59.339"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:59.339" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 18:51:59.339" endtime="20220705 18:51:59.423"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:59.423" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 18:51:59.423" endtime="20220705 18:51:59.423"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:59.423" endtime="20220705 18:51:59.471"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:59.472" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:51:59.471" endtime="20220705 18:51:59.524"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 18:51:59.524" endtime="20220705 18:51:59.596"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:59.597" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:51:59.597" endtime="20220705 18:51:59.765"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:59.766" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 18:51:59.765" endtime="20220705 18:51:59.766"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:59.766" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 18:51:59.766" endtime="20220705 18:51:59.857"/>
</kw>
<status status="PASS" starttime="20220705 18:51:58.707" endtime="20220705 18:51:59.857"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:51:59.858" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220705 18:51:59.858" endtime="20220705 18:51:59.858"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:59.859" endtime="20220705 18:51:59.939"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:51:59.940" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220705 18:51:59.939" endtime="20220705 18:51:59.986"/>
</kw>
<status status="PASS" starttime="20220705 18:51:59.857" endtime="20220705 18:51:59.986"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:51:59.987" endtime="20220705 18:52:00.360"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:00.360" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220705 18:52:00.360" endtime="20220705 18:52:00.449"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220705 18:52:00.450" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220705 18:52:00.450" endtime="20220705 18:52:00.643"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:00.643" endtime="20220705 18:52:00.927"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:00.927" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220705 18:52:00.927" endtime="20220705 18:52:01.068"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 18:52:01.069" endtime="20220705 18:52:01.080"/>
</kw>
<status status="PASS" starttime="20220705 18:51:59.986" endtime="20220705 18:52:01.080"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:01.081" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220705 18:52:01.081" endtime="20220705 18:52:01.081"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220705 18:52:01.091" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220705 18:52:01.081" endtime="20220705 18:52:01.091"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220705 18:52:01.091" endtime="20220705 18:52:01.091"/>
</return>
<msg timestamp="20220705 18:52:01.091" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220705 18:52:01.080" endtime="20220705 18:52:01.091"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220705 18:52:01.092" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220705 18:52:01.092" endtime="20220705 18:52:01.092"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:52:01.092" endtime="20220705 18:52:01.092"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 18:52:01.093" endtime="20220705 18:52:01.204"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:01.208" level="INFO">${url} = boards/62c4884d9227d624fbd9e458</msg>
<status status="PASS" starttime="20220705 18:52:01.207" endtime="20220705 18:52:01.208"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:52:01.255" level="INFO">${response} = None</msg>
<msg timestamp="20220705 18:52:01.255" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220705 18:52:01.208" endtime="20220705 18:52:01.255"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:52:01.255" endtime="20220705 18:52:01.255"/>
</return>
<msg timestamp="20220705 18:52:01.256" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220705 18:52:01.207" endtime="20220705 18:52:01.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:52:01.256" endtime="20220705 18:52:01.256"/>
</return>
<status status="FAIL" starttime="20220705 18:52:01.205" endtime="20220705 18:52:01.256"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:04.259" level="INFO">${url} = boards/62c4884d9227d624fbd9e458</msg>
<status status="PASS" starttime="20220705 18:52:04.259" endtime="20220705 18:52:04.259"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:52:04.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:52:04.259" endtime="20220705 18:52:04.607"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:52:04.607" endtime="20220705 18:52:04.607"/>
</return>
<msg timestamp="20220705 18:52:04.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:52:04.258" endtime="20220705 18:52:04.608"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:52:04.608" endtime="20220705 18:52:04.608"/>
</return>
<status status="PASS" starttime="20220705 18:52:04.256" endtime="20220705 18:52:04.608"/>
</kw>
<status status="PASS" starttime="20220705 18:52:01.205" endtime="20220705 18:52:04.608"/>
</kw>
<status status="PASS" starttime="20220705 18:52:01.092" endtime="20220705 18:52:04.608"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:51:57.600" endtime="20220705 18:52:04.608"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:04.611" level="INFO">${url} = boards/62c4883d8a4a9c1e254da69e</msg>
<status status="PASS" starttime="20220705 18:52:04.610" endtime="20220705 18:52:04.611"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:52:04.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:52:04.611" endtime="20220705 18:52:04.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:52:04.971" endtime="20220705 18:52:04.971"/>
</return>
<msg timestamp="20220705 18:52:04.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:52:04.610" endtime="20220705 18:52:04.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:52:04.971" endtime="20220705 18:52:04.971"/>
</return>
<status status="PASS" starttime="20220705 18:52:04.610" endtime="20220705 18:52:04.971"/>
</kw>
<status status="PASS" starttime="20220705 18:52:04.609" endtime="20220705 18:52:04.971"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 18:52:04.971" endtime="20220705 18:52:04.972"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220705 18:52:04.972" endtime="20220705 18:52:04.973"/>
</kw>
<status status="PASS" starttime="20220705 18:52:04.609" endtime="20220705 18:52:04.973"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220705 18:51:41.805" endtime="20220705 18:52:04.973"/>
</suite>
<suite id="s1-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:52:04.990" endtime="20220705 18:52:04.990"/>
</kw>
<status status="PASS" starttime="20220705 18:52:04.990" endtime="20220705 18:52:04.990"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:52:04.991" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:52:04.991" endtime="20220705 18:52:04.991"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:52:04.991" endtime="20220705 18:52:04.992"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:04.993" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:52:04.992" endtime="20220705 18:52:04.993"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:52:05.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:52:04.993" endtime="20220705 18:52:05.229"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:52:05.229" endtime="20220705 18:52:05.229"/>
</return>
<msg timestamp="20220705 18:52:05.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:52:04.991" endtime="20220705 18:52:05.229"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:52:05.229" endtime="20220705 18:52:05.229"/>
</return>
<msg timestamp="20220705 18:52:05.229" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:52:04.990" endtime="20220705 18:52:05.229"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:52:05.231" level="INFO">${TEST_SUITE_BOARD_ID} = 62c488551c8d2610587edf37</msg>
<status status="PASS" starttime="20220705 18:52:05.230" endtime="20220705 18:52:05.231"/>
</kw>
<status status="PASS" starttime="20220705 18:52:04.990" endtime="20220705 18:52:05.231"/>
</kw>
<status status="PASS" starttime="20220705 18:52:04.989" endtime="20220705 18:52:05.231"/>
</kw>
<test id="s1-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 18:52:05.233" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 18:52:05.232" endtime="20220705 18:52:06.322"/>
</kw>
<status status="PASS" starttime="20220705 18:52:05.232" endtime="20220705 18:52:06.322"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:06.322" endtime="20220705 18:52:06.322"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:06.322" endtime="20220705 18:52:06.322"/>
</branch>
<status status="PASS" starttime="20220705 18:52:05.232" endtime="20220705 18:52:06.322"/>
</if>
<status status="PASS" starttime="20220705 18:52:05.232" endtime="20220705 18:52:06.322"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 18:52:06.323" endtime="20220705 18:52:06.441"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:52:06.449" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:52:06.442" endtime="20220705 18:52:06.449"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:06.450" endtime="20220705 18:52:06.450"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:06.450" endtime="20220705 18:52:06.450"/>
</branch>
<status status="PASS" starttime="20220705 18:52:06.450" endtime="20220705 18:52:06.450"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:06.450" endtime="20220705 18:52:06.490"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:06.491" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 18:52:06.490" endtime="20220705 18:52:06.577"/>
</kw>
<status status="PASS" starttime="20220705 18:52:06.450" endtime="20220705 18:52:06.577"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 18:52:06.578" endtime="20220705 18:52:07.310"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:52:07.321" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:52:07.311" endtime="20220705 18:52:07.321"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:07.322" endtime="20220705 18:52:07.363"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:07.363" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 18:52:07.363" endtime="20220705 18:52:08.135"/>
</kw>
<status status="PASS" starttime="20220705 18:52:07.322" endtime="20220705 18:52:08.135"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:52:08.135" endtime="20220705 18:52:08.135"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:08.136" endtime="20220705 18:52:08.136"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:08.135" endtime="20220705 18:52:08.136"/>
</branch>
<status status="PASS" starttime="20220705 18:52:07.321" endtime="20220705 18:52:08.136"/>
</if>
<status status="PASS" starttime="20220705 18:52:07.310" endtime="20220705 18:52:08.136"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 18:52:08.136" endtime="20220705 18:52:08.148"/>
</kw>
<status status="PASS" starttime="20220705 18:52:08.136" endtime="20220705 18:52:08.148"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:08.149" endtime="20220705 18:52:08.189"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:08.190" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 18:52:08.235" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 18:52:08.291" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 18:52:08.190" endtime="20220705 18:52:08.291"/>
</kw>
<status status="PASS" starttime="20220705 18:52:08.148" endtime="20220705 18:52:08.291"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:52:08.317" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c488...</msg>
<status status="PASS" starttime="20220705 18:52:08.292" endtime="20220705 18:52:08.317"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:52:08.318" endtime="20220705 18:52:08.318"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:08.318" endtime="20220705 18:52:08.318"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:08.317" endtime="20220705 18:52:08.318"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:08.318" endtime="20220705 18:52:08.388"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:08.389" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 18:52:08.388" endtime="20220705 18:52:08.478"/>
</kw>
<status status="PASS" starttime="20220705 18:52:08.318" endtime="20220705 18:52:08.478"/>
</branch>
<status status="PASS" starttime="20220705 18:52:08.317" endtime="20220705 18:52:08.478"/>
</if>
<status status="PASS" starttime="20220705 18:52:08.292" endtime="20220705 18:52:08.478"/>
</kw>
<status status="PASS" starttime="20220705 18:52:06.441" endtime="20220705 18:52:08.478"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:08.479" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 18:52:08.479" endtime="20220705 18:52:08.479"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:08.479" endtime="20220705 18:52:11.525"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:11.525" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 18:52:11.525" endtime="20220705 18:52:11.890"/>
</kw>
<status status="PASS" starttime="20220705 18:52:08.478" endtime="20220705 18:52:11.890"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:11.891" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 18:52:11.891" endtime="20220705 18:52:11.891"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:11.891" endtime="20220705 18:52:12.351"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:12.352" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 18:52:12.351" endtime="20220705 18:52:12.460"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:12.461" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 18:52:12.460" endtime="20220705 18:52:12.461"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:12.461" endtime="20220705 18:52:12.524"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:12.525" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:52:12.525" endtime="20220705 18:52:12.588"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 18:52:12.588" endtime="20220705 18:52:12.631"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:12.632" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:52:12.631" endtime="20220705 18:52:12.726"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:12.727" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 18:52:12.726" endtime="20220705 18:52:12.727"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:12.727" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 18:52:12.727" endtime="20220705 18:52:12.867"/>
</kw>
<status status="PASS" starttime="20220705 18:52:11.890" endtime="20220705 18:52:12.867"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:12.868" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 18:52:12.867" endtime="20220705 18:52:12.868"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:12.868" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220705 18:52:12.868" endtime="20220705 18:52:12.868"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:12.868" endtime="20220705 18:52:12.901"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220705 18:52:17.902" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220705 18:52:12.902" endtime="20220705 18:52:17.902"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220705 18:52:17.903" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220705 18:52:17.902" endtime="20220705 18:52:18.201"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220705 18:52:23.201" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220705 18:52:18.201" endtime="20220705 18:52:23.201"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 18:52:23.202" endtime="20220705 18:52:23.215"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:23.216" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220705 18:52:23.216" endtime="20220705 18:52:23.293"/>
</kw>
<status status="PASS" starttime="20220705 18:52:12.867" endtime="20220705 18:52:23.293"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:23.294" endtime="20220705 18:52:23.348"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:23.349" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220705 18:52:23.348" endtime="20220705 18:52:23.435"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:23.435" endtime="20220705 18:52:23.480"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:23.480" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220705 18:52:23.480" endtime="20220705 18:52:23.545"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:23.546" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220705 18:52:23.546" endtime="20220705 18:52:23.625"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:23.625" endtime="20220705 18:52:23.657"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:52:23.657" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220705 18:52:23.931" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 18:52:23.931" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 18:52:23.657" endtime="20220705 18:52:23.956"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:52:23.957" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220705 18:52:23.957" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220705 18:52:23.957" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220705 18:52:23.956" endtime="20220705 18:52:23.967"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:52:23.968" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220705 18:52:23.968" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220705 18:52:23.968" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220705 18:52:23.968" endtime="20220705 18:52:23.979"/>
</kw>
<status status="PASS" starttime="20220705 18:52:23.293" endtime="20220705 18:52:23.979"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:23.980" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 18:52:23.980" endtime="20220705 18:52:23.980"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:23.980" endtime="20220705 18:52:24.013"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:24.014" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 18:52:24.013" endtime="20220705 18:52:24.079"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:24.080" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 18:52:24.079" endtime="20220705 18:52:24.080"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:24.080" endtime="20220705 18:52:24.132"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:24.132" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:52:24.132" endtime="20220705 18:52:24.171"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 18:52:24.171" endtime="20220705 18:52:24.203"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:24.204" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:52:24.203" endtime="20220705 18:52:24.262"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:24.263" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 18:52:24.262" endtime="20220705 18:52:24.263"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:24.263" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 18:52:24.263" endtime="20220705 18:52:24.322"/>
</kw>
<status status="PASS" starttime="20220705 18:52:23.979" endtime="20220705 18:52:24.322"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:24.323" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220705 18:52:24.323" endtime="20220705 18:52:24.323"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:24.323" endtime="20220705 18:52:24.362"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:24.363" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220705 18:52:24.363" endtime="20220705 18:52:24.424"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:24.425" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220705 18:52:24.424" endtime="20220705 18:52:24.425"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:24.425" endtime="20220705 18:52:24.451"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:24.452" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:52:24.451" endtime="20220705 18:52:24.525"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220705 18:52:24.525" endtime="20220705 18:52:24.598"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:24.599" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220705 18:52:24.598" endtime="20220705 18:52:24.674"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:24.675" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220705 18:52:24.674" endtime="20220705 18:52:24.675"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:24.675" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220705 18:52:24.675" endtime="20220705 18:52:24.740"/>
</kw>
<status status="PASS" starttime="20220705 18:52:24.322" endtime="20220705 18:52:24.741"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:24.741" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220705 18:52:24.741" endtime="20220705 18:52:24.840"/>
</kw>
<status status="PASS" starttime="20220705 18:52:24.741" endtime="20220705 18:52:24.840"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:24.841" endtime="20220705 18:52:24.966"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:24.966" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220705 18:52:24.966" endtime="20220705 18:52:25.106"/>
</kw>
<status status="PASS" starttime="20220705 18:52:24.840" endtime="20220705 18:52:25.106"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:25.107" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 18:52:25.106" endtime="20220705 18:52:25.107"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220705 18:52:25.160" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220705 18:52:25.107" endtime="20220705 18:52:25.160"/>
</kw>
<status status="PASS" starttime="20220705 18:52:25.106" endtime="20220705 18:52:25.161"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:25.161" endtime="20220705 18:52:25.191"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:25.191" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220705 18:52:25.191" endtime="20220705 18:52:25.288"/>
</kw>
<status status="PASS" starttime="20220705 18:52:25.161" endtime="20220705 18:52:25.288"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:25.289" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220705 18:52:25.289" endtime="20220705 18:52:25.289"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220705 18:52:25.349" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220705 18:52:25.289" endtime="20220705 18:52:25.349"/>
</kw>
<status status="PASS" starttime="20220705 18:52:25.288" endtime="20220705 18:52:25.349"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 18:52:25.350" endtime="20220705 18:52:25.449"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:52:05.231" endtime="20220705 18:52:25.450"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:25.453" level="INFO">${url} = boards/62c488551c8d2610587edf37</msg>
<status status="PASS" starttime="20220705 18:52:25.453" endtime="20220705 18:52:25.453"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:52:25.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:52:25.453" endtime="20220705 18:52:25.891"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:52:25.891" endtime="20220705 18:52:25.891"/>
</return>
<msg timestamp="20220705 18:52:25.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:52:25.452" endtime="20220705 18:52:25.891"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:52:25.891" endtime="20220705 18:52:25.891"/>
</return>
<status status="PASS" starttime="20220705 18:52:25.452" endtime="20220705 18:52:25.892"/>
</kw>
<status status="PASS" starttime="20220705 18:52:25.452" endtime="20220705 18:52:25.892"/>
</kw>
<status status="PASS" starttime="20220705 18:52:25.451" endtime="20220705 18:52:25.892"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 18:52:25.892" endtime="20220705 18:52:25.893"/>
</kw>
<status status="PASS" starttime="20220705 18:52:25.451" endtime="20220705 18:52:25.893"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220705 18:52:04.975" endtime="20220705 18:52:25.893"/>
</suite>
<suite id="s1-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:52:25.906" endtime="20220705 18:52:25.906"/>
</kw>
<status status="PASS" starttime="20220705 18:52:25.906" endtime="20220705 18:52:25.906"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:52:25.907" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:52:25.907" endtime="20220705 18:52:25.907"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:52:25.907" endtime="20220705 18:52:25.908"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:25.909" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:52:25.908" endtime="20220705 18:52:25.909"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:52:26.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:52:25.909" endtime="20220705 18:52:26.106"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:52:26.106" endtime="20220705 18:52:26.106"/>
</return>
<msg timestamp="20220705 18:52:26.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:52:25.907" endtime="20220705 18:52:26.106"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:52:26.106" endtime="20220705 18:52:26.106"/>
</return>
<msg timestamp="20220705 18:52:26.106" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:52:25.907" endtime="20220705 18:52:26.106"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:52:26.108" level="INFO">${TEST_SUITE_BOARD_ID} = 62c4886992dd4f6f0087db23</msg>
<status status="PASS" starttime="20220705 18:52:26.106" endtime="20220705 18:52:26.108"/>
</kw>
<status status="PASS" starttime="20220705 18:52:25.906" endtime="20220705 18:52:26.108"/>
</kw>
<status status="PASS" starttime="20220705 18:52:25.906" endtime="20220705 18:52:26.108"/>
</kw>
<test id="s1-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 18:52:26.110" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 18:52:26.109" endtime="20220705 18:52:27.008"/>
</kw>
<status status="PASS" starttime="20220705 18:52:26.109" endtime="20220705 18:52:27.008"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:27.008" endtime="20220705 18:52:27.008"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:27.008" endtime="20220705 18:52:27.008"/>
</branch>
<status status="PASS" starttime="20220705 18:52:26.109" endtime="20220705 18:52:27.008"/>
</if>
<status status="PASS" starttime="20220705 18:52:26.109" endtime="20220705 18:52:27.008"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 18:52:27.008" endtime="20220705 18:52:27.125"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:52:27.132" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:52:27.125" endtime="20220705 18:52:27.132"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:27.132" endtime="20220705 18:52:27.132"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:27.132" endtime="20220705 18:52:27.132"/>
</branch>
<status status="PASS" starttime="20220705 18:52:27.132" endtime="20220705 18:52:27.132"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:27.133" endtime="20220705 18:52:27.167"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:27.168" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 18:52:27.167" endtime="20220705 18:52:27.251"/>
</kw>
<status status="PASS" starttime="20220705 18:52:27.132" endtime="20220705 18:52:27.252"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 18:52:27.252" endtime="20220705 18:52:27.940"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:52:27.949" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:52:27.940" endtime="20220705 18:52:27.949"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:27.949" endtime="20220705 18:52:28.024"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:28.024" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 18:52:28.024" endtime="20220705 18:52:28.761"/>
</kw>
<status status="PASS" starttime="20220705 18:52:27.949" endtime="20220705 18:52:28.761"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:52:28.762" endtime="20220705 18:52:28.762"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:28.762" endtime="20220705 18:52:28.762"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:28.762" endtime="20220705 18:52:28.762"/>
</branch>
<status status="PASS" starttime="20220705 18:52:27.949" endtime="20220705 18:52:28.762"/>
</if>
<status status="PASS" starttime="20220705 18:52:27.940" endtime="20220705 18:52:28.762"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 18:52:28.763" endtime="20220705 18:52:28.773"/>
</kw>
<status status="PASS" starttime="20220705 18:52:28.762" endtime="20220705 18:52:28.773"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:28.774" endtime="20220705 18:52:28.808"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:28.809" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 18:52:28.850" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 18:52:28.907" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 18:52:28.808" endtime="20220705 18:52:28.907"/>
</kw>
<status status="PASS" starttime="20220705 18:52:28.773" endtime="20220705 18:52:28.907"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:52:28.916" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c488...</msg>
<status status="PASS" starttime="20220705 18:52:28.907" endtime="20220705 18:52:28.917"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:52:28.917" endtime="20220705 18:52:28.917"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:28.917" endtime="20220705 18:52:28.917"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:28.917" endtime="20220705 18:52:28.917"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:28.917" endtime="20220705 18:52:28.965"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:28.966" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 18:52:28.965" endtime="20220705 18:52:29.050"/>
</kw>
<status status="PASS" starttime="20220705 18:52:28.917" endtime="20220705 18:52:29.051"/>
</branch>
<status status="PASS" starttime="20220705 18:52:28.917" endtime="20220705 18:52:29.051"/>
</if>
<status status="PASS" starttime="20220705 18:52:28.907" endtime="20220705 18:52:29.051"/>
</kw>
<status status="PASS" starttime="20220705 18:52:27.125" endtime="20220705 18:52:29.051"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:29.052" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 18:52:29.051" endtime="20220705 18:52:29.052"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:29.052" endtime="20220705 18:52:31.963"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:31.963" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 18:52:31.963" endtime="20220705 18:52:32.330"/>
</kw>
<status status="PASS" starttime="20220705 18:52:29.051" endtime="20220705 18:52:32.330"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 18:52:32.331" endtime="20220705 18:52:32.716"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:32.717" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 18:52:32.716" endtime="20220705 18:52:32.870"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:32.871" endtime="20220705 18:52:32.946"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:32.946" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 18:52:32.946" endtime="20220705 18:52:33.045"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:52:33.045" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 18:52:33.340" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 18:52:33.340" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 18:52:33.045" endtime="20220705 18:52:33.369"/>
</kw>
<status status="PASS" starttime="20220705 18:52:32.330" endtime="20220705 18:52:33.370"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:33.370" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 18:52:33.370" endtime="20220705 18:52:33.370"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:33.371" endtime="20220705 18:52:33.422"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 18:52:33.430" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220705 18:52:33.422" endtime="20220705 18:52:33.430"/>
</kw>
<status status="PASS" starttime="20220705 18:52:33.370" endtime="20220705 18:52:33.430"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:33.431" endtime="20220705 18:52:33.495"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:33.496" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 18:52:33.496" endtime="20220705 18:52:33.567"/>
</kw>
<status status="PASS" starttime="20220705 18:52:33.496" endtime="20220705 18:52:33.567"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:33.568" endtime="20220705 18:52:33.634"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:33.635" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 18:52:33.634" endtime="20220705 18:52:33.692"/>
</kw>
<status status="PASS" starttime="20220705 18:52:33.634" endtime="20220705 18:52:33.692"/>
</kw>
<status status="PASS" starttime="20220705 18:52:33.431" endtime="20220705 18:52:33.692"/>
</kw>
<status status="PASS" starttime="20220705 18:52:33.431" endtime="20220705 18:52:33.692"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 18:52:33.692" endtime="20220705 18:52:33.801"/>
</kw>
<status status="PASS" starttime="20220705 18:52:33.430" endtime="20220705 18:52:33.801"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:52:26.108" endtime="20220705 18:52:33.801"/>
</test>
<test id="s1-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 18:52:33.805" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 18:52:33.804" endtime="20220705 18:52:34.687"/>
</kw>
<status status="PASS" starttime="20220705 18:52:33.804" endtime="20220705 18:52:34.687"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:34.687" endtime="20220705 18:52:34.687"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:34.687" endtime="20220705 18:52:34.687"/>
</branch>
<status status="PASS" starttime="20220705 18:52:33.804" endtime="20220705 18:52:34.687"/>
</if>
<status status="PASS" starttime="20220705 18:52:33.803" endtime="20220705 18:52:34.688"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 18:52:34.688" endtime="20220705 18:52:34.799"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:52:34.833" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:52:34.799" endtime="20220705 18:52:34.833"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:34.833" endtime="20220705 18:52:34.833"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:34.833" endtime="20220705 18:52:34.833"/>
</branch>
<status status="PASS" starttime="20220705 18:52:34.833" endtime="20220705 18:52:34.833"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:34.834" endtime="20220705 18:52:34.865"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:34.866" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 18:52:34.866" endtime="20220705 18:52:34.957"/>
</kw>
<status status="PASS" starttime="20220705 18:52:34.833" endtime="20220705 18:52:34.957"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 18:52:34.957" endtime="20220705 18:52:35.662"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:52:35.669" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:52:35.663" endtime="20220705 18:52:35.669"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:35.670" endtime="20220705 18:52:35.724"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:35.724" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 18:52:35.724" endtime="20220705 18:52:36.522"/>
</kw>
<status status="PASS" starttime="20220705 18:52:35.670" endtime="20220705 18:52:36.522"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:52:36.523" endtime="20220705 18:52:36.523"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:36.523" endtime="20220705 18:52:36.523"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:36.522" endtime="20220705 18:52:36.523"/>
</branch>
<status status="PASS" starttime="20220705 18:52:35.669" endtime="20220705 18:52:36.523"/>
</if>
<status status="PASS" starttime="20220705 18:52:35.662" endtime="20220705 18:52:36.523"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 18:52:36.523" endtime="20220705 18:52:36.547"/>
</kw>
<status status="PASS" starttime="20220705 18:52:36.523" endtime="20220705 18:52:36.547"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:36.547" endtime="20220705 18:52:36.604"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:36.604" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 18:52:36.665" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 18:52:36.722" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 18:52:36.604" endtime="20220705 18:52:36.723"/>
</kw>
<status status="PASS" starttime="20220705 18:52:36.547" endtime="20220705 18:52:36.723"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:52:36.730" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c488...</msg>
<status status="PASS" starttime="20220705 18:52:36.723" endtime="20220705 18:52:36.730"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:52:36.730" endtime="20220705 18:52:36.730"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:36.730" endtime="20220705 18:52:36.730"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:36.730" endtime="20220705 18:52:36.730"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:36.731" endtime="20220705 18:52:36.770"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:36.770" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 18:52:36.770" endtime="20220705 18:52:36.878"/>
</kw>
<status status="PASS" starttime="20220705 18:52:36.731" endtime="20220705 18:52:36.878"/>
</branch>
<status status="PASS" starttime="20220705 18:52:36.730" endtime="20220705 18:52:36.878"/>
</if>
<status status="PASS" starttime="20220705 18:52:36.723" endtime="20220705 18:52:36.878"/>
</kw>
<status status="PASS" starttime="20220705 18:52:34.799" endtime="20220705 18:52:36.878"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:36.879" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 18:52:36.879" endtime="20220705 18:52:36.879"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:36.879" endtime="20220705 18:52:39.932"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:39.932" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 18:52:39.932" endtime="20220705 18:52:40.322"/>
</kw>
<status status="PASS" starttime="20220705 18:52:36.878" endtime="20220705 18:52:40.322"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 18:52:40.323" endtime="20220705 18:52:40.737"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:40.738" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 18:52:40.737" endtime="20220705 18:52:40.901"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:40.901" endtime="20220705 18:52:40.968"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:40.969" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 18:52:40.969" endtime="20220705 18:52:41.064"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:52:41.065" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 18:52:41.353" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 18:52:41.354" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 18:52:41.064" endtime="20220705 18:52:41.379"/>
</kw>
<status status="PASS" starttime="20220705 18:52:40.323" endtime="20220705 18:52:41.380"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:41.380" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220705 18:52:41.380" endtime="20220705 18:52:41.380"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:41.381" endtime="20220705 18:52:41.427"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:41.428" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220705 18:52:41.427" endtime="20220705 18:52:41.482"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:41.482" endtime="20220705 18:52:41.551"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:52:41.552" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 18:52:41.836" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220705 18:52:41.836" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220705 18:52:41.551" endtime="20220705 18:52:41.864"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:41.865" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220705 18:52:41.865" endtime="20220705 18:52:41.963"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:52:41.964" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220705 18:52:41.964" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220705 18:52:41.964" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 18:52:41.963" endtime="20220705 18:52:41.979"/>
</kw>
<status status="PASS" starttime="20220705 18:52:41.380" endtime="20220705 18:52:41.979"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:41.980" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220705 18:52:41.980" endtime="20220705 18:52:41.980"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:41.980" endtime="20220705 18:52:42.019"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 18:52:42.028" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220705 18:52:42.019" endtime="20220705 18:52:42.028"/>
</kw>
<status status="PASS" starttime="20220705 18:52:41.979" endtime="20220705 18:52:42.028"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:42.029" endtime="20220705 18:52:42.077"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:42.078" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 18:52:42.078" endtime="20220705 18:52:42.157"/>
</kw>
<status status="PASS" starttime="20220705 18:52:42.077" endtime="20220705 18:52:42.158"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:42.158" endtime="20220705 18:52:42.219"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:42.220" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 18:52:42.219" endtime="20220705 18:52:42.291"/>
</kw>
<status status="PASS" starttime="20220705 18:52:42.219" endtime="20220705 18:52:42.291"/>
</kw>
<status status="PASS" starttime="20220705 18:52:42.029" endtime="20220705 18:52:42.291"/>
</kw>
<status status="PASS" starttime="20220705 18:52:42.029" endtime="20220705 18:52:42.291"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 18:52:42.291" endtime="20220705 18:52:42.407"/>
</kw>
<status status="PASS" starttime="20220705 18:52:42.028" endtime="20220705 18:52:42.407"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:52:33.803" endtime="20220705 18:52:42.407"/>
</test>
<test id="s1-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 18:52:42.409" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 18:52:42.409" endtime="20220705 18:52:43.256"/>
</kw>
<status status="PASS" starttime="20220705 18:52:42.409" endtime="20220705 18:52:43.256"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:43.256" endtime="20220705 18:52:43.256"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:43.256" endtime="20220705 18:52:43.256"/>
</branch>
<status status="PASS" starttime="20220705 18:52:42.409" endtime="20220705 18:52:43.256"/>
</if>
<status status="PASS" starttime="20220705 18:52:42.408" endtime="20220705 18:52:43.256"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220705 18:52:43.256" endtime="20220705 18:52:43.371"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:52:43.379" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:52:43.372" endtime="20220705 18:52:43.379"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:43.379" endtime="20220705 18:52:43.379"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:43.379" endtime="20220705 18:52:43.379"/>
</branch>
<status status="PASS" starttime="20220705 18:52:43.379" endtime="20220705 18:52:43.379"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:43.380" endtime="20220705 18:52:43.408"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:43.409" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 18:52:43.409" endtime="20220705 18:52:43.526"/>
</kw>
<status status="PASS" starttime="20220705 18:52:43.380" endtime="20220705 18:52:43.527"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 18:52:43.527" endtime="20220705 18:52:44.231"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:52:44.236" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:52:44.231" endtime="20220705 18:52:44.236"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:44.236" endtime="20220705 18:52:44.274"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:44.274" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 18:52:44.274" endtime="20220705 18:52:45.019"/>
</kw>
<status status="PASS" starttime="20220705 18:52:44.236" endtime="20220705 18:52:45.019"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:52:45.019" endtime="20220705 18:52:45.019"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:45.019" endtime="20220705 18:52:45.019"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:45.019" endtime="20220705 18:52:45.019"/>
</branch>
<status status="PASS" starttime="20220705 18:52:44.236" endtime="20220705 18:52:45.019"/>
</if>
<status status="PASS" starttime="20220705 18:52:44.231" endtime="20220705 18:52:45.020"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 18:52:45.020" endtime="20220705 18:52:45.028"/>
</kw>
<status status="PASS" starttime="20220705 18:52:45.020" endtime="20220705 18:52:45.028"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:45.028" endtime="20220705 18:52:45.071"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:45.071" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 18:52:45.111" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 18:52:45.171" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 18:52:45.071" endtime="20220705 18:52:45.171"/>
</kw>
<status status="PASS" starttime="20220705 18:52:45.028" endtime="20220705 18:52:45.171"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:52:45.179" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c488...</msg>
<status status="PASS" starttime="20220705 18:52:45.172" endtime="20220705 18:52:45.179"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:52:45.179" endtime="20220705 18:52:45.179"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:52:45.179" endtime="20220705 18:52:45.179"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:52:45.179" endtime="20220705 18:52:45.179"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:45.179" endtime="20220705 18:52:45.216"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:45.216" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 18:52:45.216" endtime="20220705 18:52:45.317"/>
</kw>
<status status="PASS" starttime="20220705 18:52:45.179" endtime="20220705 18:52:45.317"/>
</branch>
<status status="PASS" starttime="20220705 18:52:45.179" endtime="20220705 18:52:45.317"/>
</if>
<status status="PASS" starttime="20220705 18:52:45.171" endtime="20220705 18:52:45.317"/>
</kw>
<status status="PASS" starttime="20220705 18:52:43.372" endtime="20220705 18:52:45.318"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:52:45.318" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220705 18:52:45.318" endtime="20220705 18:52:45.318"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:52:45.319" endtime="20220705 18:52:48.325"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:48.325" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220705 18:52:48.325" endtime="20220705 18:52:48.824"/>
</kw>
<status status="PASS" starttime="20220705 18:52:45.318" endtime="20220705 18:52:48.824"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220705 18:52:48.825" endtime="20220705 18:52:49.202"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:49.202" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220705 18:52:49.202" endtime="20220705 18:52:49.374"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:49.374" endtime="20220705 18:52:49.441"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:49.442" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220705 18:52:49.442" endtime="20220705 18:52:49.561"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220705 18:52:49.562" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220705 18:52:49.884" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220705 18:52:49.884" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220705 18:52:49.561" endtime="20220705 18:52:49.908"/>
</kw>
<status status="PASS" starttime="20220705 18:52:48.824" endtime="20220705 18:52:49.908"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:52:49.909" endtime="20220705 18:52:49.952"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:52:49.953" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 18:52:49.953" endtime="20220705 18:52:50.001"/>
</kw>
<status status="PASS" starttime="20220705 18:52:49.953" endtime="20220705 18:52:50.001"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<msg timestamp="20220705 18:52:50.067" level="INFO">Suppressing StaleElementReferenceException from Selenium.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220705 18:53:00.205" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220705 18:53:00.089" endtime="20220705 18:53:00.205"/>
</kw>
<msg timestamp="20220705 18:53:00.206" level="FAIL">Element with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220705 18:52:50.002" endtime="20220705 18:53:00.207"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20220705 18:53:00.207" endtime="20220705 18:53:00.207"/>
</kw>
<status status="FAIL" starttime="20220705 18:52:49.909" endtime="20220705 18:53:00.207"/>
</kw>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:53:03.209" endtime="20220705 18:53:03.250"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:53:03.251" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220705 18:53:03.251" endtime="20220705 18:53:03.301"/>
</kw>
<status status="PASS" starttime="20220705 18:53:03.250" endtime="20220705 18:53:03.301"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:53:03.301" endtime="20220705 18:53:03.363"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:53:03.364" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220705 18:53:03.363" endtime="20220705 18:53:03.421"/>
</kw>
<status status="PASS" starttime="20220705 18:53:03.363" endtime="20220705 18:53:03.422"/>
</kw>
<status status="PASS" starttime="20220705 18:53:03.208" endtime="20220705 18:53:03.422"/>
</kw>
<status status="PASS" starttime="20220705 18:52:49.908" endtime="20220705 18:53:03.422"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:53:03.422" endtime="20220705 18:53:03.464"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:53:03.465" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220705 18:53:03.465" endtime="20220705 18:53:03.546"/>
</kw>
<status status="PASS" starttime="20220705 18:53:03.422" endtime="20220705 18:53:03.546"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:53:03.547" endtime="20220705 18:53:03.607"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:53:03.608" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220705 18:53:03.607" endtime="20220705 18:53:03.720"/>
</kw>
<status status="PASS" starttime="20220705 18:53:03.607" endtime="20220705 18:53:03.720"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:53:03.720" endtime="20220705 18:53:03.778"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:53:03.779" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220705 18:53:03.778" endtime="20220705 18:53:03.839"/>
</kw>
<status status="PASS" starttime="20220705 18:53:03.778" endtime="20220705 18:53:03.839"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:53:03.839" endtime="20220705 18:53:03.889"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:53:03.890" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220705 18:53:03.890" endtime="20220705 18:53:03.962"/>
</kw>
<status status="PASS" starttime="20220705 18:53:03.889" endtime="20220705 18:53:03.962"/>
</kw>
<status status="PASS" starttime="20220705 18:53:03.546" endtime="20220705 18:53:03.962"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:53:03.963" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220705 18:53:03.963" endtime="20220705 18:53:03.963"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:53:03.963" endtime="20220705 18:53:04.222"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220705 18:53:04.230" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220705 18:53:04.222" endtime="20220705 18:53:04.230"/>
</kw>
<status status="PASS" starttime="20220705 18:53:03.962" endtime="20220705 18:53:04.230"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:53:04.231" endtime="20220705 18:53:04.260"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220705 18:53:04.261" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220705 18:53:04.261" endtime="20220705 18:53:04.337"/>
</kw>
<status status="PASS" starttime="20220705 18:53:04.231" endtime="20220705 18:53:04.337"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 18:53:04.337" endtime="20220705 18:53:04.427"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:52:42.408" endtime="20220705 18:53:04.427"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:53:04.430" level="INFO">${url} = boards/62c4886992dd4f6f0087db23</msg>
<status status="PASS" starttime="20220705 18:53:04.430" endtime="20220705 18:53:04.430"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:53:04.858" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:53:04.431" endtime="20220705 18:53:04.858"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:53:04.858" endtime="20220705 18:53:04.858"/>
</return>
<msg timestamp="20220705 18:53:04.859" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:53:04.430" endtime="20220705 18:53:04.859"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:53:04.859" endtime="20220705 18:53:04.859"/>
</return>
<status status="PASS" starttime="20220705 18:53:04.429" endtime="20220705 18:53:04.859"/>
</kw>
<status status="PASS" starttime="20220705 18:53:04.429" endtime="20220705 18:53:04.859"/>
</kw>
<status status="PASS" starttime="20220705 18:53:04.429" endtime="20220705 18:53:04.859"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 18:53:04.859" endtime="20220705 18:53:04.860"/>
</kw>
<status status="PASS" starttime="20220705 18:53:04.429" endtime="20220705 18:53:04.860"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220705 18:52:25.894" endtime="20220705 18:53:04.860"/>
</suite>
<suite id="s1-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220705 18:53:04.868" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220705 18:53:04.868" endtime="20220705 18:53:05.787"/>
</kw>
<status status="PASS" starttime="20220705 18:53:04.868" endtime="20220705 18:53:05.787"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220705 18:53:05.787" endtime="20220705 18:53:05.787"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:53:05.787" endtime="20220705 18:53:05.787"/>
</branch>
<status status="PASS" starttime="20220705 18:53:04.868" endtime="20220705 18:53:05.787"/>
</if>
<status status="PASS" starttime="20220705 18:53:04.867" endtime="20220705 18:53:05.787"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:53:05.788" endtime="20220705 18:53:05.825"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:53:05.826" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220705 18:53:05.825" endtime="20220705 18:53:05.930"/>
</kw>
<status status="PASS" starttime="20220705 18:53:05.787" endtime="20220705 18:53:05.930"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220705 18:53:05.930" endtime="20220705 18:53:06.627"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:53:06.635" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220705 18:53:06.628" endtime="20220705 18:53:06.635"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:53:06.636" endtime="20220705 18:53:06.701"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:53:06.701" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220705 18:53:06.701" endtime="20220705 18:53:07.449"/>
</kw>
<status status="PASS" starttime="20220705 18:53:06.636" endtime="20220705 18:53:07.449"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:53:07.449" endtime="20220705 18:53:07.450"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:53:07.450" endtime="20220705 18:53:07.450"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:53:07.449" endtime="20220705 18:53:07.450"/>
</branch>
<status status="PASS" starttime="20220705 18:53:06.635" endtime="20220705 18:53:07.450"/>
</if>
<status status="PASS" starttime="20220705 18:53:06.627" endtime="20220705 18:53:07.450"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 18:53:07.450" endtime="20220705 18:53:07.462"/>
</kw>
<status status="PASS" starttime="20220705 18:53:07.450" endtime="20220705 18:53:07.463"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:53:07.463" endtime="20220705 18:53:07.498"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220705 18:53:07.499" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220705 18:53:07.546" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220705 18:53:07.608" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220705 18:53:07.498" endtime="20220705 18:53:07.608"/>
</kw>
<status status="PASS" starttime="20220705 18:53:07.463" endtime="20220705 18:53:07.609"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220705 18:53:07.620" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c488...</msg>
<status status="PASS" starttime="20220705 18:53:07.609" endtime="20220705 18:53:07.620"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220705 18:53:07.620" endtime="20220705 18:53:07.620"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220705 18:53:07.620" endtime="20220705 18:53:07.620"/>
</kw>
<status status="NOT RUN" starttime="20220705 18:53:07.620" endtime="20220705 18:53:07.620"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220705 18:53:07.620" endtime="20220705 18:53:07.672"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220705 18:53:07.672" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220705 18:53:07.672" endtime="20220705 18:53:07.758"/>
</kw>
<status status="PASS" starttime="20220705 18:53:07.620" endtime="20220705 18:53:07.758"/>
</branch>
<status status="PASS" starttime="20220705 18:53:07.620" endtime="20220705 18:53:07.758"/>
</if>
<status status="PASS" starttime="20220705 18:53:07.609" endtime="20220705 18:53:07.758"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220705 18:53:07.758" endtime="20220705 18:53:10.736"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220705 18:53:10.736" endtime="20220705 18:53:10.780"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220705 18:53:10.780" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220705 18:53:10.780" endtime="20220705 18:53:10.800"/>
</kw>
<status status="PASS" starttime="20220705 18:53:07.758" endtime="20220705 18:53:10.800"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220705 18:53:10.800" endtime="20220705 18:53:10.899"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:53:04.867" endtime="20220705 18:53:10.900"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220705 18:53:04.862" endtime="20220705 18:53:10.901"/>
</suite>
<status status="PASS" starttime="20220705 18:51:01.666" endtime="20220705 18:53:10.902"/>
</suite>
<status status="PASS" starttime="20220705 18:51:01.649" endtime="20220705 18:53:10.905"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.update.description</stat>
<stat pass="1" fail="0" skip="0">board.update.name</stat>
<stat pass="1" fail="0" skip="0">card.comment</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.drag</stat>
<stat pass="1" fail="0" skip="0">card.move</stat>
<stat pass="1" fail="0" skip="0">card.title_board</stat>
<stat pass="15" fail="0" skip="0">gui</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="2" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="4" fail="0" skip="0">regression</stat>
<stat pass="11" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="15" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1" name="Gui">Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="Trello Gui Board">Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s2" name="Trello Gui Cards">Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Trello Gui Labels">Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Gui Lists">Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Trello Gui Login">Trello.Gui.Trello Gui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
