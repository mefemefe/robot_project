<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 18:50:11.523" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:50:11.647" endtime="20220705 18:50:11.648"/>
</kw>
<status status="PASS" starttime="20220705 18:50:11.646" endtime="20220705 18:50:11.648"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:11.649" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:11.649" endtime="20220705 18:50:11.649"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:11.649" endtime="20220705 18:50:11.650"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:11.650" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:50:11.650" endtime="20220705 18:50:11.650"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:11.860" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:11.651" endtime="20220705 18:50:11.860"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:11.861" endtime="20220705 18:50:11.861"/>
</return>
<msg timestamp="20220705 18:50:11.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:11.649" endtime="20220705 18:50:11.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:11.861" endtime="20220705 18:50:11.861"/>
</return>
<msg timestamp="20220705 18:50:11.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:11.648" endtime="20220705 18:50:11.861"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:11.862" endtime="20220705 18:50:11.866"/>
</kw>
<status status="PASS" starttime="20220705 18:50:11.861" endtime="20220705 18:50:11.866"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:11.868" level="INFO">${url} = boards/62c487e38c04e51359900f2d</msg>
<status status="PASS" starttime="20220705 18:50:11.868" endtime="20220705 18:50:11.868"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:12.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:11.868" endtime="20220705 18:50:12.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:12.194" endtime="20220705 18:50:12.194"/>
</return>
<msg timestamp="20220705 18:50:12.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:11.867" endtime="20220705 18:50:12.194"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:12.194" endtime="20220705 18:50:12.194"/>
</return>
<status status="PASS" starttime="20220705 18:50:11.866" endtime="20220705 18:50:12.194"/>
</kw>
<status status="PASS" starttime="20220705 18:50:11.866" endtime="20220705 18:50:12.194"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:50:11.648" endtime="20220705 18:50:12.194"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:12.197" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:12.196" endtime="20220705 18:50:12.197"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:12.197" endtime="20220705 18:50:12.197"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:12.198" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:50:12.197" endtime="20220705 18:50:12.198"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:12.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:12.198" endtime="20220705 18:50:12.365"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:12.365" endtime="20220705 18:50:12.365"/>
</return>
<msg timestamp="20220705 18:50:12.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:12.196" endtime="20220705 18:50:12.366"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:12.366" endtime="20220705 18:50:12.366"/>
</return>
<msg timestamp="20220705 18:50:12.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:12.195" endtime="20220705 18:50:12.366"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:12.366" endtime="20220705 18:50:12.370"/>
</kw>
<status status="PASS" starttime="20220705 18:50:12.366" endtime="20220705 18:50:12.370"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:12.372" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:12.371" endtime="20220705 18:50:12.372"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:12.372" endtime="20220705 18:50:12.372"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:12.372" level="INFO">${url} = boards/62c487e4a19ea25b9dc31026</msg>
<status status="PASS" starttime="20220705 18:50:12.372" endtime="20220705 18:50:12.372"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:12.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:12.372" endtime="20220705 18:50:12.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:12.486" endtime="20220705 18:50:12.486"/>
</return>
<msg timestamp="20220705 18:50:12.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:12.371" endtime="20220705 18:50:12.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:12.486" endtime="20220705 18:50:12.486"/>
</return>
<status status="PASS" starttime="20220705 18:50:12.370" endtime="20220705 18:50:12.486"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:12.488" level="INFO">${url} = boards/62c487e4a19ea25b9dc31026</msg>
<status status="PASS" starttime="20220705 18:50:12.487" endtime="20220705 18:50:12.488"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:12.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:12.488" endtime="20220705 18:50:12.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:12.537" endtime="20220705 18:50:12.537"/>
</return>
<msg timestamp="20220705 18:50:12.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:12.487" endtime="20220705 18:50:12.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:12.537" endtime="20220705 18:50:12.537"/>
</return>
<msg timestamp="20220705 18:50:12.537" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:12.486" endtime="20220705 18:50:12.537"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:12.538" endtime="20220705 18:50:12.541"/>
</kw>
<status status="PASS" starttime="20220705 18:50:12.537" endtime="20220705 18:50:12.541"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:12.541" endtime="20220705 18:50:12.542"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:12.544" level="INFO">${url} = boards/62c487e4a19ea25b9dc31026</msg>
<status status="PASS" starttime="20220705 18:50:12.544" endtime="20220705 18:50:12.544"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:13.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:12.544" endtime="20220705 18:50:13.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:13.046" endtime="20220705 18:50:13.047"/>
</return>
<msg timestamp="20220705 18:50:13.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:12.543" endtime="20220705 18:50:13.047"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:13.047" endtime="20220705 18:50:13.047"/>
</return>
<status status="PASS" starttime="20220705 18:50:12.543" endtime="20220705 18:50:13.047"/>
</kw>
<status status="PASS" starttime="20220705 18:50:12.542" endtime="20220705 18:50:13.047"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:50:12.195" endtime="20220705 18:50:13.047"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:13.049" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:13.049" endtime="20220705 18:50:13.049"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:13.049" endtime="20220705 18:50:13.049"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:13.050" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:50:13.049" endtime="20220705 18:50:13.050"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:13.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:13.050" endtime="20220705 18:50:13.207"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:13.207" endtime="20220705 18:50:13.207"/>
</return>
<msg timestamp="20220705 18:50:13.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:13.048" endtime="20220705 18:50:13.207"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:13.207" endtime="20220705 18:50:13.207"/>
</return>
<msg timestamp="20220705 18:50:13.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:13.048" endtime="20220705 18:50:13.207"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:13.209" level="INFO">${url} = boards/62c487e5ebf7b964262da1d9</msg>
<status status="PASS" starttime="20220705 18:50:13.209" endtime="20220705 18:50:13.209"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:13.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:13.209" endtime="20220705 18:50:13.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:13.565" endtime="20220705 18:50:13.565"/>
</return>
<msg timestamp="20220705 18:50:13.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:13.208" endtime="20220705 18:50:13.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:13.565" endtime="20220705 18:50:13.565"/>
</return>
<status status="PASS" starttime="20220705 18:50:13.207" endtime="20220705 18:50:13.565"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:13.567" level="INFO">${url} = boards/62c487e5ebf7b964262da1d9</msg>
<status status="PASS" starttime="20220705 18:50:13.567" endtime="20220705 18:50:13.567"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:13.613" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:50:13.567" endtime="20220705 18:50:13.613"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:13.613" endtime="20220705 18:50:13.613"/>
</return>
<msg timestamp="20220705 18:50:13.613" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:50:13.566" endtime="20220705 18:50:13.613"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:13.614" endtime="20220705 18:50:13.614"/>
</return>
<status status="PASS" starttime="20220705 18:50:13.565" endtime="20220705 18:50:13.614"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:50:13.047" endtime="20220705 18:50:13.614"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:13.616" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:13.616" endtime="20220705 18:50:13.616"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:13.616" endtime="20220705 18:50:13.616"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:13.617" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:50:13.616" endtime="20220705 18:50:13.617"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:13.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:13.617" endtime="20220705 18:50:13.796"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:13.796" endtime="20220705 18:50:13.796"/>
</return>
<msg timestamp="20220705 18:50:13.797" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:13.615" endtime="20220705 18:50:13.797"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:13.797" endtime="20220705 18:50:13.797"/>
</return>
<msg timestamp="20220705 18:50:13.797" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:13.615" endtime="20220705 18:50:13.797"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:13.797" endtime="20220705 18:50:13.801"/>
</kw>
<status status="PASS" starttime="20220705 18:50:13.797" endtime="20220705 18:50:13.801"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:13.803" level="INFO">${url} = boards/62c487e587c6192d8cf728dc</msg>
<status status="PASS" starttime="20220705 18:50:13.803" endtime="20220705 18:50:13.803"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:13.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:13.803" endtime="20220705 18:50:13.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:13.855" endtime="20220705 18:50:13.855"/>
</return>
<msg timestamp="20220705 18:50:13.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:13.802" endtime="20220705 18:50:13.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:13.855" endtime="20220705 18:50:13.855"/>
</return>
<msg timestamp="20220705 18:50:13.855" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:13.801" endtime="20220705 18:50:13.855"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:13.856" endtime="20220705 18:50:13.859"/>
</kw>
<status status="PASS" starttime="20220705 18:50:13.855" endtime="20220705 18:50:13.859"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:13.859" endtime="20220705 18:50:13.860"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:13.862" level="INFO">${url} = boards/62c487e587c6192d8cf728dc</msg>
<status status="PASS" starttime="20220705 18:50:13.862" endtime="20220705 18:50:13.862"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:14.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:13.862" endtime="20220705 18:50:14.199"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:14.199" endtime="20220705 18:50:14.199"/>
</return>
<msg timestamp="20220705 18:50:14.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:13.861" endtime="20220705 18:50:14.199"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:14.200" endtime="20220705 18:50:14.200"/>
</return>
<status status="PASS" starttime="20220705 18:50:13.860" endtime="20220705 18:50:14.200"/>
</kw>
<status status="PASS" starttime="20220705 18:50:13.860" endtime="20220705 18:50:14.200"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:50:13.614" endtime="20220705 18:50:14.200"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:14.202" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:14.201" endtime="20220705 18:50:14.202"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:14.202" endtime="20220705 18:50:14.202"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:14.203" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:50:14.202" endtime="20220705 18:50:14.203"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:14.364" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.203" endtime="20220705 18:50:14.364"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:14.364" endtime="20220705 18:50:14.364"/>
</return>
<msg timestamp="20220705 18:50:14.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.201" endtime="20220705 18:50:14.365"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:14.365" endtime="20220705 18:50:14.365"/>
</return>
<msg timestamp="20220705 18:50:14.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.201" endtime="20220705 18:50:14.365"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:14.365" endtime="20220705 18:50:14.369"/>
</kw>
<status status="PASS" starttime="20220705 18:50:14.365" endtime="20220705 18:50:14.369"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:14.371" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:14.370" endtime="20220705 18:50:14.371"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:14.371" endtime="20220705 18:50:14.371"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:14.371" level="INFO">${url} = boards/62c487e6e77c4831c7632f1d</msg>
<status status="PASS" starttime="20220705 18:50:14.371" endtime="20220705 18:50:14.371"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:14.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.371" endtime="20220705 18:50:14.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:14.454" endtime="20220705 18:50:14.454"/>
</return>
<msg timestamp="20220705 18:50:14.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.370" endtime="20220705 18:50:14.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:14.454" endtime="20220705 18:50:14.454"/>
</return>
<status status="PASS" starttime="20220705 18:50:14.369" endtime="20220705 18:50:14.454"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:14.456" level="INFO">${url} = boards/62c487e6e77c4831c7632f1d</msg>
<status status="PASS" starttime="20220705 18:50:14.456" endtime="20220705 18:50:14.456"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:14.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.456" endtime="20220705 18:50:14.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:14.508" endtime="20220705 18:50:14.508"/>
</return>
<msg timestamp="20220705 18:50:14.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.455" endtime="20220705 18:50:14.508"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:14.508" endtime="20220705 18:50:14.508"/>
</return>
<msg timestamp="20220705 18:50:14.508" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.454" endtime="20220705 18:50:14.508"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:14.508" endtime="20220705 18:50:14.509"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:14.510" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:14.510" endtime="20220705 18:50:14.511"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:14.511" endtime="20220705 18:50:14.511"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:14.511" level="INFO">${url} = boards/62c487e6e77c4831c7632f1d</msg>
<status status="PASS" starttime="20220705 18:50:14.511" endtime="20220705 18:50:14.511"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:14.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.511" endtime="20220705 18:50:14.598"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:14.598" endtime="20220705 18:50:14.598"/>
</return>
<msg timestamp="20220705 18:50:14.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.510" endtime="20220705 18:50:14.598"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:14.598" endtime="20220705 18:50:14.598"/>
</return>
<status status="PASS" starttime="20220705 18:50:14.509" endtime="20220705 18:50:14.598"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:14.600" level="INFO">${url} = boards/62c487e6e77c4831c7632f1d</msg>
<status status="PASS" starttime="20220705 18:50:14.600" endtime="20220705 18:50:14.600"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:14.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.600" endtime="20220705 18:50:14.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:14.657" endtime="20220705 18:50:14.657"/>
</return>
<msg timestamp="20220705 18:50:14.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.599" endtime="20220705 18:50:14.658"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:14.658" endtime="20220705 18:50:14.658"/>
</return>
<msg timestamp="20220705 18:50:14.658" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.598" endtime="20220705 18:50:14.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:14.658" endtime="20220705 18:50:14.659"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:14.660" level="INFO">${url} = boards/62c487e6e77c4831c7632f1d</msg>
<status status="PASS" starttime="20220705 18:50:14.660" endtime="20220705 18:50:14.660"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:15.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.661" endtime="20220705 18:50:15.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.017" endtime="20220705 18:50:15.017"/>
</return>
<msg timestamp="20220705 18:50:15.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:14.660" endtime="20220705 18:50:15.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.017" endtime="20220705 18:50:15.017"/>
</return>
<status status="PASS" starttime="20220705 18:50:14.659" endtime="20220705 18:50:15.018"/>
</kw>
<status status="PASS" starttime="20220705 18:50:14.659" endtime="20220705 18:50:15.018"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:50:14.200" endtime="20220705 18:50:15.018"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 18:50:15.018" endtime="20220705 18:50:15.019"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 18:50:11.543" endtime="20220705 18:50:15.020"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:50:15.030" endtime="20220705 18:50:15.030"/>
</kw>
<status status="PASS" starttime="20220705 18:50:15.030" endtime="20220705 18:50:15.030"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:15.031" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:15.031" endtime="20220705 18:50:15.031"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:15.032" endtime="20220705 18:50:15.032"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:15.032" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:50:15.032" endtime="20220705 18:50:15.032"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:15.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.032" endtime="20220705 18:50:15.219"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.219" endtime="20220705 18:50:15.219"/>
</return>
<msg timestamp="20220705 18:50:15.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.031" endtime="20220705 18:50:15.219"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.219" endtime="20220705 18:50:15.219"/>
</return>
<msg timestamp="20220705 18:50:15.220" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.031" endtime="20220705 18:50:15.220"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:50:15.220" level="INFO">${TEST_SUITE_BOARD_ID} = 62c487e7e142eb34f08e20cf</msg>
<status status="PASS" starttime="20220705 18:50:15.220" endtime="20220705 18:50:15.221"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:15.221" level="INFO">${url} = boards/62c487e7e142eb34f08e20cf/lists/</msg>
<status status="PASS" starttime="20220705 18:50:15.221" endtime="20220705 18:50:15.222"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:15.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.222" endtime="20220705 18:50:15.272"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.272" endtime="20220705 18:50:15.272"/>
</return>
<msg timestamp="20220705 18:50:15.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.221" endtime="20220705 18:50:15.273"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.273" endtime="20220705 18:50:15.273"/>
</return>
<msg timestamp="20220705 18:50:15.273" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.221" endtime="20220705 18:50:15.273"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:50:15.274" level="INFO">${TEST_SUITE_LIST_ID} = 62c487e7e142eb34f08e20d6</msg>
<status status="PASS" starttime="20220705 18:50:15.273" endtime="20220705 18:50:15.274"/>
</kw>
<status status="PASS" starttime="20220705 18:50:15.030" endtime="20220705 18:50:15.274"/>
</kw>
<status status="PASS" starttime="20220705 18:50:15.030" endtime="20220705 18:50:15.274"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:15.276" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:15.275" endtime="20220705 18:50:15.276"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:15.276" endtime="20220705 18:50:15.276"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:15.277" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 18:50:15.276" endtime="20220705 18:50:15.277"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:15.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.277" endtime="20220705 18:50:15.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.465" endtime="20220705 18:50:15.465"/>
</return>
<msg timestamp="20220705 18:50:15.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.275" endtime="20220705 18:50:15.465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.465" endtime="20220705 18:50:15.465"/>
</return>
<msg timestamp="20220705 18:50:15.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.274" endtime="20220705 18:50:15.465"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:15.465" endtime="20220705 18:50:15.470"/>
</kw>
<status status="PASS" starttime="20220705 18:50:15.465" endtime="20220705 18:50:15.470"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:15.471" endtime="20220705 18:50:15.471"/>
</return>
<msg timestamp="20220705 18:50:15.471" level="INFO">${CARD_ID} = 62c487e770a8ff4498f33413</msg>
<status status="PASS" starttime="20220705 18:50:15.470" endtime="20220705 18:50:15.471"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:15.473" level="INFO">${url} = cards/62c487e770a8ff4498f33413</msg>
<status status="PASS" starttime="20220705 18:50:15.472" endtime="20220705 18:50:15.473"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:15.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.473" endtime="20220705 18:50:15.532"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.532" endtime="20220705 18:50:15.532"/>
</return>
<msg timestamp="20220705 18:50:15.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.472" endtime="20220705 18:50:15.533"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.533" endtime="20220705 18:50:15.533"/>
</return>
<msg timestamp="20220705 18:50:15.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.472" endtime="20220705 18:50:15.533"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:15.533" endtime="20220705 18:50:15.533"/>
</return>
<msg timestamp="20220705 18:50:15.534" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 18:50:15.533" endtime="20220705 18:50:15.534"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:15.534" endtime="20220705 18:50:15.534"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:15.536" level="INFO">${url} = cards/62c487e770a8ff4498f33413</msg>
<status status="PASS" starttime="20220705 18:50:15.536" endtime="20220705 18:50:15.536"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:15.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.536" endtime="20220705 18:50:15.687"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.688" endtime="20220705 18:50:15.688"/>
</return>
<msg timestamp="20220705 18:50:15.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.535" endtime="20220705 18:50:15.688"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.688" endtime="20220705 18:50:15.688"/>
</return>
<status status="PASS" starttime="20220705 18:50:15.535" endtime="20220705 18:50:15.688"/>
</kw>
<status status="PASS" starttime="20220705 18:50:15.535" endtime="20220705 18:50:15.688"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:50:15.274" endtime="20220705 18:50:15.688"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:15.690" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:15.690" endtime="20220705 18:50:15.690"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:15.690" endtime="20220705 18:50:15.690"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:15.691" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 18:50:15.691" endtime="20220705 18:50:15.691"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:15.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.691" endtime="20220705 18:50:15.831"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.831" endtime="20220705 18:50:15.831"/>
</return>
<msg timestamp="20220705 18:50:15.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.689" endtime="20220705 18:50:15.831"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.831" endtime="20220705 18:50:15.831"/>
</return>
<msg timestamp="20220705 18:50:15.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.689" endtime="20220705 18:50:15.831"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:15.832" endtime="20220705 18:50:15.832"/>
</return>
<msg timestamp="20220705 18:50:15.832" level="INFO">${CARD_ID} = 62c487e736c8ff878e9dae74</msg>
<status status="PASS" starttime="20220705 18:50:15.831" endtime="20220705 18:50:15.832"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:15.834" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:15.834" endtime="20220705 18:50:15.834"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:15.834" endtime="20220705 18:50:15.834"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:15.835" level="INFO">${url} = cards/62c487e736c8ff878e9dae74</msg>
<status status="PASS" starttime="20220705 18:50:15.835" endtime="20220705 18:50:15.835"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:15.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.835" endtime="20220705 18:50:15.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.973" endtime="20220705 18:50:15.973"/>
</return>
<msg timestamp="20220705 18:50:15.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.833" endtime="20220705 18:50:15.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.973" endtime="20220705 18:50:15.973"/>
</return>
<msg timestamp="20220705 18:50:15.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.833" endtime="20220705 18:50:15.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:15.973" endtime="20220705 18:50:15.973"/>
</return>
<status status="PASS" starttime="20220705 18:50:15.832" endtime="20220705 18:50:15.974"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:15.975" level="INFO">${url} = cards/62c487e736c8ff878e9dae74</msg>
<status status="PASS" starttime="20220705 18:50:15.974" endtime="20220705 18:50:15.975"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:16.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.975" endtime="20220705 18:50:16.034"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.034" endtime="20220705 18:50:16.034"/>
</return>
<msg timestamp="20220705 18:50:16.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.974" endtime="20220705 18:50:16.034"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.034" endtime="20220705 18:50:16.034"/>
</return>
<msg timestamp="20220705 18:50:16.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:15.974" endtime="20220705 18:50:16.035"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:16.035" endtime="20220705 18:50:16.035"/>
</return>
<msg timestamp="20220705 18:50:16.036" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 18:50:16.035" endtime="20220705 18:50:16.036"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 18:50:16.036" endtime="20220705 18:50:16.036"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:16.037" level="INFO">${url} = cards/62c487e736c8ff878e9dae74</msg>
<status status="PASS" starttime="20220705 18:50:16.037" endtime="20220705 18:50:16.037"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:16.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.037" endtime="20220705 18:50:16.187"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.187" endtime="20220705 18:50:16.187"/>
</return>
<msg timestamp="20220705 18:50:16.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.037" endtime="20220705 18:50:16.187"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.187" endtime="20220705 18:50:16.187"/>
</return>
<status status="PASS" starttime="20220705 18:50:16.036" endtime="20220705 18:50:16.187"/>
</kw>
<status status="PASS" starttime="20220705 18:50:16.036" endtime="20220705 18:50:16.187"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:50:15.688" endtime="20220705 18:50:16.187"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:16.190" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:16.189" endtime="20220705 18:50:16.190"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:16.190" endtime="20220705 18:50:16.190"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:16.191" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 18:50:16.190" endtime="20220705 18:50:16.191"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:16.360" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.191" endtime="20220705 18:50:16.360"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.360" endtime="20220705 18:50:16.360"/>
</return>
<msg timestamp="20220705 18:50:16.361" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.188" endtime="20220705 18:50:16.361"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.361" endtime="20220705 18:50:16.361"/>
</return>
<msg timestamp="20220705 18:50:16.361" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.188" endtime="20220705 18:50:16.361"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:16.361" endtime="20220705 18:50:16.361"/>
</return>
<msg timestamp="20220705 18:50:16.362" level="INFO">${CARD_ID} = 62c487e8fd9c773f1d0c20c3</msg>
<status status="PASS" starttime="20220705 18:50:16.361" endtime="20220705 18:50:16.362"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:16.363" level="INFO">${url} = cards/62c487e8fd9c773f1d0c20c3</msg>
<status status="PASS" starttime="20220705 18:50:16.363" endtime="20220705 18:50:16.363"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:16.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.363" endtime="20220705 18:50:16.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.520" endtime="20220705 18:50:16.520"/>
</return>
<msg timestamp="20220705 18:50:16.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.363" endtime="20220705 18:50:16.520"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.520" endtime="20220705 18:50:16.520"/>
</return>
<msg timestamp="20220705 18:50:16.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.362" endtime="20220705 18:50:16.520"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:16.521" endtime="20220705 18:50:16.522"/>
</kw>
<status status="PASS" starttime="20220705 18:50:16.520" endtime="20220705 18:50:16.522"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:16.523" level="INFO">${url} = cards/62c487e8fd9c773f1d0c20c3</msg>
<status status="PASS" starttime="20220705 18:50:16.523" endtime="20220705 18:50:16.523"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:16.564" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:50:16.524" endtime="20220705 18:50:16.564"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.564" endtime="20220705 18:50:16.564"/>
</return>
<msg timestamp="20220705 18:50:16.564" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:50:16.523" endtime="20220705 18:50:16.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.565" endtime="20220705 18:50:16.565"/>
</return>
<status status="PASS" starttime="20220705 18:50:16.522" endtime="20220705 18:50:16.565"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:50:16.188" endtime="20220705 18:50:16.565"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:16.567" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:16.567" endtime="20220705 18:50:16.567"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:16.567" endtime="20220705 18:50:16.567"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:16.568" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 18:50:16.567" endtime="20220705 18:50:16.568"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:16.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.568" endtime="20220705 18:50:16.728"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.728" endtime="20220705 18:50:16.728"/>
</return>
<msg timestamp="20220705 18:50:16.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.566" endtime="20220705 18:50:16.729"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.729" endtime="20220705 18:50:16.729"/>
</return>
<msg timestamp="20220705 18:50:16.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.566" endtime="20220705 18:50:16.729"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:16.729" endtime="20220705 18:50:16.729"/>
</return>
<msg timestamp="20220705 18:50:16.730" level="INFO">${CARD_ID} = 62c487e805fefe5c3e5a7ad3</msg>
<status status="PASS" starttime="20220705 18:50:16.729" endtime="20220705 18:50:16.730"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:16.731" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:16.731" endtime="20220705 18:50:16.731"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:16.731" endtime="20220705 18:50:16.731"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:16.732" level="INFO">${url} = cards/62c487e805fefe5c3e5a7ad3</msg>
<status status="PASS" starttime="20220705 18:50:16.731" endtime="20220705 18:50:16.732"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:16.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.732" endtime="20220705 18:50:16.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.873" endtime="20220705 18:50:16.873"/>
</return>
<msg timestamp="20220705 18:50:16.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.730" endtime="20220705 18:50:16.873"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.873" endtime="20220705 18:50:16.873"/>
</return>
<msg timestamp="20220705 18:50:16.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.730" endtime="20220705 18:50:16.873"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:16.874" endtime="20220705 18:50:16.878"/>
</kw>
<status status="PASS" starttime="20220705 18:50:16.873" endtime="20220705 18:50:16.879"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:16.880" level="INFO">${url} = cards/62c487e805fefe5c3e5a7ad3</msg>
<status status="PASS" starttime="20220705 18:50:16.879" endtime="20220705 18:50:16.880"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:16.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.880" endtime="20220705 18:50:16.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.939" endtime="20220705 18:50:16.939"/>
</return>
<msg timestamp="20220705 18:50:16.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.879" endtime="20220705 18:50:16.940"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:16.940" endtime="20220705 18:50:16.940"/>
</return>
<msg timestamp="20220705 18:50:16.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.879" endtime="20220705 18:50:16.940"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:16.940" endtime="20220705 18:50:16.940"/>
</return>
<msg timestamp="20220705 18:50:16.941" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 18:50:16.940" endtime="20220705 18:50:16.941"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:16.941" endtime="20220705 18:50:16.941"/>
</return>
<msg timestamp="20220705 18:50:16.942" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 18:50:16.941" endtime="20220705 18:50:16.942"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:16.942" endtime="20220705 18:50:16.942"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:16.942" endtime="20220705 18:50:16.943"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:16.944" level="INFO">${url} = cards/62c487e805fefe5c3e5a7ad3</msg>
<status status="PASS" starttime="20220705 18:50:16.944" endtime="20220705 18:50:16.944"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:17.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.944" endtime="20220705 18:50:17.098"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:17.098" endtime="20220705 18:50:17.098"/>
</return>
<msg timestamp="20220705 18:50:17.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:16.943" endtime="20220705 18:50:17.098"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:17.098" endtime="20220705 18:50:17.098"/>
</return>
<status status="PASS" starttime="20220705 18:50:16.943" endtime="20220705 18:50:17.098"/>
</kw>
<status status="PASS" starttime="20220705 18:50:16.943" endtime="20220705 18:50:17.098"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:50:16.565" endtime="20220705 18:50:17.098"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:17.101" level="INFO">${url} = boards/62c487e7e142eb34f08e20cf</msg>
<status status="PASS" starttime="20220705 18:50:17.100" endtime="20220705 18:50:17.101"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:17.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.101" endtime="20220705 18:50:17.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:17.503" endtime="20220705 18:50:17.503"/>
</return>
<msg timestamp="20220705 18:50:17.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.100" endtime="20220705 18:50:17.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:17.503" endtime="20220705 18:50:17.503"/>
</return>
<status status="PASS" starttime="20220705 18:50:17.099" endtime="20220705 18:50:17.503"/>
</kw>
<status status="PASS" starttime="20220705 18:50:17.099" endtime="20220705 18:50:17.503"/>
</kw>
<status status="PASS" starttime="20220705 18:50:17.099" endtime="20220705 18:50:17.503"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 18:50:17.504" endtime="20220705 18:50:17.504"/>
</kw>
<status status="PASS" starttime="20220705 18:50:17.099" endtime="20220705 18:50:17.504"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 18:50:15.021" endtime="20220705 18:50:17.504"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:50:17.515" endtime="20220705 18:50:17.515"/>
</kw>
<status status="PASS" starttime="20220705 18:50:17.514" endtime="20220705 18:50:17.515"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:17.516" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:17.516" endtime="20220705 18:50:17.516"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:17.516" endtime="20220705 18:50:17.516"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:17.517" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:50:17.516" endtime="20220705 18:50:17.517"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:17.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.517" endtime="20220705 18:50:17.718"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:17.718" endtime="20220705 18:50:17.718"/>
</return>
<msg timestamp="20220705 18:50:17.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.515" endtime="20220705 18:50:17.718"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:17.718" endtime="20220705 18:50:17.718"/>
</return>
<msg timestamp="20220705 18:50:17.718" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.515" endtime="20220705 18:50:17.718"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:50:17.719" level="INFO">${TEST_SUITE_BOARD_ID} = 62c487e9ddf7912d1349e2eb</msg>
<status status="PASS" starttime="20220705 18:50:17.718" endtime="20220705 18:50:17.719"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:17.720" level="INFO">${url} = boards/62c487e9ddf7912d1349e2eb/lists/</msg>
<status status="PASS" starttime="20220705 18:50:17.720" endtime="20220705 18:50:17.720"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:17.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.720" endtime="20220705 18:50:17.775"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:17.775" endtime="20220705 18:50:17.775"/>
</return>
<msg timestamp="20220705 18:50:17.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.720" endtime="20220705 18:50:17.775"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:17.775" endtime="20220705 18:50:17.775"/>
</return>
<msg timestamp="20220705 18:50:17.775" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.719" endtime="20220705 18:50:17.775"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:50:17.776" level="INFO">${TEST_SUITE_LIST_ID} = 62c487e9ddf7912d1349e2f2</msg>
<status status="PASS" starttime="20220705 18:50:17.775" endtime="20220705 18:50:17.776"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:17.778" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:17.777" endtime="20220705 18:50:17.778"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:17.778" endtime="20220705 18:50:17.778"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:17.779" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 18:50:17.778" endtime="20220705 18:50:17.779"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:17.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.779" endtime="20220705 18:50:17.953"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:17.953" endtime="20220705 18:50:17.953"/>
</return>
<msg timestamp="20220705 18:50:17.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.777" endtime="20220705 18:50:17.953"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:17.953" endtime="20220705 18:50:17.953"/>
</return>
<msg timestamp="20220705 18:50:17.953" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.776" endtime="20220705 18:50:17.953"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:50:17.954" level="INFO">${TEST_SUITE_CARD_ID} = 62c487e91ddc8f70a14a7ff5</msg>
<status status="PASS" starttime="20220705 18:50:17.954" endtime="20220705 18:50:17.954"/>
</kw>
<status status="PASS" starttime="20220705 18:50:17.515" endtime="20220705 18:50:17.955"/>
</kw>
<status status="PASS" starttime="20220705 18:50:17.514" endtime="20220705 18:50:17.955"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:17.956" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:17.956" endtime="20220705 18:50:17.956"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:17.957" endtime="20220705 18:50:17.957"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:17.957" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 18:50:17.957" endtime="20220705 18:50:17.957"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:18.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.958" endtime="20220705 18:50:18.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:18.077" endtime="20220705 18:50:18.077"/>
</return>
<msg timestamp="20220705 18:50:18.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.956" endtime="20220705 18:50:18.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:18.077" endtime="20220705 18:50:18.077"/>
</return>
<msg timestamp="20220705 18:50:18.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:17.955" endtime="20220705 18:50:18.077"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:18.078" endtime="20220705 18:50:18.078"/>
</return>
<msg timestamp="20220705 18:50:18.078" level="INFO">${checklist_id} = 62c487ea8bbb42718c1ef672</msg>
<status status="PASS" starttime="20220705 18:50:18.077" endtime="20220705 18:50:18.079"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:18.080" level="INFO">${url} = checklists/62c487ea8bbb42718c1ef672</msg>
<status status="PASS" starttime="20220705 18:50:18.079" endtime="20220705 18:50:18.080"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:18.281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.080" endtime="20220705 18:50:18.281"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:18.282" endtime="20220705 18:50:18.282"/>
</return>
<msg timestamp="20220705 18:50:18.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.079" endtime="20220705 18:50:18.282"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:18.282" endtime="20220705 18:50:18.282"/>
</return>
<msg timestamp="20220705 18:50:18.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.079" endtime="20220705 18:50:18.282"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:18.283" endtime="20220705 18:50:18.283"/>
</return>
<msg timestamp="20220705 18:50:18.283" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 18:50:18.282" endtime="20220705 18:50:18.283"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:18.283" endtime="20220705 18:50:18.284"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:18.285" level="INFO">${url} = checklists/62c487ea8bbb42718c1ef672</msg>
<status status="PASS" starttime="20220705 18:50:18.285" endtime="20220705 18:50:18.285"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:18.394" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.285" endtime="20220705 18:50:18.394"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:18.394" endtime="20220705 18:50:18.394"/>
</return>
<msg timestamp="20220705 18:50:18.394" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.284" endtime="20220705 18:50:18.394"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:18.394" endtime="20220705 18:50:18.394"/>
</return>
<status status="PASS" starttime="20220705 18:50:18.284" endtime="20220705 18:50:18.394"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:50:17.955" endtime="20220705 18:50:18.394"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:18.396" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:18.396" endtime="20220705 18:50:18.396"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:18.397" endtime="20220705 18:50:18.397"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:18.397" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 18:50:18.397" endtime="20220705 18:50:18.398"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:18.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.398" endtime="20220705 18:50:18.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:18.504" endtime="20220705 18:50:18.504"/>
</return>
<msg timestamp="20220705 18:50:18.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.396" endtime="20220705 18:50:18.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:18.504" endtime="20220705 18:50:18.504"/>
</return>
<msg timestamp="20220705 18:50:18.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.395" endtime="20220705 18:50:18.504"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:18.505" endtime="20220705 18:50:18.505"/>
</return>
<msg timestamp="20220705 18:50:18.506" level="INFO">${checklist_id} = 62c487eaa573e327af822c92</msg>
<status status="PASS" starttime="20220705 18:50:18.504" endtime="20220705 18:50:18.506"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:18.507" level="INFO">${url} = checklists/62c487eaa573e327af822c92</msg>
<status status="PASS" starttime="20220705 18:50:18.507" endtime="20220705 18:50:18.507"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:18.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.507" endtime="20220705 18:50:18.620"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:18.620" endtime="20220705 18:50:18.620"/>
</return>
<msg timestamp="20220705 18:50:18.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.506" endtime="20220705 18:50:18.620"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:18.620" endtime="20220705 18:50:18.620"/>
</return>
<msg timestamp="20220705 18:50:18.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.506" endtime="20220705 18:50:18.620"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:18.621" endtime="20220705 18:50:18.622"/>
</kw>
<status status="PASS" starttime="20220705 18:50:18.620" endtime="20220705 18:50:18.623"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:18.624" level="INFO">${url} = checklists/62c487eaa573e327af822c92</msg>
<status status="PASS" starttime="20220705 18:50:18.624" endtime="20220705 18:50:18.624"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:18.661" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:50:18.624" endtime="20220705 18:50:18.661"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:18.661" endtime="20220705 18:50:18.661"/>
</return>
<msg timestamp="20220705 18:50:18.662" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:50:18.623" endtime="20220705 18:50:18.662"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:18.662" endtime="20220705 18:50:18.662"/>
</return>
<status status="PASS" starttime="20220705 18:50:18.623" endtime="20220705 18:50:18.662"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:50:18.395" endtime="20220705 18:50:18.662"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:18.665" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:18.664" endtime="20220705 18:50:18.665"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:18.665" endtime="20220705 18:50:18.666"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:18.666" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 18:50:18.666" endtime="20220705 18:50:18.666"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:19.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.666" endtime="20220705 18:50:19.186"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:19.186" endtime="20220705 18:50:19.186"/>
</return>
<msg timestamp="20220705 18:50:19.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.663" endtime="20220705 18:50:19.186"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:19.186" endtime="20220705 18:50:19.187"/>
</return>
<msg timestamp="20220705 18:50:19.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:18.663" endtime="20220705 18:50:19.187"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:19.187" endtime="20220705 18:50:19.187"/>
</return>
<msg timestamp="20220705 18:50:19.188" level="INFO">${checklist_id} = 62c487eaa785146d0a03fc04</msg>
<status status="PASS" starttime="20220705 18:50:19.187" endtime="20220705 18:50:19.188"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:19.189" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:19.189" endtime="20220705 18:50:19.189"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:19.189" endtime="20220705 18:50:19.189"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:19.190" level="INFO">${url} = checklists/62c487eaa785146d0a03fc04</msg>
<status status="PASS" starttime="20220705 18:50:19.189" endtime="20220705 18:50:19.190"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:19.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:19.190" endtime="20220705 18:50:19.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:19.269" endtime="20220705 18:50:19.269"/>
</return>
<msg timestamp="20220705 18:50:19.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:19.188" endtime="20220705 18:50:19.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:19.269" endtime="20220705 18:50:19.270"/>
</return>
<msg timestamp="20220705 18:50:19.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:19.188" endtime="20220705 18:50:19.270"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:19.271" level="INFO">${url} = checklists/62c487eaa785146d0a03fc04</msg>
<status status="PASS" starttime="20220705 18:50:19.271" endtime="20220705 18:50:19.271"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:19.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:19.271" endtime="20220705 18:50:19.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:19.338" endtime="20220705 18:50:19.338"/>
</return>
<msg timestamp="20220705 18:50:19.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:19.270" endtime="20220705 18:50:19.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:19.338" endtime="20220705 18:50:19.338"/>
</return>
<msg timestamp="20220705 18:50:19.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:19.270" endtime="20220705 18:50:19.338"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:19.339" endtime="20220705 18:50:19.339"/>
</return>
<msg timestamp="20220705 18:50:19.339" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 18:50:19.338" endtime="20220705 18:50:19.339"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:19.339" endtime="20220705 18:50:19.340"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:19.350" level="INFO">${url} = checklists/62c487eaa785146d0a03fc04</msg>
<status status="PASS" starttime="20220705 18:50:19.350" endtime="20220705 18:50:19.350"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:19.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:19.350" endtime="20220705 18:50:19.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:19.457" endtime="20220705 18:50:19.457"/>
</return>
<msg timestamp="20220705 18:50:19.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:19.349" endtime="20220705 18:50:19.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:19.457" endtime="20220705 18:50:19.457"/>
</return>
<status status="PASS" starttime="20220705 18:50:19.340" endtime="20220705 18:50:19.457"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:50:18.662" endtime="20220705 18:50:19.457"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:19.459" level="INFO">${url} = boards/62c487e9ddf7912d1349e2eb</msg>
<status status="PASS" starttime="20220705 18:50:19.459" endtime="20220705 18:50:19.459"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:19.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:19.459" endtime="20220705 18:50:19.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:19.847" endtime="20220705 18:50:19.847"/>
</return>
<msg timestamp="20220705 18:50:19.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:19.459" endtime="20220705 18:50:19.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:19.847" endtime="20220705 18:50:19.847"/>
</return>
<status status="PASS" starttime="20220705 18:50:19.458" endtime="20220705 18:50:19.848"/>
</kw>
<status status="PASS" starttime="20220705 18:50:19.458" endtime="20220705 18:50:19.848"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 18:50:19.848" endtime="20220705 18:50:19.849"/>
</kw>
<status status="PASS" starttime="20220705 18:50:19.458" endtime="20220705 18:50:19.849"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 18:50:17.506" endtime="20220705 18:50:19.849"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:50:19.858" endtime="20220705 18:50:19.858"/>
</kw>
<status status="PASS" starttime="20220705 18:50:19.858" endtime="20220705 18:50:19.858"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:19.859" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:19.859" endtime="20220705 18:50:19.859"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:19.860" endtime="20220705 18:50:19.860"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:19.860" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:50:19.860" endtime="20220705 18:50:19.860"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:20.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:19.861" endtime="20220705 18:50:20.053"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.053" endtime="20220705 18:50:20.053"/>
</return>
<msg timestamp="20220705 18:50:20.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:19.859" endtime="20220705 18:50:20.053"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.053" endtime="20220705 18:50:20.053"/>
</return>
<msg timestamp="20220705 18:50:20.054" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:19.859" endtime="20220705 18:50:20.054"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:50:20.054" level="INFO">${TEST_SUITE_BOARD_ID} = 62c487eb95bcb279b5436a85</msg>
<status status="PASS" starttime="20220705 18:50:20.054" endtime="20220705 18:50:20.054"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:20.105" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.055" endtime="20220705 18:50:20.105"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:50:20.106" level="INFO">${TEST_SUITE_LIST_ID} = 62c487eb95bcb279b5436a8c</msg>
<status status="PASS" starttime="20220705 18:50:20.105" endtime="20220705 18:50:20.106"/>
</kw>
<status status="PASS" starttime="20220705 18:50:19.859" endtime="20220705 18:50:20.106"/>
</kw>
<status status="PASS" starttime="20220705 18:50:19.858" endtime="20220705 18:50:20.106"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:20.108" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:20.108" endtime="20220705 18:50:20.108"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:20.108" endtime="20220705 18:50:20.108"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:20.109" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 18:50:20.108" endtime="20220705 18:50:20.109"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:20.205" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.109" endtime="20220705 18:50:20.205"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.205" endtime="20220705 18:50:20.205"/>
</return>
<msg timestamp="20220705 18:50:20.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.107" endtime="20220705 18:50:20.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.206" endtime="20220705 18:50:20.206"/>
</return>
<msg timestamp="20220705 18:50:20.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.107" endtime="20220705 18:50:20.206"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:20.206" endtime="20220705 18:50:20.208"/>
</kw>
<status status="PASS" starttime="20220705 18:50:20.206" endtime="20220705 18:50:20.208"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:20.208" endtime="20220705 18:50:20.209"/>
</return>
<msg timestamp="20220705 18:50:20.209" level="INFO">${LABEL_ID} = 62c487ec819b2843a7d21e39</msg>
<status status="PASS" starttime="20220705 18:50:20.208" endtime="20220705 18:50:20.209"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:20.210" level="INFO">${url} = labels/62c487ec819b2843a7d21e39</msg>
<status status="PASS" starttime="20220705 18:50:20.210" endtime="20220705 18:50:20.210"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:20.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.210" endtime="20220705 18:50:20.260"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.260" endtime="20220705 18:50:20.260"/>
</return>
<msg timestamp="20220705 18:50:20.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.210" endtime="20220705 18:50:20.260"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.260" endtime="20220705 18:50:20.260"/>
</return>
<msg timestamp="20220705 18:50:20.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.209" endtime="20220705 18:50:20.260"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:20.261" endtime="20220705 18:50:20.261"/>
</return>
<msg timestamp="20220705 18:50:20.261" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 18:50:20.260" endtime="20220705 18:50:20.261"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:20.262" endtime="20220705 18:50:20.262"/>
</return>
<msg timestamp="20220705 18:50:20.262" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 18:50:20.261" endtime="20220705 18:50:20.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:20.263" endtime="20220705 18:50:20.263"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:20.263" endtime="20220705 18:50:20.263"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:20.264" level="INFO">${url} = labels/62c487ec819b2843a7d21e39</msg>
<status status="PASS" starttime="20220705 18:50:20.264" endtime="20220705 18:50:20.264"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:20.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.265" endtime="20220705 18:50:20.389"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.389" endtime="20220705 18:50:20.389"/>
</return>
<msg timestamp="20220705 18:50:20.389" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.264" endtime="20220705 18:50:20.389"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.389" endtime="20220705 18:50:20.389"/>
</return>
<status status="PASS" starttime="20220705 18:50:20.263" endtime="20220705 18:50:20.389"/>
</kw>
<status status="PASS" starttime="20220705 18:50:20.263" endtime="20220705 18:50:20.389"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:50:20.106" endtime="20220705 18:50:20.389"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:20.391" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:20.391" endtime="20220705 18:50:20.391"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:20.391" endtime="20220705 18:50:20.391"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:20.392" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 18:50:20.391" endtime="20220705 18:50:20.392"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:20.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.392" endtime="20220705 18:50:20.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.495" endtime="20220705 18:50:20.495"/>
</return>
<msg timestamp="20220705 18:50:20.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.390" endtime="20220705 18:50:20.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.495" endtime="20220705 18:50:20.495"/>
</return>
<msg timestamp="20220705 18:50:20.496" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.390" endtime="20220705 18:50:20.496"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:20.496" endtime="20220705 18:50:20.497"/>
</kw>
<status status="PASS" starttime="20220705 18:50:20.496" endtime="20220705 18:50:20.498"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:20.498" endtime="20220705 18:50:20.498"/>
</return>
<msg timestamp="20220705 18:50:20.499" level="INFO">${LABEL_ID} = 62c487ec6c8a021deab6c79a</msg>
<status status="PASS" starttime="20220705 18:50:20.498" endtime="20220705 18:50:20.499"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:20.500" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:20.500" endtime="20220705 18:50:20.500"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:20.500" endtime="20220705 18:50:20.500"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:20.500" level="INFO">${url} = labels/62c487ec6c8a021deab6c79a</msg>
<status status="PASS" starttime="20220705 18:50:20.500" endtime="20220705 18:50:20.500"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:20.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.500" endtime="20220705 18:50:20.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.595" endtime="20220705 18:50:20.595"/>
</return>
<msg timestamp="20220705 18:50:20.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.499" endtime="20220705 18:50:20.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.595" endtime="20220705 18:50:20.595"/>
</return>
<msg timestamp="20220705 18:50:20.595" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.499" endtime="20220705 18:50:20.595"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:20.596" endtime="20220705 18:50:20.596"/>
</return>
<msg timestamp="20220705 18:50:20.596" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 18:50:20.596" endtime="20220705 18:50:20.597"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:20.597" endtime="20220705 18:50:20.597"/>
</return>
<msg timestamp="20220705 18:50:20.598" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 18:50:20.597" endtime="20220705 18:50:20.598"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:20.598" endtime="20220705 18:50:20.598"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:20.598" endtime="20220705 18:50:20.598"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:20.600" level="INFO">${url} = labels/62c487ec6c8a021deab6c79a</msg>
<status status="PASS" starttime="20220705 18:50:20.600" endtime="20220705 18:50:20.600"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:20.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.600" endtime="20220705 18:50:20.721"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.721" endtime="20220705 18:50:20.721"/>
</return>
<msg timestamp="20220705 18:50:20.722" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.599" endtime="20220705 18:50:20.722"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.722" endtime="20220705 18:50:20.722"/>
</return>
<status status="PASS" starttime="20220705 18:50:20.598" endtime="20220705 18:50:20.722"/>
</kw>
<status status="PASS" starttime="20220705 18:50:20.598" endtime="20220705 18:50:20.722"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:50:20.389" endtime="20220705 18:50:20.722"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:20.724" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:20.724" endtime="20220705 18:50:20.724"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:20.724" endtime="20220705 18:50:20.724"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:20.725" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 18:50:20.724" endtime="20220705 18:50:20.725"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:20.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.725" endtime="20220705 18:50:20.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.818" endtime="20220705 18:50:20.818"/>
</return>
<msg timestamp="20220705 18:50:20.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.723" endtime="20220705 18:50:20.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.819" endtime="20220705 18:50:20.819"/>
</return>
<msg timestamp="20220705 18:50:20.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.723" endtime="20220705 18:50:20.819"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:50:20.819" endtime="20220705 18:50:20.819"/>
</return>
<msg timestamp="20220705 18:50:20.820" level="INFO">${LABEL_ID} = 62c487ecae761319080b4f25</msg>
<status status="PASS" starttime="20220705 18:50:20.819" endtime="20220705 18:50:20.820"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:20.821" level="INFO">${url} = labels/62c487ecae761319080b4f25</msg>
<status status="PASS" starttime="20220705 18:50:20.821" endtime="20220705 18:50:20.821"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:20.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.822" endtime="20220705 18:50:20.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.943" endtime="20220705 18:50:20.943"/>
</return>
<msg timestamp="20220705 18:50:20.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.821" endtime="20220705 18:50:20.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.943" endtime="20220705 18:50:20.943"/>
</return>
<status status="PASS" starttime="20220705 18:50:20.820" endtime="20220705 18:50:20.943"/>
</kw>
<status status="PASS" starttime="20220705 18:50:20.820" endtime="20220705 18:50:20.943"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:20.944" level="INFO">${url} = labels/62c487ecae761319080b4f25</msg>
<status status="PASS" starttime="20220705 18:50:20.944" endtime="20220705 18:50:20.944"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:20.985" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:50:20.944" endtime="20220705 18:50:20.985"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.985" endtime="20220705 18:50:20.985"/>
</return>
<msg timestamp="20220705 18:50:20.985" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:50:20.944" endtime="20220705 18:50:20.985"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:20.985" endtime="20220705 18:50:20.985"/>
</return>
<status status="PASS" starttime="20220705 18:50:20.943" endtime="20220705 18:50:20.985"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:50:20.722" endtime="20220705 18:50:20.985"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:20.987" level="INFO">${url} = boards/62c487eb95bcb279b5436a85</msg>
<status status="PASS" starttime="20220705 18:50:20.987" endtime="20220705 18:50:20.987"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:21.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.988" endtime="20220705 18:50:21.319"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:21.319" endtime="20220705 18:50:21.319"/>
</return>
<msg timestamp="20220705 18:50:21.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:20.987" endtime="20220705 18:50:21.319"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:21.319" endtime="20220705 18:50:21.320"/>
</return>
<status status="PASS" starttime="20220705 18:50:20.986" endtime="20220705 18:50:21.320"/>
</kw>
<status status="PASS" starttime="20220705 18:50:20.986" endtime="20220705 18:50:21.320"/>
</kw>
<status status="PASS" starttime="20220705 18:50:20.986" endtime="20220705 18:50:21.320"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 18:50:21.320" endtime="20220705 18:50:21.321"/>
</kw>
<status status="PASS" starttime="20220705 18:50:20.986" endtime="20220705 18:50:21.321"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 18:50:19.850" endtime="20220705 18:50:21.321"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:50:21.330" endtime="20220705 18:50:21.331"/>
</kw>
<status status="PASS" starttime="20220705 18:50:21.330" endtime="20220705 18:50:21.331"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:21.332" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:21.331" endtime="20220705 18:50:21.332"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:21.332" endtime="20220705 18:50:21.332"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:21.333" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:50:21.332" endtime="20220705 18:50:21.333"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:21.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.333" endtime="20220705 18:50:21.543"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:21.543" endtime="20220705 18:50:21.543"/>
</return>
<msg timestamp="20220705 18:50:21.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.331" endtime="20220705 18:50:21.543"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:21.543" endtime="20220705 18:50:21.543"/>
</return>
<msg timestamp="20220705 18:50:21.543" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.331" endtime="20220705 18:50:21.543"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:50:21.544" level="INFO">${TEST_SUITE_BOARD_ID} = 62c487edd4cbea569a855b92</msg>
<status status="PASS" starttime="20220705 18:50:21.544" endtime="20220705 18:50:21.544"/>
</kw>
<status status="PASS" starttime="20220705 18:50:21.543" endtime="20220705 18:50:21.544"/>
</kw>
<status status="PASS" starttime="20220705 18:50:21.331" endtime="20220705 18:50:21.544"/>
</kw>
<status status="PASS" starttime="20220705 18:50:21.330" endtime="20220705 18:50:21.545"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:21.546" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:21.546" endtime="20220705 18:50:21.546"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:21.546" endtime="20220705 18:50:21.546"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:21.547" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 18:50:21.547" endtime="20220705 18:50:21.547"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:21.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.547" endtime="20220705 18:50:21.662"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:21.662" endtime="20220705 18:50:21.662"/>
</return>
<msg timestamp="20220705 18:50:21.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.546" endtime="20220705 18:50:21.662"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:21.662" endtime="20220705 18:50:21.662"/>
</return>
<msg timestamp="20220705 18:50:21.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.545" endtime="20220705 18:50:21.662"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:21.663" endtime="20220705 18:50:21.664"/>
</kw>
<status status="PASS" starttime="20220705 18:50:21.663" endtime="20220705 18:50:21.665"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:50:21.545" endtime="20220705 18:50:21.665"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:21.667" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:21.667" endtime="20220705 18:50:21.667"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:21.667" endtime="20220705 18:50:21.667"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:21.668" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 18:50:21.667" endtime="20220705 18:50:21.668"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:21.762" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.668" endtime="20220705 18:50:21.762"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:21.762" endtime="20220705 18:50:21.762"/>
</return>
<msg timestamp="20220705 18:50:21.762" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.666" endtime="20220705 18:50:21.762"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:21.762" endtime="20220705 18:50:21.762"/>
</return>
<msg timestamp="20220705 18:50:21.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.666" endtime="20220705 18:50:21.763"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:21.763" endtime="20220705 18:50:21.764"/>
</kw>
<status status="PASS" starttime="20220705 18:50:21.763" endtime="20220705 18:50:21.765"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:21.766" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:21.766" endtime="20220705 18:50:21.766"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:21.766" endtime="20220705 18:50:21.767"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:21.767" level="INFO">${url} = lists/62c487ed1347c6498fee5731</msg>
<status status="PASS" starttime="20220705 18:50:21.767" endtime="20220705 18:50:21.767"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:21.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.767" endtime="20220705 18:50:21.845"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:21.845" endtime="20220705 18:50:21.845"/>
</return>
<msg timestamp="20220705 18:50:21.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.765" endtime="20220705 18:50:21.845"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:21.845" endtime="20220705 18:50:21.845"/>
</return>
<status status="PASS" starttime="20220705 18:50:21.765" endtime="20220705 18:50:21.845"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:21.847" level="INFO">${url} = lists/62c487ed1347c6498fee5731</msg>
<status status="PASS" starttime="20220705 18:50:21.847" endtime="20220705 18:50:21.847"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:21.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.847" endtime="20220705 18:50:21.902"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:21.902" endtime="20220705 18:50:21.902"/>
</return>
<msg timestamp="20220705 18:50:21.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.846" endtime="20220705 18:50:21.902"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:21.902" endtime="20220705 18:50:21.902"/>
</return>
<msg timestamp="20220705 18:50:21.902" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.845" endtime="20220705 18:50:21.902"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:50:21.903" endtime="20220705 18:50:21.904"/>
</kw>
<status status="PASS" starttime="20220705 18:50:21.903" endtime="20220705 18:50:21.904"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:50:21.904" endtime="20220705 18:50:21.905"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:50:21.665" endtime="20220705 18:50:21.905"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:21.908" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:21.908" endtime="20220705 18:50:21.908"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:21.908" endtime="20220705 18:50:21.909"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:21.909" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 18:50:21.909" endtime="20220705 18:50:21.909"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:22.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.909" endtime="20220705 18:50:22.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:22.026" endtime="20220705 18:50:22.026"/>
</return>
<msg timestamp="20220705 18:50:22.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.908" endtime="20220705 18:50:22.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:22.026" endtime="20220705 18:50:22.026"/>
</return>
<msg timestamp="20220705 18:50:22.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:21.906" endtime="20220705 18:50:22.027"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:50:22.028" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:50:22.028" endtime="20220705 18:50:22.028"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:50:22.028" endtime="20220705 18:50:22.028"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:22.029" level="INFO">${url} = lists/62c487edec1678083ea1f543/closed</msg>
<status status="PASS" starttime="20220705 18:50:22.029" endtime="20220705 18:50:22.029"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:50:22.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:22.029" endtime="20220705 18:50:22.117"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:22.117" endtime="20220705 18:50:22.117"/>
</return>
<msg timestamp="20220705 18:50:22.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:22.027" endtime="20220705 18:50:22.117"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:22.117" endtime="20220705 18:50:22.117"/>
</return>
<status status="PASS" starttime="20220705 18:50:22.027" endtime="20220705 18:50:22.117"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:22.119" level="INFO">${url} = lists/62c487edec1678083ea1f543</msg>
<status status="PASS" starttime="20220705 18:50:22.119" endtime="20220705 18:50:22.119"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:50:22.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:22.119" endtime="20220705 18:50:22.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:22.175" endtime="20220705 18:50:22.175"/>
</return>
<msg timestamp="20220705 18:50:22.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:22.118" endtime="20220705 18:50:22.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:22.175" endtime="20220705 18:50:22.176"/>
</return>
<msg timestamp="20220705 18:50:22.176" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:22.117" endtime="20220705 18:50:22.176"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 18:50:22.176" endtime="20220705 18:50:22.176"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:50:21.905" endtime="20220705 18:50:22.177"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:50:22.179" level="INFO">${url} = boards/62c487edd4cbea569a855b92</msg>
<status status="PASS" starttime="20220705 18:50:22.179" endtime="20220705 18:50:22.179"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:50:22.500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:22.179" endtime="20220705 18:50:22.500"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:22.500" endtime="20220705 18:50:22.500"/>
</return>
<msg timestamp="20220705 18:50:22.500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:50:22.179" endtime="20220705 18:50:22.500"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:50:22.500" endtime="20220705 18:50:22.500"/>
</return>
<status status="PASS" starttime="20220705 18:50:22.178" endtime="20220705 18:50:22.500"/>
</kw>
<status status="PASS" starttime="20220705 18:50:22.178" endtime="20220705 18:50:22.500"/>
</kw>
<status status="PASS" starttime="20220705 18:50:22.178" endtime="20220705 18:50:22.500"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 18:50:22.501" endtime="20220705 18:50:22.501"/>
</kw>
<status status="PASS" starttime="20220705 18:50:22.177" endtime="20220705 18:50:22.502"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 18:50:21.322" endtime="20220705 18:50:22.502"/>
</suite>
<status status="PASS" starttime="20220705 18:50:11.541" endtime="20220705 18:50:22.503"/>
</suite>
<status status="PASS" starttime="20220705 18:50:11.525" endtime="20220705 18:50:22.505"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
