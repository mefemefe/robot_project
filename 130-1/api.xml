<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 22:41:50.623" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 22:41:50.730" endtime="20220704 22:41:50.730"/>
</kw>
<status status="PASS" starttime="20220704 22:41:50.727" endtime="20220704 22:41:50.730"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:50.732" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:50.732" endtime="20220704 22:41:50.733"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:50.733" endtime="20220704 22:41:50.733"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:50.734" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:41:50.733" endtime="20220704 22:41:50.734"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:50.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:50.734" endtime="20220704 22:41:50.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:50.973" endtime="20220704 22:41:50.974"/>
</return>
<msg timestamp="20220704 22:41:50.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:50.732" endtime="20220704 22:41:50.974"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:50.974" endtime="20220704 22:41:50.974"/>
</return>
<msg timestamp="20220704 22:41:50.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:50.731" endtime="20220704 22:41:50.974"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:41:50.975" endtime="20220704 22:41:50.980"/>
</kw>
<status status="PASS" starttime="20220704 22:41:50.974" endtime="20220704 22:41:50.980"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:50.982" level="INFO">${url} = boards/62c36cae9ecb1c6210d58126</msg>
<status status="PASS" starttime="20220704 22:41:50.982" endtime="20220704 22:41:50.982"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:51.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:50.982" endtime="20220704 22:41:51.264"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:51.264" endtime="20220704 22:41:51.264"/>
</return>
<msg timestamp="20220704 22:41:51.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:50.981" endtime="20220704 22:41:51.264"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:51.264" endtime="20220704 22:41:51.264"/>
</return>
<status status="PASS" starttime="20220704 22:41:50.980" endtime="20220704 22:41:51.264"/>
</kw>
<status status="PASS" starttime="20220704 22:41:50.980" endtime="20220704 22:41:51.265"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:41:50.731" endtime="20220704 22:41:51.265"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:51.267" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:51.267" endtime="20220704 22:41:51.267"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:51.267" endtime="20220704 22:41:51.267"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:51.268" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:41:51.267" endtime="20220704 22:41:51.268"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:51.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:51.268" endtime="20220704 22:41:51.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:51.437" endtime="20220704 22:41:51.437"/>
</return>
<msg timestamp="20220704 22:41:51.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:51.266" endtime="20220704 22:41:51.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:51.437" endtime="20220704 22:41:51.437"/>
</return>
<msg timestamp="20220704 22:41:51.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:51.266" endtime="20220704 22:41:51.437"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:41:51.438" endtime="20220704 22:41:51.442"/>
</kw>
<status status="PASS" starttime="20220704 22:41:51.438" endtime="20220704 22:41:51.442"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:51.443" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:51.443" endtime="20220704 22:41:51.443"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:51.443" endtime="20220704 22:41:51.444"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:51.444" level="INFO">${url} = boards/62c36caf0b87f86fd79e1eb0</msg>
<status status="PASS" starttime="20220704 22:41:51.444" endtime="20220704 22:41:51.444"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:51.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:51.444" endtime="20220704 22:41:51.530"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:51.530" endtime="20220704 22:41:51.530"/>
</return>
<msg timestamp="20220704 22:41:51.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:51.443" endtime="20220704 22:41:51.530"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:51.530" endtime="20220704 22:41:51.531"/>
</return>
<status status="PASS" starttime="20220704 22:41:51.442" endtime="20220704 22:41:51.531"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:51.532" level="INFO">${url} = boards/62c36caf0b87f86fd79e1eb0</msg>
<status status="PASS" starttime="20220704 22:41:51.532" endtime="20220704 22:41:51.532"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:51.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:51.532" endtime="20220704 22:41:51.588"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:51.588" endtime="20220704 22:41:51.588"/>
</return>
<msg timestamp="20220704 22:41:51.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:51.531" endtime="20220704 22:41:51.588"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:51.588" endtime="20220704 22:41:51.588"/>
</return>
<msg timestamp="20220704 22:41:51.588" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:51.531" endtime="20220704 22:41:51.589"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:41:51.589" endtime="20220704 22:41:51.592"/>
</kw>
<status status="PASS" starttime="20220704 22:41:51.589" endtime="20220704 22:41:51.593"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:41:51.593" endtime="20220704 22:41:51.593"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:51.595" level="INFO">${url} = boards/62c36caf0b87f86fd79e1eb0</msg>
<status status="PASS" starttime="20220704 22:41:51.595" endtime="20220704 22:41:51.595"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:51.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:51.595" endtime="20220704 22:41:51.905"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:51.905" endtime="20220704 22:41:51.905"/>
</return>
<msg timestamp="20220704 22:41:51.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:51.594" endtime="20220704 22:41:51.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:51.906" endtime="20220704 22:41:51.906"/>
</return>
<status status="PASS" starttime="20220704 22:41:51.594" endtime="20220704 22:41:51.906"/>
</kw>
<status status="PASS" starttime="20220704 22:41:51.593" endtime="20220704 22:41:51.906"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:41:51.265" endtime="20220704 22:41:51.906"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:51.909" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:51.909" endtime="20220704 22:41:51.909"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:51.909" endtime="20220704 22:41:51.910"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:51.910" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:41:51.910" endtime="20220704 22:41:51.910"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:52.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:51.910" endtime="20220704 22:41:52.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:52.078" endtime="20220704 22:41:52.078"/>
</return>
<msg timestamp="20220704 22:41:52.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:51.908" endtime="20220704 22:41:52.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:52.078" endtime="20220704 22:41:52.078"/>
</return>
<msg timestamp="20220704 22:41:52.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:51.908" endtime="20220704 22:41:52.078"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:52.080" level="INFO">${url} = boards/62c36caf891dc03eb9fb1b40</msg>
<status status="PASS" starttime="20220704 22:41:52.080" endtime="20220704 22:41:52.080"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:52.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:52.081" endtime="20220704 22:41:52.372"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:52.372" endtime="20220704 22:41:52.372"/>
</return>
<msg timestamp="20220704 22:41:52.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:52.079" endtime="20220704 22:41:52.372"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:52.372" endtime="20220704 22:41:52.372"/>
</return>
<status status="PASS" starttime="20220704 22:41:52.078" endtime="20220704 22:41:52.372"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:52.374" level="INFO">${url} = boards/62c36caf891dc03eb9fb1b40</msg>
<status status="PASS" starttime="20220704 22:41:52.374" endtime="20220704 22:41:52.374"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:52.413" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:41:52.374" endtime="20220704 22:41:52.413"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:52.413" endtime="20220704 22:41:52.413"/>
</return>
<msg timestamp="20220704 22:41:52.413" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:41:52.373" endtime="20220704 22:41:52.413"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:52.413" endtime="20220704 22:41:52.413"/>
</return>
<status status="PASS" starttime="20220704 22:41:52.372" endtime="20220704 22:41:52.413"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:41:51.907" endtime="20220704 22:41:52.413"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:52.416" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:52.416" endtime="20220704 22:41:52.416"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:52.416" endtime="20220704 22:41:52.417"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:52.418" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:41:52.417" endtime="20220704 22:41:52.418"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:52.576" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:52.418" endtime="20220704 22:41:52.576"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:52.576" endtime="20220704 22:41:52.576"/>
</return>
<msg timestamp="20220704 22:41:52.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:52.416" endtime="20220704 22:41:52.577"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:52.577" endtime="20220704 22:41:52.577"/>
</return>
<msg timestamp="20220704 22:41:52.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:52.415" endtime="20220704 22:41:52.577"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:41:52.577" endtime="20220704 22:41:52.582"/>
</kw>
<status status="PASS" starttime="20220704 22:41:52.577" endtime="20220704 22:41:52.582"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:52.584" level="INFO">${url} = boards/62c36cb0155f63513d79ddd1</msg>
<status status="PASS" starttime="20220704 22:41:52.583" endtime="20220704 22:41:52.584"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:52.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:52.584" endtime="20220704 22:41:52.633"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:52.633" endtime="20220704 22:41:52.633"/>
</return>
<msg timestamp="20220704 22:41:52.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:52.583" endtime="20220704 22:41:52.633"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:52.633" endtime="20220704 22:41:52.633"/>
</return>
<msg timestamp="20220704 22:41:52.634" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:52.582" endtime="20220704 22:41:52.634"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:41:52.634" endtime="20220704 22:41:52.637"/>
</kw>
<status status="PASS" starttime="20220704 22:41:52.634" endtime="20220704 22:41:52.637"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:41:52.637" endtime="20220704 22:41:52.638"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:52.640" level="INFO">${url} = boards/62c36cb0155f63513d79ddd1</msg>
<status status="PASS" starttime="20220704 22:41:52.639" endtime="20220704 22:41:52.640"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:52.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:52.640" endtime="20220704 22:41:52.976"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:52.976" endtime="20220704 22:41:52.977"/>
</return>
<msg timestamp="20220704 22:41:52.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:52.639" endtime="20220704 22:41:52.977"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:52.977" endtime="20220704 22:41:52.977"/>
</return>
<status status="PASS" starttime="20220704 22:41:52.638" endtime="20220704 22:41:52.977"/>
</kw>
<status status="PASS" starttime="20220704 22:41:52.638" endtime="20220704 22:41:52.977"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:41:52.414" endtime="20220704 22:41:52.977"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:52.980" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:52.980" endtime="20220704 22:41:52.980"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:52.980" endtime="20220704 22:41:52.980"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:52.981" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:41:52.980" endtime="20220704 22:41:52.981"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:53.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:52.981" endtime="20220704 22:41:53.155"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.155" endtime="20220704 22:41:53.155"/>
</return>
<msg timestamp="20220704 22:41:53.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:52.979" endtime="20220704 22:41:53.155"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.155" endtime="20220704 22:41:53.155"/>
</return>
<msg timestamp="20220704 22:41:53.156" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:52.979" endtime="20220704 22:41:53.156"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:41:53.156" endtime="20220704 22:41:53.160"/>
</kw>
<status status="PASS" starttime="20220704 22:41:53.156" endtime="20220704 22:41:53.161"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:53.162" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:53.162" endtime="20220704 22:41:53.162"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:53.162" endtime="20220704 22:41:53.162"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:53.163" level="INFO">${url} = boards/62c36cb130904057d7c0e586</msg>
<status status="PASS" starttime="20220704 22:41:53.162" endtime="20220704 22:41:53.163"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:53.247" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.163" endtime="20220704 22:41:53.247"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.247" endtime="20220704 22:41:53.247"/>
</return>
<msg timestamp="20220704 22:41:53.247" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.161" endtime="20220704 22:41:53.247"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.247" endtime="20220704 22:41:53.247"/>
</return>
<status status="PASS" starttime="20220704 22:41:53.161" endtime="20220704 22:41:53.247"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:53.249" level="INFO">${url} = boards/62c36cb130904057d7c0e586</msg>
<status status="PASS" starttime="20220704 22:41:53.249" endtime="20220704 22:41:53.249"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:53.302" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.249" endtime="20220704 22:41:53.302"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.302" endtime="20220704 22:41:53.302"/>
</return>
<msg timestamp="20220704 22:41:53.302" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.248" endtime="20220704 22:41:53.302"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.302" endtime="20220704 22:41:53.302"/>
</return>
<msg timestamp="20220704 22:41:53.302" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.247" endtime="20220704 22:41:53.302"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:41:53.302" endtime="20220704 22:41:53.303"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:53.304" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:53.304" endtime="20220704 22:41:53.304"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:53.305" endtime="20220704 22:41:53.305"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:53.305" level="INFO">${url} = boards/62c36cb130904057d7c0e586</msg>
<status status="PASS" starttime="20220704 22:41:53.305" endtime="20220704 22:41:53.305"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:53.401" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.305" endtime="20220704 22:41:53.401"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.401" endtime="20220704 22:41:53.402"/>
</return>
<msg timestamp="20220704 22:41:53.402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.304" endtime="20220704 22:41:53.402"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.402" endtime="20220704 22:41:53.402"/>
</return>
<status status="PASS" starttime="20220704 22:41:53.303" endtime="20220704 22:41:53.402"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:53.404" level="INFO">${url} = boards/62c36cb130904057d7c0e586</msg>
<status status="PASS" starttime="20220704 22:41:53.403" endtime="20220704 22:41:53.404"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:53.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.404" endtime="20220704 22:41:53.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.456" endtime="20220704 22:41:53.456"/>
</return>
<msg timestamp="20220704 22:41:53.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.403" endtime="20220704 22:41:53.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.456" endtime="20220704 22:41:53.456"/>
</return>
<msg timestamp="20220704 22:41:53.457" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.402" endtime="20220704 22:41:53.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:41:53.457" endtime="20220704 22:41:53.457"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:53.460" level="INFO">${url} = boards/62c36cb130904057d7c0e586</msg>
<status status="PASS" starttime="20220704 22:41:53.459" endtime="20220704 22:41:53.460"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:53.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.460" endtime="20220704 22:41:53.749"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.749" endtime="20220704 22:41:53.749"/>
</return>
<msg timestamp="20220704 22:41:53.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.459" endtime="20220704 22:41:53.749"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.749" endtime="20220704 22:41:53.749"/>
</return>
<status status="PASS" starttime="20220704 22:41:53.458" endtime="20220704 22:41:53.749"/>
</kw>
<status status="PASS" starttime="20220704 22:41:53.458" endtime="20220704 22:41:53.749"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:41:52.978" endtime="20220704 22:41:53.749"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 22:41:53.751" endtime="20220704 22:41:53.751"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 22:41:50.640" endtime="20220704 22:41:53.752"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 22:41:53.763" endtime="20220704 22:41:53.763"/>
</kw>
<status status="PASS" starttime="20220704 22:41:53.762" endtime="20220704 22:41:53.763"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:53.764" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:53.764" endtime="20220704 22:41:53.764"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:53.764" endtime="20220704 22:41:53.764"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:53.765" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:41:53.764" endtime="20220704 22:41:53.765"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:53.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.765" endtime="20220704 22:41:53.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.961" endtime="20220704 22:41:53.961"/>
</return>
<msg timestamp="20220704 22:41:53.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.763" endtime="20220704 22:41:53.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:53.961" endtime="20220704 22:41:53.961"/>
</return>
<msg timestamp="20220704 22:41:53.961" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.763" endtime="20220704 22:41:53.961"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:41:53.962" level="INFO">${TEST_SUITE_BOARD_ID} = 62c36cb12926fb86534ca0d7</msg>
<status status="PASS" starttime="20220704 22:41:53.962" endtime="20220704 22:41:53.962"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:53.964" level="INFO">${url} = boards/62c36cb12926fb86534ca0d7/lists/</msg>
<status status="PASS" starttime="20220704 22:41:53.963" endtime="20220704 22:41:53.964"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:54.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.964" endtime="20220704 22:41:54.021"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:54.021" endtime="20220704 22:41:54.021"/>
</return>
<msg timestamp="20220704 22:41:54.021" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.963" endtime="20220704 22:41:54.021"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:54.021" endtime="20220704 22:41:54.021"/>
</return>
<msg timestamp="20220704 22:41:54.021" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:53.963" endtime="20220704 22:41:54.021"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:41:54.022" level="INFO">${TEST_SUITE_LIST_ID} = 62c36cb12926fb86534ca0de</msg>
<status status="PASS" starttime="20220704 22:41:54.021" endtime="20220704 22:41:54.022"/>
</kw>
<status status="PASS" starttime="20220704 22:41:53.763" endtime="20220704 22:41:54.022"/>
</kw>
<status status="PASS" starttime="20220704 22:41:53.762" endtime="20220704 22:41:54.022"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:54.024" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:54.024" endtime="20220704 22:41:54.024"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:54.024" endtime="20220704 22:41:54.025"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:54.025" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 22:41:54.025" endtime="20220704 22:41:54.025"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:54.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.026" endtime="20220704 22:41:54.222"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:54.222" endtime="20220704 22:41:54.222"/>
</return>
<msg timestamp="20220704 22:41:54.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.023" endtime="20220704 22:41:54.222"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:54.222" endtime="20220704 22:41:54.222"/>
</return>
<msg timestamp="20220704 22:41:54.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.023" endtime="20220704 22:41:54.223"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:41:54.223" endtime="20220704 22:41:54.228"/>
</kw>
<status status="PASS" starttime="20220704 22:41:54.223" endtime="20220704 22:41:54.228"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:54.229" endtime="20220704 22:41:54.229"/>
</return>
<msg timestamp="20220704 22:41:54.229" level="INFO">${CARD_ID} = 62c36cb261397c33af92eaa2</msg>
<status status="PASS" starttime="20220704 22:41:54.229" endtime="20220704 22:41:54.230"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:54.231" level="INFO">${url} = cards/62c36cb261397c33af92eaa2</msg>
<status status="PASS" starttime="20220704 22:41:54.230" endtime="20220704 22:41:54.231"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:54.287" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.231" endtime="20220704 22:41:54.287"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:54.287" endtime="20220704 22:41:54.287"/>
</return>
<msg timestamp="20220704 22:41:54.287" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.230" endtime="20220704 22:41:54.287"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:54.287" endtime="20220704 22:41:54.287"/>
</return>
<msg timestamp="20220704 22:41:54.287" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.230" endtime="20220704 22:41:54.287"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:54.288" endtime="20220704 22:41:54.288"/>
</return>
<msg timestamp="20220704 22:41:54.289" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 22:41:54.287" endtime="20220704 22:41:54.289"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:41:54.289" endtime="20220704 22:41:54.289"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:54.290" level="INFO">${url} = cards/62c36cb261397c33af92eaa2</msg>
<status status="PASS" starttime="20220704 22:41:54.290" endtime="20220704 22:41:54.290"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:54.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.291" endtime="20220704 22:41:54.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:54.448" endtime="20220704 22:41:54.448"/>
</return>
<msg timestamp="20220704 22:41:54.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.290" endtime="20220704 22:41:54.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:54.448" endtime="20220704 22:41:54.448"/>
</return>
<status status="PASS" starttime="20220704 22:41:54.289" endtime="20220704 22:41:54.448"/>
</kw>
<status status="PASS" starttime="20220704 22:41:54.289" endtime="20220704 22:41:54.448"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:41:54.022" endtime="20220704 22:41:54.448"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:54.451" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:54.450" endtime="20220704 22:41:54.451"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:54.451" endtime="20220704 22:41:54.451"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:54.452" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 22:41:54.451" endtime="20220704 22:41:54.452"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:54.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.452" endtime="20220704 22:41:54.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:54.591" endtime="20220704 22:41:54.591"/>
</return>
<msg timestamp="20220704 22:41:54.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.450" endtime="20220704 22:41:54.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:54.591" endtime="20220704 22:41:54.592"/>
</return>
<msg timestamp="20220704 22:41:54.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.449" endtime="20220704 22:41:54.592"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:54.592" endtime="20220704 22:41:54.592"/>
</return>
<msg timestamp="20220704 22:41:54.593" level="INFO">${CARD_ID} = 62c36cb2e837735f3abdcb38</msg>
<status status="PASS" starttime="20220704 22:41:54.592" endtime="20220704 22:41:54.593"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:54.595" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:54.595" endtime="20220704 22:41:54.595"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:54.595" endtime="20220704 22:41:54.595"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:54.595" level="INFO">${url} = cards/62c36cb2e837735f3abdcb38</msg>
<status status="PASS" starttime="20220704 22:41:54.595" endtime="20220704 22:41:54.595"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:54.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.596" endtime="20220704 22:41:54.710"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:54.710" endtime="20220704 22:41:54.710"/>
</return>
<msg timestamp="20220704 22:41:54.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.594" endtime="20220704 22:41:54.711"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:54.711" endtime="20220704 22:41:54.711"/>
</return>
<msg timestamp="20220704 22:41:54.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.593" endtime="20220704 22:41:54.711"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:54.711" endtime="20220704 22:41:54.711"/>
</return>
<status status="PASS" starttime="20220704 22:41:54.593" endtime="20220704 22:41:54.711"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:54.712" level="INFO">${url} = cards/62c36cb2e837735f3abdcb38</msg>
<status status="PASS" starttime="20220704 22:41:54.712" endtime="20220704 22:41:54.713"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:55.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.713" endtime="20220704 22:41:55.132"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.132" endtime="20220704 22:41:55.132"/>
</return>
<msg timestamp="20220704 22:41:55.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.712" endtime="20220704 22:41:55.132"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.132" endtime="20220704 22:41:55.132"/>
</return>
<msg timestamp="20220704 22:41:55.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:54.711" endtime="20220704 22:41:55.133"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:55.133" endtime="20220704 22:41:55.133"/>
</return>
<msg timestamp="20220704 22:41:55.134" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 22:41:55.133" endtime="20220704 22:41:55.134"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 22:41:55.134" endtime="20220704 22:41:55.134"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:55.136" level="INFO">${url} = cards/62c36cb2e837735f3abdcb38</msg>
<status status="PASS" starttime="20220704 22:41:55.136" endtime="20220704 22:41:55.136"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:55.281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.136" endtime="20220704 22:41:55.281"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.281" endtime="20220704 22:41:55.282"/>
</return>
<msg timestamp="20220704 22:41:55.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.135" endtime="20220704 22:41:55.282"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.282" endtime="20220704 22:41:55.282"/>
</return>
<status status="PASS" starttime="20220704 22:41:55.135" endtime="20220704 22:41:55.282"/>
</kw>
<status status="PASS" starttime="20220704 22:41:55.135" endtime="20220704 22:41:55.282"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 22:41:54.449" endtime="20220704 22:41:55.282"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:55.285" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:55.284" endtime="20220704 22:41:55.285"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:55.285" endtime="20220704 22:41:55.285"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:55.286" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 22:41:55.285" endtime="20220704 22:41:55.286"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:55.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.286" endtime="20220704 22:41:55.424"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.424" endtime="20220704 22:41:55.424"/>
</return>
<msg timestamp="20220704 22:41:55.425" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.283" endtime="20220704 22:41:55.425"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.425" endtime="20220704 22:41:55.425"/>
</return>
<msg timestamp="20220704 22:41:55.425" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.283" endtime="20220704 22:41:55.425"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:55.425" endtime="20220704 22:41:55.425"/>
</return>
<msg timestamp="20220704 22:41:55.426" level="INFO">${CARD_ID} = 62c36cb343b63812ebc6c502</msg>
<status status="PASS" starttime="20220704 22:41:55.425" endtime="20220704 22:41:55.426"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:55.427" level="INFO">${url} = cards/62c36cb343b63812ebc6c502</msg>
<status status="PASS" starttime="20220704 22:41:55.427" endtime="20220704 22:41:55.427"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:55.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.428" endtime="20220704 22:41:55.581"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.581" endtime="20220704 22:41:55.581"/>
</return>
<msg timestamp="20220704 22:41:55.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.427" endtime="20220704 22:41:55.581"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.581" endtime="20220704 22:41:55.581"/>
</return>
<msg timestamp="20220704 22:41:55.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.426" endtime="20220704 22:41:55.582"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:41:55.582" endtime="20220704 22:41:55.584"/>
</kw>
<status status="PASS" starttime="20220704 22:41:55.582" endtime="20220704 22:41:55.584"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:55.586" level="INFO">${url} = cards/62c36cb343b63812ebc6c502</msg>
<status status="PASS" starttime="20220704 22:41:55.585" endtime="20220704 22:41:55.586"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:55.626" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:41:55.586" endtime="20220704 22:41:55.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.626" endtime="20220704 22:41:55.626"/>
</return>
<msg timestamp="20220704 22:41:55.626" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:41:55.585" endtime="20220704 22:41:55.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.626" endtime="20220704 22:41:55.627"/>
</return>
<status status="PASS" starttime="20220704 22:41:55.584" endtime="20220704 22:41:55.627"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:41:55.282" endtime="20220704 22:41:55.627"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:55.629" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:55.629" endtime="20220704 22:41:55.629"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:55.629" endtime="20220704 22:41:55.630"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:55.630" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 22:41:55.630" endtime="20220704 22:41:55.630"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:55.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.630" endtime="20220704 22:41:55.777"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.777" endtime="20220704 22:41:55.777"/>
</return>
<msg timestamp="20220704 22:41:55.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.629" endtime="20220704 22:41:55.777"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.777" endtime="20220704 22:41:55.777"/>
</return>
<msg timestamp="20220704 22:41:55.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.628" endtime="20220704 22:41:55.777"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:55.778" endtime="20220704 22:41:55.778"/>
</return>
<msg timestamp="20220704 22:41:55.779" level="INFO">${CARD_ID} = 62c36cb36ec5b56a662b5652</msg>
<status status="PASS" starttime="20220704 22:41:55.777" endtime="20220704 22:41:55.779"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:55.780" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:55.780" endtime="20220704 22:41:55.780"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:55.780" endtime="20220704 22:41:55.780"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:55.781" level="INFO">${url} = cards/62c36cb36ec5b56a662b5652</msg>
<status status="PASS" starttime="20220704 22:41:55.780" endtime="20220704 22:41:55.781"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:55.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.781" endtime="20220704 22:41:55.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.961" endtime="20220704 22:41:55.961"/>
</return>
<msg timestamp="20220704 22:41:55.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.779" endtime="20220704 22:41:55.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:55.961" endtime="20220704 22:41:55.961"/>
</return>
<msg timestamp="20220704 22:41:55.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.779" endtime="20220704 22:41:55.961"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:41:55.962" endtime="20220704 22:41:55.967"/>
</kw>
<status status="PASS" starttime="20220704 22:41:55.962" endtime="20220704 22:41:55.967"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:55.968" level="INFO">${url} = cards/62c36cb36ec5b56a662b5652</msg>
<status status="PASS" starttime="20220704 22:41:55.968" endtime="20220704 22:41:55.968"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:56.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.968" endtime="20220704 22:41:56.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:56.027" endtime="20220704 22:41:56.027"/>
</return>
<msg timestamp="20220704 22:41:56.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.967" endtime="20220704 22:41:56.028"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:56.028" endtime="20220704 22:41:56.028"/>
</return>
<msg timestamp="20220704 22:41:56.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:55.967" endtime="20220704 22:41:56.028"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:56.028" endtime="20220704 22:41:56.028"/>
</return>
<msg timestamp="20220704 22:41:56.029" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 22:41:56.028" endtime="20220704 22:41:56.029"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:56.030" endtime="20220704 22:41:56.030"/>
</return>
<msg timestamp="20220704 22:41:56.030" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 22:41:56.029" endtime="20220704 22:41:56.030"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:41:56.030" endtime="20220704 22:41:56.031"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:41:56.031" endtime="20220704 22:41:56.031"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:56.033" level="INFO">${url} = cards/62c36cb36ec5b56a662b5652</msg>
<status status="PASS" starttime="20220704 22:41:56.032" endtime="20220704 22:41:56.033"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:56.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.033" endtime="20220704 22:41:56.177"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:56.177" endtime="20220704 22:41:56.177"/>
</return>
<msg timestamp="20220704 22:41:56.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.032" endtime="20220704 22:41:56.177"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:56.177" endtime="20220704 22:41:56.177"/>
</return>
<status status="PASS" starttime="20220704 22:41:56.031" endtime="20220704 22:41:56.177"/>
</kw>
<status status="PASS" starttime="20220704 22:41:56.031" endtime="20220704 22:41:56.177"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 22:41:55.627" endtime="20220704 22:41:56.178"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:56.181" level="INFO">${url} = boards/62c36cb12926fb86534ca0d7</msg>
<status status="PASS" starttime="20220704 22:41:56.181" endtime="20220704 22:41:56.181"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:56.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.181" endtime="20220704 22:41:56.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:56.519" endtime="20220704 22:41:56.519"/>
</return>
<msg timestamp="20220704 22:41:56.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.180" endtime="20220704 22:41:56.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:56.519" endtime="20220704 22:41:56.519"/>
</return>
<status status="PASS" starttime="20220704 22:41:56.179" endtime="20220704 22:41:56.519"/>
</kw>
<status status="PASS" starttime="20220704 22:41:56.179" endtime="20220704 22:41:56.519"/>
</kw>
<status status="PASS" starttime="20220704 22:41:56.179" endtime="20220704 22:41:56.519"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 22:41:56.520" endtime="20220704 22:41:56.521"/>
</kw>
<status status="PASS" starttime="20220704 22:41:56.178" endtime="20220704 22:41:56.521"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 22:41:53.753" endtime="20220704 22:41:56.521"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 22:41:56.532" endtime="20220704 22:41:56.533"/>
</kw>
<status status="PASS" starttime="20220704 22:41:56.532" endtime="20220704 22:41:56.533"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:56.534" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:56.534" endtime="20220704 22:41:56.534"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:56.534" endtime="20220704 22:41:56.534"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:56.535" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:41:56.534" endtime="20220704 22:41:56.535"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:56.712" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.535" endtime="20220704 22:41:56.712"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:56.712" endtime="20220704 22:41:56.712"/>
</return>
<msg timestamp="20220704 22:41:56.712" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.533" endtime="20220704 22:41:56.712"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:56.712" endtime="20220704 22:41:56.713"/>
</return>
<msg timestamp="20220704 22:41:56.713" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.533" endtime="20220704 22:41:56.713"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:41:56.713" level="INFO">${TEST_SUITE_BOARD_ID} = 62c36cb412bd1e40f9538203</msg>
<status status="PASS" starttime="20220704 22:41:56.713" endtime="20220704 22:41:56.714"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:56.714" level="INFO">${url} = boards/62c36cb412bd1e40f9538203/lists/</msg>
<status status="PASS" starttime="20220704 22:41:56.714" endtime="20220704 22:41:56.714"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:56.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.714" endtime="20220704 22:41:56.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:56.766" endtime="20220704 22:41:56.766"/>
</return>
<msg timestamp="20220704 22:41:56.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.714" endtime="20220704 22:41:56.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:56.766" endtime="20220704 22:41:56.766"/>
</return>
<msg timestamp="20220704 22:41:56.767" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.714" endtime="20220704 22:41:56.767"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:41:56.767" level="INFO">${TEST_SUITE_LIST_ID} = 62c36cb412bd1e40f953820a</msg>
<status status="PASS" starttime="20220704 22:41:56.767" endtime="20220704 22:41:56.768"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:56.769" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:56.769" endtime="20220704 22:41:56.769"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:56.769" endtime="20220704 22:41:56.770"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:56.770" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 22:41:56.770" endtime="20220704 22:41:56.770"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:56.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.770" endtime="20220704 22:41:56.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:56.961" endtime="20220704 22:41:56.961"/>
</return>
<msg timestamp="20220704 22:41:56.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.768" endtime="20220704 22:41:56.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:56.961" endtime="20220704 22:41:56.961"/>
</return>
<msg timestamp="20220704 22:41:56.962" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.768" endtime="20220704 22:41:56.962"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:41:56.963" level="INFO">${TEST_SUITE_CARD_ID} = 62c36cb431b0418a49336418</msg>
<status status="PASS" starttime="20220704 22:41:56.962" endtime="20220704 22:41:56.963"/>
</kw>
<status status="PASS" starttime="20220704 22:41:56.533" endtime="20220704 22:41:56.963"/>
</kw>
<status status="PASS" starttime="20220704 22:41:56.531" endtime="20220704 22:41:56.963"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:56.965" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:56.965" endtime="20220704 22:41:56.965"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:56.965" endtime="20220704 22:41:56.965"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:56.966" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 22:41:56.966" endtime="20220704 22:41:56.966"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:57.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.966" endtime="20220704 22:41:57.072"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.072" endtime="20220704 22:41:57.072"/>
</return>
<msg timestamp="20220704 22:41:57.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.964" endtime="20220704 22:41:57.072"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.072" endtime="20220704 22:41:57.072"/>
</return>
<msg timestamp="20220704 22:41:57.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:56.964" endtime="20220704 22:41:57.072"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:57.073" endtime="20220704 22:41:57.073"/>
</return>
<msg timestamp="20220704 22:41:57.074" level="INFO">${checklist_id} = 62c36cb5180bbf268587d5bc</msg>
<status status="PASS" starttime="20220704 22:41:57.073" endtime="20220704 22:41:57.074"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:57.075" level="INFO">${url} = checklists/62c36cb5180bbf268587d5bc</msg>
<status status="PASS" starttime="20220704 22:41:57.075" endtime="20220704 22:41:57.075"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:57.143" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.075" endtime="20220704 22:41:57.143"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.143" endtime="20220704 22:41:57.143"/>
</return>
<msg timestamp="20220704 22:41:57.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.074" endtime="20220704 22:41:57.144"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.144" endtime="20220704 22:41:57.144"/>
</return>
<msg timestamp="20220704 22:41:57.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.074" endtime="20220704 22:41:57.144"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:57.144" endtime="20220704 22:41:57.144"/>
</return>
<msg timestamp="20220704 22:41:57.145" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 22:41:57.144" endtime="20220704 22:41:57.145"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:41:57.145" endtime="20220704 22:41:57.146"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:57.147" level="INFO">${url} = checklists/62c36cb5180bbf268587d5bc</msg>
<status status="PASS" starttime="20220704 22:41:57.147" endtime="20220704 22:41:57.147"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:57.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.147" endtime="20220704 22:41:57.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.256" endtime="20220704 22:41:57.256"/>
</return>
<msg timestamp="20220704 22:41:57.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.146" endtime="20220704 22:41:57.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.256" endtime="20220704 22:41:57.256"/>
</return>
<status status="PASS" starttime="20220704 22:41:57.146" endtime="20220704 22:41:57.257"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:41:56.963" endtime="20220704 22:41:57.257"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:57.260" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:57.259" endtime="20220704 22:41:57.260"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:57.260" endtime="20220704 22:41:57.260"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:57.261" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 22:41:57.260" endtime="20220704 22:41:57.261"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:57.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.261" endtime="20220704 22:41:57.366"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.366" endtime="20220704 22:41:57.366"/>
</return>
<msg timestamp="20220704 22:41:57.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.259" endtime="20220704 22:41:57.366"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.366" endtime="20220704 22:41:57.366"/>
</return>
<msg timestamp="20220704 22:41:57.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.258" endtime="20220704 22:41:57.366"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:57.367" endtime="20220704 22:41:57.367"/>
</return>
<msg timestamp="20220704 22:41:57.368" level="INFO">${checklist_id} = 62c36cb5b9a5016b7774b04d</msg>
<status status="PASS" starttime="20220704 22:41:57.366" endtime="20220704 22:41:57.368"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:57.369" level="INFO">${url} = checklists/62c36cb5b9a5016b7774b04d</msg>
<status status="PASS" starttime="20220704 22:41:57.369" endtime="20220704 22:41:57.369"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:57.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.369" endtime="20220704 22:41:57.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.491" endtime="20220704 22:41:57.491"/>
</return>
<msg timestamp="20220704 22:41:57.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.368" endtime="20220704 22:41:57.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.491" endtime="20220704 22:41:57.491"/>
</return>
<msg timestamp="20220704 22:41:57.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.368" endtime="20220704 22:41:57.491"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:41:57.492" endtime="20220704 22:41:57.494"/>
</kw>
<status status="PASS" starttime="20220704 22:41:57.491" endtime="20220704 22:41:57.494"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:57.495" level="INFO">${url} = checklists/62c36cb5b9a5016b7774b04d</msg>
<status status="PASS" starttime="20220704 22:41:57.495" endtime="20220704 22:41:57.495"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:57.534" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:41:57.495" endtime="20220704 22:41:57.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.534" endtime="20220704 22:41:57.535"/>
</return>
<msg timestamp="20220704 22:41:57.535" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:41:57.494" endtime="20220704 22:41:57.535"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.535" endtime="20220704 22:41:57.535"/>
</return>
<status status="PASS" starttime="20220704 22:41:57.494" endtime="20220704 22:41:57.535"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:41:57.257" endtime="20220704 22:41:57.535"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:57.539" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:57.537" endtime="20220704 22:41:57.539"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:57.539" endtime="20220704 22:41:57.539"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:57.540" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 22:41:57.539" endtime="20220704 22:41:57.540"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:57.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.540" endtime="20220704 22:41:57.639"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.639" endtime="20220704 22:41:57.639"/>
</return>
<msg timestamp="20220704 22:41:57.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.537" endtime="20220704 22:41:57.639"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.639" endtime="20220704 22:41:57.639"/>
</return>
<msg timestamp="20220704 22:41:57.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.537" endtime="20220704 22:41:57.639"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:57.640" endtime="20220704 22:41:57.640"/>
</return>
<msg timestamp="20220704 22:41:57.640" level="INFO">${checklist_id} = 62c36cb59d85537521112b97</msg>
<status status="PASS" starttime="20220704 22:41:57.639" endtime="20220704 22:41:57.640"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:57.642" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:57.642" endtime="20220704 22:41:57.642"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:57.642" endtime="20220704 22:41:57.642"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:57.643" level="INFO">${url} = checklists/62c36cb59d85537521112b97</msg>
<status status="PASS" starttime="20220704 22:41:57.642" endtime="20220704 22:41:57.643"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:57.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.643" endtime="20220704 22:41:57.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.733" endtime="20220704 22:41:57.733"/>
</return>
<msg timestamp="20220704 22:41:57.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.641" endtime="20220704 22:41:57.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.733" endtime="20220704 22:41:57.733"/>
</return>
<msg timestamp="20220704 22:41:57.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.641" endtime="20220704 22:41:57.733"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:57.735" level="INFO">${url} = checklists/62c36cb59d85537521112b97</msg>
<status status="PASS" starttime="20220704 22:41:57.734" endtime="20220704 22:41:57.735"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:57.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.735" endtime="20220704 22:41:57.805"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.805" endtime="20220704 22:41:57.805"/>
</return>
<msg timestamp="20220704 22:41:57.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.734" endtime="20220704 22:41:57.805"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.805" endtime="20220704 22:41:57.806"/>
</return>
<msg timestamp="20220704 22:41:57.806" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.733" endtime="20220704 22:41:57.806"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:57.806" endtime="20220704 22:41:57.806"/>
</return>
<msg timestamp="20220704 22:41:57.807" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 22:41:57.806" endtime="20220704 22:41:57.807"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:41:57.807" endtime="20220704 22:41:57.807"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:57.820" level="INFO">${url} = checklists/62c36cb59d85537521112b97</msg>
<status status="PASS" starttime="20220704 22:41:57.820" endtime="20220704 22:41:57.820"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:57.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.821" endtime="20220704 22:41:57.924"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.924" endtime="20220704 22:41:57.924"/>
</return>
<msg timestamp="20220704 22:41:57.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.820" endtime="20220704 22:41:57.924"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:57.924" endtime="20220704 22:41:57.924"/>
</return>
<status status="PASS" starttime="20220704 22:41:57.808" endtime="20220704 22:41:57.925"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 22:41:57.536" endtime="20220704 22:41:57.925"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:57.927" level="INFO">${url} = boards/62c36cb412bd1e40f9538203</msg>
<status status="PASS" starttime="20220704 22:41:57.927" endtime="20220704 22:41:57.927"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:58.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.927" endtime="20220704 22:41:58.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.241" endtime="20220704 22:41:58.241"/>
</return>
<msg timestamp="20220704 22:41:58.242" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:57.926" endtime="20220704 22:41:58.242"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.242" endtime="20220704 22:41:58.242"/>
</return>
<status status="PASS" starttime="20220704 22:41:57.926" endtime="20220704 22:41:58.242"/>
</kw>
<status status="PASS" starttime="20220704 22:41:57.926" endtime="20220704 22:41:58.242"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 22:41:58.242" endtime="20220704 22:41:58.244"/>
</kw>
<status status="PASS" starttime="20220704 22:41:57.925" endtime="20220704 22:41:58.244"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 22:41:56.523" endtime="20220704 22:41:58.244"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 22:41:58.255" endtime="20220704 22:41:58.255"/>
</kw>
<status status="PASS" starttime="20220704 22:41:58.255" endtime="20220704 22:41:58.255"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:58.257" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:58.256" endtime="20220704 22:41:58.257"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:58.257" endtime="20220704 22:41:58.257"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:58.258" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:41:58.257" endtime="20220704 22:41:58.258"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:58.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.258" endtime="20220704 22:41:58.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.457" endtime="20220704 22:41:58.457"/>
</return>
<msg timestamp="20220704 22:41:58.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.256" endtime="20220704 22:41:58.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.457" endtime="20220704 22:41:58.457"/>
</return>
<msg timestamp="20220704 22:41:58.457" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.256" endtime="20220704 22:41:58.457"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:41:58.458" level="INFO">${TEST_SUITE_BOARD_ID} = 62c36cb61d507e747eea71cd</msg>
<status status="PASS" starttime="20220704 22:41:58.458" endtime="20220704 22:41:58.458"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:58.511" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.458" endtime="20220704 22:41:58.511"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:41:58.512" level="INFO">${TEST_SUITE_LIST_ID} = 62c36cb61d507e747eea71d4</msg>
<status status="PASS" starttime="20220704 22:41:58.511" endtime="20220704 22:41:58.512"/>
</kw>
<status status="PASS" starttime="20220704 22:41:58.256" endtime="20220704 22:41:58.513"/>
</kw>
<status status="PASS" starttime="20220704 22:41:58.255" endtime="20220704 22:41:58.513"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:58.515" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:58.514" endtime="20220704 22:41:58.515"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:58.515" endtime="20220704 22:41:58.515"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:58.516" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 22:41:58.515" endtime="20220704 22:41:58.516"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:58.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.516" endtime="20220704 22:41:58.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.617" endtime="20220704 22:41:58.617"/>
</return>
<msg timestamp="20220704 22:41:58.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.514" endtime="20220704 22:41:58.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.617" endtime="20220704 22:41:58.617"/>
</return>
<msg timestamp="20220704 22:41:58.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.513" endtime="20220704 22:41:58.618"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:41:58.618" endtime="20220704 22:41:58.620"/>
</kw>
<status status="PASS" starttime="20220704 22:41:58.618" endtime="20220704 22:41:58.620"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:58.620" endtime="20220704 22:41:58.620"/>
</return>
<msg timestamp="20220704 22:41:58.621" level="INFO">${LABEL_ID} = 62c36cb601f71b19bbec3493</msg>
<status status="PASS" starttime="20220704 22:41:58.620" endtime="20220704 22:41:58.621"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:58.622" level="INFO">${url} = labels/62c36cb601f71b19bbec3493</msg>
<status status="PASS" starttime="20220704 22:41:58.622" endtime="20220704 22:41:58.622"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:58.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.622" endtime="20220704 22:41:58.667"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.667" endtime="20220704 22:41:58.667"/>
</return>
<msg timestamp="20220704 22:41:58.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.621" endtime="20220704 22:41:58.667"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.667" endtime="20220704 22:41:58.667"/>
</return>
<msg timestamp="20220704 22:41:58.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.621" endtime="20220704 22:41:58.667"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:58.668" endtime="20220704 22:41:58.668"/>
</return>
<msg timestamp="20220704 22:41:58.668" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 22:41:58.667" endtime="20220704 22:41:58.668"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:58.669" endtime="20220704 22:41:58.669"/>
</return>
<msg timestamp="20220704 22:41:58.670" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 22:41:58.669" endtime="20220704 22:41:58.670"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:41:58.670" endtime="20220704 22:41:58.670"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:41:58.670" endtime="20220704 22:41:58.670"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:58.672" level="INFO">${url} = labels/62c36cb601f71b19bbec3493</msg>
<status status="PASS" starttime="20220704 22:41:58.671" endtime="20220704 22:41:58.672"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:58.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.672" endtime="20220704 22:41:58.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.773" endtime="20220704 22:41:58.773"/>
</return>
<msg timestamp="20220704 22:41:58.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.671" endtime="20220704 22:41:58.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.773" endtime="20220704 22:41:58.773"/>
</return>
<status status="PASS" starttime="20220704 22:41:58.671" endtime="20220704 22:41:58.773"/>
</kw>
<status status="PASS" starttime="20220704 22:41:58.671" endtime="20220704 22:41:58.773"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:41:58.513" endtime="20220704 22:41:58.773"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:58.776" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:58.776" endtime="20220704 22:41:58.776"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:58.776" endtime="20220704 22:41:58.776"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:58.777" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 22:41:58.776" endtime="20220704 22:41:58.777"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:58.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.777" endtime="20220704 22:41:58.869"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.870" endtime="20220704 22:41:58.870"/>
</return>
<msg timestamp="20220704 22:41:58.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.775" endtime="20220704 22:41:58.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.870" endtime="20220704 22:41:58.870"/>
</return>
<msg timestamp="20220704 22:41:58.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.775" endtime="20220704 22:41:58.870"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:41:58.871" endtime="20220704 22:41:58.873"/>
</kw>
<status status="PASS" starttime="20220704 22:41:58.870" endtime="20220704 22:41:58.873"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:58.873" endtime="20220704 22:41:58.873"/>
</return>
<msg timestamp="20220704 22:41:58.874" level="INFO">${LABEL_ID} = 62c36cb62bca4c079f7498ac</msg>
<status status="PASS" starttime="20220704 22:41:58.873" endtime="20220704 22:41:58.874"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:58.875" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:58.875" endtime="20220704 22:41:58.875"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:58.875" endtime="20220704 22:41:58.875"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:58.876" level="INFO">${url} = labels/62c36cb62bca4c079f7498ac</msg>
<status status="PASS" starttime="20220704 22:41:58.875" endtime="20220704 22:41:58.876"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:58.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.876" endtime="20220704 22:41:58.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.973" endtime="20220704 22:41:58.973"/>
</return>
<msg timestamp="20220704 22:41:58.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.874" endtime="20220704 22:41:58.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:58.973" endtime="20220704 22:41:58.973"/>
</return>
<msg timestamp="20220704 22:41:58.974" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.874" endtime="20220704 22:41:58.974"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:58.974" endtime="20220704 22:41:58.974"/>
</return>
<msg timestamp="20220704 22:41:58.975" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 22:41:58.974" endtime="20220704 22:41:58.975"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:58.975" endtime="20220704 22:41:58.975"/>
</return>
<msg timestamp="20220704 22:41:58.976" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 22:41:58.975" endtime="20220704 22:41:58.976"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:41:58.976" endtime="20220704 22:41:58.976"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:41:58.976" endtime="20220704 22:41:58.976"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:58.978" level="INFO">${url} = labels/62c36cb62bca4c079f7498ac</msg>
<status status="PASS" starttime="20220704 22:41:58.978" endtime="20220704 22:41:58.978"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:59.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.978" endtime="20220704 22:41:59.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.083" endtime="20220704 22:41:59.084"/>
</return>
<msg timestamp="20220704 22:41:59.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:58.977" endtime="20220704 22:41:59.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.084" endtime="20220704 22:41:59.084"/>
</return>
<status status="PASS" starttime="20220704 22:41:58.977" endtime="20220704 22:41:59.084"/>
</kw>
<status status="PASS" starttime="20220704 22:41:58.977" endtime="20220704 22:41:59.084"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:41:58.774" endtime="20220704 22:41:59.084"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:59.086" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:59.086" endtime="20220704 22:41:59.086"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:59.086" endtime="20220704 22:41:59.087"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:59.088" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 22:41:59.087" endtime="20220704 22:41:59.088"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:59.166" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.088" endtime="20220704 22:41:59.166"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.166" endtime="20220704 22:41:59.166"/>
</return>
<msg timestamp="20220704 22:41:59.166" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.086" endtime="20220704 22:41:59.166"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.166" endtime="20220704 22:41:59.166"/>
</return>
<msg timestamp="20220704 22:41:59.167" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.085" endtime="20220704 22:41:59.167"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:41:59.167" endtime="20220704 22:41:59.167"/>
</return>
<msg timestamp="20220704 22:41:59.168" level="INFO">${LABEL_ID} = 62c36cb70dc2ea6123258998</msg>
<status status="PASS" starttime="20220704 22:41:59.167" endtime="20220704 22:41:59.168"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:59.169" level="INFO">${url} = labels/62c36cb70dc2ea6123258998</msg>
<status status="PASS" starttime="20220704 22:41:59.169" endtime="20220704 22:41:59.169"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:59.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.169" endtime="20220704 22:41:59.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.277" endtime="20220704 22:41:59.277"/>
</return>
<msg timestamp="20220704 22:41:59.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.169" endtime="20220704 22:41:59.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.277" endtime="20220704 22:41:59.277"/>
</return>
<status status="PASS" starttime="20220704 22:41:59.168" endtime="20220704 22:41:59.277"/>
</kw>
<status status="PASS" starttime="20220704 22:41:59.168" endtime="20220704 22:41:59.277"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:59.279" level="INFO">${url} = labels/62c36cb70dc2ea6123258998</msg>
<status status="PASS" starttime="20220704 22:41:59.278" endtime="20220704 22:41:59.279"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:41:59.317" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:41:59.279" endtime="20220704 22:41:59.317"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.317" endtime="20220704 22:41:59.317"/>
</return>
<msg timestamp="20220704 22:41:59.317" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:41:59.278" endtime="20220704 22:41:59.317"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.317" endtime="20220704 22:41:59.317"/>
</return>
<status status="PASS" starttime="20220704 22:41:59.277" endtime="20220704 22:41:59.317"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:41:59.085" endtime="20220704 22:41:59.317"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:59.320" level="INFO">${url} = boards/62c36cb61d507e747eea71cd</msg>
<status status="PASS" starttime="20220704 22:41:59.319" endtime="20220704 22:41:59.320"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:41:59.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.320" endtime="20220704 22:41:59.620"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.620" endtime="20220704 22:41:59.620"/>
</return>
<msg timestamp="20220704 22:41:59.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.319" endtime="20220704 22:41:59.621"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.621" endtime="20220704 22:41:59.621"/>
</return>
<status status="PASS" starttime="20220704 22:41:59.319" endtime="20220704 22:41:59.621"/>
</kw>
<status status="PASS" starttime="20220704 22:41:59.318" endtime="20220704 22:41:59.621"/>
</kw>
<status status="PASS" starttime="20220704 22:41:59.318" endtime="20220704 22:41:59.621"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 22:41:59.621" endtime="20220704 22:41:59.623"/>
</kw>
<status status="PASS" starttime="20220704 22:41:59.318" endtime="20220704 22:41:59.623"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 22:41:58.245" endtime="20220704 22:41:59.623"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 22:41:59.631" endtime="20220704 22:41:59.632"/>
</kw>
<status status="PASS" starttime="20220704 22:41:59.631" endtime="20220704 22:41:59.632"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:59.633" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:59.632" endtime="20220704 22:41:59.633"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:59.633" endtime="20220704 22:41:59.633"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:59.633" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:41:59.633" endtime="20220704 22:41:59.633"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:59.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.633" endtime="20220704 22:41:59.829"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.829" endtime="20220704 22:41:59.829"/>
</return>
<msg timestamp="20220704 22:41:59.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.632" endtime="20220704 22:41:59.829"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.829" endtime="20220704 22:41:59.829"/>
</return>
<msg timestamp="20220704 22:41:59.829" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.632" endtime="20220704 22:41:59.829"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:41:59.830" level="INFO">${TEST_SUITE_BOARD_ID} = 62c36cb7cce296184f5cfb3e</msg>
<status status="PASS" starttime="20220704 22:41:59.830" endtime="20220704 22:41:59.831"/>
</kw>
<status status="PASS" starttime="20220704 22:41:59.829" endtime="20220704 22:41:59.831"/>
</kw>
<status status="PASS" starttime="20220704 22:41:59.632" endtime="20220704 22:41:59.831"/>
</kw>
<status status="PASS" starttime="20220704 22:41:59.631" endtime="20220704 22:41:59.831"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:59.833" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:59.833" endtime="20220704 22:41:59.833"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:59.833" endtime="20220704 22:41:59.833"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:59.834" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 22:41:59.833" endtime="20220704 22:41:59.834"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:41:59.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.834" endtime="20220704 22:41:59.935"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.935" endtime="20220704 22:41:59.935"/>
</return>
<msg timestamp="20220704 22:41:59.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.832" endtime="20220704 22:41:59.935"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:41:59.935" endtime="20220704 22:41:59.935"/>
</return>
<msg timestamp="20220704 22:41:59.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.832" endtime="20220704 22:41:59.935"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:41:59.936" endtime="20220704 22:41:59.938"/>
</kw>
<status status="PASS" starttime="20220704 22:41:59.935" endtime="20220704 22:41:59.938"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:41:59.831" endtime="20220704 22:41:59.938"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:41:59.939" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:41:59.939" endtime="20220704 22:41:59.939"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:41:59.939" endtime="20220704 22:41:59.940"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:41:59.940" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 22:41:59.940" endtime="20220704 22:41:59.940"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:42:00.069" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.940" endtime="20220704 22:42:00.069"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.069" endtime="20220704 22:42:00.069"/>
</return>
<msg timestamp="20220704 22:42:00.069" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.939" endtime="20220704 22:42:00.069"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.070" endtime="20220704 22:42:00.070"/>
</return>
<msg timestamp="20220704 22:42:00.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:41:59.938" endtime="20220704 22:42:00.070"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:42:00.070" endtime="20220704 22:42:00.072"/>
</kw>
<status status="PASS" starttime="20220704 22:42:00.070" endtime="20220704 22:42:00.072"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:42:00.074" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:42:00.074" endtime="20220704 22:42:00.074"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:42:00.074" endtime="20220704 22:42:00.074"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:42:00.075" level="INFO">${url} = lists/62c36cb895ec7d31e4786f55</msg>
<status status="PASS" starttime="20220704 22:42:00.074" endtime="20220704 22:42:00.075"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:42:00.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.075" endtime="20220704 22:42:00.147"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.147" endtime="20220704 22:42:00.147"/>
</return>
<msg timestamp="20220704 22:42:00.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.073" endtime="20220704 22:42:00.147"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.148" endtime="20220704 22:42:00.148"/>
</return>
<status status="PASS" starttime="20220704 22:42:00.072" endtime="20220704 22:42:00.148"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:42:00.150" level="INFO">${url} = lists/62c36cb895ec7d31e4786f55</msg>
<status status="PASS" starttime="20220704 22:42:00.149" endtime="20220704 22:42:00.150"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:42:00.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.150" endtime="20220704 22:42:00.197"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.197" endtime="20220704 22:42:00.197"/>
</return>
<msg timestamp="20220704 22:42:00.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.149" endtime="20220704 22:42:00.197"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.197" endtime="20220704 22:42:00.197"/>
</return>
<msg timestamp="20220704 22:42:00.198" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.148" endtime="20220704 22:42:00.198"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:42:00.198" endtime="20220704 22:42:00.200"/>
</kw>
<status status="PASS" starttime="20220704 22:42:00.198" endtime="20220704 22:42:00.200"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:42:00.200" endtime="20220704 22:42:00.201"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 22:41:59.938" endtime="20220704 22:42:00.201"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:42:00.204" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:42:00.204" endtime="20220704 22:42:00.204"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:42:00.204" endtime="20220704 22:42:00.204"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:42:00.205" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 22:42:00.204" endtime="20220704 22:42:00.205"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:42:00.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.205" endtime="20220704 22:42:00.300"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.300" endtime="20220704 22:42:00.300"/>
</return>
<msg timestamp="20220704 22:42:00.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.203" endtime="20220704 22:42:00.300"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.300" endtime="20220704 22:42:00.300"/>
</return>
<msg timestamp="20220704 22:42:00.301" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.202" endtime="20220704 22:42:00.301"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:42:00.302" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:42:00.302" endtime="20220704 22:42:00.302"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:42:00.302" endtime="20220704 22:42:00.303"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:42:00.303" level="INFO">${url} = lists/62c36cb848e38f2bf0395356/closed</msg>
<status status="PASS" starttime="20220704 22:42:00.303" endtime="20220704 22:42:00.303"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:42:00.387" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.303" endtime="20220704 22:42:00.387"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.387" endtime="20220704 22:42:00.387"/>
</return>
<msg timestamp="20220704 22:42:00.387" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.301" endtime="20220704 22:42:00.387"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.387" endtime="20220704 22:42:00.387"/>
</return>
<status status="PASS" starttime="20220704 22:42:00.301" endtime="20220704 22:42:00.387"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:42:00.389" level="INFO">${url} = lists/62c36cb848e38f2bf0395356</msg>
<status status="PASS" starttime="20220704 22:42:00.389" endtime="20220704 22:42:00.389"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:42:00.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.389" endtime="20220704 22:42:00.435"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.436" endtime="20220704 22:42:00.436"/>
</return>
<msg timestamp="20220704 22:42:00.436" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.388" endtime="20220704 22:42:00.436"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.436" endtime="20220704 22:42:00.436"/>
</return>
<msg timestamp="20220704 22:42:00.436" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.387" endtime="20220704 22:42:00.436"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 22:42:00.436" endtime="20220704 22:42:00.437"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 22:42:00.201" endtime="20220704 22:42:00.437"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:42:00.440" level="INFO">${url} = boards/62c36cb7cce296184f5cfb3e</msg>
<status status="PASS" starttime="20220704 22:42:00.440" endtime="20220704 22:42:00.440"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:42:00.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.440" endtime="20220704 22:42:00.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.753" endtime="20220704 22:42:00.753"/>
</return>
<msg timestamp="20220704 22:42:00.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:42:00.439" endtime="20220704 22:42:00.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:42:00.753" endtime="20220704 22:42:00.753"/>
</return>
<status status="PASS" starttime="20220704 22:42:00.439" endtime="20220704 22:42:00.753"/>
</kw>
<status status="PASS" starttime="20220704 22:42:00.439" endtime="20220704 22:42:00.753"/>
</kw>
<status status="PASS" starttime="20220704 22:42:00.438" endtime="20220704 22:42:00.753"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 22:42:00.754" endtime="20220704 22:42:00.755"/>
</kw>
<status status="PASS" starttime="20220704 22:42:00.438" endtime="20220704 22:42:00.755"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 22:41:59.624" endtime="20220704 22:42:00.755"/>
</suite>
<status status="PASS" starttime="20220704 22:41:50.638" endtime="20220704 22:42:00.757"/>
</suite>
<status status="PASS" starttime="20220704 22:41:50.624" endtime="20220704 22:42:00.759"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
