<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220706 04:37:48.970" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 04:37:49.141" endtime="20220706 04:37:49.142"/>
</kw>
<status status="PASS" starttime="20220706 04:37:49.140" endtime="20220706 04:37:49.142"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:49.145" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:49.145" endtime="20220706 04:37:49.145"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:49.145" endtime="20220706 04:37:49.145"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:49.146" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:37:49.145" endtime="20220706 04:37:49.146"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:49.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:49.146" endtime="20220706 04:37:49.406"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:49.406" endtime="20220706 04:37:49.406"/>
</return>
<msg timestamp="20220706 04:37:49.407" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:49.144" endtime="20220706 04:37:49.407"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:49.407" endtime="20220706 04:37:49.407"/>
</return>
<msg timestamp="20220706 04:37:49.407" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:49.144" endtime="20220706 04:37:49.407"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:37:49.408" endtime="20220706 04:37:49.413"/>
</kw>
<status status="PASS" starttime="20220706 04:37:49.407" endtime="20220706 04:37:49.413"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:49.415" level="INFO">${url} = boards/62c5119d7cae588a30303f81</msg>
<status status="PASS" starttime="20220706 04:37:49.415" endtime="20220706 04:37:49.415"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:49.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:49.415" endtime="20220706 04:37:49.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:49.901" endtime="20220706 04:37:49.902"/>
</return>
<msg timestamp="20220706 04:37:49.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:49.414" endtime="20220706 04:37:49.902"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:49.902" endtime="20220706 04:37:49.902"/>
</return>
<status status="PASS" starttime="20220706 04:37:49.414" endtime="20220706 04:37:49.902"/>
</kw>
<status status="PASS" starttime="20220706 04:37:49.413" endtime="20220706 04:37:49.902"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:37:49.143" endtime="20220706 04:37:49.902"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:49.905" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:49.905" endtime="20220706 04:37:49.905"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:49.905" endtime="20220706 04:37:49.906"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:49.907" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:37:49.906" endtime="20220706 04:37:49.907"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:50.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:49.907" endtime="20220706 04:37:50.136"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:50.136" endtime="20220706 04:37:50.136"/>
</return>
<msg timestamp="20220706 04:37:50.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:49.904" endtime="20220706 04:37:50.137"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:50.137" endtime="20220706 04:37:50.137"/>
</return>
<msg timestamp="20220706 04:37:50.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:49.904" endtime="20220706 04:37:50.137"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:37:50.138" endtime="20220706 04:37:50.142"/>
</kw>
<status status="PASS" starttime="20220706 04:37:50.137" endtime="20220706 04:37:50.143"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:50.145" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:50.144" endtime="20220706 04:37:50.145"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:50.145" endtime="20220706 04:37:50.145"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:50.145" level="INFO">${url} = boards/62c5119ddb1fd958c906480e</msg>
<status status="PASS" starttime="20220706 04:37:50.145" endtime="20220706 04:37:50.145"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:50.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:50.146" endtime="20220706 04:37:50.279"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:50.279" endtime="20220706 04:37:50.279"/>
</return>
<msg timestamp="20220706 04:37:50.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:50.144" endtime="20220706 04:37:50.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:50.280" endtime="20220706 04:37:50.280"/>
</return>
<status status="PASS" starttime="20220706 04:37:50.143" endtime="20220706 04:37:50.280"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:50.282" level="INFO">${url} = boards/62c5119ddb1fd958c906480e</msg>
<status status="PASS" starttime="20220706 04:37:50.282" endtime="20220706 04:37:50.282"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:50.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:50.282" endtime="20220706 04:37:50.384"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:50.384" endtime="20220706 04:37:50.384"/>
</return>
<msg timestamp="20220706 04:37:50.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:50.281" endtime="20220706 04:37:50.385"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:50.385" endtime="20220706 04:37:50.385"/>
</return>
<msg timestamp="20220706 04:37:50.385" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:50.280" endtime="20220706 04:37:50.385"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:37:50.386" endtime="20220706 04:37:50.390"/>
</kw>
<status status="PASS" starttime="20220706 04:37:50.385" endtime="20220706 04:37:50.390"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:37:50.390" endtime="20220706 04:37:50.391"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:50.394" level="INFO">${url} = boards/62c5119ddb1fd958c906480e</msg>
<status status="PASS" starttime="20220706 04:37:50.394" endtime="20220706 04:37:50.394"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:50.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:50.394" endtime="20220706 04:37:50.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:50.868" endtime="20220706 04:37:50.868"/>
</return>
<msg timestamp="20220706 04:37:50.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:50.393" endtime="20220706 04:37:50.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:50.868" endtime="20220706 04:37:50.868"/>
</return>
<status status="PASS" starttime="20220706 04:37:50.392" endtime="20220706 04:37:50.868"/>
</kw>
<status status="PASS" starttime="20220706 04:37:50.392" endtime="20220706 04:37:50.869"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:37:49.903" endtime="20220706 04:37:50.869"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:50.871" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:50.871" endtime="20220706 04:37:50.871"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:50.871" endtime="20220706 04:37:50.871"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:50.872" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:37:50.872" endtime="20220706 04:37:50.872"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:51.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:50.873" endtime="20220706 04:37:51.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:51.103" endtime="20220706 04:37:51.103"/>
</return>
<msg timestamp="20220706 04:37:51.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:50.870" endtime="20220706 04:37:51.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:51.104" endtime="20220706 04:37:51.104"/>
</return>
<msg timestamp="20220706 04:37:51.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:50.870" endtime="20220706 04:37:51.104"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:51.107" level="INFO">${url} = boards/62c5119e9f0ea486ace858b4</msg>
<status status="PASS" starttime="20220706 04:37:51.106" endtime="20220706 04:37:51.107"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:51.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:51.107" endtime="20220706 04:37:51.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:51.495" endtime="20220706 04:37:51.495"/>
</return>
<msg timestamp="20220706 04:37:51.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:51.105" endtime="20220706 04:37:51.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:51.495" endtime="20220706 04:37:51.495"/>
</return>
<status status="PASS" starttime="20220706 04:37:51.104" endtime="20220706 04:37:51.496"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:51.498" level="INFO">${url} = boards/62c5119e9f0ea486ace858b4</msg>
<status status="PASS" starttime="20220706 04:37:51.497" endtime="20220706 04:37:51.498"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:51.592" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:37:51.498" endtime="20220706 04:37:51.593"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:51.593" endtime="20220706 04:37:51.593"/>
</return>
<msg timestamp="20220706 04:37:51.593" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:37:51.497" endtime="20220706 04:37:51.593"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:51.593" endtime="20220706 04:37:51.593"/>
</return>
<status status="PASS" starttime="20220706 04:37:51.496" endtime="20220706 04:37:51.593"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:37:50.869" endtime="20220706 04:37:51.594"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:51.596" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:51.596" endtime="20220706 04:37:51.596"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:51.596" endtime="20220706 04:37:51.597"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:51.597" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:37:51.597" endtime="20220706 04:37:51.597"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:51.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:51.598" endtime="20220706 04:37:51.793"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:51.793" endtime="20220706 04:37:51.793"/>
</return>
<msg timestamp="20220706 04:37:51.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:51.595" endtime="20220706 04:37:51.793"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:51.793" endtime="20220706 04:37:51.793"/>
</return>
<msg timestamp="20220706 04:37:51.794" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:51.595" endtime="20220706 04:37:51.794"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:37:51.794" endtime="20220706 04:37:51.799"/>
</kw>
<status status="PASS" starttime="20220706 04:37:51.794" endtime="20220706 04:37:51.799"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:51.801" level="INFO">${url} = boards/62c5119f29323609b7b9f131</msg>
<status status="PASS" starttime="20220706 04:37:51.801" endtime="20220706 04:37:51.801"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:51.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:51.801" endtime="20220706 04:37:51.899"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:51.899" endtime="20220706 04:37:51.899"/>
</return>
<msg timestamp="20220706 04:37:51.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:51.800" endtime="20220706 04:37:51.899"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:51.899" endtime="20220706 04:37:51.899"/>
</return>
<msg timestamp="20220706 04:37:51.900" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:51.799" endtime="20220706 04:37:51.900"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:37:51.900" endtime="20220706 04:37:51.905"/>
</kw>
<status status="PASS" starttime="20220706 04:37:51.900" endtime="20220706 04:37:51.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:37:51.905" endtime="20220706 04:37:51.906"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:51.908" level="INFO">${url} = boards/62c5119f29323609b7b9f131</msg>
<status status="PASS" starttime="20220706 04:37:51.908" endtime="20220706 04:37:51.908"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:52.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:51.909" endtime="20220706 04:37:52.292"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:52.292" endtime="20220706 04:37:52.292"/>
</return>
<msg timestamp="20220706 04:37:52.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:51.907" endtime="20220706 04:37:52.292"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:52.292" endtime="20220706 04:37:52.293"/>
</return>
<status status="PASS" starttime="20220706 04:37:51.906" endtime="20220706 04:37:52.293"/>
</kw>
<status status="PASS" starttime="20220706 04:37:51.906" endtime="20220706 04:37:52.293"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:37:51.594" endtime="20220706 04:37:52.293"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:52.296" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:52.296" endtime="20220706 04:37:52.296"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:52.296" endtime="20220706 04:37:52.297"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:52.298" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:37:52.297" endtime="20220706 04:37:52.298"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:52.502" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:52.298" endtime="20220706 04:37:52.502"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:52.502" endtime="20220706 04:37:52.502"/>
</return>
<msg timestamp="20220706 04:37:52.502" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:52.295" endtime="20220706 04:37:52.502"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:52.502" endtime="20220706 04:37:52.502"/>
</return>
<msg timestamp="20220706 04:37:52.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:52.295" endtime="20220706 04:37:52.503"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:37:52.503" endtime="20220706 04:37:52.508"/>
</kw>
<status status="PASS" starttime="20220706 04:37:52.503" endtime="20220706 04:37:52.508"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:52.510" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:52.510" endtime="20220706 04:37:52.510"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:52.510" endtime="20220706 04:37:52.510"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:52.511" level="INFO">${url} = boards/62c511a0f364cd1bfe029009</msg>
<status status="PASS" starttime="20220706 04:37:52.511" endtime="20220706 04:37:52.511"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:52.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:52.511" endtime="20220706 04:37:52.651"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:52.651" endtime="20220706 04:37:52.651"/>
</return>
<msg timestamp="20220706 04:37:52.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:52.509" endtime="20220706 04:37:52.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:52.652" endtime="20220706 04:37:52.652"/>
</return>
<status status="PASS" starttime="20220706 04:37:52.508" endtime="20220706 04:37:52.652"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:52.654" level="INFO">${url} = boards/62c511a0f364cd1bfe029009</msg>
<status status="PASS" starttime="20220706 04:37:52.654" endtime="20220706 04:37:52.654"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:52.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:52.654" endtime="20220706 04:37:52.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:52.751" endtime="20220706 04:37:52.751"/>
</return>
<msg timestamp="20220706 04:37:52.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:52.653" endtime="20220706 04:37:52.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:52.751" endtime="20220706 04:37:52.751"/>
</return>
<msg timestamp="20220706 04:37:52.752" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:52.652" endtime="20220706 04:37:52.752"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:37:52.752" endtime="20220706 04:37:52.753"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:52.755" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:52.755" endtime="20220706 04:37:52.755"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:52.755" endtime="20220706 04:37:52.755"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:52.756" level="INFO">${url} = boards/62c511a0f364cd1bfe029009</msg>
<status status="PASS" starttime="20220706 04:37:52.755" endtime="20220706 04:37:52.756"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:52.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:52.756" endtime="20220706 04:37:52.926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:52.926" endtime="20220706 04:37:52.926"/>
</return>
<msg timestamp="20220706 04:37:52.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:52.754" endtime="20220706 04:37:52.926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:52.926" endtime="20220706 04:37:52.926"/>
</return>
<status status="PASS" starttime="20220706 04:37:52.753" endtime="20220706 04:37:52.927"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:52.929" level="INFO">${url} = boards/62c511a0f364cd1bfe029009</msg>
<status status="PASS" starttime="20220706 04:37:52.928" endtime="20220706 04:37:52.929"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:53.035" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:52.929" endtime="20220706 04:37:53.035"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:53.035" endtime="20220706 04:37:53.035"/>
</return>
<msg timestamp="20220706 04:37:53.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:52.928" endtime="20220706 04:37:53.036"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:53.036" endtime="20220706 04:37:53.036"/>
</return>
<msg timestamp="20220706 04:37:53.036" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:52.927" endtime="20220706 04:37:53.036"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:37:53.036" endtime="20220706 04:37:53.037"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:53.040" level="INFO">${url} = boards/62c511a0f364cd1bfe029009</msg>
<status status="PASS" starttime="20220706 04:37:53.039" endtime="20220706 04:37:53.040"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:53.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:53.040" endtime="20220706 04:37:53.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:53.493" endtime="20220706 04:37:53.493"/>
</return>
<msg timestamp="20220706 04:37:53.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:53.039" endtime="20220706 04:37:53.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:53.493" endtime="20220706 04:37:53.493"/>
</return>
<status status="PASS" starttime="20220706 04:37:53.038" endtime="20220706 04:37:53.493"/>
</kw>
<status status="PASS" starttime="20220706 04:37:53.037" endtime="20220706 04:37:53.493"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:37:52.294" endtime="20220706 04:37:53.494"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220706 04:37:53.494" endtime="20220706 04:37:53.496"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220706 04:37:49.000" endtime="20220706 04:37:53.496"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 04:37:53.509" endtime="20220706 04:37:53.510"/>
</kw>
<status status="PASS" starttime="20220706 04:37:53.509" endtime="20220706 04:37:53.510"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:53.511" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:53.511" endtime="20220706 04:37:53.511"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:53.512" endtime="20220706 04:37:53.512"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:53.513" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:37:53.512" endtime="20220706 04:37:53.513"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:53.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:53.513" endtime="20220706 04:37:53.749"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:53.749" endtime="20220706 04:37:53.750"/>
</return>
<msg timestamp="20220706 04:37:53.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:53.511" endtime="20220706 04:37:53.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:53.750" endtime="20220706 04:37:53.750"/>
</return>
<msg timestamp="20220706 04:37:53.750" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:53.510" endtime="20220706 04:37:53.750"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:37:53.751" level="INFO">${TEST_SUITE_BOARD_ID} = 62c511a1f62385324e3588c7</msg>
<status status="PASS" starttime="20220706 04:37:53.750" endtime="20220706 04:37:53.751"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:53.753" level="INFO">${url} = boards/62c511a1f62385324e3588c7/lists/</msg>
<status status="PASS" starttime="20220706 04:37:53.752" endtime="20220706 04:37:53.753"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:53.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:53.753" endtime="20220706 04:37:53.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:53.849" endtime="20220706 04:37:53.849"/>
</return>
<msg timestamp="20220706 04:37:53.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:53.752" endtime="20220706 04:37:53.850"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:53.850" endtime="20220706 04:37:53.850"/>
</return>
<msg timestamp="20220706 04:37:53.851" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:53.752" endtime="20220706 04:37:53.851"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:37:53.852" level="INFO">${TEST_SUITE_LIST_ID} = 62c511a1f62385324e3588ce</msg>
<status status="PASS" starttime="20220706 04:37:53.851" endtime="20220706 04:37:53.852"/>
</kw>
<status status="PASS" starttime="20220706 04:37:53.510" endtime="20220706 04:37:53.852"/>
</kw>
<status status="PASS" starttime="20220706 04:37:53.509" endtime="20220706 04:37:53.852"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:53.854" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:53.854" endtime="20220706 04:37:53.854"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:53.854" endtime="20220706 04:37:53.855"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:53.856" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 04:37:53.855" endtime="20220706 04:37:53.856"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:54.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:53.856" endtime="20220706 04:37:54.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:54.081" endtime="20220706 04:37:54.081"/>
</return>
<msg timestamp="20220706 04:37:54.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:53.853" endtime="20220706 04:37:54.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:54.081" endtime="20220706 04:37:54.081"/>
</return>
<msg timestamp="20220706 04:37:54.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:53.853" endtime="20220706 04:37:54.082"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:37:54.082" endtime="20220706 04:37:54.088"/>
</kw>
<status status="PASS" starttime="20220706 04:37:54.082" endtime="20220706 04:37:54.088"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:54.089" endtime="20220706 04:37:54.089"/>
</return>
<msg timestamp="20220706 04:37:54.090" level="INFO">${CARD_ID} = 62c511a1551722856120f8fd</msg>
<status status="PASS" starttime="20220706 04:37:54.088" endtime="20220706 04:37:54.090"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:54.091" level="INFO">${url} = cards/62c511a1551722856120f8fd</msg>
<status status="PASS" starttime="20220706 04:37:54.091" endtime="20220706 04:37:54.091"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:54.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.092" endtime="20220706 04:37:54.197"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:54.197" endtime="20220706 04:37:54.197"/>
</return>
<msg timestamp="20220706 04:37:54.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.090" endtime="20220706 04:37:54.197"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:54.197" endtime="20220706 04:37:54.197"/>
</return>
<msg timestamp="20220706 04:37:54.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.090" endtime="20220706 04:37:54.198"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:54.198" endtime="20220706 04:37:54.198"/>
</return>
<msg timestamp="20220706 04:37:54.199" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220706 04:37:54.198" endtime="20220706 04:37:54.199"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:37:54.199" endtime="20220706 04:37:54.200"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:54.202" level="INFO">${url} = cards/62c511a1551722856120f8fd</msg>
<status status="PASS" starttime="20220706 04:37:54.201" endtime="20220706 04:37:54.202"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:54.393" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.202" endtime="20220706 04:37:54.393"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:54.393" endtime="20220706 04:37:54.393"/>
</return>
<msg timestamp="20220706 04:37:54.394" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.201" endtime="20220706 04:37:54.394"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:54.394" endtime="20220706 04:37:54.394"/>
</return>
<status status="PASS" starttime="20220706 04:37:54.200" endtime="20220706 04:37:54.394"/>
</kw>
<status status="PASS" starttime="20220706 04:37:54.200" endtime="20220706 04:37:54.394"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:37:53.852" endtime="20220706 04:37:54.394"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:54.397" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:54.397" endtime="20220706 04:37:54.397"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:54.397" endtime="20220706 04:37:54.398"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:54.398" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 04:37:54.398" endtime="20220706 04:37:54.398"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:54.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.399" endtime="20220706 04:37:54.612"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:54.612" endtime="20220706 04:37:54.612"/>
</return>
<msg timestamp="20220706 04:37:54.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.396" endtime="20220706 04:37:54.612"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:54.612" endtime="20220706 04:37:54.613"/>
</return>
<msg timestamp="20220706 04:37:54.613" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.396" endtime="20220706 04:37:54.613"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:54.614" endtime="20220706 04:37:54.614"/>
</return>
<msg timestamp="20220706 04:37:54.614" level="INFO">${CARD_ID} = 62c511a2147c1088fa726d91</msg>
<status status="PASS" starttime="20220706 04:37:54.613" endtime="20220706 04:37:54.614"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:54.617" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:54.617" endtime="20220706 04:37:54.617"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:54.617" endtime="20220706 04:37:54.618"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:54.618" level="INFO">${url} = cards/62c511a2147c1088fa726d91</msg>
<status status="PASS" starttime="20220706 04:37:54.618" endtime="20220706 04:37:54.618"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:54.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.618" endtime="20220706 04:37:54.799"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:54.799" endtime="20220706 04:37:54.799"/>
</return>
<msg timestamp="20220706 04:37:54.800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.616" endtime="20220706 04:37:54.800"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:54.800" endtime="20220706 04:37:54.800"/>
</return>
<msg timestamp="20220706 04:37:54.800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.615" endtime="20220706 04:37:54.800"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:54.800" endtime="20220706 04:37:54.800"/>
</return>
<status status="PASS" starttime="20220706 04:37:54.615" endtime="20220706 04:37:54.800"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:54.802" level="INFO">${url} = cards/62c511a2147c1088fa726d91</msg>
<status status="PASS" starttime="20220706 04:37:54.802" endtime="20220706 04:37:54.802"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:54.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.802" endtime="20220706 04:37:54.915"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:54.915" endtime="20220706 04:37:54.915"/>
</return>
<msg timestamp="20220706 04:37:54.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.801" endtime="20220706 04:37:54.916"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:54.916" endtime="20220706 04:37:54.916"/>
</return>
<msg timestamp="20220706 04:37:54.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.801" endtime="20220706 04:37:54.916"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:54.917" endtime="20220706 04:37:54.917"/>
</return>
<msg timestamp="20220706 04:37:54.918" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220706 04:37:54.916" endtime="20220706 04:37:54.918"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 04:37:54.918" endtime="20220706 04:37:54.918"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:54.921" level="INFO">${url} = cards/62c511a2147c1088fa726d91</msg>
<status status="PASS" starttime="20220706 04:37:54.920" endtime="20220706 04:37:54.921"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:55.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.921" endtime="20220706 04:37:55.104"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:55.104" endtime="20220706 04:37:55.104"/>
</return>
<msg timestamp="20220706 04:37:55.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:54.920" endtime="20220706 04:37:55.104"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:55.104" endtime="20220706 04:37:55.104"/>
</return>
<status status="PASS" starttime="20220706 04:37:54.919" endtime="20220706 04:37:55.104"/>
</kw>
<status status="PASS" starttime="20220706 04:37:54.919" endtime="20220706 04:37:55.104"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 04:37:54.395" endtime="20220706 04:37:55.105"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:55.108" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:55.107" endtime="20220706 04:37:55.108"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:55.108" endtime="20220706 04:37:55.108"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:55.109" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 04:37:55.108" endtime="20220706 04:37:55.109"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:55.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:55.109" endtime="20220706 04:37:55.312"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:55.312" endtime="20220706 04:37:55.312"/>
</return>
<msg timestamp="20220706 04:37:55.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:55.106" endtime="20220706 04:37:55.312"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:55.312" endtime="20220706 04:37:55.312"/>
</return>
<msg timestamp="20220706 04:37:55.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:55.106" endtime="20220706 04:37:55.313"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:55.313" endtime="20220706 04:37:55.313"/>
</return>
<msg timestamp="20220706 04:37:55.314" level="INFO">${CARD_ID} = 62c511a3cc9faa201d4de454</msg>
<status status="PASS" starttime="20220706 04:37:55.313" endtime="20220706 04:37:55.314"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:55.316" level="INFO">${url} = cards/62c511a3cc9faa201d4de454</msg>
<status status="PASS" starttime="20220706 04:37:55.315" endtime="20220706 04:37:55.316"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:55.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:55.316" endtime="20220706 04:37:55.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:55.574" endtime="20220706 04:37:55.574"/>
</return>
<msg timestamp="20220706 04:37:55.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:55.315" endtime="20220706 04:37:55.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:55.574" endtime="20220706 04:37:55.574"/>
</return>
<msg timestamp="20220706 04:37:55.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:55.314" endtime="20220706 04:37:55.574"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:37:55.575" endtime="20220706 04:37:55.577"/>
</kw>
<status status="PASS" starttime="20220706 04:37:55.575" endtime="20220706 04:37:55.578"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:55.579" level="INFO">${url} = cards/62c511a3cc9faa201d4de454</msg>
<status status="PASS" starttime="20220706 04:37:55.579" endtime="20220706 04:37:55.579"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:55.668" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:37:55.579" endtime="20220706 04:37:55.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:55.668" endtime="20220706 04:37:55.668"/>
</return>
<msg timestamp="20220706 04:37:55.668" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:37:55.578" endtime="20220706 04:37:55.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:55.668" endtime="20220706 04:37:55.668"/>
</return>
<status status="PASS" starttime="20220706 04:37:55.578" endtime="20220706 04:37:55.669"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:37:55.105" endtime="20220706 04:37:55.669"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:55.672" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:55.671" endtime="20220706 04:37:55.672"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:55.672" endtime="20220706 04:37:55.672"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:55.673" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 04:37:55.672" endtime="20220706 04:37:55.673"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:55.886" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:55.673" endtime="20220706 04:37:55.886"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:55.886" endtime="20220706 04:37:55.886"/>
</return>
<msg timestamp="20220706 04:37:55.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:55.671" endtime="20220706 04:37:55.887"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:55.887" endtime="20220706 04:37:55.887"/>
</return>
<msg timestamp="20220706 04:37:55.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:55.670" endtime="20220706 04:37:55.887"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:55.888" endtime="20220706 04:37:55.888"/>
</return>
<msg timestamp="20220706 04:37:55.889" level="INFO">${CARD_ID} = 62c511a3d80f403cd5181a9e</msg>
<status status="PASS" starttime="20220706 04:37:55.887" endtime="20220706 04:37:55.889"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:55.890" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:55.890" endtime="20220706 04:37:55.890"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:55.890" endtime="20220706 04:37:55.891"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:55.891" level="INFO">${url} = cards/62c511a3d80f403cd5181a9e</msg>
<status status="PASS" starttime="20220706 04:37:55.891" endtime="20220706 04:37:55.891"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:56.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:55.891" endtime="20220706 04:37:56.071"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:56.072" endtime="20220706 04:37:56.072"/>
</return>
<msg timestamp="20220706 04:37:56.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:55.889" endtime="20220706 04:37:56.072"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:56.072" endtime="20220706 04:37:56.072"/>
</return>
<msg timestamp="20220706 04:37:56.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:55.889" endtime="20220706 04:37:56.072"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:37:56.073" endtime="20220706 04:37:56.079"/>
</kw>
<status status="PASS" starttime="20220706 04:37:56.073" endtime="20220706 04:37:56.080"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:56.081" level="INFO">${url} = cards/62c511a3d80f403cd5181a9e</msg>
<status status="PASS" starttime="20220706 04:37:56.081" endtime="20220706 04:37:56.081"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:56.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:56.081" endtime="20220706 04:37:56.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:56.189" endtime="20220706 04:37:56.189"/>
</return>
<msg timestamp="20220706 04:37:56.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:56.080" endtime="20220706 04:37:56.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:56.189" endtime="20220706 04:37:56.190"/>
</return>
<msg timestamp="20220706 04:37:56.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:56.080" endtime="20220706 04:37:56.190"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:56.190" endtime="20220706 04:37:56.190"/>
</return>
<msg timestamp="20220706 04:37:56.191" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220706 04:37:56.190" endtime="20220706 04:37:56.191"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:56.192" endtime="20220706 04:37:56.192"/>
</return>
<msg timestamp="20220706 04:37:56.193" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220706 04:37:56.192" endtime="20220706 04:37:56.193"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:37:56.193" endtime="20220706 04:37:56.193"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:37:56.193" endtime="20220706 04:37:56.194"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:56.196" level="INFO">${url} = cards/62c511a3d80f403cd5181a9e</msg>
<status status="PASS" starttime="20220706 04:37:56.195" endtime="20220706 04:37:56.196"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:56.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:56.196" endtime="20220706 04:37:56.399"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:56.399" endtime="20220706 04:37:56.399"/>
</return>
<msg timestamp="20220706 04:37:56.400" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:56.195" endtime="20220706 04:37:56.400"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:56.400" endtime="20220706 04:37:56.400"/>
</return>
<status status="PASS" starttime="20220706 04:37:56.194" endtime="20220706 04:37:56.400"/>
</kw>
<status status="PASS" starttime="20220706 04:37:56.194" endtime="20220706 04:37:56.400"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 04:37:55.669" endtime="20220706 04:37:56.400"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:56.405" level="INFO">${url} = boards/62c511a1f62385324e3588c7</msg>
<status status="PASS" starttime="20220706 04:37:56.404" endtime="20220706 04:37:56.405"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:56.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:56.405" endtime="20220706 04:37:56.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:56.865" endtime="20220706 04:37:56.865"/>
</return>
<msg timestamp="20220706 04:37:56.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:56.403" endtime="20220706 04:37:56.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:56.865" endtime="20220706 04:37:56.865"/>
</return>
<status status="PASS" starttime="20220706 04:37:56.403" endtime="20220706 04:37:56.865"/>
</kw>
<status status="PASS" starttime="20220706 04:37:56.402" endtime="20220706 04:37:56.865"/>
</kw>
<status status="PASS" starttime="20220706 04:37:56.402" endtime="20220706 04:37:56.866"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 04:37:56.866" endtime="20220706 04:37:56.867"/>
</kw>
<status status="PASS" starttime="20220706 04:37:56.401" endtime="20220706 04:37:56.867"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220706 04:37:53.498" endtime="20220706 04:37:56.867"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 04:37:56.881" endtime="20220706 04:37:56.881"/>
</kw>
<status status="PASS" starttime="20220706 04:37:56.880" endtime="20220706 04:37:56.881"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:56.883" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:56.882" endtime="20220706 04:37:56.883"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:56.883" endtime="20220706 04:37:56.883"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:56.884" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:37:56.883" endtime="20220706 04:37:56.884"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:57.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:56.884" endtime="20220706 04:37:57.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:57.134" endtime="20220706 04:37:57.134"/>
</return>
<msg timestamp="20220706 04:37:57.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:56.882" endtime="20220706 04:37:57.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:57.134" endtime="20220706 04:37:57.135"/>
</return>
<msg timestamp="20220706 04:37:57.135" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:56.881" endtime="20220706 04:37:57.135"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:37:57.136" level="INFO">${TEST_SUITE_BOARD_ID} = 62c511a457caad1443ac9c5f</msg>
<status status="PASS" starttime="20220706 04:37:57.135" endtime="20220706 04:37:57.136"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:57.137" level="INFO">${url} = boards/62c511a457caad1443ac9c5f/lists/</msg>
<status status="PASS" starttime="20220706 04:37:57.137" endtime="20220706 04:37:57.137"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:57.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.138" endtime="20220706 04:37:57.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:57.237" endtime="20220706 04:37:57.237"/>
</return>
<msg timestamp="20220706 04:37:57.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.137" endtime="20220706 04:37:57.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:57.237" endtime="20220706 04:37:57.237"/>
</return>
<msg timestamp="20220706 04:37:57.237" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.136" endtime="20220706 04:37:57.237"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:37:57.239" level="INFO">${TEST_SUITE_LIST_ID} = 62c511a457caad1443ac9c66</msg>
<status status="PASS" starttime="20220706 04:37:57.238" endtime="20220706 04:37:57.239"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:57.241" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:57.241" endtime="20220706 04:37:57.241"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:57.241" endtime="20220706 04:37:57.242"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:57.242" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 04:37:57.242" endtime="20220706 04:37:57.242"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:57.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.243" endtime="20220706 04:37:57.461"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:57.461" endtime="20220706 04:37:57.461"/>
</return>
<msg timestamp="20220706 04:37:57.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.240" endtime="20220706 04:37:57.461"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:57.462" endtime="20220706 04:37:57.462"/>
</return>
<msg timestamp="20220706 04:37:57.462" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.239" endtime="20220706 04:37:57.462"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:37:57.463" level="INFO">${TEST_SUITE_CARD_ID} = 62c511a5277f160e87eb8f91</msg>
<status status="PASS" starttime="20220706 04:37:57.462" endtime="20220706 04:37:57.463"/>
</kw>
<status status="PASS" starttime="20220706 04:37:56.881" endtime="20220706 04:37:57.463"/>
</kw>
<status status="PASS" starttime="20220706 04:37:56.880" endtime="20220706 04:37:57.463"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:57.466" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:57.466" endtime="20220706 04:37:57.466"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:57.466" endtime="20220706 04:37:57.467"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:57.467" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 04:37:57.467" endtime="20220706 04:37:57.467"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:57.641" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.468" endtime="20220706 04:37:57.641"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:57.642" endtime="20220706 04:37:57.642"/>
</return>
<msg timestamp="20220706 04:37:57.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.465" endtime="20220706 04:37:57.642"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:57.642" endtime="20220706 04:37:57.642"/>
</return>
<msg timestamp="20220706 04:37:57.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.464" endtime="20220706 04:37:57.642"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:57.643" endtime="20220706 04:37:57.643"/>
</return>
<msg timestamp="20220706 04:37:57.644" level="INFO">${checklist_id} = 62c511a5558d4b0aa950ffca</msg>
<status status="PASS" starttime="20220706 04:37:57.642" endtime="20220706 04:37:57.644"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:57.645" level="INFO">${url} = checklists/62c511a5558d4b0aa950ffca</msg>
<status status="PASS" starttime="20220706 04:37:57.645" endtime="20220706 04:37:57.646"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:57.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.646" endtime="20220706 04:37:57.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:57.750" endtime="20220706 04:37:57.750"/>
</return>
<msg timestamp="20220706 04:37:57.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.645" endtime="20220706 04:37:57.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:57.751" endtime="20220706 04:37:57.751"/>
</return>
<msg timestamp="20220706 04:37:57.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.644" endtime="20220706 04:37:57.751"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:57.752" endtime="20220706 04:37:57.752"/>
</return>
<msg timestamp="20220706 04:37:57.753" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220706 04:37:57.751" endtime="20220706 04:37:57.753"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:37:57.753" endtime="20220706 04:37:57.753"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:57.755" level="INFO">${url} = checklists/62c511a5558d4b0aa950ffca</msg>
<status status="PASS" starttime="20220706 04:37:57.755" endtime="20220706 04:37:57.755"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:57.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.755" endtime="20220706 04:37:57.910"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:57.910" endtime="20220706 04:37:57.910"/>
</return>
<msg timestamp="20220706 04:37:57.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.754" endtime="20220706 04:37:57.911"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:57.911" endtime="20220706 04:37:57.911"/>
</return>
<status status="PASS" starttime="20220706 04:37:57.753" endtime="20220706 04:37:57.911"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:37:57.464" endtime="20220706 04:37:57.911"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:57.915" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:57.914" endtime="20220706 04:37:57.915"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:57.915" endtime="20220706 04:37:57.915"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:57.916" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 04:37:57.915" endtime="20220706 04:37:57.916"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:58.154" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.916" endtime="20220706 04:37:58.154"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:58.154" endtime="20220706 04:37:58.154"/>
</return>
<msg timestamp="20220706 04:37:58.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.914" endtime="20220706 04:37:58.155"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:58.155" endtime="20220706 04:37:58.155"/>
</return>
<msg timestamp="20220706 04:37:58.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:57.913" endtime="20220706 04:37:58.155"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:58.156" endtime="20220706 04:37:58.156"/>
</return>
<msg timestamp="20220706 04:37:58.157" level="INFO">${checklist_id} = 62c511a68bbb146501d92162</msg>
<status status="PASS" starttime="20220706 04:37:58.155" endtime="20220706 04:37:58.157"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:58.159" level="INFO">${url} = checklists/62c511a68bbb146501d92162</msg>
<status status="PASS" starttime="20220706 04:37:58.158" endtime="20220706 04:37:58.159"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:58.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.159" endtime="20220706 04:37:58.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:58.331" endtime="20220706 04:37:58.331"/>
</return>
<msg timestamp="20220706 04:37:58.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.158" endtime="20220706 04:37:58.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:58.332" endtime="20220706 04:37:58.332"/>
</return>
<msg timestamp="20220706 04:37:58.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.157" endtime="20220706 04:37:58.332"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:37:58.333" endtime="20220706 04:37:58.335"/>
</kw>
<status status="PASS" starttime="20220706 04:37:58.332" endtime="20220706 04:37:58.335"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:58.336" level="INFO">${url} = checklists/62c511a68bbb146501d92162</msg>
<status status="PASS" starttime="20220706 04:37:58.336" endtime="20220706 04:37:58.336"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:58.426" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:37:58.337" endtime="20220706 04:37:58.426"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:58.426" endtime="20220706 04:37:58.426"/>
</return>
<msg timestamp="20220706 04:37:58.427" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:37:58.335" endtime="20220706 04:37:58.427"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:58.427" endtime="20220706 04:37:58.427"/>
</return>
<status status="PASS" starttime="20220706 04:37:58.335" endtime="20220706 04:37:58.427"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:37:57.912" endtime="20220706 04:37:58.427"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:58.432" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:58.430" endtime="20220706 04:37:58.432"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:58.432" endtime="20220706 04:37:58.432"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:58.433" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 04:37:58.432" endtime="20220706 04:37:58.433"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:58.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.433" endtime="20220706 04:37:58.598"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:58.598" endtime="20220706 04:37:58.598"/>
</return>
<msg timestamp="20220706 04:37:58.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.429" endtime="20220706 04:37:58.598"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:58.598" endtime="20220706 04:37:58.598"/>
</return>
<msg timestamp="20220706 04:37:58.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.429" endtime="20220706 04:37:58.599"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:58.599" endtime="20220706 04:37:58.599"/>
</return>
<msg timestamp="20220706 04:37:58.600" level="INFO">${checklist_id} = 62c511a61ba09855444f1cd2</msg>
<status status="PASS" starttime="20220706 04:37:58.599" endtime="20220706 04:37:58.600"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:58.602" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:58.601" endtime="20220706 04:37:58.602"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:58.602" endtime="20220706 04:37:58.602"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:58.603" level="INFO">${url} = checklists/62c511a61ba09855444f1cd2</msg>
<status status="PASS" starttime="20220706 04:37:58.602" endtime="20220706 04:37:58.603"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:58.734" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.603" endtime="20220706 04:37:58.734"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:58.735" endtime="20220706 04:37:58.735"/>
</return>
<msg timestamp="20220706 04:37:58.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.601" endtime="20220706 04:37:58.735"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:58.735" endtime="20220706 04:37:58.735"/>
</return>
<msg timestamp="20220706 04:37:58.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.600" endtime="20220706 04:37:58.735"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:58.737" level="INFO">${url} = checklists/62c511a61ba09855444f1cd2</msg>
<status status="PASS" starttime="20220706 04:37:58.737" endtime="20220706 04:37:58.737"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:58.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.737" endtime="20220706 04:37:58.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:58.849" endtime="20220706 04:37:58.849"/>
</return>
<msg timestamp="20220706 04:37:58.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.736" endtime="20220706 04:37:58.850"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:58.850" endtime="20220706 04:37:58.850"/>
</return>
<msg timestamp="20220706 04:37:58.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.736" endtime="20220706 04:37:58.850"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:58.851" endtime="20220706 04:37:58.851"/>
</return>
<msg timestamp="20220706 04:37:58.851" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220706 04:37:58.850" endtime="20220706 04:37:58.851"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:37:58.852" endtime="20220706 04:37:58.852"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:58.864" level="INFO">${url} = checklists/62c511a61ba09855444f1cd2</msg>
<status status="PASS" starttime="20220706 04:37:58.864" endtime="20220706 04:37:58.864"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:59.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.864" endtime="20220706 04:37:59.023"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:59.023" endtime="20220706 04:37:59.023"/>
</return>
<msg timestamp="20220706 04:37:59.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:58.863" endtime="20220706 04:37:59.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:59.024" endtime="20220706 04:37:59.024"/>
</return>
<status status="PASS" starttime="20220706 04:37:58.852" endtime="20220706 04:37:59.024"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 04:37:58.428" endtime="20220706 04:37:59.024"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:59.027" level="INFO">${url} = boards/62c511a457caad1443ac9c5f</msg>
<status status="PASS" starttime="20220706 04:37:59.026" endtime="20220706 04:37:59.027"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:37:59.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:59.027" endtime="20220706 04:37:59.443"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:59.443" endtime="20220706 04:37:59.443"/>
</return>
<msg timestamp="20220706 04:37:59.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:59.026" endtime="20220706 04:37:59.443"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:59.444" endtime="20220706 04:37:59.444"/>
</return>
<status status="PASS" starttime="20220706 04:37:59.026" endtime="20220706 04:37:59.444"/>
</kw>
<status status="PASS" starttime="20220706 04:37:59.025" endtime="20220706 04:37:59.444"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 04:37:59.444" endtime="20220706 04:37:59.445"/>
</kw>
<status status="PASS" starttime="20220706 04:37:59.025" endtime="20220706 04:37:59.445"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220706 04:37:56.869" endtime="20220706 04:37:59.445"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 04:37:59.459" endtime="20220706 04:37:59.459"/>
</kw>
<status status="PASS" starttime="20220706 04:37:59.458" endtime="20220706 04:37:59.459"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:59.460" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:59.460" endtime="20220706 04:37:59.460"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:59.461" endtime="20220706 04:37:59.461"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:59.462" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:37:59.461" endtime="20220706 04:37:59.462"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:59.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:59.462" endtime="20220706 04:37:59.688"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:59.688" endtime="20220706 04:37:59.688"/>
</return>
<msg timestamp="20220706 04:37:59.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:59.460" endtime="20220706 04:37:59.689"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:59.689" endtime="20220706 04:37:59.689"/>
</return>
<msg timestamp="20220706 04:37:59.689" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:59.459" endtime="20220706 04:37:59.689"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:37:59.690" level="INFO">${TEST_SUITE_BOARD_ID} = 62c511a766a52c1df4e15219</msg>
<status status="PASS" starttime="20220706 04:37:59.689" endtime="20220706 04:37:59.690"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:37:59.791" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:59.690" endtime="20220706 04:37:59.791"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:37:59.792" level="INFO">${TEST_SUITE_LIST_ID} = 62c511a766a52c1df4e15220</msg>
<status status="PASS" starttime="20220706 04:37:59.791" endtime="20220706 04:37:59.792"/>
</kw>
<status status="PASS" starttime="20220706 04:37:59.459" endtime="20220706 04:37:59.793"/>
</kw>
<status status="PASS" starttime="20220706 04:37:59.458" endtime="20220706 04:37:59.793"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:37:59.797" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:37:59.796" endtime="20220706 04:37:59.797"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:37:59.797" endtime="20220706 04:37:59.797"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:59.798" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 04:37:59.797" endtime="20220706 04:37:59.798"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:37:59.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:59.798" endtime="20220706 04:37:59.940"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:59.940" endtime="20220706 04:37:59.940"/>
</return>
<msg timestamp="20220706 04:37:59.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:59.796" endtime="20220706 04:37:59.941"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:37:59.941" endtime="20220706 04:37:59.941"/>
</return>
<msg timestamp="20220706 04:37:59.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:59.795" endtime="20220706 04:37:59.941"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:37:59.942" endtime="20220706 04:37:59.944"/>
</kw>
<status status="PASS" starttime="20220706 04:37:59.941" endtime="20220706 04:37:59.944"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:37:59.944" endtime="20220706 04:37:59.944"/>
</return>
<msg timestamp="20220706 04:37:59.945" level="INFO">${LABEL_ID} = 62c511a7a7128c2d3f881a49</msg>
<status status="PASS" starttime="20220706 04:37:59.944" endtime="20220706 04:37:59.945"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:37:59.947" level="INFO">${url} = labels/62c511a7a7128c2d3f881a49</msg>
<status status="PASS" starttime="20220706 04:37:59.946" endtime="20220706 04:37:59.947"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:38:00.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:59.947" endtime="20220706 04:38:00.042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:00.042" endtime="20220706 04:38:00.042"/>
</return>
<msg timestamp="20220706 04:38:00.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:59.946" endtime="20220706 04:38:00.043"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:00.043" endtime="20220706 04:38:00.043"/>
</return>
<msg timestamp="20220706 04:38:00.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:37:59.945" endtime="20220706 04:38:00.043"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:38:00.044" endtime="20220706 04:38:00.044"/>
</return>
<msg timestamp="20220706 04:38:00.049" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220706 04:38:00.043" endtime="20220706 04:38:00.049"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:38:00.049" endtime="20220706 04:38:00.050"/>
</return>
<msg timestamp="20220706 04:38:00.050" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220706 04:38:00.049" endtime="20220706 04:38:00.050"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:38:00.051" endtime="20220706 04:38:00.051"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:38:00.051" endtime="20220706 04:38:00.052"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:00.054" level="INFO">${url} = labels/62c511a7a7128c2d3f881a49</msg>
<status status="PASS" starttime="20220706 04:38:00.053" endtime="20220706 04:38:00.054"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:38:00.231" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.054" endtime="20220706 04:38:00.231"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:00.231" endtime="20220706 04:38:00.231"/>
</return>
<msg timestamp="20220706 04:38:00.231" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.053" endtime="20220706 04:38:00.231"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:00.231" endtime="20220706 04:38:00.231"/>
</return>
<status status="PASS" starttime="20220706 04:38:00.052" endtime="20220706 04:38:00.232"/>
</kw>
<status status="PASS" starttime="20220706 04:38:00.052" endtime="20220706 04:38:00.232"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:37:59.793" endtime="20220706 04:38:00.232"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:38:00.235" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:38:00.234" endtime="20220706 04:38:00.235"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:38:00.235" endtime="20220706 04:38:00.235"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:00.236" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 04:38:00.235" endtime="20220706 04:38:00.236"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:38:00.369" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.236" endtime="20220706 04:38:00.369"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:00.369" endtime="20220706 04:38:00.369"/>
</return>
<msg timestamp="20220706 04:38:00.369" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.234" endtime="20220706 04:38:00.369"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:00.369" endtime="20220706 04:38:00.369"/>
</return>
<msg timestamp="20220706 04:38:00.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.233" endtime="20220706 04:38:00.370"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:38:00.371" endtime="20220706 04:38:00.373"/>
</kw>
<status status="PASS" starttime="20220706 04:38:00.370" endtime="20220706 04:38:00.373"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:38:00.374" endtime="20220706 04:38:00.374"/>
</return>
<msg timestamp="20220706 04:38:00.375" level="INFO">${LABEL_ID} = 62c511a8a4a8001b1a367341</msg>
<status status="PASS" starttime="20220706 04:38:00.373" endtime="20220706 04:38:00.375"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:38:00.376" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:38:00.376" endtime="20220706 04:38:00.376"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:38:00.376" endtime="20220706 04:38:00.376"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:00.377" level="INFO">${url} = labels/62c511a8a4a8001b1a367341</msg>
<status status="PASS" starttime="20220706 04:38:00.377" endtime="20220706 04:38:00.377"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:38:00.536" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.377" endtime="20220706 04:38:00.536"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:00.536" endtime="20220706 04:38:00.536"/>
</return>
<msg timestamp="20220706 04:38:00.536" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.375" endtime="20220706 04:38:00.536"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:00.537" endtime="20220706 04:38:00.537"/>
</return>
<msg timestamp="20220706 04:38:00.537" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.375" endtime="20220706 04:38:00.537"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:38:00.537" endtime="20220706 04:38:00.538"/>
</return>
<msg timestamp="20220706 04:38:00.538" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220706 04:38:00.537" endtime="20220706 04:38:00.538"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:38:00.539" endtime="20220706 04:38:00.539"/>
</return>
<msg timestamp="20220706 04:38:00.540" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220706 04:38:00.539" endtime="20220706 04:38:00.540"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:38:00.540" endtime="20220706 04:38:00.540"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:38:00.540" endtime="20220706 04:38:00.541"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:00.545" level="INFO">${url} = labels/62c511a8a4a8001b1a367341</msg>
<status status="PASS" starttime="20220706 04:38:00.544" endtime="20220706 04:38:00.545"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:38:00.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.545" endtime="20220706 04:38:00.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:00.704" endtime="20220706 04:38:00.704"/>
</return>
<msg timestamp="20220706 04:38:00.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.542" endtime="20220706 04:38:00.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:00.704" endtime="20220706 04:38:00.704"/>
</return>
<status status="PASS" starttime="20220706 04:38:00.541" endtime="20220706 04:38:00.705"/>
</kw>
<status status="PASS" starttime="20220706 04:38:00.541" endtime="20220706 04:38:00.705"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:38:00.232" endtime="20220706 04:38:00.705"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:38:00.707" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:38:00.707" endtime="20220706 04:38:00.707"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:38:00.707" endtime="20220706 04:38:00.708"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:00.709" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 04:38:00.708" endtime="20220706 04:38:00.709"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:38:00.858" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.709" endtime="20220706 04:38:00.858"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:00.858" endtime="20220706 04:38:00.858"/>
</return>
<msg timestamp="20220706 04:38:00.858" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.706" endtime="20220706 04:38:00.858"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:00.858" endtime="20220706 04:38:00.858"/>
</return>
<msg timestamp="20220706 04:38:00.859" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.706" endtime="20220706 04:38:00.859"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:38:00.859" endtime="20220706 04:38:00.859"/>
</return>
<msg timestamp="20220706 04:38:00.860" level="INFO">${LABEL_ID} = 62c511a8cf1a9c27d4d035ed</msg>
<status status="PASS" starttime="20220706 04:38:00.859" endtime="20220706 04:38:00.860"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:00.862" level="INFO">${url} = labels/62c511a8cf1a9c27d4d035ed</msg>
<status status="PASS" starttime="20220706 04:38:00.862" endtime="20220706 04:38:00.862"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:38:01.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.862" endtime="20220706 04:38:01.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:01.039" endtime="20220706 04:38:01.039"/>
</return>
<msg timestamp="20220706 04:38:01.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:00.861" endtime="20220706 04:38:01.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:01.040" endtime="20220706 04:38:01.040"/>
</return>
<status status="PASS" starttime="20220706 04:38:00.861" endtime="20220706 04:38:01.040"/>
</kw>
<status status="PASS" starttime="20220706 04:38:00.860" endtime="20220706 04:38:01.040"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:01.042" level="INFO">${url} = labels/62c511a8cf1a9c27d4d035ed</msg>
<status status="PASS" starttime="20220706 04:38:01.041" endtime="20220706 04:38:01.042"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:38:01.131" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:38:01.042" endtime="20220706 04:38:01.131"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:01.131" endtime="20220706 04:38:01.131"/>
</return>
<msg timestamp="20220706 04:38:01.131" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:38:01.041" endtime="20220706 04:38:01.131"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:01.131" endtime="20220706 04:38:01.132"/>
</return>
<status status="PASS" starttime="20220706 04:38:01.040" endtime="20220706 04:38:01.132"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:38:00.705" endtime="20220706 04:38:01.132"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:01.135" level="INFO">${url} = boards/62c511a766a52c1df4e15219</msg>
<status status="PASS" starttime="20220706 04:38:01.134" endtime="20220706 04:38:01.135"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:38:01.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:01.135" endtime="20220706 04:38:01.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:01.491" endtime="20220706 04:38:01.491"/>
</return>
<msg timestamp="20220706 04:38:01.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:01.134" endtime="20220706 04:38:01.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:01.491" endtime="20220706 04:38:01.491"/>
</return>
<status status="PASS" starttime="20220706 04:38:01.133" endtime="20220706 04:38:01.492"/>
</kw>
<status status="PASS" starttime="20220706 04:38:01.133" endtime="20220706 04:38:01.492"/>
</kw>
<status status="PASS" starttime="20220706 04:38:01.133" endtime="20220706 04:38:01.492"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 04:38:01.492" endtime="20220706 04:38:01.493"/>
</kw>
<status status="PASS" starttime="20220706 04:38:01.133" endtime="20220706 04:38:01.493"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220706 04:37:59.447" endtime="20220706 04:38:01.493"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 04:38:01.505" endtime="20220706 04:38:01.506"/>
</kw>
<status status="PASS" starttime="20220706 04:38:01.505" endtime="20220706 04:38:01.506"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:38:01.508" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:38:01.507" endtime="20220706 04:38:01.508"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:38:01.508" endtime="20220706 04:38:01.508"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:01.509" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:38:01.508" endtime="20220706 04:38:01.509"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:38:01.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:01.509" endtime="20220706 04:38:01.747"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:01.747" endtime="20220706 04:38:01.747"/>
</return>
<msg timestamp="20220706 04:38:01.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:01.507" endtime="20220706 04:38:01.748"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:01.748" endtime="20220706 04:38:01.748"/>
</return>
<msg timestamp="20220706 04:38:01.748" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:01.506" endtime="20220706 04:38:01.748"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:38:01.749" level="INFO">${TEST_SUITE_BOARD_ID} = 62c511a9288e6c29bb52fac8</msg>
<status status="PASS" starttime="20220706 04:38:01.748" endtime="20220706 04:38:01.749"/>
</kw>
<status status="PASS" starttime="20220706 04:38:01.748" endtime="20220706 04:38:01.749"/>
</kw>
<status status="PASS" starttime="20220706 04:38:01.506" endtime="20220706 04:38:01.750"/>
</kw>
<status status="PASS" starttime="20220706 04:38:01.505" endtime="20220706 04:38:01.750"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:38:01.752" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:38:01.752" endtime="20220706 04:38:01.752"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:38:01.752" endtime="20220706 04:38:01.753"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:01.753" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 04:38:01.753" endtime="20220706 04:38:01.754"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:38:01.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:01.754" endtime="20220706 04:38:01.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:01.906" endtime="20220706 04:38:01.906"/>
</return>
<msg timestamp="20220706 04:38:01.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:01.751" endtime="20220706 04:38:01.907"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:01.907" endtime="20220706 04:38:01.907"/>
</return>
<msg timestamp="20220706 04:38:01.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:01.751" endtime="20220706 04:38:01.907"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:38:01.908" endtime="20220706 04:38:01.910"/>
</kw>
<status status="PASS" starttime="20220706 04:38:01.907" endtime="20220706 04:38:01.910"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:38:01.750" endtime="20220706 04:38:01.910"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:38:01.913" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:38:01.912" endtime="20220706 04:38:01.913"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:38:01.913" endtime="20220706 04:38:01.913"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:01.914" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 04:38:01.913" endtime="20220706 04:38:01.914"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:38:02.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:01.914" endtime="20220706 04:38:02.054"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:02.054" endtime="20220706 04:38:02.054"/>
</return>
<msg timestamp="20220706 04:38:02.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:01.912" endtime="20220706 04:38:02.054"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:02.054" endtime="20220706 04:38:02.054"/>
</return>
<msg timestamp="20220706 04:38:02.056" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:01.911" endtime="20220706 04:38:02.056"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:38:02.057" endtime="20220706 04:38:02.059"/>
</kw>
<status status="PASS" starttime="20220706 04:38:02.056" endtime="20220706 04:38:02.059"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:38:02.061" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:38:02.060" endtime="20220706 04:38:02.061"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:38:02.061" endtime="20220706 04:38:02.061"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:02.062" level="INFO">${url} = lists/62c511a945ebff8fc0875108</msg>
<status status="PASS" starttime="20220706 04:38:02.061" endtime="20220706 04:38:02.062"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:38:02.184" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.062" endtime="20220706 04:38:02.184"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:02.184" endtime="20220706 04:38:02.185"/>
</return>
<msg timestamp="20220706 04:38:02.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.060" endtime="20220706 04:38:02.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:02.185" endtime="20220706 04:38:02.185"/>
</return>
<status status="PASS" starttime="20220706 04:38:02.059" endtime="20220706 04:38:02.185"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:02.187" level="INFO">${url} = lists/62c511a945ebff8fc0875108</msg>
<status status="PASS" starttime="20220706 04:38:02.187" endtime="20220706 04:38:02.187"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:38:02.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.187" endtime="20220706 04:38:02.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:02.280" endtime="20220706 04:38:02.280"/>
</return>
<msg timestamp="20220706 04:38:02.281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.186" endtime="20220706 04:38:02.281"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:02.281" endtime="20220706 04:38:02.281"/>
</return>
<msg timestamp="20220706 04:38:02.281" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.185" endtime="20220706 04:38:02.281"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:38:02.282" endtime="20220706 04:38:02.283"/>
</kw>
<status status="PASS" starttime="20220706 04:38:02.281" endtime="20220706 04:38:02.283"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:38:02.284" endtime="20220706 04:38:02.284"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 04:38:01.911" endtime="20220706 04:38:02.285"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:38:02.287" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:38:02.286" endtime="20220706 04:38:02.287"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:38:02.287" endtime="20220706 04:38:02.289"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:02.289" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 04:38:02.289" endtime="20220706 04:38:02.289"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:38:02.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.290" endtime="20220706 04:38:02.465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:02.465" endtime="20220706 04:38:02.465"/>
</return>
<msg timestamp="20220706 04:38:02.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.286" endtime="20220706 04:38:02.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:02.466" endtime="20220706 04:38:02.466"/>
</return>
<msg timestamp="20220706 04:38:02.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.285" endtime="20220706 04:38:02.466"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:38:02.469" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:38:02.468" endtime="20220706 04:38:02.469"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:38:02.469" endtime="20220706 04:38:02.469"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:02.470" level="INFO">${url} = lists/62c511aa38f01f87ac253ed9/closed</msg>
<status status="PASS" starttime="20220706 04:38:02.469" endtime="20220706 04:38:02.470"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:38:02.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.470" endtime="20220706 04:38:02.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:02.629" endtime="20220706 04:38:02.629"/>
</return>
<msg timestamp="20220706 04:38:02.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.468" endtime="20220706 04:38:02.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:02.629" endtime="20220706 04:38:02.629"/>
</return>
<status status="PASS" starttime="20220706 04:38:02.466" endtime="20220706 04:38:02.630"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:02.632" level="INFO">${url} = lists/62c511aa38f01f87ac253ed9</msg>
<status status="PASS" starttime="20220706 04:38:02.631" endtime="20220706 04:38:02.632"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:38:02.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.632" endtime="20220706 04:38:02.741"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:02.741" endtime="20220706 04:38:02.741"/>
</return>
<msg timestamp="20220706 04:38:02.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.631" endtime="20220706 04:38:02.741"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:02.742" endtime="20220706 04:38:02.742"/>
</return>
<msg timestamp="20220706 04:38:02.742" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.630" endtime="20220706 04:38:02.742"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 04:38:02.742" endtime="20220706 04:38:02.743"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 04:38:02.285" endtime="20220706 04:38:02.743"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:38:02.746" level="INFO">${url} = boards/62c511a9288e6c29bb52fac8</msg>
<status status="PASS" starttime="20220706 04:38:02.746" endtime="20220706 04:38:02.746"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:38:03.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.747" endtime="20220706 04:38:03.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:03.115" endtime="20220706 04:38:03.115"/>
</return>
<msg timestamp="20220706 04:38:03.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:38:02.745" endtime="20220706 04:38:03.116"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:38:03.116" endtime="20220706 04:38:03.116"/>
</return>
<status status="PASS" starttime="20220706 04:38:02.745" endtime="20220706 04:38:03.116"/>
</kw>
<status status="PASS" starttime="20220706 04:38:02.744" endtime="20220706 04:38:03.116"/>
</kw>
<status status="PASS" starttime="20220706 04:38:02.744" endtime="20220706 04:38:03.116"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 04:38:03.116" endtime="20220706 04:38:03.117"/>
</kw>
<status status="PASS" starttime="20220706 04:38:02.744" endtime="20220706 04:38:03.118"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220706 04:38:01.495" endtime="20220706 04:38:03.118"/>
</suite>
<status status="PASS" starttime="20220706 04:37:48.997" endtime="20220706 04:38:03.120"/>
</suite>
<status status="PASS" starttime="20220706 04:37:48.972" endtime="20220706 04:38:03.123"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
