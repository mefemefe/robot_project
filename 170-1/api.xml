<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220707 05:21:01.572" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 05:21:01.694" endtime="20220707 05:21:01.695"/>
</kw>
<status status="PASS" starttime="20220707 05:21:01.693" endtime="20220707 05:21:01.695"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:01.697" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:01.696" endtime="20220707 05:21:01.697"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:01.697" endtime="20220707 05:21:01.697"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:01.698" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:21:01.697" endtime="20220707 05:21:01.698"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:02.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:01.698" endtime="20220707 05:21:02.002"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:02.002" endtime="20220707 05:21:02.002"/>
</return>
<msg timestamp="20220707 05:21:02.003" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:01.696" endtime="20220707 05:21:02.003"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:02.003" endtime="20220707 05:21:02.003"/>
</return>
<msg timestamp="20220707 05:21:02.003" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:01.696" endtime="20220707 05:21:02.003"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:02.003" endtime="20220707 05:21:02.008"/>
</kw>
<status status="PASS" starttime="20220707 05:21:02.003" endtime="20220707 05:21:02.008"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:02.010" level="INFO">${url} = boards/62c66d3d3612115b543128f2</msg>
<status status="PASS" starttime="20220707 05:21:02.009" endtime="20220707 05:21:02.010"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:02.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:02.010" endtime="20220707 05:21:02.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:02.476" endtime="20220707 05:21:02.476"/>
</return>
<msg timestamp="20220707 05:21:02.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:02.009" endtime="20220707 05:21:02.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:02.476" endtime="20220707 05:21:02.476"/>
</return>
<status status="PASS" starttime="20220707 05:21:02.008" endtime="20220707 05:21:02.476"/>
</kw>
<status status="PASS" starttime="20220707 05:21:02.008" endtime="20220707 05:21:02.476"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:21:01.695" endtime="20220707 05:21:02.476"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:02.479" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:02.478" endtime="20220707 05:21:02.479"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:02.479" endtime="20220707 05:21:02.479"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:02.480" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:21:02.479" endtime="20220707 05:21:02.480"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:02.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:02.480" endtime="20220707 05:21:02.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:02.709" endtime="20220707 05:21:02.709"/>
</return>
<msg timestamp="20220707 05:21:02.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:02.478" endtime="20220707 05:21:02.710"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:02.710" endtime="20220707 05:21:02.710"/>
</return>
<msg timestamp="20220707 05:21:02.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:02.477" endtime="20220707 05:21:02.710"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:02.710" endtime="20220707 05:21:02.714"/>
</kw>
<status status="PASS" starttime="20220707 05:21:02.710" endtime="20220707 05:21:02.714"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:02.716" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:02.715" endtime="20220707 05:21:02.716"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:02.716" endtime="20220707 05:21:02.716"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:02.716" level="INFO">${url} = boards/62c66d3e9ff97914d77a06fa</msg>
<status status="PASS" starttime="20220707 05:21:02.716" endtime="20220707 05:21:02.716"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:02.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:02.716" endtime="20220707 05:21:02.864"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:02.865" endtime="20220707 05:21:02.865"/>
</return>
<msg timestamp="20220707 05:21:02.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:02.715" endtime="20220707 05:21:02.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:02.865" endtime="20220707 05:21:02.865"/>
</return>
<status status="PASS" starttime="20220707 05:21:02.714" endtime="20220707 05:21:02.865"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:02.867" level="INFO">${url} = boards/62c66d3e9ff97914d77a06fa</msg>
<status status="PASS" starttime="20220707 05:21:02.866" endtime="20220707 05:21:02.867"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:02.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:02.867" endtime="20220707 05:21:02.981"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:02.981" endtime="20220707 05:21:02.981"/>
</return>
<msg timestamp="20220707 05:21:02.982" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:02.866" endtime="20220707 05:21:02.982"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:02.982" endtime="20220707 05:21:02.982"/>
</return>
<msg timestamp="20220707 05:21:02.982" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:02.865" endtime="20220707 05:21:02.982"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:02.982" endtime="20220707 05:21:02.986"/>
</kw>
<status status="PASS" starttime="20220707 05:21:02.982" endtime="20220707 05:21:02.986"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:02.986" endtime="20220707 05:21:02.987"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:02.989" level="INFO">${url} = boards/62c66d3e9ff97914d77a06fa</msg>
<status status="PASS" starttime="20220707 05:21:02.988" endtime="20220707 05:21:02.989"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:03.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:02.989" endtime="20220707 05:21:03.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:03.396" endtime="20220707 05:21:03.396"/>
</return>
<msg timestamp="20220707 05:21:03.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:02.988" endtime="20220707 05:21:03.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:03.396" endtime="20220707 05:21:03.396"/>
</return>
<status status="PASS" starttime="20220707 05:21:02.987" endtime="20220707 05:21:03.397"/>
</kw>
<status status="PASS" starttime="20220707 05:21:02.987" endtime="20220707 05:21:03.397"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:21:02.477" endtime="20220707 05:21:03.397"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:03.399" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:03.399" endtime="20220707 05:21:03.399"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:03.399" endtime="20220707 05:21:03.399"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:03.400" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:21:03.399" endtime="20220707 05:21:03.400"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:03.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:03.400" endtime="20220707 05:21:03.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:03.617" endtime="20220707 05:21:03.617"/>
</return>
<msg timestamp="20220707 05:21:03.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:03.398" endtime="20220707 05:21:03.618"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:03.618" endtime="20220707 05:21:03.618"/>
</return>
<msg timestamp="20220707 05:21:03.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:03.398" endtime="20220707 05:21:03.618"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:03.620" level="INFO">${url} = boards/62c66d3fc5ed42330b363ef8</msg>
<status status="PASS" starttime="20220707 05:21:03.619" endtime="20220707 05:21:03.620"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:04.007" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:03.620" endtime="20220707 05:21:04.007"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:04.007" endtime="20220707 05:21:04.007"/>
</return>
<msg timestamp="20220707 05:21:04.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:03.619" endtime="20220707 05:21:04.008"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:04.008" endtime="20220707 05:21:04.008"/>
</return>
<status status="PASS" starttime="20220707 05:21:03.618" endtime="20220707 05:21:04.008"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:04.009" level="INFO">${url} = boards/62c66d3fc5ed42330b363ef8</msg>
<status status="PASS" starttime="20220707 05:21:04.009" endtime="20220707 05:21:04.010"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:04.113" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 05:21:04.010" endtime="20220707 05:21:04.113"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:04.113" endtime="20220707 05:21:04.113"/>
</return>
<msg timestamp="20220707 05:21:04.114" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 05:21:04.009" endtime="20220707 05:21:04.114"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:04.114" endtime="20220707 05:21:04.114"/>
</return>
<status status="PASS" starttime="20220707 05:21:04.008" endtime="20220707 05:21:04.114"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:21:03.397" endtime="20220707 05:21:04.114"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:04.116" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:04.116" endtime="20220707 05:21:04.116"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:04.116" endtime="20220707 05:21:04.116"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:04.117" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:21:04.116" endtime="20220707 05:21:04.117"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:04.337" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:04.117" endtime="20220707 05:21:04.337"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:04.337" endtime="20220707 05:21:04.337"/>
</return>
<msg timestamp="20220707 05:21:04.337" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:04.115" endtime="20220707 05:21:04.337"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:04.337" endtime="20220707 05:21:04.337"/>
</return>
<msg timestamp="20220707 05:21:04.337" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:04.115" endtime="20220707 05:21:04.337"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:04.338" endtime="20220707 05:21:04.341"/>
</kw>
<status status="PASS" starttime="20220707 05:21:04.337" endtime="20220707 05:21:04.342"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:04.343" level="INFO">${url} = boards/62c66d404512f16b49336afc</msg>
<status status="PASS" starttime="20220707 05:21:04.343" endtime="20220707 05:21:04.343"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:04.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:04.343" endtime="20220707 05:21:04.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:04.454" endtime="20220707 05:21:04.454"/>
</return>
<msg timestamp="20220707 05:21:04.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:04.342" endtime="20220707 05:21:04.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:04.454" endtime="20220707 05:21:04.454"/>
</return>
<msg timestamp="20220707 05:21:04.454" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:04.342" endtime="20220707 05:21:04.454"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:04.455" endtime="20220707 05:21:04.458"/>
</kw>
<status status="PASS" starttime="20220707 05:21:04.455" endtime="20220707 05:21:04.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:04.459" endtime="20220707 05:21:04.459"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:04.461" level="INFO">${url} = boards/62c66d404512f16b49336afc</msg>
<status status="PASS" starttime="20220707 05:21:04.461" endtime="20220707 05:21:04.461"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:04.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:04.461" endtime="20220707 05:21:04.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:04.870" endtime="20220707 05:21:04.870"/>
</return>
<msg timestamp="20220707 05:21:04.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:04.460" endtime="20220707 05:21:04.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:04.870" endtime="20220707 05:21:04.870"/>
</return>
<status status="PASS" starttime="20220707 05:21:04.460" endtime="20220707 05:21:04.871"/>
</kw>
<status status="PASS" starttime="20220707 05:21:04.459" endtime="20220707 05:21:04.871"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:21:04.114" endtime="20220707 05:21:04.871"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:04.872" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:04.872" endtime="20220707 05:21:04.872"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:04.872" endtime="20220707 05:21:04.873"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:04.873" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:21:04.873" endtime="20220707 05:21:04.873"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:05.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:04.873" endtime="20220707 05:21:05.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:05.110" endtime="20220707 05:21:05.110"/>
</return>
<msg timestamp="20220707 05:21:05.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:04.872" endtime="20220707 05:21:05.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:05.110" endtime="20220707 05:21:05.110"/>
</return>
<msg timestamp="20220707 05:21:05.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:04.871" endtime="20220707 05:21:05.111"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:05.111" endtime="20220707 05:21:05.115"/>
</kw>
<status status="PASS" starttime="20220707 05:21:05.111" endtime="20220707 05:21:05.115"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:05.116" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:05.116" endtime="20220707 05:21:05.116"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:05.116" endtime="20220707 05:21:05.117"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:05.117" level="INFO">${url} = boards/62c66d408db3d25c05ba3b1f</msg>
<status status="PASS" starttime="20220707 05:21:05.117" endtime="20220707 05:21:05.117"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:05.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:05.117" endtime="20220707 05:21:05.270"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:05.270" endtime="20220707 05:21:05.270"/>
</return>
<msg timestamp="20220707 05:21:05.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:05.116" endtime="20220707 05:21:05.270"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:05.270" endtime="20220707 05:21:05.270"/>
</return>
<status status="PASS" starttime="20220707 05:21:05.115" endtime="20220707 05:21:05.270"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:05.272" level="INFO">${url} = boards/62c66d408db3d25c05ba3b1f</msg>
<status status="PASS" starttime="20220707 05:21:05.272" endtime="20220707 05:21:05.272"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:05.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:05.272" endtime="20220707 05:21:05.388"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:05.388" endtime="20220707 05:21:05.388"/>
</return>
<msg timestamp="20220707 05:21:05.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:05.271" endtime="20220707 05:21:05.388"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:05.388" endtime="20220707 05:21:05.389"/>
</return>
<msg timestamp="20220707 05:21:05.389" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:05.270" endtime="20220707 05:21:05.389"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:05.389" endtime="20220707 05:21:05.389"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:05.391" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:05.391" endtime="20220707 05:21:05.391"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:05.391" endtime="20220707 05:21:05.391"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:05.392" level="INFO">${url} = boards/62c66d408db3d25c05ba3b1f</msg>
<status status="PASS" starttime="20220707 05:21:05.392" endtime="20220707 05:21:05.392"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:05.556" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:05.392" endtime="20220707 05:21:05.557"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:05.557" endtime="20220707 05:21:05.557"/>
</return>
<msg timestamp="20220707 05:21:05.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:05.390" endtime="20220707 05:21:05.557"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:05.557" endtime="20220707 05:21:05.557"/>
</return>
<status status="PASS" starttime="20220707 05:21:05.390" endtime="20220707 05:21:05.557"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:05.559" level="INFO">${url} = boards/62c66d408db3d25c05ba3b1f</msg>
<status status="PASS" starttime="20220707 05:21:05.558" endtime="20220707 05:21:05.559"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:05.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:05.559" endtime="20220707 05:21:05.673"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:05.673" endtime="20220707 05:21:05.673"/>
</return>
<msg timestamp="20220707 05:21:05.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:05.558" endtime="20220707 05:21:05.673"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:05.673" endtime="20220707 05:21:05.673"/>
</return>
<msg timestamp="20220707 05:21:05.673" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:05.557" endtime="20220707 05:21:05.673"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:05.674" endtime="20220707 05:21:05.674"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:05.676" level="INFO">${url} = boards/62c66d408db3d25c05ba3b1f</msg>
<status status="PASS" starttime="20220707 05:21:05.676" endtime="20220707 05:21:05.676"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:06.066" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:05.676" endtime="20220707 05:21:06.066"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:06.066" endtime="20220707 05:21:06.066"/>
</return>
<msg timestamp="20220707 05:21:06.066" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:05.675" endtime="20220707 05:21:06.066"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:06.066" endtime="20220707 05:21:06.066"/>
</return>
<status status="PASS" starttime="20220707 05:21:05.675" endtime="20220707 05:21:06.067"/>
</kw>
<status status="PASS" starttime="20220707 05:21:05.674" endtime="20220707 05:21:06.067"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:21:04.871" endtime="20220707 05:21:06.067"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220707 05:21:06.068" endtime="20220707 05:21:06.069"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220707 05:21:01.591" endtime="20220707 05:21:06.069"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 05:21:06.080" endtime="20220707 05:21:06.080"/>
</kw>
<status status="PASS" starttime="20220707 05:21:06.080" endtime="20220707 05:21:06.080"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:06.081" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:06.081" endtime="20220707 05:21:06.081"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:06.081" endtime="20220707 05:21:06.081"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:06.082" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:21:06.082" endtime="20220707 05:21:06.082"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:06.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.082" endtime="20220707 05:21:06.350"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:06.350" endtime="20220707 05:21:06.350"/>
</return>
<msg timestamp="20220707 05:21:06.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.081" endtime="20220707 05:21:06.350"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:06.350" endtime="20220707 05:21:06.350"/>
</return>
<msg timestamp="20220707 05:21:06.350" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.080" endtime="20220707 05:21:06.351"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 05:21:06.351" level="INFO">${TEST_SUITE_BOARD_ID} = 62c66d420831217a22bf1246</msg>
<status status="PASS" starttime="20220707 05:21:06.351" endtime="20220707 05:21:06.351"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:06.352" level="INFO">${url} = boards/62c66d420831217a22bf1246/lists/</msg>
<status status="PASS" starttime="20220707 05:21:06.352" endtime="20220707 05:21:06.352"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:06.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.353" endtime="20220707 05:21:06.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:06.466" endtime="20220707 05:21:06.466"/>
</return>
<msg timestamp="20220707 05:21:06.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.352" endtime="20220707 05:21:06.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:06.466" endtime="20220707 05:21:06.466"/>
</return>
<msg timestamp="20220707 05:21:06.467" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.352" endtime="20220707 05:21:06.467"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 05:21:06.467" level="INFO">${TEST_SUITE_LIST_ID} = 62c66d420831217a22bf124d</msg>
<status status="PASS" starttime="20220707 05:21:06.467" endtime="20220707 05:21:06.467"/>
</kw>
<status status="PASS" starttime="20220707 05:21:06.080" endtime="20220707 05:21:06.467"/>
</kw>
<status status="PASS" starttime="20220707 05:21:06.079" endtime="20220707 05:21:06.468"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:06.469" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:06.469" endtime="20220707 05:21:06.469"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:06.469" endtime="20220707 05:21:06.470"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:06.470" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 05:21:06.470" endtime="20220707 05:21:06.470"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:06.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.470" endtime="20220707 05:21:06.765"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:06.765" endtime="20220707 05:21:06.766"/>
</return>
<msg timestamp="20220707 05:21:06.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.469" endtime="20220707 05:21:06.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:06.766" endtime="20220707 05:21:06.766"/>
</return>
<msg timestamp="20220707 05:21:06.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.468" endtime="20220707 05:21:06.766"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:06.767" endtime="20220707 05:21:06.771"/>
</kw>
<status status="PASS" starttime="20220707 05:21:06.766" endtime="20220707 05:21:06.771"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:06.772" endtime="20220707 05:21:06.772"/>
</return>
<msg timestamp="20220707 05:21:06.772" level="INFO">${CARD_ID} = 62c66d42d72b203224527e60</msg>
<status status="PASS" starttime="20220707 05:21:06.771" endtime="20220707 05:21:06.772"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:06.774" level="INFO">${url} = cards/62c66d42d72b203224527e60</msg>
<status status="PASS" starttime="20220707 05:21:06.773" endtime="20220707 05:21:06.774"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:06.927" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.774" endtime="20220707 05:21:06.927"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:06.927" endtime="20220707 05:21:06.927"/>
</return>
<msg timestamp="20220707 05:21:06.927" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.773" endtime="20220707 05:21:06.927"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:06.927" endtime="20220707 05:21:06.927"/>
</return>
<msg timestamp="20220707 05:21:06.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.773" endtime="20220707 05:21:06.928"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:06.928" endtime="20220707 05:21:06.928"/>
</return>
<msg timestamp="20220707 05:21:06.929" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220707 05:21:06.928" endtime="20220707 05:21:06.929"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:06.929" endtime="20220707 05:21:06.929"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:06.931" level="INFO">${url} = cards/62c66d42d72b203224527e60</msg>
<status status="PASS" starttime="20220707 05:21:06.930" endtime="20220707 05:21:06.931"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:07.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.931" endtime="20220707 05:21:07.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:07.206" endtime="20220707 05:21:07.206"/>
</return>
<msg timestamp="20220707 05:21:07.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:06.930" endtime="20220707 05:21:07.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:07.206" endtime="20220707 05:21:07.206"/>
</return>
<status status="PASS" starttime="20220707 05:21:06.929" endtime="20220707 05:21:07.207"/>
</kw>
<status status="PASS" starttime="20220707 05:21:06.929" endtime="20220707 05:21:07.207"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:21:06.468" endtime="20220707 05:21:07.207"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:07.209" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:07.209" endtime="20220707 05:21:07.209"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:07.209" endtime="20220707 05:21:07.209"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:07.210" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 05:21:07.209" endtime="20220707 05:21:07.210"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:07.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.210" endtime="20220707 05:21:07.413"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:07.413" endtime="20220707 05:21:07.413"/>
</return>
<msg timestamp="20220707 05:21:07.413" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.208" endtime="20220707 05:21:07.413"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:07.413" endtime="20220707 05:21:07.413"/>
</return>
<msg timestamp="20220707 05:21:07.413" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.208" endtime="20220707 05:21:07.413"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:07.413" endtime="20220707 05:21:07.414"/>
</return>
<msg timestamp="20220707 05:21:07.414" level="INFO">${CARD_ID} = 62c66d4381b67e57925463a7</msg>
<status status="PASS" starttime="20220707 05:21:07.413" endtime="20220707 05:21:07.414"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:07.416" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:07.416" endtime="20220707 05:21:07.416"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:07.416" endtime="20220707 05:21:07.416"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:07.417" level="INFO">${url} = cards/62c66d4381b67e57925463a7</msg>
<status status="PASS" starttime="20220707 05:21:07.416" endtime="20220707 05:21:07.417"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:07.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.417" endtime="20220707 05:21:07.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:07.591" endtime="20220707 05:21:07.591"/>
</return>
<msg timestamp="20220707 05:21:07.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.415" endtime="20220707 05:21:07.592"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:07.592" endtime="20220707 05:21:07.592"/>
</return>
<msg timestamp="20220707 05:21:07.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.415" endtime="20220707 05:21:07.592"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:07.592" endtime="20220707 05:21:07.592"/>
</return>
<status status="PASS" starttime="20220707 05:21:07.414" endtime="20220707 05:21:07.592"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:07.593" level="INFO">${url} = cards/62c66d4381b67e57925463a7</msg>
<status status="PASS" starttime="20220707 05:21:07.593" endtime="20220707 05:21:07.593"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:07.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.593" endtime="20220707 05:21:07.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:07.720" endtime="20220707 05:21:07.720"/>
</return>
<msg timestamp="20220707 05:21:07.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.593" endtime="20220707 05:21:07.721"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:07.721" endtime="20220707 05:21:07.721"/>
</return>
<msg timestamp="20220707 05:21:07.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.592" endtime="20220707 05:21:07.721"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:07.721" endtime="20220707 05:21:07.721"/>
</return>
<msg timestamp="20220707 05:21:07.722" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220707 05:21:07.721" endtime="20220707 05:21:07.722"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 05:21:07.722" endtime="20220707 05:21:07.722"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:07.724" level="INFO">${url} = cards/62c66d4381b67e57925463a7</msg>
<status status="PASS" starttime="20220707 05:21:07.723" endtime="20220707 05:21:07.724"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:07.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.724" endtime="20220707 05:21:07.930"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:07.930" endtime="20220707 05:21:07.930"/>
</return>
<msg timestamp="20220707 05:21:07.931" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.723" endtime="20220707 05:21:07.931"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:07.931" endtime="20220707 05:21:07.931"/>
</return>
<status status="PASS" starttime="20220707 05:21:07.723" endtime="20220707 05:21:07.931"/>
</kw>
<status status="PASS" starttime="20220707 05:21:07.722" endtime="20220707 05:21:07.931"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 05:21:07.207" endtime="20220707 05:21:07.931"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:07.933" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:07.933" endtime="20220707 05:21:07.933"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:07.934" endtime="20220707 05:21:07.934"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:07.934" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 05:21:07.934" endtime="20220707 05:21:07.935"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:08.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.935" endtime="20220707 05:21:08.169"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:08.169" endtime="20220707 05:21:08.169"/>
</return>
<msg timestamp="20220707 05:21:08.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.932" endtime="20220707 05:21:08.169"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:08.169" endtime="20220707 05:21:08.169"/>
</return>
<msg timestamp="20220707 05:21:08.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:07.932" endtime="20220707 05:21:08.169"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:08.170" endtime="20220707 05:21:08.170"/>
</return>
<msg timestamp="20220707 05:21:08.170" level="INFO">${CARD_ID} = 62c66d44824c864509da0632</msg>
<status status="PASS" starttime="20220707 05:21:08.169" endtime="20220707 05:21:08.171"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:08.172" level="INFO">${url} = cards/62c66d44824c864509da0632</msg>
<status status="PASS" starttime="20220707 05:21:08.171" endtime="20220707 05:21:08.172"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:08.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:08.172" endtime="20220707 05:21:08.388"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:08.388" endtime="20220707 05:21:08.388"/>
</return>
<msg timestamp="20220707 05:21:08.389" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:08.171" endtime="20220707 05:21:08.389"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:08.389" endtime="20220707 05:21:08.389"/>
</return>
<msg timestamp="20220707 05:21:08.389" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:08.171" endtime="20220707 05:21:08.389"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:08.389" endtime="20220707 05:21:08.391"/>
</kw>
<status status="PASS" starttime="20220707 05:21:08.389" endtime="20220707 05:21:08.391"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:08.392" level="INFO">${url} = cards/62c66d44824c864509da0632</msg>
<status status="PASS" starttime="20220707 05:21:08.392" endtime="20220707 05:21:08.392"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:08.499" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 05:21:08.392" endtime="20220707 05:21:08.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:08.499" endtime="20220707 05:21:08.499"/>
</return>
<msg timestamp="20220707 05:21:08.499" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 05:21:08.392" endtime="20220707 05:21:08.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:08.499" endtime="20220707 05:21:08.500"/>
</return>
<status status="PASS" starttime="20220707 05:21:08.391" endtime="20220707 05:21:08.500"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:21:07.931" endtime="20220707 05:21:08.500"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:08.503" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:08.502" endtime="20220707 05:21:08.503"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:08.503" endtime="20220707 05:21:08.503"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:08.504" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 05:21:08.503" endtime="20220707 05:21:08.504"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:08.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:08.504" endtime="20220707 05:21:08.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:08.737" endtime="20220707 05:21:08.737"/>
</return>
<msg timestamp="20220707 05:21:08.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:08.502" endtime="20220707 05:21:08.738"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:08.738" endtime="20220707 05:21:08.738"/>
</return>
<msg timestamp="20220707 05:21:08.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:08.501" endtime="20220707 05:21:08.738"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:08.738" endtime="20220707 05:21:08.738"/>
</return>
<msg timestamp="20220707 05:21:08.739" level="INFO">${CARD_ID} = 62c66d446c3856491fdec514</msg>
<status status="PASS" starttime="20220707 05:21:08.738" endtime="20220707 05:21:08.739"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:08.740" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:08.740" endtime="20220707 05:21:08.740"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:08.740" endtime="20220707 05:21:08.741"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:08.741" level="INFO">${url} = cards/62c66d446c3856491fdec514</msg>
<status status="PASS" starttime="20220707 05:21:08.741" endtime="20220707 05:21:08.741"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:08.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:08.741" endtime="20220707 05:21:08.968"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:08.968" endtime="20220707 05:21:08.968"/>
</return>
<msg timestamp="20220707 05:21:08.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:08.740" endtime="20220707 05:21:08.968"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:08.969" endtime="20220707 05:21:08.969"/>
</return>
<msg timestamp="20220707 05:21:08.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:08.739" endtime="20220707 05:21:08.969"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:08.969" endtime="20220707 05:21:08.974"/>
</kw>
<status status="PASS" starttime="20220707 05:21:08.969" endtime="20220707 05:21:08.974"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:08.975" level="INFO">${url} = cards/62c66d446c3856491fdec514</msg>
<status status="PASS" starttime="20220707 05:21:08.975" endtime="20220707 05:21:08.975"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:09.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:08.975" endtime="20220707 05:21:09.129"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:09.129" endtime="20220707 05:21:09.129"/>
</return>
<msg timestamp="20220707 05:21:09.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:08.975" endtime="20220707 05:21:09.129"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:09.129" endtime="20220707 05:21:09.129"/>
</return>
<msg timestamp="20220707 05:21:09.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:08.974" endtime="20220707 05:21:09.129"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:09.130" endtime="20220707 05:21:09.130"/>
</return>
<msg timestamp="20220707 05:21:09.130" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220707 05:21:09.129" endtime="20220707 05:21:09.130"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:09.131" endtime="20220707 05:21:09.131"/>
</return>
<msg timestamp="20220707 05:21:09.132" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220707 05:21:09.131" endtime="20220707 05:21:09.132"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:09.132" endtime="20220707 05:21:09.132"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:09.132" endtime="20220707 05:21:09.132"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:09.134" level="INFO">${url} = cards/62c66d446c3856491fdec514</msg>
<status status="PASS" starttime="20220707 05:21:09.133" endtime="20220707 05:21:09.134"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:09.364" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:09.134" endtime="20220707 05:21:09.364"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:09.364" endtime="20220707 05:21:09.365"/>
</return>
<msg timestamp="20220707 05:21:09.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:09.133" endtime="20220707 05:21:09.365"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:09.365" endtime="20220707 05:21:09.365"/>
</return>
<status status="PASS" starttime="20220707 05:21:09.133" endtime="20220707 05:21:09.365"/>
</kw>
<status status="PASS" starttime="20220707 05:21:09.132" endtime="20220707 05:21:09.365"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 05:21:08.501" endtime="20220707 05:21:09.365"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:09.368" level="INFO">${url} = boards/62c66d420831217a22bf1246</msg>
<status status="PASS" starttime="20220707 05:21:09.368" endtime="20220707 05:21:09.368"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:09.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:09.368" endtime="20220707 05:21:09.761"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:09.761" endtime="20220707 05:21:09.761"/>
</return>
<msg timestamp="20220707 05:21:09.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:09.367" endtime="20220707 05:21:09.761"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:09.761" endtime="20220707 05:21:09.761"/>
</return>
<status status="PASS" starttime="20220707 05:21:09.367" endtime="20220707 05:21:09.761"/>
</kw>
<status status="PASS" starttime="20220707 05:21:09.366" endtime="20220707 05:21:09.761"/>
</kw>
<status status="PASS" starttime="20220707 05:21:09.366" endtime="20220707 05:21:09.761"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 05:21:09.762" endtime="20220707 05:21:09.762"/>
</kw>
<status status="PASS" starttime="20220707 05:21:09.366" endtime="20220707 05:21:09.762"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220707 05:21:06.070" endtime="20220707 05:21:09.763"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 05:21:09.772" endtime="20220707 05:21:09.773"/>
</kw>
<status status="PASS" starttime="20220707 05:21:09.772" endtime="20220707 05:21:09.773"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:09.774" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:09.774" endtime="20220707 05:21:09.774"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:09.774" endtime="20220707 05:21:09.774"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:09.775" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:21:09.774" endtime="20220707 05:21:09.775"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:10.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:09.775" endtime="20220707 05:21:10.047"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:10.047" endtime="20220707 05:21:10.047"/>
</return>
<msg timestamp="20220707 05:21:10.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:09.773" endtime="20220707 05:21:10.048"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:10.048" endtime="20220707 05:21:10.048"/>
</return>
<msg timestamp="20220707 05:21:10.048" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:09.773" endtime="20220707 05:21:10.048"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 05:21:10.049" level="INFO">${TEST_SUITE_BOARD_ID} = 62c66d4508db5361a73e2c5b</msg>
<status status="PASS" starttime="20220707 05:21:10.048" endtime="20220707 05:21:10.049"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:10.050" level="INFO">${url} = boards/62c66d4508db5361a73e2c5b/lists/</msg>
<status status="PASS" starttime="20220707 05:21:10.050" endtime="20220707 05:21:10.050"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:10.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.050" endtime="20220707 05:21:10.165"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:10.165" endtime="20220707 05:21:10.165"/>
</return>
<msg timestamp="20220707 05:21:10.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.049" endtime="20220707 05:21:10.165"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:10.165" endtime="20220707 05:21:10.165"/>
</return>
<msg timestamp="20220707 05:21:10.165" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.049" endtime="20220707 05:21:10.165"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 05:21:10.166" level="INFO">${TEST_SUITE_LIST_ID} = 62c66d4508db5361a73e2c62</msg>
<status status="PASS" starttime="20220707 05:21:10.166" endtime="20220707 05:21:10.166"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:10.168" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:10.167" endtime="20220707 05:21:10.168"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:10.168" endtime="20220707 05:21:10.168"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:10.169" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 05:21:10.168" endtime="20220707 05:21:10.169"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:10.430" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.169" endtime="20220707 05:21:10.430"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:10.430" endtime="20220707 05:21:10.430"/>
</return>
<msg timestamp="20220707 05:21:10.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.167" endtime="20220707 05:21:10.431"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:10.431" endtime="20220707 05:21:10.431"/>
</return>
<msg timestamp="20220707 05:21:10.431" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.166" endtime="20220707 05:21:10.431"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 05:21:10.432" level="INFO">${TEST_SUITE_CARD_ID} = 62c66d46389c1c6f5322c768</msg>
<status status="PASS" starttime="20220707 05:21:10.431" endtime="20220707 05:21:10.432"/>
</kw>
<status status="PASS" starttime="20220707 05:21:09.773" endtime="20220707 05:21:10.432"/>
</kw>
<status status="PASS" starttime="20220707 05:21:09.772" endtime="20220707 05:21:10.432"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:10.434" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:10.434" endtime="20220707 05:21:10.434"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:10.434" endtime="20220707 05:21:10.434"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:10.435" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 05:21:10.434" endtime="20220707 05:21:10.435"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:10.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.435" endtime="20220707 05:21:10.614"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:10.614" endtime="20220707 05:21:10.614"/>
</return>
<msg timestamp="20220707 05:21:10.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.433" endtime="20220707 05:21:10.614"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:10.614" endtime="20220707 05:21:10.614"/>
</return>
<msg timestamp="20220707 05:21:10.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.433" endtime="20220707 05:21:10.615"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:10.615" endtime="20220707 05:21:10.615"/>
</return>
<msg timestamp="20220707 05:21:10.616" level="INFO">${checklist_id} = 62c66d46ccae066b0b837bc0</msg>
<status status="PASS" starttime="20220707 05:21:10.615" endtime="20220707 05:21:10.616"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:10.617" level="INFO">${url} = checklists/62c66d46ccae066b0b837bc0</msg>
<status status="PASS" starttime="20220707 05:21:10.616" endtime="20220707 05:21:10.617"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:10.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.617" endtime="20220707 05:21:10.925"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:10.925" endtime="20220707 05:21:10.926"/>
</return>
<msg timestamp="20220707 05:21:10.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.616" endtime="20220707 05:21:10.926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:10.926" endtime="20220707 05:21:10.926"/>
</return>
<msg timestamp="20220707 05:21:10.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.616" endtime="20220707 05:21:10.926"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:10.927" endtime="20220707 05:21:10.927"/>
</return>
<msg timestamp="20220707 05:21:10.927" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220707 05:21:10.926" endtime="20220707 05:21:10.927"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:10.927" endtime="20220707 05:21:10.928"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:10.929" level="INFO">${url} = checklists/62c66d46ccae066b0b837bc0</msg>
<status status="PASS" starttime="20220707 05:21:10.929" endtime="20220707 05:21:10.929"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:11.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.929" endtime="20220707 05:21:11.106"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:11.106" endtime="20220707 05:21:11.106"/>
</return>
<msg timestamp="20220707 05:21:11.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:10.928" endtime="20220707 05:21:11.106"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:11.106" endtime="20220707 05:21:11.106"/>
</return>
<status status="PASS" starttime="20220707 05:21:10.928" endtime="20220707 05:21:11.106"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:21:10.432" endtime="20220707 05:21:11.106"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:11.109" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:11.109" endtime="20220707 05:21:11.109"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:11.109" endtime="20220707 05:21:11.109"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:11.110" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 05:21:11.109" endtime="20220707 05:21:11.110"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:11.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:11.110" endtime="20220707 05:21:11.296"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:11.296" endtime="20220707 05:21:11.296"/>
</return>
<msg timestamp="20220707 05:21:11.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:11.108" endtime="20220707 05:21:11.296"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:11.296" endtime="20220707 05:21:11.296"/>
</return>
<msg timestamp="20220707 05:21:11.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:11.108" endtime="20220707 05:21:11.296"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:11.297" endtime="20220707 05:21:11.297"/>
</return>
<msg timestamp="20220707 05:21:11.298" level="INFO">${checklist_id} = 62c66d476c17fe2a17abeedd</msg>
<status status="PASS" starttime="20220707 05:21:11.297" endtime="20220707 05:21:11.298"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:11.299" level="INFO">${url} = checklists/62c66d476c17fe2a17abeedd</msg>
<status status="PASS" starttime="20220707 05:21:11.299" endtime="20220707 05:21:11.299"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:11.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:11.299" endtime="20220707 05:21:11.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:11.475" endtime="20220707 05:21:11.475"/>
</return>
<msg timestamp="20220707 05:21:11.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:11.298" endtime="20220707 05:21:11.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:11.475" endtime="20220707 05:21:11.475"/>
</return>
<msg timestamp="20220707 05:21:11.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:11.298" endtime="20220707 05:21:11.476"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:11.476" endtime="20220707 05:21:11.478"/>
</kw>
<status status="PASS" starttime="20220707 05:21:11.476" endtime="20220707 05:21:11.478"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:11.479" level="INFO">${url} = checklists/62c66d476c17fe2a17abeedd</msg>
<status status="PASS" starttime="20220707 05:21:11.479" endtime="20220707 05:21:11.479"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:11.591" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 05:21:11.479" endtime="20220707 05:21:11.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:11.591" endtime="20220707 05:21:11.591"/>
</return>
<msg timestamp="20220707 05:21:11.592" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 05:21:11.478" endtime="20220707 05:21:11.592"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:11.592" endtime="20220707 05:21:11.592"/>
</return>
<status status="PASS" starttime="20220707 05:21:11.478" endtime="20220707 05:21:11.592"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:21:11.107" endtime="20220707 05:21:11.592"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:11.595" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:11.594" endtime="20220707 05:21:11.595"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:11.595" endtime="20220707 05:21:11.596"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:11.596" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 05:21:11.596" endtime="20220707 05:21:11.596"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:11.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:11.597" endtime="20220707 05:21:11.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:11.849" endtime="20220707 05:21:11.849"/>
</return>
<msg timestamp="20220707 05:21:11.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:11.593" endtime="20220707 05:21:11.850"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:11.850" endtime="20220707 05:21:11.850"/>
</return>
<msg timestamp="20220707 05:21:11.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:11.593" endtime="20220707 05:21:11.850"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:11.850" endtime="20220707 05:21:11.850"/>
</return>
<msg timestamp="20220707 05:21:11.851" level="INFO">${checklist_id} = 62c66d47513dd31acfa5ae8c</msg>
<status status="PASS" starttime="20220707 05:21:11.850" endtime="20220707 05:21:11.851"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:11.852" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:11.852" endtime="20220707 05:21:11.852"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:11.852" endtime="20220707 05:21:11.853"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:11.853" level="INFO">${url} = checklists/62c66d47513dd31acfa5ae8c</msg>
<status status="PASS" starttime="20220707 05:21:11.853" endtime="20220707 05:21:11.853"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:12.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:11.853" endtime="20220707 05:21:12.005"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:12.005" endtime="20220707 05:21:12.005"/>
</return>
<msg timestamp="20220707 05:21:12.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:11.852" endtime="20220707 05:21:12.005"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:12.005" endtime="20220707 05:21:12.005"/>
</return>
<msg timestamp="20220707 05:21:12.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:11.851" endtime="20220707 05:21:12.005"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:12.006" level="INFO">${url} = checklists/62c66d47513dd31acfa5ae8c</msg>
<status status="PASS" starttime="20220707 05:21:12.006" endtime="20220707 05:21:12.006"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:12.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:12.006" endtime="20220707 05:21:12.131"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:12.131" endtime="20220707 05:21:12.131"/>
</return>
<msg timestamp="20220707 05:21:12.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:12.006" endtime="20220707 05:21:12.131"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:12.131" endtime="20220707 05:21:12.131"/>
</return>
<msg timestamp="20220707 05:21:12.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:12.005" endtime="20220707 05:21:12.131"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:12.132" endtime="20220707 05:21:12.132"/>
</return>
<msg timestamp="20220707 05:21:12.132" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220707 05:21:12.131" endtime="20220707 05:21:12.132"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:12.133" endtime="20220707 05:21:12.133"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:12.143" level="INFO">${url} = checklists/62c66d47513dd31acfa5ae8c</msg>
<status status="PASS" starttime="20220707 05:21:12.143" endtime="20220707 05:21:12.143"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:12.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:12.143" endtime="20220707 05:21:12.522"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:12.522" endtime="20220707 05:21:12.522"/>
</return>
<msg timestamp="20220707 05:21:12.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:12.142" endtime="20220707 05:21:12.522"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:12.523" endtime="20220707 05:21:12.523"/>
</return>
<status status="PASS" starttime="20220707 05:21:12.133" endtime="20220707 05:21:12.523"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 05:21:11.592" endtime="20220707 05:21:12.523"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:12.525" level="INFO">${url} = boards/62c66d4508db5361a73e2c5b</msg>
<status status="PASS" starttime="20220707 05:21:12.525" endtime="20220707 05:21:12.525"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:12.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:12.525" endtime="20220707 05:21:12.968"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:12.968" endtime="20220707 05:21:12.968"/>
</return>
<msg timestamp="20220707 05:21:12.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:12.524" endtime="20220707 05:21:12.969"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:12.969" endtime="20220707 05:21:12.969"/>
</return>
<status status="PASS" starttime="20220707 05:21:12.524" endtime="20220707 05:21:12.969"/>
</kw>
<status status="PASS" starttime="20220707 05:21:12.524" endtime="20220707 05:21:12.969"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 05:21:12.969" endtime="20220707 05:21:12.970"/>
</kw>
<status status="PASS" starttime="20220707 05:21:12.524" endtime="20220707 05:21:12.970"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220707 05:21:09.764" endtime="20220707 05:21:12.970"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 05:21:12.980" endtime="20220707 05:21:12.980"/>
</kw>
<status status="PASS" starttime="20220707 05:21:12.979" endtime="20220707 05:21:12.980"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:12.981" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:12.981" endtime="20220707 05:21:12.981"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:12.981" endtime="20220707 05:21:12.981"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:12.982" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:21:12.981" endtime="20220707 05:21:12.982"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:13.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:12.982" endtime="20220707 05:21:13.264"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:13.264" endtime="20220707 05:21:13.265"/>
</return>
<msg timestamp="20220707 05:21:13.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:12.981" endtime="20220707 05:21:13.265"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:13.265" endtime="20220707 05:21:13.265"/>
</return>
<msg timestamp="20220707 05:21:13.265" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:12.980" endtime="20220707 05:21:13.265"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 05:21:13.266" level="INFO">${TEST_SUITE_BOARD_ID} = 62c66d493a9d1e222255c53d</msg>
<status status="PASS" starttime="20220707 05:21:13.265" endtime="20220707 05:21:13.266"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:13.387" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:13.266" endtime="20220707 05:21:13.387"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 05:21:13.388" level="INFO">${TEST_SUITE_LIST_ID} = 62c66d493a9d1e222255c544</msg>
<status status="PASS" starttime="20220707 05:21:13.387" endtime="20220707 05:21:13.388"/>
</kw>
<status status="PASS" starttime="20220707 05:21:12.980" endtime="20220707 05:21:13.388"/>
</kw>
<status status="PASS" starttime="20220707 05:21:12.979" endtime="20220707 05:21:13.388"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:13.390" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:13.390" endtime="20220707 05:21:13.390"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:13.390" endtime="20220707 05:21:13.391"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:13.391" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 05:21:13.391" endtime="20220707 05:21:13.391"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:13.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:13.391" endtime="20220707 05:21:13.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:13.549" endtime="20220707 05:21:13.549"/>
</return>
<msg timestamp="20220707 05:21:13.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:13.390" endtime="20220707 05:21:13.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:13.549" endtime="20220707 05:21:13.549"/>
</return>
<msg timestamp="20220707 05:21:13.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:13.389" endtime="20220707 05:21:13.550"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:13.550" endtime="20220707 05:21:13.552"/>
</kw>
<status status="PASS" starttime="20220707 05:21:13.550" endtime="20220707 05:21:13.552"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:13.552" endtime="20220707 05:21:13.552"/>
</return>
<msg timestamp="20220707 05:21:13.553" level="INFO">${LABEL_ID} = 62c66d492d855e1d7b36a7ba</msg>
<status status="PASS" starttime="20220707 05:21:13.552" endtime="20220707 05:21:13.553"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:13.554" level="INFO">${url} = labels/62c66d492d855e1d7b36a7ba</msg>
<status status="PASS" starttime="20220707 05:21:13.554" endtime="20220707 05:21:13.554"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:13.669" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:13.554" endtime="20220707 05:21:13.669"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:13.669" endtime="20220707 05:21:13.669"/>
</return>
<msg timestamp="20220707 05:21:13.669" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:13.553" endtime="20220707 05:21:13.669"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:13.670" endtime="20220707 05:21:13.670"/>
</return>
<msg timestamp="20220707 05:21:13.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:13.553" endtime="20220707 05:21:13.670"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:13.670" endtime="20220707 05:21:13.670"/>
</return>
<msg timestamp="20220707 05:21:13.671" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220707 05:21:13.670" endtime="20220707 05:21:13.671"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:13.671" endtime="20220707 05:21:13.671"/>
</return>
<msg timestamp="20220707 05:21:13.672" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220707 05:21:13.671" endtime="20220707 05:21:13.672"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:13.672" endtime="20220707 05:21:13.672"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:13.672" endtime="20220707 05:21:13.673"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:13.674" level="INFO">${url} = labels/62c66d492d855e1d7b36a7ba</msg>
<status status="PASS" starttime="20220707 05:21:13.674" endtime="20220707 05:21:13.674"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:13.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:13.674" endtime="20220707 05:21:13.838"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:13.838" endtime="20220707 05:21:13.838"/>
</return>
<msg timestamp="20220707 05:21:13.839" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:13.673" endtime="20220707 05:21:13.839"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:13.839" endtime="20220707 05:21:13.839"/>
</return>
<status status="PASS" starttime="20220707 05:21:13.673" endtime="20220707 05:21:13.839"/>
</kw>
<status status="PASS" starttime="20220707 05:21:13.673" endtime="20220707 05:21:13.839"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:21:13.388" endtime="20220707 05:21:13.839"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:13.841" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:13.841" endtime="20220707 05:21:13.841"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:13.841" endtime="20220707 05:21:13.841"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:13.842" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 05:21:13.841" endtime="20220707 05:21:13.842"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:13.999" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:13.842" endtime="20220707 05:21:13.999"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:13.999" endtime="20220707 05:21:13.999"/>
</return>
<msg timestamp="20220707 05:21:13.999" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:13.840" endtime="20220707 05:21:13.999"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:13.999" endtime="20220707 05:21:13.999"/>
</return>
<msg timestamp="20220707 05:21:13.999" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:13.840" endtime="20220707 05:21:13.999"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:14.000" endtime="20220707 05:21:14.001"/>
</kw>
<status status="PASS" starttime="20220707 05:21:13.999" endtime="20220707 05:21:14.002"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:14.002" endtime="20220707 05:21:14.002"/>
</return>
<msg timestamp="20220707 05:21:14.003" level="INFO">${LABEL_ID} = 62c66d4956fd2d57b8bf41d4</msg>
<status status="PASS" starttime="20220707 05:21:14.002" endtime="20220707 05:21:14.003"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:14.004" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:14.003" endtime="20220707 05:21:14.004"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:14.004" endtime="20220707 05:21:14.004"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:14.004" level="INFO">${url} = labels/62c66d4956fd2d57b8bf41d4</msg>
<status status="PASS" starttime="20220707 05:21:14.004" endtime="20220707 05:21:14.004"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:14.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:14.004" endtime="20220707 05:21:14.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:14.163" endtime="20220707 05:21:14.163"/>
</return>
<msg timestamp="20220707 05:21:14.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:14.003" endtime="20220707 05:21:14.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:14.164" endtime="20220707 05:21:14.164"/>
</return>
<msg timestamp="20220707 05:21:14.164" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:14.003" endtime="20220707 05:21:14.164"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:14.164" endtime="20220707 05:21:14.164"/>
</return>
<msg timestamp="20220707 05:21:14.165" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220707 05:21:14.164" endtime="20220707 05:21:14.165"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:14.165" endtime="20220707 05:21:14.165"/>
</return>
<msg timestamp="20220707 05:21:14.166" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220707 05:21:14.165" endtime="20220707 05:21:14.166"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:14.166" endtime="20220707 05:21:14.166"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:14.166" endtime="20220707 05:21:14.167"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:14.168" level="INFO">${url} = labels/62c66d4956fd2d57b8bf41d4</msg>
<status status="PASS" starttime="20220707 05:21:14.168" endtime="20220707 05:21:14.168"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:14.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:14.168" endtime="20220707 05:21:14.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:14.359" endtime="20220707 05:21:14.359"/>
</return>
<msg timestamp="20220707 05:21:14.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:14.167" endtime="20220707 05:21:14.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:14.359" endtime="20220707 05:21:14.359"/>
</return>
<status status="PASS" starttime="20220707 05:21:14.167" endtime="20220707 05:21:14.359"/>
</kw>
<status status="PASS" starttime="20220707 05:21:14.167" endtime="20220707 05:21:14.359"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:21:13.839" endtime="20220707 05:21:14.359"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:14.361" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:14.361" endtime="20220707 05:21:14.361"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:14.361" endtime="20220707 05:21:14.361"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:14.362" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 05:21:14.361" endtime="20220707 05:21:14.362"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:14.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:14.362" endtime="20220707 05:21:14.511"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:14.511" endtime="20220707 05:21:14.511"/>
</return>
<msg timestamp="20220707 05:21:14.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:14.360" endtime="20220707 05:21:14.511"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:14.511" endtime="20220707 05:21:14.511"/>
</return>
<msg timestamp="20220707 05:21:14.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:14.360" endtime="20220707 05:21:14.511"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 05:21:14.512" endtime="20220707 05:21:14.512"/>
</return>
<msg timestamp="20220707 05:21:14.512" level="INFO">${LABEL_ID} = 62c66d4aff22ef402144b649</msg>
<status status="PASS" starttime="20220707 05:21:14.511" endtime="20220707 05:21:14.512"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:14.514" level="INFO">${url} = labels/62c66d4aff22ef402144b649</msg>
<status status="PASS" starttime="20220707 05:21:14.513" endtime="20220707 05:21:14.514"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:14.680" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:14.514" endtime="20220707 05:21:14.680"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:14.680" endtime="20220707 05:21:14.680"/>
</return>
<msg timestamp="20220707 05:21:14.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:14.513" endtime="20220707 05:21:14.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:14.681" endtime="20220707 05:21:14.681"/>
</return>
<status status="PASS" starttime="20220707 05:21:14.513" endtime="20220707 05:21:14.681"/>
</kw>
<status status="PASS" starttime="20220707 05:21:14.512" endtime="20220707 05:21:14.681"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:14.682" level="INFO">${url} = labels/62c66d4aff22ef402144b649</msg>
<status status="PASS" starttime="20220707 05:21:14.682" endtime="20220707 05:21:14.682"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:14.783" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 05:21:14.682" endtime="20220707 05:21:14.783"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:14.783" endtime="20220707 05:21:14.783"/>
</return>
<msg timestamp="20220707 05:21:14.784" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 05:21:14.681" endtime="20220707 05:21:14.784"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:14.784" endtime="20220707 05:21:14.784"/>
</return>
<status status="PASS" starttime="20220707 05:21:14.681" endtime="20220707 05:21:14.784"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:21:14.359" endtime="20220707 05:21:14.784"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:14.786" level="INFO">${url} = boards/62c66d493a9d1e222255c53d</msg>
<status status="PASS" starttime="20220707 05:21:14.786" endtime="20220707 05:21:14.786"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:15.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:14.786" endtime="20220707 05:21:15.165"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:15.165" endtime="20220707 05:21:15.165"/>
</return>
<msg timestamp="20220707 05:21:15.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:14.785" endtime="20220707 05:21:15.165"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:15.165" endtime="20220707 05:21:15.165"/>
</return>
<status status="PASS" starttime="20220707 05:21:14.785" endtime="20220707 05:21:15.165"/>
</kw>
<status status="PASS" starttime="20220707 05:21:14.785" endtime="20220707 05:21:15.166"/>
</kw>
<status status="PASS" starttime="20220707 05:21:14.785" endtime="20220707 05:21:15.166"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 05:21:15.166" endtime="20220707 05:21:15.167"/>
</kw>
<status status="PASS" starttime="20220707 05:21:14.785" endtime="20220707 05:21:15.167"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220707 05:21:12.971" endtime="20220707 05:21:15.167"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 05:21:15.177" endtime="20220707 05:21:15.178"/>
</kw>
<status status="PASS" starttime="20220707 05:21:15.177" endtime="20220707 05:21:15.178"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:15.179" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:15.179" endtime="20220707 05:21:15.179"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:15.179" endtime="20220707 05:21:15.179"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:15.180" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:21:15.179" endtime="20220707 05:21:15.180"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:15.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:15.180" endtime="20220707 05:21:15.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:15.468" endtime="20220707 05:21:15.468"/>
</return>
<msg timestamp="20220707 05:21:15.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:15.178" endtime="20220707 05:21:15.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:15.468" endtime="20220707 05:21:15.468"/>
</return>
<msg timestamp="20220707 05:21:15.468" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:15.178" endtime="20220707 05:21:15.468"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 05:21:15.469" level="INFO">${TEST_SUITE_BOARD_ID} = 62c66d4b314371466054ae00</msg>
<status status="PASS" starttime="20220707 05:21:15.469" endtime="20220707 05:21:15.469"/>
</kw>
<status status="PASS" starttime="20220707 05:21:15.468" endtime="20220707 05:21:15.469"/>
</kw>
<status status="PASS" starttime="20220707 05:21:15.178" endtime="20220707 05:21:15.470"/>
</kw>
<status status="PASS" starttime="20220707 05:21:15.177" endtime="20220707 05:21:15.470"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:15.471" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:15.471" endtime="20220707 05:21:15.471"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:15.471" endtime="20220707 05:21:15.472"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:15.472" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 05:21:15.472" endtime="20220707 05:21:15.472"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:15.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:15.472" endtime="20220707 05:21:15.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:15.629" endtime="20220707 05:21:15.629"/>
</return>
<msg timestamp="20220707 05:21:15.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:15.471" endtime="20220707 05:21:15.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:15.629" endtime="20220707 05:21:15.629"/>
</return>
<msg timestamp="20220707 05:21:15.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:15.470" endtime="20220707 05:21:15.629"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:15.630" endtime="20220707 05:21:15.632"/>
</kw>
<status status="PASS" starttime="20220707 05:21:15.630" endtime="20220707 05:21:15.632"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:21:15.470" endtime="20220707 05:21:15.632"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:15.634" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:15.634" endtime="20220707 05:21:15.634"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:15.634" endtime="20220707 05:21:15.634"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:15.635" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 05:21:15.634" endtime="20220707 05:21:15.635"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:16.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:15.635" endtime="20220707 05:21:16.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:16.291" endtime="20220707 05:21:16.291"/>
</return>
<msg timestamp="20220707 05:21:16.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:15.633" endtime="20220707 05:21:16.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:16.291" endtime="20220707 05:21:16.291"/>
</return>
<msg timestamp="20220707 05:21:16.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:15.633" endtime="20220707 05:21:16.291"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:16.292" endtime="20220707 05:21:16.293"/>
</kw>
<status status="PASS" starttime="20220707 05:21:16.292" endtime="20220707 05:21:16.294"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:16.295" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:16.295" endtime="20220707 05:21:16.295"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:16.295" endtime="20220707 05:21:16.295"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:16.296" level="INFO">${url} = lists/62c66d4b3cd3df24268d82bc</msg>
<status status="PASS" starttime="20220707 05:21:16.296" endtime="20220707 05:21:16.296"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:16.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.296" endtime="20220707 05:21:16.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:16.434" endtime="20220707 05:21:16.434"/>
</return>
<msg timestamp="20220707 05:21:16.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.294" endtime="20220707 05:21:16.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:16.434" endtime="20220707 05:21:16.435"/>
</return>
<status status="PASS" starttime="20220707 05:21:16.294" endtime="20220707 05:21:16.435"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:16.436" level="INFO">${url} = lists/62c66d4b3cd3df24268d82bc</msg>
<status status="PASS" starttime="20220707 05:21:16.436" endtime="20220707 05:21:16.436"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:16.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.436" endtime="20220707 05:21:16.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:16.547" endtime="20220707 05:21:16.547"/>
</return>
<msg timestamp="20220707 05:21:16.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.436" endtime="20220707 05:21:16.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:16.547" endtime="20220707 05:21:16.547"/>
</return>
<msg timestamp="20220707 05:21:16.548" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.435" endtime="20220707 05:21:16.548"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 05:21:16.548" endtime="20220707 05:21:16.549"/>
</kw>
<status status="PASS" starttime="20220707 05:21:16.548" endtime="20220707 05:21:16.549"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:21:16.550" endtime="20220707 05:21:16.550"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 05:21:15.632" endtime="20220707 05:21:16.550"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:16.552" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:16.552" endtime="20220707 05:21:16.552"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:16.552" endtime="20220707 05:21:16.553"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:16.554" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 05:21:16.553" endtime="20220707 05:21:16.554"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:16.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.554" endtime="20220707 05:21:16.714"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:16.714" endtime="20220707 05:21:16.714"/>
</return>
<msg timestamp="20220707 05:21:16.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.551" endtime="20220707 05:21:16.715"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:16.715" endtime="20220707 05:21:16.715"/>
</return>
<msg timestamp="20220707 05:21:16.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.551" endtime="20220707 05:21:16.715"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:21:16.717" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:21:16.717" endtime="20220707 05:21:16.717"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:21:16.717" endtime="20220707 05:21:16.717"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:16.717" level="INFO">${url} = lists/62c66d4c6a719188f91d3d96/closed</msg>
<status status="PASS" starttime="20220707 05:21:16.717" endtime="20220707 05:21:16.717"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:21:16.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.717" endtime="20220707 05:21:16.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:16.870" endtime="20220707 05:21:16.870"/>
</return>
<msg timestamp="20220707 05:21:16.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.716" endtime="20220707 05:21:16.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:16.870" endtime="20220707 05:21:16.870"/>
</return>
<status status="PASS" starttime="20220707 05:21:16.715" endtime="20220707 05:21:16.871"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:16.872" level="INFO">${url} = lists/62c66d4c6a719188f91d3d96</msg>
<status status="PASS" starttime="20220707 05:21:16.872" endtime="20220707 05:21:16.872"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 05:21:16.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.872" endtime="20220707 05:21:16.988"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:16.988" endtime="20220707 05:21:16.988"/>
</return>
<msg timestamp="20220707 05:21:16.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.872" endtime="20220707 05:21:16.989"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:16.989" endtime="20220707 05:21:16.989"/>
</return>
<msg timestamp="20220707 05:21:16.989" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.871" endtime="20220707 05:21:16.989"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 05:21:16.989" endtime="20220707 05:21:16.990"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 05:21:16.551" endtime="20220707 05:21:16.990"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:21:16.992" level="INFO">${url} = boards/62c66d4b314371466054ae00</msg>
<status status="PASS" starttime="20220707 05:21:16.992" endtime="20220707 05:21:16.992"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:21:17.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.992" endtime="20220707 05:21:17.490"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:17.490" endtime="20220707 05:21:17.490"/>
</return>
<msg timestamp="20220707 05:21:17.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:21:16.992" endtime="20220707 05:21:17.490"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:21:17.490" endtime="20220707 05:21:17.490"/>
</return>
<status status="PASS" starttime="20220707 05:21:16.991" endtime="20220707 05:21:17.490"/>
</kw>
<status status="PASS" starttime="20220707 05:21:16.991" endtime="20220707 05:21:17.490"/>
</kw>
<status status="PASS" starttime="20220707 05:21:16.991" endtime="20220707 05:21:17.490"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 05:21:17.490" endtime="20220707 05:21:17.491"/>
</kw>
<status status="PASS" starttime="20220707 05:21:16.990" endtime="20220707 05:21:17.491"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220707 05:21:15.168" endtime="20220707 05:21:17.491"/>
</suite>
<status status="PASS" starttime="20220707 05:21:01.590" endtime="20220707 05:21:17.493"/>
</suite>
<status status="PASS" starttime="20220707 05:21:01.573" endtime="20220707 05:21:17.495"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
