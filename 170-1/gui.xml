<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220707 05:22:00.551" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Gui" source="/trello/gui">
<suite id="s1-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 05:22:00.813" endtime="20220707 05:22:00.814"/>
</kw>
<status status="PASS" starttime="20220707 05:22:00.813" endtime="20220707 05:22:00.814"/>
</kw>
<status status="PASS" starttime="20220707 05:22:00.813" endtime="20220707 05:22:00.814"/>
</kw>
<test id="s1-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 05:22:00.816" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 05:22:00.815" endtime="20220707 05:22:03.766"/>
</kw>
<status status="PASS" starttime="20220707 05:22:00.815" endtime="20220707 05:22:03.766"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:03.767" endtime="20220707 05:22:03.767"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:03.766" endtime="20220707 05:22:03.767"/>
</branch>
<status status="PASS" starttime="20220707 05:22:00.815" endtime="20220707 05:22:03.767"/>
</if>
<status status="PASS" starttime="20220707 05:22:00.815" endtime="20220707 05:22:03.767"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 05:22:03.767" endtime="20220707 05:22:03.894"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:03.911" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:22:03.894" endtime="20220707 05:22:03.911"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:03.912" endtime="20220707 05:22:03.912"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:03.911" endtime="20220707 05:22:03.912"/>
</branch>
<status status="PASS" starttime="20220707 05:22:03.911" endtime="20220707 05:22:03.912"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:03.912" endtime="20220707 05:22:03.976"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:03.977" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 05:22:03.976" endtime="20220707 05:22:04.086"/>
</kw>
<status status="PASS" starttime="20220707 05:22:03.912" endtime="20220707 05:22:04.087"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 05:22:04.087" endtime="20220707 05:22:04.898"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:04.908" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:22:04.899" endtime="20220707 05:22:04.908"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:22:04.909" endtime="20220707 05:22:04.974"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:04.974" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 05:22:04.974" endtime="20220707 05:22:06.294"/>
</kw>
<status status="PASS" starttime="20220707 05:22:04.909" endtime="20220707 05:22:06.295"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:22:06.295" endtime="20220707 05:22:06.295"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:06.295" endtime="20220707 05:22:06.295"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:06.295" endtime="20220707 05:22:06.295"/>
</branch>
<status status="PASS" starttime="20220707 05:22:04.908" endtime="20220707 05:22:06.295"/>
</if>
<status status="PASS" starttime="20220707 05:22:04.898" endtime="20220707 05:22:06.295"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 05:22:06.296" endtime="20220707 05:22:06.318"/>
</kw>
<status status="PASS" starttime="20220707 05:22:06.295" endtime="20220707 05:22:06.319"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:06.319" endtime="20220707 05:22:06.369"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:06.370" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 05:22:06.419" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 05:22:06.479" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 05:22:06.370" endtime="20220707 05:22:06.479"/>
</kw>
<status status="PASS" starttime="20220707 05:22:06.319" endtime="20220707 05:22:06.480"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:06.492" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c66d...</msg>
<status status="PASS" starttime="20220707 05:22:06.480" endtime="20220707 05:22:06.492"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:22:06.492" endtime="20220707 05:22:06.492"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:06.492" endtime="20220707 05:22:06.493"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:06.492" endtime="20220707 05:22:06.493"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:22:06.493" endtime="20220707 05:22:06.546"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:06.546" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 05:22:06.546" endtime="20220707 05:22:06.651"/>
</kw>
<status status="PASS" starttime="20220707 05:22:06.493" endtime="20220707 05:22:06.651"/>
</branch>
<status status="PASS" starttime="20220707 05:22:06.492" endtime="20220707 05:22:06.651"/>
</if>
<status status="PASS" starttime="20220707 05:22:06.480" endtime="20220707 05:22:06.651"/>
</kw>
<status status="PASS" starttime="20220707 05:22:03.894" endtime="20220707 05:22:06.651"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 05:22:06.652" endtime="20220707 05:22:10.610"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:10.611" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220707 05:22:10.611" endtime="20220707 05:22:10.761"/>
</kw>
<status status="PASS" starttime="20220707 05:22:10.611" endtime="20220707 05:22:10.761"/>
</kw>
<status status="PASS" starttime="20220707 05:22:06.652" endtime="20220707 05:22:10.761"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:10.762" endtime="20220707 05:22:11.084"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:11.084" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220707 05:22:11.084" endtime="20220707 05:22:11.250"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:22:11.251" endtime="20220707 05:22:11.547"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:11.548" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220707 05:22:11.547" endtime="20220707 05:22:11.619"/>
</kw>
<status status="PASS" starttime="20220707 05:22:10.761" endtime="20220707 05:22:11.619"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:11.620" endtime="20220707 05:22:12.948"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 05:22:12.949" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220707 05:22:12.948" endtime="20220707 05:22:12.985"/>
</kw>
<status status="PASS" starttime="20220707 05:22:11.620" endtime="20220707 05:22:12.985"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:12.986" endtime="20220707 05:22:13.023"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:13.023" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 05:22:13.023" endtime="20220707 05:22:13.105"/>
</kw>
<status status="PASS" starttime="20220707 05:22:12.985" endtime="20220707 05:22:13.105"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:13.106" endtime="20220707 05:22:13.168"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:13.169" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220707 05:22:13.169" endtime="20220707 05:22:13.340"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:13.341" endtime="20220707 05:22:13.415"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:13.416" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220707 05:22:13.415" endtime="20220707 05:22:13.523"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:13.523" endtime="20220707 05:22:13.572"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:13.573" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220707 05:22:13.572" endtime="20220707 05:22:13.685"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:13.686" endtime="20220707 05:22:14.261"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:14.262" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220707 05:22:14.261" endtime="20220707 05:22:14.322"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:14.323" endtime="20220707 05:22:14.359"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:14.359" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220707 05:22:14.359" endtime="20220707 05:22:14.421"/>
</kw>
<status status="PASS" starttime="20220707 05:22:13.105" endtime="20220707 05:22:14.422"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 05:22:14.422" endtime="20220707 05:22:14.510"/>
</kw>
<status status="PASS" starttime="20220707 05:22:12.985" endtime="20220707 05:22:14.510"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:22:00.814" endtime="20220707 05:22:14.510"/>
</test>
<test id="s1-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:22:14.513" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:22:14.513" endtime="20220707 05:22:14.513"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:22:14.513" endtime="20220707 05:22:14.514"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:14.515" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:22:14.514" endtime="20220707 05:22:14.515"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:22:14.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:14.515" endtime="20220707 05:22:14.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:22:14.835" endtime="20220707 05:22:14.835"/>
</return>
<msg timestamp="20220707 05:22:14.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:14.512" endtime="20220707 05:22:14.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:22:14.835" endtime="20220707 05:22:14.835"/>
</return>
<msg timestamp="20220707 05:22:14.835" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:14.512" endtime="20220707 05:22:14.835"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 05:22:14.836" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 05:22:14.836" endtime="20220707 05:22:15.865"/>
</kw>
<status status="PASS" starttime="20220707 05:22:14.836" endtime="20220707 05:22:15.866"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:15.866" endtime="20220707 05:22:15.866"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:15.866" endtime="20220707 05:22:15.866"/>
</branch>
<status status="PASS" starttime="20220707 05:22:14.836" endtime="20220707 05:22:15.866"/>
</if>
<status status="PASS" starttime="20220707 05:22:14.835" endtime="20220707 05:22:15.866"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 05:22:15.866" endtime="20220707 05:22:15.979"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:15.996" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:22:15.980" endtime="20220707 05:22:15.996"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:15.996" endtime="20220707 05:22:15.996"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:15.996" endtime="20220707 05:22:15.996"/>
</branch>
<status status="PASS" starttime="20220707 05:22:15.996" endtime="20220707 05:22:15.996"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:15.997" endtime="20220707 05:22:16.044"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:16.045" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 05:22:16.045" endtime="20220707 05:22:16.139"/>
</kw>
<status status="PASS" starttime="20220707 05:22:15.996" endtime="20220707 05:22:16.139"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 05:22:16.139" endtime="20220707 05:22:16.887"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:16.895" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:22:16.888" endtime="20220707 05:22:16.895"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:22:16.895" endtime="20220707 05:22:16.953"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:16.954" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 05:22:16.954" endtime="20220707 05:22:18.046"/>
</kw>
<status status="PASS" starttime="20220707 05:22:16.895" endtime="20220707 05:22:18.046"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:22:18.046" endtime="20220707 05:22:18.046"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:18.046" endtime="20220707 05:22:18.047"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:18.046" endtime="20220707 05:22:18.047"/>
</branch>
<status status="PASS" starttime="20220707 05:22:16.895" endtime="20220707 05:22:18.047"/>
</if>
<status status="PASS" starttime="20220707 05:22:16.887" endtime="20220707 05:22:18.047"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 05:22:18.047" endtime="20220707 05:22:18.059"/>
</kw>
<status status="PASS" starttime="20220707 05:22:18.047" endtime="20220707 05:22:18.059"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:18.060" endtime="20220707 05:22:18.137"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:18.138" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 05:22:18.201" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 05:22:18.300" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 05:22:18.137" endtime="20220707 05:22:18.300"/>
</kw>
<status status="PASS" starttime="20220707 05:22:18.060" endtime="20220707 05:22:18.300"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:18.312" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c66d...</msg>
<status status="PASS" starttime="20220707 05:22:18.300" endtime="20220707 05:22:18.312"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:22:18.313" endtime="20220707 05:22:18.313"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:18.313" endtime="20220707 05:22:18.313"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:18.313" endtime="20220707 05:22:18.313"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:22:18.313" endtime="20220707 05:22:18.370"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:18.370" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 05:22:18.370" endtime="20220707 05:22:18.476"/>
</kw>
<status status="PASS" starttime="20220707 05:22:18.313" endtime="20220707 05:22:18.476"/>
</branch>
<status status="PASS" starttime="20220707 05:22:18.312" endtime="20220707 05:22:18.476"/>
</if>
<status status="PASS" starttime="20220707 05:22:18.300" endtime="20220707 05:22:18.476"/>
</kw>
<status status="PASS" starttime="20220707 05:22:15.979" endtime="20220707 05:22:18.476"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:18.477" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220707 05:22:18.476" endtime="20220707 05:22:18.477"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:18.477" endtime="20220707 05:22:22.399"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:22.400" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220707 05:22:22.400" endtime="20220707 05:22:22.772"/>
</kw>
<status status="PASS" starttime="20220707 05:22:18.476" endtime="20220707 05:22:22.772"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:22.773" endtime="20220707 05:22:23.338"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 05:22:23.339" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220707 05:22:23.338" endtime="20220707 05:22:23.445"/>
</kw>
<status status="PASS" starttime="20220707 05:22:22.772" endtime="20220707 05:22:23.445"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:23.446" endtime="20220707 05:22:23.489"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:23.490" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 05:22:23.489" endtime="20220707 05:22:23.549"/>
</kw>
<status status="PASS" starttime="20220707 05:22:23.445" endtime="20220707 05:22:23.549"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:23.550" endtime="20220707 05:22:23.599"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:23.600" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220707 05:22:23.600" endtime="20220707 05:22:23.718"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:23.718" endtime="20220707 05:22:23.834"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:23.834" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220707 05:22:23.834" endtime="20220707 05:22:23.906"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:23.906" endtime="20220707 05:22:23.955"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:23.955" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220707 05:22:23.955" endtime="20220707 05:22:24.092"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:24.092" endtime="20220707 05:22:24.411"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:24.412" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220707 05:22:24.412" endtime="20220707 05:22:24.551"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:24.551" endtime="20220707 05:22:24.618"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:24.618" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220707 05:22:24.618" endtime="20220707 05:22:24.690"/>
</kw>
<status status="PASS" starttime="20220707 05:22:23.549" endtime="20220707 05:22:24.691"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 05:22:24.691" endtime="20220707 05:22:24.773"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220707 05:22:24.774" endtime="20220707 05:22:24.774"/>
</kw>
<status status="PASS" starttime="20220707 05:22:24.691" endtime="20220707 05:22:24.774"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:22:14.511" endtime="20220707 05:22:24.774"/>
</test>
<test id="s1-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:22:24.776" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:22:24.776" endtime="20220707 05:22:24.776"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:22:24.777" endtime="20220707 05:22:24.777"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:24.778" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:22:24.777" endtime="20220707 05:22:24.778"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:22:24.995" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:24.778" endtime="20220707 05:22:24.995"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:22:24.995" endtime="20220707 05:22:24.995"/>
</return>
<msg timestamp="20220707 05:22:24.996" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:24.776" endtime="20220707 05:22:24.996"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:22:24.996" endtime="20220707 05:22:24.996"/>
</return>
<msg timestamp="20220707 05:22:24.996" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:24.775" endtime="20220707 05:22:24.996"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 05:22:24.997" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 05:22:24.997" endtime="20220707 05:22:26.290"/>
</kw>
<status status="PASS" starttime="20220707 05:22:24.997" endtime="20220707 05:22:26.290"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:26.290" endtime="20220707 05:22:26.290"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:26.290" endtime="20220707 05:22:26.290"/>
</branch>
<status status="PASS" starttime="20220707 05:22:24.996" endtime="20220707 05:22:26.290"/>
</if>
<status status="PASS" starttime="20220707 05:22:24.996" endtime="20220707 05:22:26.290"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 05:22:26.290" endtime="20220707 05:22:26.410"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:26.420" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:22:26.411" endtime="20220707 05:22:26.420"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:26.420" endtime="20220707 05:22:26.420"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:26.420" endtime="20220707 05:22:26.420"/>
</branch>
<status status="PASS" starttime="20220707 05:22:26.420" endtime="20220707 05:22:26.420"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:26.421" endtime="20220707 05:22:26.462"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:26.463" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 05:22:26.462" endtime="20220707 05:22:26.564"/>
</kw>
<status status="PASS" starttime="20220707 05:22:26.421" endtime="20220707 05:22:26.564"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 05:22:26.564" endtime="20220707 05:22:27.293"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:27.304" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:22:27.294" endtime="20220707 05:22:27.304"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:22:27.305" endtime="20220707 05:22:27.358"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:27.359" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 05:22:27.358" endtime="20220707 05:22:28.455"/>
</kw>
<status status="PASS" starttime="20220707 05:22:27.304" endtime="20220707 05:22:28.455"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:22:28.456" endtime="20220707 05:22:28.456"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:28.456" endtime="20220707 05:22:28.456"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:28.455" endtime="20220707 05:22:28.456"/>
</branch>
<status status="PASS" starttime="20220707 05:22:27.304" endtime="20220707 05:22:28.456"/>
</if>
<status status="PASS" starttime="20220707 05:22:27.294" endtime="20220707 05:22:28.456"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 05:22:28.456" endtime="20220707 05:22:28.496"/>
</kw>
<status status="PASS" starttime="20220707 05:22:28.456" endtime="20220707 05:22:28.496"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:28.497" endtime="20220707 05:22:28.580"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:28.581" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 05:22:28.629" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 05:22:28.690" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 05:22:28.581" endtime="20220707 05:22:28.690"/>
</kw>
<status status="PASS" starttime="20220707 05:22:28.497" endtime="20220707 05:22:28.690"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:28.706" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c66d...</msg>
<status status="PASS" starttime="20220707 05:22:28.691" endtime="20220707 05:22:28.706"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:22:28.707" endtime="20220707 05:22:28.707"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:28.707" endtime="20220707 05:22:28.707"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:28.707" endtime="20220707 05:22:28.707"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:22:28.707" endtime="20220707 05:22:28.771"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:28.772" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 05:22:28.771" endtime="20220707 05:22:28.864"/>
</kw>
<status status="PASS" starttime="20220707 05:22:28.707" endtime="20220707 05:22:28.864"/>
</branch>
<status status="PASS" starttime="20220707 05:22:28.706" endtime="20220707 05:22:28.864"/>
</if>
<status status="PASS" starttime="20220707 05:22:28.690" endtime="20220707 05:22:28.864"/>
</kw>
<status status="PASS" starttime="20220707 05:22:26.410" endtime="20220707 05:22:28.864"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:28.865" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220707 05:22:28.865" endtime="20220707 05:22:28.865"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:28.865" endtime="20220707 05:22:32.587"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:32.588" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220707 05:22:32.588" endtime="20220707 05:22:32.981"/>
</kw>
<status status="PASS" starttime="20220707 05:22:28.864" endtime="20220707 05:22:32.981"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:32.982" endtime="20220707 05:22:33.519"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 05:22:33.520" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220707 05:22:33.520" endtime="20220707 05:22:33.598"/>
</kw>
<status status="PASS" starttime="20220707 05:22:32.981" endtime="20220707 05:22:33.598"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:33.599" endtime="20220707 05:22:33.636"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:33.636" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 05:22:33.636" endtime="20220707 05:22:33.699"/>
</kw>
<status status="PASS" starttime="20220707 05:22:33.598" endtime="20220707 05:22:33.699"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:33.700" endtime="20220707 05:22:33.745"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:33.745" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220707 05:22:33.745" endtime="20220707 05:22:33.849"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:33.850" endtime="20220707 05:22:34.161"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:34.162" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220707 05:22:34.161" endtime="20220707 05:22:34.231"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:34.231" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220707 05:22:34.231" endtime="20220707 05:22:34.349"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:34.349" endtime="20220707 05:22:34.388"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:34.389" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220707 05:22:34.389" endtime="20220707 05:22:34.494"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:34.494" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220707 05:22:34.494" endtime="20220707 05:22:34.600"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:34.600" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220707 05:22:34.600" endtime="20220707 05:22:34.696"/>
</kw>
<status status="PASS" starttime="20220707 05:22:33.699" endtime="20220707 05:22:34.696"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 05:22:34.697" endtime="20220707 05:22:34.809"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:34.812" level="INFO">${url} = boards/62c66d90c8b5f57fbd1ec7eb</msg>
<status status="PASS" starttime="20220707 05:22:34.812" endtime="20220707 05:22:34.812"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:22:35.268" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:34.812" endtime="20220707 05:22:35.268"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:22:35.269" endtime="20220707 05:22:35.269"/>
</return>
<msg timestamp="20220707 05:22:35.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:34.812" endtime="20220707 05:22:35.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:22:35.269" endtime="20220707 05:22:35.269"/>
</return>
<status status="PASS" starttime="20220707 05:22:34.810" endtime="20220707 05:22:35.269"/>
</kw>
<status status="PASS" starttime="20220707 05:22:34.810" endtime="20220707 05:22:35.269"/>
</kw>
<status status="PASS" starttime="20220707 05:22:34.697" endtime="20220707 05:22:35.269"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:22:24.775" endtime="20220707 05:22:35.269"/>
</test>
<test id="s1-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:22:35.272" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:22:35.271" endtime="20220707 05:22:35.272"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:22:35.272" endtime="20220707 05:22:35.272"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:35.273" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:22:35.272" endtime="20220707 05:22:35.273"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:22:35.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:35.273" endtime="20220707 05:22:35.520"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:22:35.520" endtime="20220707 05:22:35.520"/>
</return>
<msg timestamp="20220707 05:22:35.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:35.271" endtime="20220707 05:22:35.520"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:22:35.520" endtime="20220707 05:22:35.520"/>
</return>
<msg timestamp="20220707 05:22:35.520" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:35.271" endtime="20220707 05:22:35.520"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 05:22:35.521" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 05:22:35.521" endtime="20220707 05:22:36.582"/>
</kw>
<status status="PASS" starttime="20220707 05:22:35.521" endtime="20220707 05:22:36.582"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:36.582" endtime="20220707 05:22:36.582"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:36.582" endtime="20220707 05:22:36.582"/>
</branch>
<status status="PASS" starttime="20220707 05:22:35.521" endtime="20220707 05:22:36.583"/>
</if>
<status status="PASS" starttime="20220707 05:22:35.521" endtime="20220707 05:22:36.583"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 05:22:36.583" endtime="20220707 05:22:36.700"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:36.712" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:22:36.700" endtime="20220707 05:22:36.712"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:36.713" endtime="20220707 05:22:36.713"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:36.712" endtime="20220707 05:22:36.713"/>
</branch>
<status status="PASS" starttime="20220707 05:22:36.712" endtime="20220707 05:22:36.713"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:36.713" endtime="20220707 05:22:36.747"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:36.747" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 05:22:36.747" endtime="20220707 05:22:36.852"/>
</kw>
<status status="PASS" starttime="20220707 05:22:36.713" endtime="20220707 05:22:36.852"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 05:22:36.852" endtime="20220707 05:22:37.583"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:37.604" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:22:37.584" endtime="20220707 05:22:37.604"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:22:37.604" endtime="20220707 05:22:37.646"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:37.647" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 05:22:37.646" endtime="20220707 05:22:38.800"/>
</kw>
<status status="PASS" starttime="20220707 05:22:37.604" endtime="20220707 05:22:38.800"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:22:38.800" endtime="20220707 05:22:38.800"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:38.800" endtime="20220707 05:22:38.800"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:38.800" endtime="20220707 05:22:38.800"/>
</branch>
<status status="PASS" starttime="20220707 05:22:37.604" endtime="20220707 05:22:38.800"/>
</if>
<status status="PASS" starttime="20220707 05:22:37.584" endtime="20220707 05:22:38.800"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 05:22:38.801" endtime="20220707 05:22:38.813"/>
</kw>
<status status="PASS" starttime="20220707 05:22:38.800" endtime="20220707 05:22:38.814"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:38.814" endtime="20220707 05:22:38.847"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:38.847" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 05:22:38.894" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 05:22:38.954" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 05:22:38.847" endtime="20220707 05:22:38.954"/>
</kw>
<status status="PASS" starttime="20220707 05:22:38.814" endtime="20220707 05:22:38.954"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:38.965" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c66d...</msg>
<status status="PASS" starttime="20220707 05:22:38.955" endtime="20220707 05:22:38.965"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:22:38.965" endtime="20220707 05:22:38.965"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:38.966" endtime="20220707 05:22:38.966"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:38.965" endtime="20220707 05:22:38.966"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:22:38.966" endtime="20220707 05:22:39.011"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:39.011" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 05:22:39.011" endtime="20220707 05:22:39.110"/>
</kw>
<status status="PASS" starttime="20220707 05:22:38.966" endtime="20220707 05:22:39.110"/>
</branch>
<status status="PASS" starttime="20220707 05:22:38.965" endtime="20220707 05:22:39.110"/>
</if>
<status status="PASS" starttime="20220707 05:22:38.955" endtime="20220707 05:22:39.110"/>
</kw>
<status status="PASS" starttime="20220707 05:22:36.700" endtime="20220707 05:22:39.110"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:39.111" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220707 05:22:39.111" endtime="20220707 05:22:39.111"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:39.111" endtime="20220707 05:22:42.969"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:42.969" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220707 05:22:42.969" endtime="20220707 05:22:43.335"/>
</kw>
<status status="PASS" starttime="20220707 05:22:39.111" endtime="20220707 05:22:43.335"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:43.335" endtime="20220707 05:22:43.938"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 05:22:43.938" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220707 05:22:43.938" endtime="20220707 05:22:43.986"/>
</kw>
<status status="PASS" starttime="20220707 05:22:43.335" endtime="20220707 05:22:43.986"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:43.987" endtime="20220707 05:22:44.018"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:44.059" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220707 05:22:44.019" endtime="20220707 05:22:44.059"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220707 05:22:44.060" level="INFO">Length is 8</msg>
<msg timestamp="20220707 05:22:44.060" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220707 05:22:44.059" endtime="20220707 05:22:44.060"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:44.060" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220707 05:22:44.060" endtime="20220707 05:22:44.107"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:22:44.108" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 05:22:44.470" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 05:22:44.108" endtime="20220707 05:22:44.483"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220707 05:22:44.484" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:22:44.484" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 05:22:44.766" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 05:22:44.484" endtime="20220707 05:22:44.779"/>
</kw>
<msg timestamp="20220707 05:22:44.779" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:22:44.780" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 05:22:45.059" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 05:22:44.779" endtime="20220707 05:22:45.070"/>
</kw>
<msg timestamp="20220707 05:22:45.070" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:22:45.071" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 05:22:45.357" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 05:22:45.070" endtime="20220707 05:22:45.385"/>
</kw>
<msg timestamp="20220707 05:22:45.385" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:22:45.386" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 05:22:45.663" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 05:22:45.385" endtime="20220707 05:22:45.685"/>
</kw>
<msg timestamp="20220707 05:22:45.686" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:22:45.686" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 05:22:45.969" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 05:22:45.686" endtime="20220707 05:22:45.989"/>
</kw>
<msg timestamp="20220707 05:22:45.989" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:22:45.989" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 05:22:46.277" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 05:22:45.989" endtime="20220707 05:22:46.295"/>
</kw>
<msg timestamp="20220707 05:22:46.295" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:22:46.296" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 05:22:46.576" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 05:22:46.295" endtime="20220707 05:22:46.587"/>
</kw>
<msg timestamp="20220707 05:22:46.587" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:22:46.588" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 05:22:46.863" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 05:22:46.587" endtime="20220707 05:22:46.880"/>
</kw>
<status status="PASS" starttime="20220707 05:22:44.483" endtime="20220707 05:22:46.880"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:22:46.881" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 05:22:47.163" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220707 05:22:46.881" endtime="20220707 05:22:47.214"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:22:47.215" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 05:22:47.493" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 05:22:47.214" endtime="20220707 05:22:47.573"/>
</kw>
<status status="PASS" starttime="20220707 05:22:43.986" endtime="20220707 05:22:47.573"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:47.574" endtime="20220707 05:22:47.598"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 05:22:47.599" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220707 05:22:47.599" endtime="20220707 05:22:47.622"/>
</kw>
<status status="PASS" starttime="20220707 05:22:47.574" endtime="20220707 05:22:47.622"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 05:22:47.622" endtime="20220707 05:22:47.730"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:47.733" level="INFO">${url} = boards/62c66d9b69278e3423b65160</msg>
<status status="PASS" starttime="20220707 05:22:47.733" endtime="20220707 05:22:47.733"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:22:48.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:47.733" endtime="20220707 05:22:48.142"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:22:48.142" endtime="20220707 05:22:48.142"/>
</return>
<msg timestamp="20220707 05:22:48.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:47.733" endtime="20220707 05:22:48.142"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:22:48.142" endtime="20220707 05:22:48.142"/>
</return>
<status status="PASS" starttime="20220707 05:22:47.731" endtime="20220707 05:22:48.142"/>
</kw>
<status status="PASS" starttime="20220707 05:22:47.731" endtime="20220707 05:22:48.142"/>
</kw>
<status status="PASS" starttime="20220707 05:22:47.622" endtime="20220707 05:22:48.142"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:22:35.270" endtime="20220707 05:22:48.142"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 05:22:48.144" endtime="20220707 05:22:48.145"/>
</kw>
<status status="PASS" starttime="20220707 05:22:48.143" endtime="20220707 05:22:48.145"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220707 05:22:00.570" endtime="20220707 05:22:48.145"/>
</suite>
<suite id="s1-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 05:22:48.160" endtime="20220707 05:22:48.160"/>
</kw>
<status status="PASS" starttime="20220707 05:22:48.159" endtime="20220707 05:22:48.160"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:22:48.161" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:22:48.161" endtime="20220707 05:22:48.161"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:22:48.161" endtime="20220707 05:22:48.161"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:48.163" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:22:48.161" endtime="20220707 05:22:48.163"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:22:48.653" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:48.163" endtime="20220707 05:22:48.653"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:22:48.653" endtime="20220707 05:22:48.653"/>
</return>
<msg timestamp="20220707 05:22:48.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:48.160" endtime="20220707 05:22:48.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:22:48.654" endtime="20220707 05:22:48.654"/>
</return>
<msg timestamp="20220707 05:22:48.654" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:22:48.160" endtime="20220707 05:22:48.654"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 05:22:48.655" level="INFO">${TEST_SUITE_BOARD_ID} = 62c66da8b6fe5736f4e9934a</msg>
<status status="PASS" starttime="20220707 05:22:48.654" endtime="20220707 05:22:48.656"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 05:22:48.657" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 05:22:48.656" endtime="20220707 05:22:49.720"/>
</kw>
<status status="PASS" starttime="20220707 05:22:48.656" endtime="20220707 05:22:49.720"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:49.721" endtime="20220707 05:22:49.721"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:49.721" endtime="20220707 05:22:49.721"/>
</branch>
<status status="PASS" starttime="20220707 05:22:48.656" endtime="20220707 05:22:49.721"/>
</if>
<status status="PASS" starttime="20220707 05:22:48.656" endtime="20220707 05:22:49.721"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 05:22:49.721" endtime="20220707 05:22:49.832"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:49.842" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:22:49.833" endtime="20220707 05:22:49.843"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:49.843" endtime="20220707 05:22:49.843"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:49.843" endtime="20220707 05:22:49.843"/>
</branch>
<status status="PASS" starttime="20220707 05:22:49.843" endtime="20220707 05:22:49.843"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:49.843" endtime="20220707 05:22:49.895"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:49.895" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 05:22:49.895" endtime="20220707 05:22:49.986"/>
</kw>
<status status="PASS" starttime="20220707 05:22:49.843" endtime="20220707 05:22:49.986"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 05:22:49.987" endtime="20220707 05:22:50.682"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:50.688" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:22:50.683" endtime="20220707 05:22:50.688"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:22:50.689" endtime="20220707 05:22:50.738"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:50.738" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 05:22:50.738" endtime="20220707 05:22:51.897"/>
</kw>
<status status="PASS" starttime="20220707 05:22:50.689" endtime="20220707 05:22:51.897"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:22:51.897" endtime="20220707 05:22:51.897"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:51.897" endtime="20220707 05:22:51.897"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:51.897" endtime="20220707 05:22:51.897"/>
</branch>
<status status="PASS" starttime="20220707 05:22:50.688" endtime="20220707 05:22:51.897"/>
</if>
<status status="PASS" starttime="20220707 05:22:50.683" endtime="20220707 05:22:51.897"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 05:22:51.898" endtime="20220707 05:22:51.922"/>
</kw>
<status status="PASS" starttime="20220707 05:22:51.897" endtime="20220707 05:22:51.923"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:51.923" endtime="20220707 05:22:51.960"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:51.960" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 05:22:52.011" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 05:22:52.070" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 05:22:51.960" endtime="20220707 05:22:52.070"/>
</kw>
<status status="PASS" starttime="20220707 05:22:51.923" endtime="20220707 05:22:52.070"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:22:52.082" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c66d...</msg>
<status status="PASS" starttime="20220707 05:22:52.070" endtime="20220707 05:22:52.082"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:22:52.082" endtime="20220707 05:22:52.082"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:22:52.082" endtime="20220707 05:22:52.082"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:22:52.082" endtime="20220707 05:22:52.082"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:22:52.083" endtime="20220707 05:22:52.125"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:52.125" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 05:22:52.125" endtime="20220707 05:22:52.252"/>
</kw>
<status status="PASS" starttime="20220707 05:22:52.083" endtime="20220707 05:22:52.252"/>
</branch>
<status status="PASS" starttime="20220707 05:22:52.082" endtime="20220707 05:22:52.252"/>
</if>
<status status="PASS" starttime="20220707 05:22:52.070" endtime="20220707 05:22:52.252"/>
</kw>
<status status="PASS" starttime="20220707 05:22:49.833" endtime="20220707 05:22:52.253"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:52.253" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220707 05:22:52.253" endtime="20220707 05:22:52.253"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:52.254" endtime="20220707 05:22:56.014"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:56.014" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220707 05:22:56.014" endtime="20220707 05:22:56.380"/>
</kw>
<status status="PASS" starttime="20220707 05:22:52.253" endtime="20220707 05:22:56.380"/>
</kw>
<status status="PASS" starttime="20220707 05:22:48.159" endtime="20220707 05:22:56.380"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:22:56.382" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 05:22:56.381" endtime="20220707 05:22:56.382"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:22:56.382" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 05:22:56.382" endtime="20220707 05:22:56.382"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:56.383" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 05:22:56.383" endtime="20220707 05:22:56.383"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:56.383" endtime="20220707 05:22:56.896"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:56.896" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 05:22:56.896" endtime="20220707 05:22:57.003"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:57.004" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 05:22:57.003" endtime="20220707 05:22:57.004"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:57.004" endtime="20220707 05:22:57.058"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:57.058" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:22:57.058" endtime="20220707 05:22:57.103"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 05:22:57.103" endtime="20220707 05:22:57.131"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:57.132" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:22:57.132" endtime="20220707 05:22:57.210"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:57.210" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 05:22:57.210" endtime="20220707 05:22:57.210"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:57.211" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 05:22:57.211" endtime="20220707 05:22:57.269"/>
</kw>
<status status="PASS" starttime="20220707 05:22:56.382" endtime="20220707 05:22:57.269"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:57.270" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 05:22:57.269" endtime="20220707 05:22:57.270"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 05:22:57.320" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220707 05:22:57.270" endtime="20220707 05:22:57.320"/>
</kw>
<status status="PASS" starttime="20220707 05:22:57.269" endtime="20220707 05:22:57.320"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:57.321" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 05:22:57.321" endtime="20220707 05:22:57.321"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:57.322" endtime="20220707 05:22:57.363"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:57.363" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 05:22:57.363" endtime="20220707 05:22:57.438"/>
</kw>
<status status="PASS" starttime="20220707 05:22:57.320" endtime="20220707 05:22:57.438"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 05:22:57.477" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 05:22:57.439" endtime="20220707 05:22:57.477"/>
</kw>
<msg timestamp="20220707 05:22:57.477" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 05:22:57.439" endtime="20220707 05:22:57.478"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:57.478" endtime="20220707 05:22:57.921"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:57.921" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 05:22:57.921" endtime="20220707 05:22:58.026"/>
</kw>
<status status="PASS" starttime="20220707 05:22:57.478" endtime="20220707 05:22:58.027"/>
</kw>
<status status="PASS" starttime="20220707 05:22:57.478" endtime="20220707 05:22:58.027"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:58.027" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 05:22:58.027" endtime="20220707 05:22:58.138"/>
</kw>
<status status="PASS" starttime="20220707 05:22:58.027" endtime="20220707 05:22:58.138"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:58.139" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 05:22:58.138" endtime="20220707 05:22:58.299"/>
</kw>
<status status="PASS" starttime="20220707 05:22:57.438" endtime="20220707 05:22:58.300"/>
</kw>
<status status="PASS" starttime="20220707 05:22:57.320" endtime="20220707 05:22:58.300"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:22:56.380" endtime="20220707 05:22:58.300"/>
</test>
<test id="s1-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:22:58.301" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 05:22:58.301" endtime="20220707 05:22:58.301"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:22:58.302" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 05:22:58.301" endtime="20220707 05:22:58.302"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:58.302" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 05:22:58.302" endtime="20220707 05:22:58.302"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:58.303" endtime="20220707 05:22:58.337"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:58.337" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 05:22:58.337" endtime="20220707 05:22:58.385"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:58.386" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 05:22:58.386" endtime="20220707 05:22:58.386"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:58.386" endtime="20220707 05:22:58.414"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:58.415" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:22:58.415" endtime="20220707 05:22:58.459"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 05:22:58.459" endtime="20220707 05:22:58.502"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:58.502" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:22:58.502" endtime="20220707 05:22:58.578"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:58.579" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 05:22:58.578" endtime="20220707 05:22:58.579"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:58.579" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 05:22:58.579" endtime="20220707 05:22:58.649"/>
</kw>
<status status="PASS" starttime="20220707 05:22:58.302" endtime="20220707 05:22:58.650"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:22:58.650" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220707 05:22:58.650" endtime="20220707 05:22:58.650"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:58.651" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 05:22:58.651" endtime="20220707 05:22:58.651"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:58.652" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220707 05:22:58.651" endtime="20220707 05:22:58.652"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:58.652" endtime="20220707 05:22:58.686"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220707 05:22:58.687" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 05:22:58.686" endtime="20220707 05:22:58.987"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 05:22:58.987" endtime="20220707 05:22:59.000"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:59.000" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220707 05:22:59.000" endtime="20220707 05:22:59.080"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:59.080" endtime="20220707 05:22:59.122"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:59.122" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220707 05:22:59.122" endtime="20220707 05:22:59.167"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 05:22:59.167" endtime="20220707 05:22:59.204"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:59.205" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220707 05:22:59.204" endtime="20220707 05:22:59.284"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:59.284" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220707 05:22:59.284" endtime="20220707 05:22:59.362"/>
</kw>
<status status="PASS" starttime="20220707 05:22:58.650" endtime="20220707 05:22:59.362"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:59.364" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220707 05:22:59.363" endtime="20220707 05:22:59.364"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 05:22:59.416" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220707 05:22:59.364" endtime="20220707 05:22:59.416"/>
</kw>
<status status="PASS" starttime="20220707 05:22:59.363" endtime="20220707 05:22:59.416"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:22:59.418" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220707 05:22:59.417" endtime="20220707 05:22:59.418"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:59.418" endtime="20220707 05:22:59.441"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:59.441" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220707 05:22:59.441" endtime="20220707 05:22:59.483"/>
</kw>
<status status="PASS" starttime="20220707 05:22:59.416" endtime="20220707 05:22:59.483"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 05:22:59.681" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 05:22:59.484" endtime="20220707 05:22:59.681"/>
</kw>
<msg timestamp="20220707 05:22:59.682" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 05:22:59.484" endtime="20220707 05:22:59.682"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:22:59.683" endtime="20220707 05:22:59.711"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:59.712" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 05:22:59.711" endtime="20220707 05:22:59.782"/>
</kw>
<status status="PASS" starttime="20220707 05:22:59.682" endtime="20220707 05:22:59.782"/>
</kw>
<status status="PASS" starttime="20220707 05:22:59.682" endtime="20220707 05:22:59.782"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:59.783" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 05:22:59.783" endtime="20220707 05:22:59.845"/>
</kw>
<status status="PASS" starttime="20220707 05:22:59.782" endtime="20220707 05:22:59.845"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:22:59.846" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 05:22:59.845" endtime="20220707 05:23:00.026"/>
</kw>
<status status="PASS" starttime="20220707 05:22:59.484" endtime="20220707 05:23:00.026"/>
</kw>
<status status="PASS" starttime="20220707 05:22:59.416" endtime="20220707 05:23:00.026"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 05:22:58.300" endtime="20220707 05:23:00.026"/>
</test>
<test id="s1-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:23:00.028" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 05:23:00.027" endtime="20220707 05:23:00.028"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:23:00.028" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 05:23:00.028" endtime="20220707 05:23:00.028"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:00.029" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 05:23:00.028" endtime="20220707 05:23:00.029"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:00.029" endtime="20220707 05:23:00.095"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:00.096" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 05:23:00.095" endtime="20220707 05:23:00.163"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:00.163" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 05:23:00.163" endtime="20220707 05:23:00.163"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:00.164" endtime="20220707 05:23:00.223"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:00.224" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:00.223" endtime="20220707 05:23:00.295"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 05:23:00.296" endtime="20220707 05:23:00.355"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:00.355" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:00.355" endtime="20220707 05:23:00.431"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:00.432" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 05:23:00.431" endtime="20220707 05:23:00.432"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:00.432" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 05:23:00.432" endtime="20220707 05:23:00.501"/>
</kw>
<status status="PASS" starttime="20220707 05:23:00.028" endtime="20220707 05:23:00.501"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:00.503" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 05:23:00.502" endtime="20220707 05:23:00.503"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:00.503" endtime="20220707 05:23:00.573"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:00.573" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 05:23:00.573" endtime="20220707 05:23:00.621"/>
</kw>
<status status="PASS" starttime="20220707 05:23:00.502" endtime="20220707 05:23:00.621"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 05:23:00.819" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 05:23:00.622" endtime="20220707 05:23:00.819"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 05:23:00.819" endtime="20220707 05:23:00.819"/>
</return>
<msg timestamp="20220707 05:23:00.819" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220707 05:23:00.621" endtime="20220707 05:23:00.819"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:00.820" endtime="20220707 05:23:00.883"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:00.883" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220707 05:23:00.883" endtime="20220707 05:23:00.948"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 05:23:00.948" endtime="20220707 05:23:00.981"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:00.982" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220707 05:23:00.982" endtime="20220707 05:23:01.120"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:01.121" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220707 05:23:01.121" endtime="20220707 05:23:01.258"/>
</kw>
<status status="PASS" starttime="20220707 05:23:00.819" endtime="20220707 05:23:01.259"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 05:23:01.293" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220707 05:23:01.259" endtime="20220707 05:23:01.293"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 05:23:01.293" endtime="20220707 05:23:01.293"/>
</return>
<msg timestamp="20220707 05:23:01.294" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220707 05:23:01.259" endtime="20220707 05:23:01.294"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 05:23:01.294" endtime="20220707 05:23:01.295"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 05:23:01.307" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 05:23:01.296" endtime="20220707 05:23:01.307"/>
</kw>
<msg timestamp="20220707 05:23:01.307" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 05:23:01.296" endtime="20220707 05:23:01.308"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:01.308" endtime="20220707 05:23:01.347"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:01.347" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 05:23:01.347" endtime="20220707 05:23:01.414"/>
</kw>
<status status="PASS" starttime="20220707 05:23:01.308" endtime="20220707 05:23:01.415"/>
</kw>
<status status="PASS" starttime="20220707 05:23:01.308" endtime="20220707 05:23:01.415"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:01.415" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 05:23:01.415" endtime="20220707 05:23:01.469"/>
</kw>
<status status="PASS" starttime="20220707 05:23:01.415" endtime="20220707 05:23:01.470"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:01.470" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 05:23:01.470" endtime="20220707 05:23:01.616"/>
</kw>
<status status="PASS" starttime="20220707 05:23:01.295" endtime="20220707 05:23:01.616"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 05:23:00.027" endtime="20220707 05:23:01.616"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:23:01.619" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 05:23:01.619" endtime="20220707 05:23:01.619"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:23:01.620" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 05:23:01.620" endtime="20220707 05:23:01.620"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:01.621" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220707 05:23:01.620" endtime="20220707 05:23:01.621"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 05:23:01.665" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 05:23:01.621" endtime="20220707 05:23:01.666"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 05:23:01.666" endtime="20220707 05:23:01.666"/>
</return>
<msg timestamp="20220707 05:23:01.666" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220707 05:23:01.620" endtime="20220707 05:23:01.666"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:01.667" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 05:23:01.667" endtime="20220707 05:23:01.667"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:01.667" endtime="20220707 05:23:01.691"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:01.692" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 05:23:01.691" endtime="20220707 05:23:01.750"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:01.751" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 05:23:01.751" endtime="20220707 05:23:01.751"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:01.751" endtime="20220707 05:23:01.774"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:01.775" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:01.775" endtime="20220707 05:23:01.842"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 05:23:01.842" endtime="20220707 05:23:01.873"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:01.873" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:01.873" endtime="20220707 05:23:01.949"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:01.950" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 05:23:01.950" endtime="20220707 05:23:01.950"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:01.950" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 05:23:01.950" endtime="20220707 05:23:02.004"/>
</kw>
<status status="PASS" starttime="20220707 05:23:01.666" endtime="20220707 05:23:02.005"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:02.006" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 05:23:02.005" endtime="20220707 05:23:02.006"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:02.006" endtime="20220707 05:23:02.070"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:02.071" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 05:23:02.070" endtime="20220707 05:23:02.128"/>
</kw>
<status status="PASS" starttime="20220707 05:23:02.005" endtime="20220707 05:23:02.128"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 05:23:02.306" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 05:23:02.129" endtime="20220707 05:23:02.307"/>
</kw>
<msg timestamp="20220707 05:23:02.307" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 05:23:02.129" endtime="20220707 05:23:02.307"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:02.307" endtime="20220707 05:23:02.369"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:02.370" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 05:23:02.369" endtime="20220707 05:23:02.430"/>
</kw>
<status status="PASS" starttime="20220707 05:23:02.307" endtime="20220707 05:23:02.430"/>
</kw>
<status status="PASS" starttime="20220707 05:23:02.307" endtime="20220707 05:23:02.430"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:02.431" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 05:23:02.431" endtime="20220707 05:23:02.499"/>
</kw>
<status status="PASS" starttime="20220707 05:23:02.431" endtime="20220707 05:23:02.499"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:02.499" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 05:23:02.499" endtime="20220707 05:23:02.633"/>
</kw>
<status status="PASS" starttime="20220707 05:23:02.128" endtime="20220707 05:23:02.633"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:02.634" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220707 05:23:02.634" endtime="20220707 05:23:02.634"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 05:23:02.661" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 05:23:02.635" endtime="20220707 05:23:02.661"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 05:23:02.661" endtime="20220707 05:23:02.661"/>
</return>
<msg timestamp="20220707 05:23:02.661" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220707 05:23:02.633" endtime="20220707 05:23:02.661"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 05:23:02.661" endtime="20220707 05:23:02.662"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:23:01.618" endtime="20220707 05:23:02.662"/>
</test>
<test id="s1-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:23:02.664" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 05:23:02.664" endtime="20220707 05:23:02.664"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:23:02.665" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 05:23:02.665" endtime="20220707 05:23:02.665"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:02.666" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 05:23:02.665" endtime="20220707 05:23:02.666"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:02.666" endtime="20220707 05:23:02.695"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:02.696" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 05:23:02.696" endtime="20220707 05:23:02.752"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:02.753" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 05:23:02.752" endtime="20220707 05:23:02.753"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:02.753" endtime="20220707 05:23:02.785"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:02.785" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:02.785" endtime="20220707 05:23:02.837"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 05:23:02.837" endtime="20220707 05:23:02.910"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:02.910" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:02.910" endtime="20220707 05:23:03.006"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:03.007" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 05:23:03.006" endtime="20220707 05:23:03.007"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:03.007" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 05:23:03.007" endtime="20220707 05:23:03.113"/>
</kw>
<status status="PASS" starttime="20220707 05:23:02.665" endtime="20220707 05:23:03.113"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:23:03.113" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220707 05:23:03.113" endtime="20220707 05:23:03.113"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:03.115" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 05:23:03.114" endtime="20220707 05:23:03.115"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:03.115" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220707 05:23:03.115" endtime="20220707 05:23:03.115"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:03.115" endtime="20220707 05:23:03.192"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220707 05:23:03.193" endtime="20220707 05:23:03.801"/>
</kw>
<status status="PASS" starttime="20220707 05:23:03.114" endtime="20220707 05:23:03.801"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:03.802" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 05:23:03.802" endtime="20220707 05:23:03.802"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 05:23:03.849" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220707 05:23:03.802" endtime="20220707 05:23:03.850"/>
</kw>
<status status="PASS" starttime="20220707 05:23:03.801" endtime="20220707 05:23:03.850"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:03.851" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 05:23:03.851" endtime="20220707 05:23:03.851"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:03.851" endtime="20220707 05:23:03.873"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:03.874" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 05:23:03.874" endtime="20220707 05:23:03.918"/>
</kw>
<status status="PASS" starttime="20220707 05:23:03.850" endtime="20220707 05:23:03.918"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 05:23:04.134" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 05:23:03.919" endtime="20220707 05:23:04.134"/>
</kw>
<msg timestamp="20220707 05:23:04.134" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 05:23:03.918" endtime="20220707 05:23:04.134"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:04.135" endtime="20220707 05:23:04.163"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:04.163" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 05:23:04.163" endtime="20220707 05:23:04.241"/>
</kw>
<status status="PASS" starttime="20220707 05:23:04.135" endtime="20220707 05:23:04.242"/>
</kw>
<status status="PASS" starttime="20220707 05:23:04.134" endtime="20220707 05:23:04.242"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:04.242" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 05:23:04.242" endtime="20220707 05:23:04.297"/>
</kw>
<status status="PASS" starttime="20220707 05:23:04.242" endtime="20220707 05:23:04.297"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:04.298" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 05:23:04.297" endtime="20220707 05:23:04.454"/>
</kw>
<status status="PASS" starttime="20220707 05:23:03.918" endtime="20220707 05:23:04.454"/>
</kw>
<status status="PASS" starttime="20220707 05:23:03.850" endtime="20220707 05:23:04.454"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 05:23:02.663" endtime="20220707 05:23:04.454"/>
</test>
<test id="s1-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:23:04.457" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:23:04.457" endtime="20220707 05:23:04.457"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:23:04.458" endtime="20220707 05:23:04.458"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:04.459" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:23:04.458" endtime="20220707 05:23:04.459"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:23:04.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:04.459" endtime="20220707 05:23:04.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:04.855" endtime="20220707 05:23:04.855"/>
</return>
<msg timestamp="20220707 05:23:04.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:04.457" endtime="20220707 05:23:04.856"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:04.856" endtime="20220707 05:23:04.856"/>
</return>
<msg timestamp="20220707 05:23:04.856" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:04.456" endtime="20220707 05:23:04.856"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:23:04.856" endtime="20220707 05:23:04.918"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:04.919" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220707 05:23:04.918" endtime="20220707 05:23:05.034"/>
</kw>
<status status="PASS" starttime="20220707 05:23:04.856" endtime="20220707 05:23:05.034"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:05.035" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220707 05:23:05.034" endtime="20220707 05:23:05.035"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:05.035" endtime="20220707 05:23:05.249"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:05.250" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220707 05:23:05.249" endtime="20220707 05:23:05.398"/>
</kw>
<status status="PASS" starttime="20220707 05:23:05.034" endtime="20220707 05:23:05.398"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:23:05.399" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 05:23:05.399" endtime="20220707 05:23:05.399"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 05:23:05.399" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220707 05:23:05.399" endtime="20220707 05:23:05.399"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:05.400" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 05:23:05.400" endtime="20220707 05:23:05.400"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:05.400" endtime="20220707 05:23:05.960"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:05.960" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 05:23:05.960" endtime="20220707 05:23:06.019"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:06.020" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 05:23:06.020" endtime="20220707 05:23:06.020"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:06.020" endtime="20220707 05:23:06.060"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:06.061" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:06.061" endtime="20220707 05:23:06.128"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 05:23:06.128" endtime="20220707 05:23:06.157"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:06.158" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:06.157" endtime="20220707 05:23:06.230"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:06.230" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 05:23:06.230" endtime="20220707 05:23:06.230"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:06.231" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 05:23:06.230" endtime="20220707 05:23:06.311"/>
</kw>
<status status="PASS" starttime="20220707 05:23:05.399" endtime="20220707 05:23:06.311"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:06.312" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220707 05:23:06.312" endtime="20220707 05:23:06.312"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:06.313" endtime="20220707 05:23:06.364"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:06.365" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220707 05:23:06.365" endtime="20220707 05:23:06.411"/>
</kw>
<status status="PASS" starttime="20220707 05:23:06.311" endtime="20220707 05:23:06.411"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:06.412" endtime="20220707 05:23:06.628"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:06.629" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220707 05:23:06.628" endtime="20220707 05:23:06.731"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220707 05:23:06.731" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220707 05:23:06.731" endtime="20220707 05:23:06.824"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:23:06.824" endtime="20220707 05:23:07.098"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:07.099" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220707 05:23:07.098" endtime="20220707 05:23:07.256"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 05:23:07.256" endtime="20220707 05:23:07.272"/>
</kw>
<status status="PASS" starttime="20220707 05:23:06.411" endtime="20220707 05:23:07.272"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:07.273" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220707 05:23:07.272" endtime="20220707 05:23:07.273"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 05:23:07.282" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 05:23:07.273" endtime="20220707 05:23:07.282"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 05:23:07.282" endtime="20220707 05:23:07.283"/>
</return>
<msg timestamp="20220707 05:23:07.283" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220707 05:23:07.272" endtime="20220707 05:23:07.283"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220707 05:23:07.283" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220707 05:23:07.283" endtime="20220707 05:23:07.283"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 05:23:07.283" endtime="20220707 05:23:07.283"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 05:23:07.284" endtime="20220707 05:23:07.369"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:07.372" level="INFO">${url} = boards/62c66db84944722237698c57</msg>
<status status="PASS" starttime="20220707 05:23:07.372" endtime="20220707 05:23:07.372"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:23:07.505" level="INFO">${response} = None</msg>
<msg timestamp="20220707 05:23:07.505" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220707 05:23:07.372" endtime="20220707 05:23:07.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:07.506" endtime="20220707 05:23:07.506"/>
</return>
<msg timestamp="20220707 05:23:07.506" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220707 05:23:07.371" endtime="20220707 05:23:07.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:07.506" endtime="20220707 05:23:07.506"/>
</return>
<status status="FAIL" starttime="20220707 05:23:07.369" endtime="20220707 05:23:07.506"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:10.509" level="INFO">${url} = boards/62c66db84944722237698c57</msg>
<status status="PASS" starttime="20220707 05:23:10.509" endtime="20220707 05:23:10.509"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:23:10.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:10.509" endtime="20220707 05:23:10.891"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:10.891" endtime="20220707 05:23:10.892"/>
</return>
<msg timestamp="20220707 05:23:10.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:10.508" endtime="20220707 05:23:10.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:10.892" endtime="20220707 05:23:10.892"/>
</return>
<status status="PASS" starttime="20220707 05:23:10.507" endtime="20220707 05:23:10.892"/>
</kw>
<status status="PASS" starttime="20220707 05:23:07.369" endtime="20220707 05:23:10.892"/>
</kw>
<status status="PASS" starttime="20220707 05:23:07.284" endtime="20220707 05:23:10.892"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 05:23:04.455" endtime="20220707 05:23:10.892"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:10.895" level="INFO">${url} = boards/62c66da8b6fe5736f4e9934a</msg>
<status status="PASS" starttime="20220707 05:23:10.895" endtime="20220707 05:23:10.895"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:23:11.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:10.895" endtime="20220707 05:23:11.286"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:11.286" endtime="20220707 05:23:11.286"/>
</return>
<msg timestamp="20220707 05:23:11.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:10.894" endtime="20220707 05:23:11.286"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:11.286" endtime="20220707 05:23:11.286"/>
</return>
<status status="PASS" starttime="20220707 05:23:10.894" endtime="20220707 05:23:11.287"/>
</kw>
<status status="PASS" starttime="20220707 05:23:10.894" endtime="20220707 05:23:11.287"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 05:23:11.287" endtime="20220707 05:23:11.288"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220707 05:23:11.288" endtime="20220707 05:23:11.288"/>
</kw>
<status status="PASS" starttime="20220707 05:23:10.893" endtime="20220707 05:23:11.288"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220707 05:22:48.146" endtime="20220707 05:23:11.288"/>
</suite>
<suite id="s1-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 05:23:11.305" endtime="20220707 05:23:11.306"/>
</kw>
<status status="PASS" starttime="20220707 05:23:11.305" endtime="20220707 05:23:11.306"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:23:11.307" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:23:11.307" endtime="20220707 05:23:11.307"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:23:11.307" endtime="20220707 05:23:11.307"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:11.308" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:23:11.307" endtime="20220707 05:23:11.308"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:23:11.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:11.309" endtime="20220707 05:23:11.564"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:11.564" endtime="20220707 05:23:11.564"/>
</return>
<msg timestamp="20220707 05:23:11.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:11.306" endtime="20220707 05:23:11.564"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:11.564" endtime="20220707 05:23:11.564"/>
</return>
<msg timestamp="20220707 05:23:11.564" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:11.306" endtime="20220707 05:23:11.564"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 05:23:11.566" level="INFO">${TEST_SUITE_BOARD_ID} = 62c66dbf179991591169f415</msg>
<status status="PASS" starttime="20220707 05:23:11.565" endtime="20220707 05:23:11.566"/>
</kw>
<status status="PASS" starttime="20220707 05:23:11.306" endtime="20220707 05:23:11.566"/>
</kw>
<status status="PASS" starttime="20220707 05:23:11.305" endtime="20220707 05:23:11.566"/>
</kw>
<test id="s1-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 05:23:11.568" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 05:23:11.567" endtime="20220707 05:23:12.819"/>
</kw>
<status status="PASS" starttime="20220707 05:23:11.567" endtime="20220707 05:23:12.820"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:23:12.820" endtime="20220707 05:23:12.820"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:23:12.820" endtime="20220707 05:23:12.820"/>
</branch>
<status status="PASS" starttime="20220707 05:23:11.567" endtime="20220707 05:23:12.820"/>
</if>
<status status="PASS" starttime="20220707 05:23:11.567" endtime="20220707 05:23:12.820"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 05:23:12.820" endtime="20220707 05:23:12.931"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:23:12.944" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:23:12.932" endtime="20220707 05:23:12.944"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:23:12.944" endtime="20220707 05:23:12.944"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:23:12.944" endtime="20220707 05:23:12.944"/>
</branch>
<status status="PASS" starttime="20220707 05:23:12.944" endtime="20220707 05:23:12.944"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:12.945" endtime="20220707 05:23:12.977"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:12.977" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 05:23:12.977" endtime="20220707 05:23:13.062"/>
</kw>
<status status="PASS" starttime="20220707 05:23:12.944" endtime="20220707 05:23:13.062"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 05:23:13.062" endtime="20220707 05:23:13.764"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:23:13.772" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:23:13.765" endtime="20220707 05:23:13.773"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:23:13.773" endtime="20220707 05:23:13.845"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:13.846" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 05:23:13.846" endtime="20220707 05:23:15.045"/>
</kw>
<status status="PASS" starttime="20220707 05:23:13.773" endtime="20220707 05:23:15.045"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:23:15.045" endtime="20220707 05:23:15.045"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:23:15.046" endtime="20220707 05:23:15.046"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:23:15.045" endtime="20220707 05:23:15.046"/>
</branch>
<status status="PASS" starttime="20220707 05:23:13.773" endtime="20220707 05:23:15.046"/>
</if>
<status status="PASS" starttime="20220707 05:23:13.764" endtime="20220707 05:23:15.046"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 05:23:15.046" endtime="20220707 05:23:15.059"/>
</kw>
<status status="PASS" starttime="20220707 05:23:15.046" endtime="20220707 05:23:15.059"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:15.059" endtime="20220707 05:23:15.109"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:15.109" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 05:23:15.159" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 05:23:15.222" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 05:23:15.109" endtime="20220707 05:23:15.222"/>
</kw>
<status status="PASS" starttime="20220707 05:23:15.059" endtime="20220707 05:23:15.223"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:23:15.237" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c66d...</msg>
<status status="PASS" starttime="20220707 05:23:15.223" endtime="20220707 05:23:15.237"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:23:15.238" endtime="20220707 05:23:15.238"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:23:15.238" endtime="20220707 05:23:15.238"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:23:15.238" endtime="20220707 05:23:15.238"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:23:15.238" endtime="20220707 05:23:15.290"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:15.291" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 05:23:15.291" endtime="20220707 05:23:15.375"/>
</kw>
<status status="PASS" starttime="20220707 05:23:15.238" endtime="20220707 05:23:15.375"/>
</branch>
<status status="PASS" starttime="20220707 05:23:15.237" endtime="20220707 05:23:15.375"/>
</if>
<status status="PASS" starttime="20220707 05:23:15.223" endtime="20220707 05:23:15.375"/>
</kw>
<status status="PASS" starttime="20220707 05:23:12.931" endtime="20220707 05:23:15.375"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:15.376" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 05:23:15.376" endtime="20220707 05:23:15.376"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:15.376" endtime="20220707 05:23:19.415"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:19.415" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 05:23:19.415" endtime="20220707 05:23:19.779"/>
</kw>
<status status="PASS" starttime="20220707 05:23:15.376" endtime="20220707 05:23:19.779"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:19.780" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 05:23:19.779" endtime="20220707 05:23:19.780"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:19.780" endtime="20220707 05:23:20.278"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:20.278" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 05:23:20.278" endtime="20220707 05:23:20.415"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:20.416" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 05:23:20.415" endtime="20220707 05:23:20.416"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:20.416" endtime="20220707 05:23:20.451"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:20.451" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:20.451" endtime="20220707 05:23:20.502"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 05:23:20.503" endtime="20220707 05:23:20.551"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:20.552" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:20.551" endtime="20220707 05:23:20.623"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:20.624" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 05:23:20.624" endtime="20220707 05:23:20.624"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:20.624" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 05:23:20.624" endtime="20220707 05:23:20.731"/>
</kw>
<status status="PASS" starttime="20220707 05:23:19.779" endtime="20220707 05:23:20.732"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:20.733" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220707 05:23:20.732" endtime="20220707 05:23:20.733"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:20.733" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220707 05:23:20.733" endtime="20220707 05:23:20.733"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:20.733" endtime="20220707 05:23:20.802"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220707 05:23:25.803" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220707 05:23:20.802" endtime="20220707 05:23:25.803"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220707 05:23:25.803" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220707 05:23:25.803" endtime="20220707 05:23:26.098"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220707 05:23:31.099" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220707 05:23:26.098" endtime="20220707 05:23:31.099"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 05:23:31.099" endtime="20220707 05:23:31.113"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:31.113" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220707 05:23:31.113" endtime="20220707 05:23:31.186"/>
</kw>
<status status="PASS" starttime="20220707 05:23:20.732" endtime="20220707 05:23:31.186"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:23:31.186" endtime="20220707 05:23:31.234"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:31.235" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220707 05:23:31.235" endtime="20220707 05:23:31.302"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:23:31.303" endtime="20220707 05:23:31.367"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:31.367" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220707 05:23:31.367" endtime="20220707 05:23:31.421"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:31.422" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220707 05:23:31.422" endtime="20220707 05:23:31.512"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:23:31.512" endtime="20220707 05:23:31.549"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:23:31.549" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220707 05:23:31.846" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 05:23:31.846" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 05:23:31.549" endtime="20220707 05:23:31.881"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:23:31.882" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220707 05:23:31.882" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220707 05:23:31.882" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220707 05:23:31.881" endtime="20220707 05:23:31.897"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:23:31.898" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220707 05:23:31.898" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220707 05:23:31.898" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220707 05:23:31.897" endtime="20220707 05:23:31.912"/>
</kw>
<status status="PASS" starttime="20220707 05:23:31.186" endtime="20220707 05:23:31.912"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:31.913" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 05:23:31.912" endtime="20220707 05:23:31.913"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:31.913" endtime="20220707 05:23:31.953"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:31.954" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 05:23:31.953" endtime="20220707 05:23:32.018"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:32.018" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 05:23:32.018" endtime="20220707 05:23:32.018"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:32.018" endtime="20220707 05:23:32.062"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:32.062" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:32.062" endtime="20220707 05:23:32.115"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 05:23:32.115" endtime="20220707 05:23:32.151"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:32.151" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:32.151" endtime="20220707 05:23:32.222"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:32.223" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 05:23:32.223" endtime="20220707 05:23:32.223"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:32.223" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 05:23:32.223" endtime="20220707 05:23:32.283"/>
</kw>
<status status="PASS" starttime="20220707 05:23:31.912" endtime="20220707 05:23:32.283"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:32.284" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 05:23:32.284" endtime="20220707 05:23:32.284"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:32.284" endtime="20220707 05:23:32.363"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:32.363" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 05:23:32.363" endtime="20220707 05:23:32.421"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:32.422" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 05:23:32.421" endtime="20220707 05:23:32.422"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:32.422" endtime="20220707 05:23:32.460"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:32.460" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:32.460" endtime="20220707 05:23:32.501"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 05:23:32.501" endtime="20220707 05:23:32.571"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:32.572" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 05:23:32.571" endtime="20220707 05:23:32.661"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:32.662" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 05:23:32.661" endtime="20220707 05:23:32.662"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:32.662" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 05:23:32.662" endtime="20220707 05:23:32.744"/>
</kw>
<status status="PASS" starttime="20220707 05:23:32.283" endtime="20220707 05:23:32.744"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:32.745" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220707 05:23:32.745" endtime="20220707 05:23:32.897"/>
</kw>
<status status="PASS" starttime="20220707 05:23:32.744" endtime="20220707 05:23:32.897"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:32.898" endtime="20220707 05:23:33.033"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:33.034" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220707 05:23:33.033" endtime="20220707 05:23:33.168"/>
</kw>
<status status="PASS" starttime="20220707 05:23:32.897" endtime="20220707 05:23:33.168"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:33.169" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220707 05:23:33.169" endtime="20220707 05:23:33.169"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 05:23:33.239" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220707 05:23:33.169" endtime="20220707 05:23:33.239"/>
</kw>
<status status="PASS" starttime="20220707 05:23:33.168" endtime="20220707 05:23:33.239"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:33.240" endtime="20220707 05:23:33.260"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:33.260" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220707 05:23:33.260" endtime="20220707 05:23:33.348"/>
</kw>
<status status="PASS" starttime="20220707 05:23:33.239" endtime="20220707 05:23:33.349"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:33.350" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220707 05:23:33.349" endtime="20220707 05:23:33.350"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 05:23:33.377" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220707 05:23:33.350" endtime="20220707 05:23:33.377"/>
</kw>
<status status="PASS" starttime="20220707 05:23:33.349" endtime="20220707 05:23:33.377"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 05:23:33.377" endtime="20220707 05:23:33.469"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:23:11.566" endtime="20220707 05:23:33.469"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:33.473" level="INFO">${url} = boards/62c66dbf179991591169f415</msg>
<status status="PASS" starttime="20220707 05:23:33.473" endtime="20220707 05:23:33.473"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:23:33.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:33.473" endtime="20220707 05:23:33.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:33.906" endtime="20220707 05:23:33.906"/>
</return>
<msg timestamp="20220707 05:23:33.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:33.472" endtime="20220707 05:23:33.907"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:33.907" endtime="20220707 05:23:33.907"/>
</return>
<status status="PASS" starttime="20220707 05:23:33.472" endtime="20220707 05:23:33.907"/>
</kw>
<status status="PASS" starttime="20220707 05:23:33.472" endtime="20220707 05:23:33.907"/>
</kw>
<status status="PASS" starttime="20220707 05:23:33.471" endtime="20220707 05:23:33.907"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 05:23:33.907" endtime="20220707 05:23:33.908"/>
</kw>
<status status="PASS" starttime="20220707 05:23:33.471" endtime="20220707 05:23:33.908"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220707 05:23:11.290" endtime="20220707 05:23:33.908"/>
</suite>
<suite id="s1-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 05:23:33.922" endtime="20220707 05:23:33.922"/>
</kw>
<status status="PASS" starttime="20220707 05:23:33.921" endtime="20220707 05:23:33.922"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 05:23:33.923" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 05:23:33.923" endtime="20220707 05:23:33.923"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 05:23:33.923" endtime="20220707 05:23:33.923"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:33.924" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 05:23:33.924" endtime="20220707 05:23:33.924"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 05:23:34.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:33.925" endtime="20220707 05:23:34.214"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:34.214" endtime="20220707 05:23:34.214"/>
</return>
<msg timestamp="20220707 05:23:34.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:33.923" endtime="20220707 05:23:34.215"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:23:34.215" endtime="20220707 05:23:34.215"/>
</return>
<msg timestamp="20220707 05:23:34.215" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:23:33.922" endtime="20220707 05:23:34.215"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 05:23:34.216" level="INFO">${TEST_SUITE_BOARD_ID} = 62c66dd6551580242aa20813</msg>
<status status="PASS" starttime="20220707 05:23:34.215" endtime="20220707 05:23:34.216"/>
</kw>
<status status="PASS" starttime="20220707 05:23:33.922" endtime="20220707 05:23:34.216"/>
</kw>
<status status="PASS" starttime="20220707 05:23:33.921" endtime="20220707 05:23:34.216"/>
</kw>
<test id="s1-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 05:23:34.218" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 05:23:34.218" endtime="20220707 05:23:35.357"/>
</kw>
<status status="PASS" starttime="20220707 05:23:34.218" endtime="20220707 05:23:35.357"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:23:35.357" endtime="20220707 05:23:35.357"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:23:35.357" endtime="20220707 05:23:35.357"/>
</branch>
<status status="PASS" starttime="20220707 05:23:34.217" endtime="20220707 05:23:35.357"/>
</if>
<status status="PASS" starttime="20220707 05:23:34.217" endtime="20220707 05:23:35.358"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 05:23:35.358" endtime="20220707 05:23:35.464"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:23:35.473" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:23:35.465" endtime="20220707 05:23:35.473"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:23:35.473" endtime="20220707 05:23:35.473"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:23:35.473" endtime="20220707 05:23:35.473"/>
</branch>
<status status="PASS" starttime="20220707 05:23:35.473" endtime="20220707 05:23:35.473"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:35.474" endtime="20220707 05:23:35.501"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:35.502" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 05:23:35.501" endtime="20220707 05:23:35.593"/>
</kw>
<status status="PASS" starttime="20220707 05:23:35.473" endtime="20220707 05:23:35.593"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 05:23:35.593" endtime="20220707 05:23:36.326"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:23:36.331" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:23:36.327" endtime="20220707 05:23:36.331"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:23:36.332" endtime="20220707 05:23:36.374"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:36.375" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 05:23:36.374" endtime="20220707 05:23:37.411"/>
</kw>
<status status="PASS" starttime="20220707 05:23:36.332" endtime="20220707 05:23:37.411"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:23:37.411" endtime="20220707 05:23:37.411"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:23:37.411" endtime="20220707 05:23:37.411"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:23:37.411" endtime="20220707 05:23:37.411"/>
</branch>
<status status="PASS" starttime="20220707 05:23:36.332" endtime="20220707 05:23:37.411"/>
</if>
<status status="PASS" starttime="20220707 05:23:36.326" endtime="20220707 05:23:37.411"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 05:23:37.412" endtime="20220707 05:23:37.427"/>
</kw>
<status status="PASS" starttime="20220707 05:23:37.411" endtime="20220707 05:23:37.427"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:37.428" endtime="20220707 05:23:37.473"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:37.473" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 05:23:37.538" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 05:23:37.591" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 05:23:37.473" endtime="20220707 05:23:37.591"/>
</kw>
<status status="PASS" starttime="20220707 05:23:37.428" endtime="20220707 05:23:37.592"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:23:37.600" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c66d...</msg>
<status status="PASS" starttime="20220707 05:23:37.592" endtime="20220707 05:23:37.600"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:23:37.600" endtime="20220707 05:23:37.600"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:23:37.600" endtime="20220707 05:23:37.600"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:23:37.600" endtime="20220707 05:23:37.600"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:23:37.600" endtime="20220707 05:23:37.641"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:37.641" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 05:23:37.641" endtime="20220707 05:23:37.713"/>
</kw>
<status status="PASS" starttime="20220707 05:23:37.600" endtime="20220707 05:23:37.713"/>
</branch>
<status status="PASS" starttime="20220707 05:23:37.600" endtime="20220707 05:23:37.713"/>
</if>
<status status="PASS" starttime="20220707 05:23:37.592" endtime="20220707 05:23:37.713"/>
</kw>
<status status="PASS" starttime="20220707 05:23:35.464" endtime="20220707 05:23:37.713"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:37.714" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 05:23:37.714" endtime="20220707 05:23:37.714"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:37.714" endtime="20220707 05:23:41.465"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:41.466" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 05:23:41.465" endtime="20220707 05:23:41.839"/>
</kw>
<status status="PASS" starttime="20220707 05:23:37.713" endtime="20220707 05:23:41.839"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 05:23:41.840" endtime="20220707 05:23:42.283"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:42.283" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220707 05:23:42.283" endtime="20220707 05:23:42.432"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:23:42.432" endtime="20220707 05:23:42.479"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:42.479" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220707 05:23:42.479" endtime="20220707 05:23:42.566"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:23:42.567" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 05:23:42.936" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 05:23:42.937" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 05:23:42.566" endtime="20220707 05:23:42.971"/>
</kw>
<status status="PASS" starttime="20220707 05:23:41.839" endtime="20220707 05:23:42.971"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:23:42.972" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220707 05:23:42.971" endtime="20220707 05:23:42.972"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:23:42.972" endtime="20220707 05:23:43.009"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220707 05:23:43.017" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220707 05:23:43.009" endtime="20220707 05:23:43.017"/>
</kw>
<status status="PASS" starttime="20220707 05:23:42.971" endtime="20220707 05:23:43.017"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:23:43.018" endtime="20220707 05:23:43.052"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:43.053" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 05:23:43.052" endtime="20220707 05:23:43.113"/>
</kw>
<status status="PASS" starttime="20220707 05:23:43.052" endtime="20220707 05:23:43.113"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220707 05:23:53.315" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220707 05:23:53.205" endtime="20220707 05:23:53.315"/>
</kw>
<msg timestamp="20220707 05:23:53.315" level="FAIL">Element with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220707 05:23:43.113" endtime="20220707 05:23:53.315"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:53.316" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220707 05:23:53.432" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220707 05:23:53.324" endtime="20220707 05:23:53.433"/>
</kw>
<msg timestamp="20220707 05:23:53.433" level="FAIL">Link with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220707 05:23:53.316" endtime="20220707 05:23:53.433"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:56.434" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220707 05:23:56.548" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220707 05:23:56.443" endtime="20220707 05:23:56.549"/>
</kw>
<msg timestamp="20220707 05:23:56.549" level="FAIL">Link with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220707 05:23:56.434" endtime="20220707 05:23:56.549"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:23:59.550" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220707 05:23:59.665" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220707 05:23:59.559" endtime="20220707 05:23:59.665"/>
</kw>
<msg timestamp="20220707 05:23:59.665" level="FAIL">Link with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220707 05:23:59.549" endtime="20220707 05:23:59.666"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:02.666" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220707 05:24:02.799" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-5.png"&gt;&lt;img src="selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220707 05:24:02.680" endtime="20220707 05:24:02.799"/>
</kw>
<msg timestamp="20220707 05:24:02.799" level="FAIL">Link with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220707 05:24:02.666" endtime="20220707 05:24:02.800"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:05.800" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220707 05:24:05.916" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-6.png"&gt;&lt;img src="selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220707 05:24:05.810" endtime="20220707 05:24:05.916"/>
</kw>
<msg timestamp="20220707 05:24:05.916" level="FAIL">Link with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220707 05:24:05.800" endtime="20220707 05:24:05.917"/>
</kw>
<msg timestamp="20220707 05:24:05.917" level="FAIL">Keyword 'Click Link' failed after retrying for 10 seconds. The last error was: Link with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220707 05:23:53.316" endtime="20220707 05:24:05.918"/>
</kw>
<status status="FAIL" starttime="20220707 05:23:43.018" endtime="20220707 05:24:05.918"/>
</kw>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:08.919" endtime="20220707 05:24:08.958"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:08.959" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 05:24:08.958" endtime="20220707 05:24:09.048"/>
</kw>
<status status="PASS" starttime="20220707 05:24:08.958" endtime="20220707 05:24:09.048"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:09.048" endtime="20220707 05:24:09.122"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:09.123" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220707 05:24:09.123" endtime="20220707 05:24:09.184"/>
</kw>
<status status="PASS" starttime="20220707 05:24:09.122" endtime="20220707 05:24:09.184"/>
</kw>
<status status="PASS" starttime="20220707 05:24:08.918" endtime="20220707 05:24:09.184"/>
</kw>
<status status="PASS" starttime="20220707 05:23:43.018" endtime="20220707 05:24:09.184"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 05:24:09.184" endtime="20220707 05:24:09.280"/>
</kw>
<status status="PASS" starttime="20220707 05:23:43.017" endtime="20220707 05:24:09.280"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:23:34.217" endtime="20220707 05:24:09.280"/>
</test>
<test id="s1-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 05:24:09.282" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 05:24:09.282" endtime="20220707 05:24:10.649"/>
</kw>
<status status="PASS" starttime="20220707 05:24:09.282" endtime="20220707 05:24:10.649"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:24:10.649" endtime="20220707 05:24:10.649"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:24:10.649" endtime="20220707 05:24:10.649"/>
</branch>
<status status="PASS" starttime="20220707 05:24:09.282" endtime="20220707 05:24:10.649"/>
</if>
<status status="PASS" starttime="20220707 05:24:09.281" endtime="20220707 05:24:10.650"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 05:24:10.650" endtime="20220707 05:24:10.758"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:24:10.766" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:24:10.758" endtime="20220707 05:24:10.766"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:24:10.767" endtime="20220707 05:24:10.767"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:24:10.767" endtime="20220707 05:24:10.767"/>
</branch>
<status status="PASS" starttime="20220707 05:24:10.767" endtime="20220707 05:24:10.767"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:24:10.767" endtime="20220707 05:24:10.806"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:10.806" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 05:24:10.806" endtime="20220707 05:24:10.902"/>
</kw>
<status status="PASS" starttime="20220707 05:24:10.767" endtime="20220707 05:24:10.902"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 05:24:10.902" endtime="20220707 05:24:11.612"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:24:11.617" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:24:11.613" endtime="20220707 05:24:11.617"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:11.618" endtime="20220707 05:24:11.687"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:11.687" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 05:24:11.687" endtime="20220707 05:24:12.756"/>
</kw>
<status status="PASS" starttime="20220707 05:24:11.618" endtime="20220707 05:24:12.756"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:24:12.757" endtime="20220707 05:24:12.757"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:24:12.757" endtime="20220707 05:24:12.757"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:24:12.756" endtime="20220707 05:24:12.757"/>
</branch>
<status status="PASS" starttime="20220707 05:24:11.617" endtime="20220707 05:24:12.757"/>
</if>
<status status="PASS" starttime="20220707 05:24:11.612" endtime="20220707 05:24:12.757"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 05:24:12.757" endtime="20220707 05:24:12.766"/>
</kw>
<status status="PASS" starttime="20220707 05:24:12.757" endtime="20220707 05:24:12.766"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:24:12.766" endtime="20220707 05:24:12.798"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:12.798" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 05:24:12.844" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 05:24:12.905" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 05:24:12.798" endtime="20220707 05:24:12.905"/>
</kw>
<status status="PASS" starttime="20220707 05:24:12.766" endtime="20220707 05:24:12.906"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:24:12.913" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c66d...</msg>
<status status="PASS" starttime="20220707 05:24:12.906" endtime="20220707 05:24:12.913"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:24:12.913" endtime="20220707 05:24:12.914"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:24:12.914" endtime="20220707 05:24:12.914"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:24:12.913" endtime="20220707 05:24:12.914"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:12.914" endtime="20220707 05:24:12.961"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:12.961" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 05:24:12.961" endtime="20220707 05:24:13.040"/>
</kw>
<status status="PASS" starttime="20220707 05:24:12.914" endtime="20220707 05:24:13.040"/>
</branch>
<status status="PASS" starttime="20220707 05:24:12.913" endtime="20220707 05:24:13.040"/>
</if>
<status status="PASS" starttime="20220707 05:24:12.906" endtime="20220707 05:24:13.040"/>
</kw>
<status status="PASS" starttime="20220707 05:24:10.758" endtime="20220707 05:24:13.040"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:24:13.041" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 05:24:13.041" endtime="20220707 05:24:13.041"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:24:13.041" endtime="20220707 05:24:16.954"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:16.955" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 05:24:16.955" endtime="20220707 05:24:17.344"/>
</kw>
<status status="PASS" starttime="20220707 05:24:13.040" endtime="20220707 05:24:17.344"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 05:24:17.345" endtime="20220707 05:24:17.812"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:17.812" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220707 05:24:17.812" endtime="20220707 05:24:17.966"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:17.967" endtime="20220707 05:24:18.048"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:18.049" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220707 05:24:18.049" endtime="20220707 05:24:18.129"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:24:18.130" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 05:24:18.453" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 05:24:18.453" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 05:24:18.129" endtime="20220707 05:24:18.489"/>
</kw>
<status status="PASS" starttime="20220707 05:24:17.344" endtime="20220707 05:24:18.490"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:24:18.491" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220707 05:24:18.490" endtime="20220707 05:24:18.491"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:18.491" endtime="20220707 05:24:18.535"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:18.536" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220707 05:24:18.535" endtime="20220707 05:24:18.611"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:18.612" endtime="20220707 05:24:18.671"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:24:18.672" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 05:24:18.963" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220707 05:24:18.963" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220707 05:24:18.671" endtime="20220707 05:24:18.980"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:18.980" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220707 05:24:18.980" endtime="20220707 05:24:19.076"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:24:19.077" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220707 05:24:19.077" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220707 05:24:19.077" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 05:24:19.077" endtime="20220707 05:24:19.095"/>
</kw>
<status status="PASS" starttime="20220707 05:24:18.490" endtime="20220707 05:24:19.095"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:24:19.096" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220707 05:24:19.096" endtime="20220707 05:24:19.096"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:24:19.096" endtime="20220707 05:24:19.125"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220707 05:24:19.139" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220707 05:24:19.125" endtime="20220707 05:24:19.139"/>
</kw>
<status status="PASS" starttime="20220707 05:24:19.096" endtime="20220707 05:24:19.139"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:19.141" endtime="20220707 05:24:19.187"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:19.188" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 05:24:19.188" endtime="20220707 05:24:19.265"/>
</kw>
<status status="PASS" starttime="20220707 05:24:19.187" endtime="20220707 05:24:19.265"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:19.265" endtime="20220707 05:24:19.320"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:19.321" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220707 05:24:19.321" endtime="20220707 05:24:19.398"/>
</kw>
<status status="PASS" starttime="20220707 05:24:19.321" endtime="20220707 05:24:19.398"/>
</kw>
<status status="PASS" starttime="20220707 05:24:19.140" endtime="20220707 05:24:19.398"/>
</kw>
<status status="PASS" starttime="20220707 05:24:19.140" endtime="20220707 05:24:19.398"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 05:24:19.398" endtime="20220707 05:24:19.492"/>
</kw>
<status status="PASS" starttime="20220707 05:24:19.140" endtime="20220707 05:24:19.492"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:24:09.281" endtime="20220707 05:24:19.492"/>
</test>
<test id="s1-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 05:24:19.495" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 05:24:19.495" endtime="20220707 05:24:20.643"/>
</kw>
<status status="PASS" starttime="20220707 05:24:19.495" endtime="20220707 05:24:20.643"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:24:20.644" endtime="20220707 05:24:20.644"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:24:20.644" endtime="20220707 05:24:20.644"/>
</branch>
<status status="PASS" starttime="20220707 05:24:19.494" endtime="20220707 05:24:20.644"/>
</if>
<status status="PASS" starttime="20220707 05:24:19.494" endtime="20220707 05:24:20.644"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 05:24:20.644" endtime="20220707 05:24:20.750"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:24:20.764" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:24:20.751" endtime="20220707 05:24:20.764"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:24:20.764" endtime="20220707 05:24:20.764"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:24:20.764" endtime="20220707 05:24:20.764"/>
</branch>
<status status="PASS" starttime="20220707 05:24:20.764" endtime="20220707 05:24:20.764"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:24:20.765" endtime="20220707 05:24:20.794"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:20.795" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 05:24:20.795" endtime="20220707 05:24:20.921"/>
</kw>
<status status="PASS" starttime="20220707 05:24:20.765" endtime="20220707 05:24:20.921"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 05:24:20.921" endtime="20220707 05:24:21.627"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:24:21.633" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:24:21.628" endtime="20220707 05:24:21.633"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:21.633" endtime="20220707 05:24:21.673"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:21.673" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 05:24:21.673" endtime="20220707 05:24:22.926"/>
</kw>
<status status="PASS" starttime="20220707 05:24:21.633" endtime="20220707 05:24:22.926"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:24:22.926" endtime="20220707 05:24:22.926"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:24:22.926" endtime="20220707 05:24:22.926"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:24:22.926" endtime="20220707 05:24:22.926"/>
</branch>
<status status="PASS" starttime="20220707 05:24:21.633" endtime="20220707 05:24:22.926"/>
</if>
<status status="PASS" starttime="20220707 05:24:21.627" endtime="20220707 05:24:22.926"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 05:24:22.927" endtime="20220707 05:24:22.933"/>
</kw>
<status status="PASS" starttime="20220707 05:24:22.926" endtime="20220707 05:24:22.933"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:24:22.934" endtime="20220707 05:24:22.993"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:22.993" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 05:24:23.033" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 05:24:23.170" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 05:24:22.993" endtime="20220707 05:24:23.170"/>
</kw>
<status status="PASS" starttime="20220707 05:24:22.933" endtime="20220707 05:24:23.170"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:24:23.191" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c66e...</msg>
<status status="PASS" starttime="20220707 05:24:23.170" endtime="20220707 05:24:23.191"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:24:23.191" endtime="20220707 05:24:23.191"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:24:23.192" endtime="20220707 05:24:23.192"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:24:23.191" endtime="20220707 05:24:23.192"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:23.192" endtime="20220707 05:24:23.269"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:23.269" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 05:24:23.269" endtime="20220707 05:24:23.349"/>
</kw>
<status status="PASS" starttime="20220707 05:24:23.192" endtime="20220707 05:24:23.349"/>
</branch>
<status status="PASS" starttime="20220707 05:24:23.191" endtime="20220707 05:24:23.349"/>
</if>
<status status="PASS" starttime="20220707 05:24:23.170" endtime="20220707 05:24:23.349"/>
</kw>
<status status="PASS" starttime="20220707 05:24:20.751" endtime="20220707 05:24:23.349"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:24:23.350" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 05:24:23.350" endtime="20220707 05:24:23.351"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:24:23.351" endtime="20220707 05:24:27.372"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:27.373" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 05:24:27.372" endtime="20220707 05:24:27.744"/>
</kw>
<status status="PASS" starttime="20220707 05:24:23.350" endtime="20220707 05:24:27.744"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 05:24:27.744" endtime="20220707 05:24:28.182"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:28.183" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220707 05:24:28.182" endtime="20220707 05:24:28.329"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:28.329" endtime="20220707 05:24:28.402"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:28.403" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220707 05:24:28.403" endtime="20220707 05:24:28.481"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 05:24:28.482" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 05:24:28.779" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 05:24:28.779" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 05:24:28.481" endtime="20220707 05:24:28.808"/>
</kw>
<status status="PASS" starttime="20220707 05:24:27.744" endtime="20220707 05:24:28.809"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:28.809" endtime="20220707 05:24:28.873"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:28.874" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 05:24:28.873" endtime="20220707 05:24:28.919"/>
</kw>
<status status="PASS" starttime="20220707 05:24:28.873" endtime="20220707 05:24:28.919"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<msg timestamp="20220707 05:24:29.024" level="INFO">Suppressing StaleElementReferenceException from Selenium.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220707 05:24:39.198" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220707 05:24:39.079" endtime="20220707 05:24:39.198"/>
</kw>
<msg timestamp="20220707 05:24:39.199" level="FAIL">Element with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220707 05:24:28.920" endtime="20220707 05:24:39.199"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20220707 05:24:39.199" endtime="20220707 05:24:39.199"/>
</kw>
<status status="FAIL" starttime="20220707 05:24:28.809" endtime="20220707 05:24:39.200"/>
</kw>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:42.201" endtime="20220707 05:24:42.233"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:42.234" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 05:24:42.234" endtime="20220707 05:24:42.314"/>
</kw>
<status status="PASS" starttime="20220707 05:24:42.234" endtime="20220707 05:24:42.315"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:42.315" endtime="20220707 05:24:42.349"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:42.349" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220707 05:24:42.349" endtime="20220707 05:24:42.409"/>
</kw>
<status status="PASS" starttime="20220707 05:24:42.349" endtime="20220707 05:24:42.409"/>
</kw>
<status status="PASS" starttime="20220707 05:24:42.200" endtime="20220707 05:24:42.409"/>
</kw>
<status status="PASS" starttime="20220707 05:24:28.809" endtime="20220707 05:24:42.409"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:42.409" endtime="20220707 05:24:42.444"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:42.444" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 05:24:42.444" endtime="20220707 05:24:42.508"/>
</kw>
<status status="PASS" starttime="20220707 05:24:42.409" endtime="20220707 05:24:42.509"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:42.509" endtime="20220707 05:24:42.565"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:42.566" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220707 05:24:42.566" endtime="20220707 05:24:42.710"/>
</kw>
<status status="PASS" starttime="20220707 05:24:42.565" endtime="20220707 05:24:42.710"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:42.710" endtime="20220707 05:24:42.762"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:42.762" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220707 05:24:42.762" endtime="20220707 05:24:42.834"/>
</kw>
<status status="PASS" starttime="20220707 05:24:42.762" endtime="20220707 05:24:42.834"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:42.834" endtime="20220707 05:24:42.878"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:42.879" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220707 05:24:42.879" endtime="20220707 05:24:42.944"/>
</kw>
<status status="PASS" starttime="20220707 05:24:42.878" endtime="20220707 05:24:42.944"/>
</kw>
<status status="PASS" starttime="20220707 05:24:42.509" endtime="20220707 05:24:42.945"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:24:42.946" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220707 05:24:42.945" endtime="20220707 05:24:42.946"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:42.946" endtime="20220707 05:24:43.211"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220707 05:24:43.219" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220707 05:24:43.212" endtime="20220707 05:24:43.219"/>
</kw>
<status status="PASS" starttime="20220707 05:24:42.945" endtime="20220707 05:24:43.220"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:43.220" endtime="20220707 05:24:43.250"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:43.250" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220707 05:24:43.250" endtime="20220707 05:24:43.299"/>
</kw>
<status status="PASS" starttime="20220707 05:24:43.220" endtime="20220707 05:24:43.299"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 05:24:43.299" endtime="20220707 05:24:43.394"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:24:19.493" endtime="20220707 05:24:43.394"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 05:24:43.398" level="INFO">${url} = boards/62c66dd6551580242aa20813</msg>
<status status="PASS" starttime="20220707 05:24:43.397" endtime="20220707 05:24:43.398"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 05:24:43.780" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:24:43.402" endtime="20220707 05:24:43.780"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:24:43.780" endtime="20220707 05:24:43.780"/>
</return>
<msg timestamp="20220707 05:24:43.781" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 05:24:43.396" endtime="20220707 05:24:43.781"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 05:24:43.781" endtime="20220707 05:24:43.781"/>
</return>
<status status="PASS" starttime="20220707 05:24:43.396" endtime="20220707 05:24:43.781"/>
</kw>
<status status="PASS" starttime="20220707 05:24:43.395" endtime="20220707 05:24:43.781"/>
</kw>
<status status="PASS" starttime="20220707 05:24:43.395" endtime="20220707 05:24:43.781"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 05:24:43.781" endtime="20220707 05:24:43.782"/>
</kw>
<status status="PASS" starttime="20220707 05:24:43.395" endtime="20220707 05:24:43.782"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220707 05:23:33.909" endtime="20220707 05:24:43.782"/>
</suite>
<suite id="s1-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 05:24:43.790" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 05:24:43.789" endtime="20220707 05:24:44.836"/>
</kw>
<status status="PASS" starttime="20220707 05:24:43.789" endtime="20220707 05:24:44.836"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 05:24:44.837" endtime="20220707 05:24:44.837"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:24:44.836" endtime="20220707 05:24:44.837"/>
</branch>
<status status="PASS" starttime="20220707 05:24:43.789" endtime="20220707 05:24:44.837"/>
</if>
<status status="PASS" starttime="20220707 05:24:43.789" endtime="20220707 05:24:44.837"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:24:44.837" endtime="20220707 05:24:44.875"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:44.876" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 05:24:44.875" endtime="20220707 05:24:44.972"/>
</kw>
<status status="PASS" starttime="20220707 05:24:44.837" endtime="20220707 05:24:44.972"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 05:24:44.972" endtime="20220707 05:24:45.674"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:24:45.680" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 05:24:45.674" endtime="20220707 05:24:45.680"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:45.680" endtime="20220707 05:24:45.713"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:45.713" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 05:24:45.713" endtime="20220707 05:24:46.841"/>
</kw>
<status status="PASS" starttime="20220707 05:24:45.680" endtime="20220707 05:24:46.841"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:24:46.842" endtime="20220707 05:24:46.842"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:24:46.842" endtime="20220707 05:24:46.842"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:24:46.841" endtime="20220707 05:24:46.842"/>
</branch>
<status status="PASS" starttime="20220707 05:24:45.680" endtime="20220707 05:24:46.842"/>
</if>
<status status="PASS" starttime="20220707 05:24:45.674" endtime="20220707 05:24:46.842"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 05:24:46.842" endtime="20220707 05:24:46.859"/>
</kw>
<status status="PASS" starttime="20220707 05:24:46.842" endtime="20220707 05:24:46.859"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:24:46.859" endtime="20220707 05:24:46.895"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:46.895" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 05:24:46.933" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 05:24:46.999" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 05:24:46.895" endtime="20220707 05:24:46.999"/>
</kw>
<status status="PASS" starttime="20220707 05:24:46.859" endtime="20220707 05:24:47.000"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 05:24:47.009" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c66e...</msg>
<status status="PASS" starttime="20220707 05:24:47.000" endtime="20220707 05:24:47.009"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 05:24:47.009" endtime="20220707 05:24:47.009"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 05:24:47.010" endtime="20220707 05:24:47.010"/>
</kw>
<status status="NOT RUN" starttime="20220707 05:24:47.009" endtime="20220707 05:24:47.010"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 05:24:47.010" endtime="20220707 05:24:47.058"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 05:24:47.058" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 05:24:47.058" endtime="20220707 05:24:47.175"/>
</kw>
<status status="PASS" starttime="20220707 05:24:47.010" endtime="20220707 05:24:47.175"/>
</branch>
<status status="PASS" starttime="20220707 05:24:47.009" endtime="20220707 05:24:47.175"/>
</if>
<status status="PASS" starttime="20220707 05:24:47.000" endtime="20220707 05:24:47.175"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 05:24:47.175" endtime="20220707 05:24:50.922"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 05:24:50.923" endtime="20220707 05:24:50.953"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 05:24:50.954" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220707 05:24:50.954" endtime="20220707 05:24:50.986"/>
</kw>
<status status="PASS" starttime="20220707 05:24:47.175" endtime="20220707 05:24:50.987"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 05:24:50.987" endtime="20220707 05:24:51.076"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 05:24:43.788" endtime="20220707 05:24:51.076"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220707 05:24:43.784" endtime="20220707 05:24:51.077"/>
</suite>
<status status="PASS" starttime="20220707 05:22:00.568" endtime="20220707 05:24:51.078"/>
</suite>
<status status="PASS" starttime="20220707 05:22:00.552" endtime="20220707 05:24:51.081"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.update.description</stat>
<stat pass="1" fail="0" skip="0">board.update.name</stat>
<stat pass="1" fail="0" skip="0">card.comment</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.drag</stat>
<stat pass="1" fail="0" skip="0">card.move</stat>
<stat pass="1" fail="0" skip="0">card.title_board</stat>
<stat pass="15" fail="0" skip="0">gui</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="2" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="4" fail="0" skip="0">regression</stat>
<stat pass="11" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="15" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1" name="Gui">Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="Trello Gui Board">Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s2" name="Trello Gui Cards">Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Trello Gui Labels">Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Gui Lists">Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Trello Gui Login">Trello.Gui.Trello Gui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
