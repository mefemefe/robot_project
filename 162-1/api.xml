<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220706 03:45:05.621" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 03:45:05.767" endtime="20220706 03:45:05.767"/>
</kw>
<status status="PASS" starttime="20220706 03:45:05.766" endtime="20220706 03:45:05.767"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:05.769" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:05.769" endtime="20220706 03:45:05.769"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:05.769" endtime="20220706 03:45:05.770"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:05.771" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 03:45:05.770" endtime="20220706 03:45:05.771"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:06.102" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:05.771" endtime="20220706 03:45:06.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:06.103" endtime="20220706 03:45:06.103"/>
</return>
<msg timestamp="20220706 03:45:06.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:05.768" endtime="20220706 03:45:06.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:06.103" endtime="20220706 03:45:06.103"/>
</return>
<msg timestamp="20220706 03:45:06.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:05.768" endtime="20220706 03:45:06.104"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:06.104" endtime="20220706 03:45:06.109"/>
</kw>
<status status="PASS" starttime="20220706 03:45:06.104" endtime="20220706 03:45:06.109"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:06.111" level="INFO">${url} = boards/62c50541cdf7758e72c5b47d</msg>
<status status="PASS" starttime="20220706 03:45:06.111" endtime="20220706 03:45:06.112"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:06.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:06.112" endtime="20220706 03:45:06.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:06.439" endtime="20220706 03:45:06.439"/>
</return>
<msg timestamp="20220706 03:45:06.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:06.111" endtime="20220706 03:45:06.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:06.439" endtime="20220706 03:45:06.439"/>
</return>
<status status="PASS" starttime="20220706 03:45:06.110" endtime="20220706 03:45:06.440"/>
</kw>
<status status="PASS" starttime="20220706 03:45:06.109" endtime="20220706 03:45:06.440"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 03:45:05.767" endtime="20220706 03:45:06.440"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:06.442" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:06.442" endtime="20220706 03:45:06.442"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:06.442" endtime="20220706 03:45:06.443"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:06.444" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 03:45:06.443" endtime="20220706 03:45:06.444"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:06.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:06.444" endtime="20220706 03:45:06.637"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:06.637" endtime="20220706 03:45:06.637"/>
</return>
<msg timestamp="20220706 03:45:06.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:06.441" endtime="20220706 03:45:06.637"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:06.637" endtime="20220706 03:45:06.637"/>
</return>
<msg timestamp="20220706 03:45:06.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:06.441" endtime="20220706 03:45:06.637"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:06.638" endtime="20220706 03:45:06.643"/>
</kw>
<status status="PASS" starttime="20220706 03:45:06.638" endtime="20220706 03:45:06.643"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:06.645" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:06.644" endtime="20220706 03:45:06.645"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:06.645" endtime="20220706 03:45:06.645"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:06.646" level="INFO">${url} = boards/62c50542048ee93a96b79c46</msg>
<status status="PASS" starttime="20220706 03:45:06.645" endtime="20220706 03:45:06.646"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:06.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:06.646" endtime="20220706 03:45:06.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:06.786" endtime="20220706 03:45:06.786"/>
</return>
<msg timestamp="20220706 03:45:06.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:06.644" endtime="20220706 03:45:06.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:06.787" endtime="20220706 03:45:06.787"/>
</return>
<status status="PASS" starttime="20220706 03:45:06.643" endtime="20220706 03:45:06.787"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:06.789" level="INFO">${url} = boards/62c50542048ee93a96b79c46</msg>
<status status="PASS" starttime="20220706 03:45:06.788" endtime="20220706 03:45:06.789"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:06.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:06.789" endtime="20220706 03:45:06.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:06.878" endtime="20220706 03:45:06.878"/>
</return>
<msg timestamp="20220706 03:45:06.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:06.788" endtime="20220706 03:45:06.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:06.878" endtime="20220706 03:45:06.878"/>
</return>
<msg timestamp="20220706 03:45:06.878" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:06.787" endtime="20220706 03:45:06.878"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:06.879" endtime="20220706 03:45:06.883"/>
</kw>
<status status="PASS" starttime="20220706 03:45:06.878" endtime="20220706 03:45:06.883"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:06.883" endtime="20220706 03:45:06.884"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:06.887" level="INFO">${url} = boards/62c50542048ee93a96b79c46</msg>
<status status="PASS" starttime="20220706 03:45:06.887" endtime="20220706 03:45:06.887"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:07.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:06.887" endtime="20220706 03:45:07.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:07.253" endtime="20220706 03:45:07.253"/>
</return>
<msg timestamp="20220706 03:45:07.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:06.886" endtime="20220706 03:45:07.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:07.253" endtime="20220706 03:45:07.253"/>
</return>
<status status="PASS" starttime="20220706 03:45:06.885" endtime="20220706 03:45:07.253"/>
</kw>
<status status="PASS" starttime="20220706 03:45:06.885" endtime="20220706 03:45:07.253"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 03:45:06.440" endtime="20220706 03:45:07.253"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:07.256" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:07.256" endtime="20220706 03:45:07.256"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:07.256" endtime="20220706 03:45:07.256"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:07.257" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 03:45:07.257" endtime="20220706 03:45:07.257"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:07.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:07.258" endtime="20220706 03:45:07.478"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:07.478" endtime="20220706 03:45:07.478"/>
</return>
<msg timestamp="20220706 03:45:07.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:07.255" endtime="20220706 03:45:07.478"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:07.478" endtime="20220706 03:45:07.478"/>
</return>
<msg timestamp="20220706 03:45:07.479" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:07.255" endtime="20220706 03:45:07.479"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:07.481" level="INFO">${url} = boards/62c50543988eb46d39088a7c</msg>
<status status="PASS" starttime="20220706 03:45:07.480" endtime="20220706 03:45:07.481"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:07.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:07.481" endtime="20220706 03:45:07.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:07.803" endtime="20220706 03:45:07.803"/>
</return>
<msg timestamp="20220706 03:45:07.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:07.480" endtime="20220706 03:45:07.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:07.803" endtime="20220706 03:45:07.803"/>
</return>
<status status="PASS" starttime="20220706 03:45:07.479" endtime="20220706 03:45:07.803"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:07.805" level="INFO">${url} = boards/62c50543988eb46d39088a7c</msg>
<status status="PASS" starttime="20220706 03:45:07.805" endtime="20220706 03:45:07.805"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:07.873" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 03:45:07.805" endtime="20220706 03:45:07.873"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:07.873" endtime="20220706 03:45:07.873"/>
</return>
<msg timestamp="20220706 03:45:07.873" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 03:45:07.804" endtime="20220706 03:45:07.873"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:07.873" endtime="20220706 03:45:07.873"/>
</return>
<status status="PASS" starttime="20220706 03:45:07.804" endtime="20220706 03:45:07.873"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 03:45:07.254" endtime="20220706 03:45:07.874"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:07.876" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:07.875" endtime="20220706 03:45:07.876"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:07.876" endtime="20220706 03:45:07.876"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:07.877" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 03:45:07.876" endtime="20220706 03:45:07.877"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:08.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:07.877" endtime="20220706 03:45:08.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:08.090" endtime="20220706 03:45:08.090"/>
</return>
<msg timestamp="20220706 03:45:08.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:07.875" endtime="20220706 03:45:08.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:08.090" endtime="20220706 03:45:08.090"/>
</return>
<msg timestamp="20220706 03:45:08.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:07.875" endtime="20220706 03:45:08.090"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:08.091" endtime="20220706 03:45:08.095"/>
</kw>
<status status="PASS" starttime="20220706 03:45:08.090" endtime="20220706 03:45:08.095"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:08.098" level="INFO">${url} = boards/62c50543f278f3089f0f2e2f</msg>
<status status="PASS" starttime="20220706 03:45:08.097" endtime="20220706 03:45:08.098"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:08.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.098" endtime="20220706 03:45:08.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:08.188" endtime="20220706 03:45:08.188"/>
</return>
<msg timestamp="20220706 03:45:08.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.097" endtime="20220706 03:45:08.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:08.188" endtime="20220706 03:45:08.188"/>
</return>
<msg timestamp="20220706 03:45:08.189" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.095" endtime="20220706 03:45:08.189"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:08.189" endtime="20220706 03:45:08.193"/>
</kw>
<status status="PASS" starttime="20220706 03:45:08.189" endtime="20220706 03:45:08.193"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:08.193" endtime="20220706 03:45:08.194"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:08.196" level="INFO">${url} = boards/62c50543f278f3089f0f2e2f</msg>
<status status="PASS" starttime="20220706 03:45:08.196" endtime="20220706 03:45:08.196"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:08.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.196" endtime="20220706 03:45:08.542"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:08.542" endtime="20220706 03:45:08.542"/>
</return>
<msg timestamp="20220706 03:45:08.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.195" endtime="20220706 03:45:08.542"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:08.542" endtime="20220706 03:45:08.543"/>
</return>
<status status="PASS" starttime="20220706 03:45:08.194" endtime="20220706 03:45:08.543"/>
</kw>
<status status="PASS" starttime="20220706 03:45:08.194" endtime="20220706 03:45:08.543"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 03:45:07.874" endtime="20220706 03:45:08.543"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:08.545" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:08.545" endtime="20220706 03:45:08.545"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:08.545" endtime="20220706 03:45:08.545"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:08.546" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 03:45:08.545" endtime="20220706 03:45:08.546"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:08.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.546" endtime="20220706 03:45:08.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:08.737" endtime="20220706 03:45:08.737"/>
</return>
<msg timestamp="20220706 03:45:08.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.544" endtime="20220706 03:45:08.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:08.737" endtime="20220706 03:45:08.737"/>
</return>
<msg timestamp="20220706 03:45:08.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.544" endtime="20220706 03:45:08.737"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:08.738" endtime="20220706 03:45:08.742"/>
</kw>
<status status="PASS" starttime="20220706 03:45:08.737" endtime="20220706 03:45:08.742"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:08.744" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:08.743" endtime="20220706 03:45:08.744"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:08.744" endtime="20220706 03:45:08.744"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:08.744" level="INFO">${url} = boards/62c50544d1fec51d237c8a57</msg>
<status status="PASS" starttime="20220706 03:45:08.744" endtime="20220706 03:45:08.744"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:08.874" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.744" endtime="20220706 03:45:08.874"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:08.874" endtime="20220706 03:45:08.874"/>
</return>
<msg timestamp="20220706 03:45:08.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.743" endtime="20220706 03:45:08.875"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:08.875" endtime="20220706 03:45:08.875"/>
</return>
<status status="PASS" starttime="20220706 03:45:08.742" endtime="20220706 03:45:08.875"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:08.876" level="INFO">${url} = boards/62c50544d1fec51d237c8a57</msg>
<status status="PASS" starttime="20220706 03:45:08.876" endtime="20220706 03:45:08.876"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:08.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.877" endtime="20220706 03:45:08.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:08.964" endtime="20220706 03:45:08.964"/>
</return>
<msg timestamp="20220706 03:45:08.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.876" endtime="20220706 03:45:08.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:08.964" endtime="20220706 03:45:08.964"/>
</return>
<msg timestamp="20220706 03:45:08.964" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.875" endtime="20220706 03:45:08.964"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:08.965" endtime="20220706 03:45:08.965"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:08.967" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:08.967" endtime="20220706 03:45:08.967"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:08.967" endtime="20220706 03:45:08.967"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:08.968" level="INFO">${url} = boards/62c50544d1fec51d237c8a57</msg>
<status status="PASS" starttime="20220706 03:45:08.967" endtime="20220706 03:45:08.968"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:09.096" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.968" endtime="20220706 03:45:09.096"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:09.096" endtime="20220706 03:45:09.096"/>
</return>
<msg timestamp="20220706 03:45:09.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:08.966" endtime="20220706 03:45:09.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:09.097" endtime="20220706 03:45:09.097"/>
</return>
<status status="PASS" starttime="20220706 03:45:08.965" endtime="20220706 03:45:09.097"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:09.099" level="INFO">${url} = boards/62c50544d1fec51d237c8a57</msg>
<status status="PASS" starttime="20220706 03:45:09.099" endtime="20220706 03:45:09.099"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:09.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.099" endtime="20220706 03:45:09.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:09.179" endtime="20220706 03:45:09.179"/>
</return>
<msg timestamp="20220706 03:45:09.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.098" endtime="20220706 03:45:09.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:09.180" endtime="20220706 03:45:09.180"/>
</return>
<msg timestamp="20220706 03:45:09.180" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.097" endtime="20220706 03:45:09.180"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:09.180" endtime="20220706 03:45:09.181"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:09.183" level="INFO">${url} = boards/62c50544d1fec51d237c8a57</msg>
<status status="PASS" starttime="20220706 03:45:09.183" endtime="20220706 03:45:09.183"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:09.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.183" endtime="20220706 03:45:09.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:09.537" endtime="20220706 03:45:09.537"/>
</return>
<msg timestamp="20220706 03:45:09.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.182" endtime="20220706 03:45:09.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:09.537" endtime="20220706 03:45:09.538"/>
</return>
<status status="PASS" starttime="20220706 03:45:09.182" endtime="20220706 03:45:09.538"/>
</kw>
<status status="PASS" starttime="20220706 03:45:09.181" endtime="20220706 03:45:09.538"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 03:45:08.543" endtime="20220706 03:45:09.538"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220706 03:45:09.539" endtime="20220706 03:45:09.540"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220706 03:45:05.644" endtime="20220706 03:45:09.540"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 03:45:09.552" endtime="20220706 03:45:09.553"/>
</kw>
<status status="PASS" starttime="20220706 03:45:09.552" endtime="20220706 03:45:09.553"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:09.554" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:09.554" endtime="20220706 03:45:09.554"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:09.554" endtime="20220706 03:45:09.555"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:09.555" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 03:45:09.555" endtime="20220706 03:45:09.556"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:09.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.556" endtime="20220706 03:45:09.856"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:09.856" endtime="20220706 03:45:09.856"/>
</return>
<msg timestamp="20220706 03:45:09.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.553" endtime="20220706 03:45:09.857"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:09.857" endtime="20220706 03:45:09.857"/>
</return>
<msg timestamp="20220706 03:45:09.857" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.553" endtime="20220706 03:45:09.857"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 03:45:09.858" level="INFO">${TEST_SUITE_BOARD_ID} = 62c505455d995a44b9f58e58</msg>
<status status="PASS" starttime="20220706 03:45:09.857" endtime="20220706 03:45:09.858"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:09.859" level="INFO">${url} = boards/62c505455d995a44b9f58e58/lists/</msg>
<status status="PASS" starttime="20220706 03:45:09.859" endtime="20220706 03:45:09.859"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:09.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.860" endtime="20220706 03:45:09.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:09.942" endtime="20220706 03:45:09.942"/>
</return>
<msg timestamp="20220706 03:45:09.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.858" endtime="20220706 03:45:09.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:09.942" endtime="20220706 03:45:09.942"/>
</return>
<msg timestamp="20220706 03:45:09.942" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.858" endtime="20220706 03:45:09.942"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 03:45:09.943" level="INFO">${TEST_SUITE_LIST_ID} = 62c505455d995a44b9f58e5f</msg>
<status status="PASS" starttime="20220706 03:45:09.943" endtime="20220706 03:45:09.943"/>
</kw>
<status status="PASS" starttime="20220706 03:45:09.553" endtime="20220706 03:45:09.943"/>
</kw>
<status status="PASS" starttime="20220706 03:45:09.552" endtime="20220706 03:45:09.944"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:09.946" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:09.946" endtime="20220706 03:45:09.946"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:09.946" endtime="20220706 03:45:09.947"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:09.948" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 03:45:09.947" endtime="20220706 03:45:09.948"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:10.143" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.948" endtime="20220706 03:45:10.143"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:10.143" endtime="20220706 03:45:10.143"/>
</return>
<msg timestamp="20220706 03:45:10.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.945" endtime="20220706 03:45:10.144"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:10.144" endtime="20220706 03:45:10.144"/>
</return>
<msg timestamp="20220706 03:45:10.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:09.944" endtime="20220706 03:45:10.144"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:10.144" endtime="20220706 03:45:10.150"/>
</kw>
<status status="PASS" starttime="20220706 03:45:10.144" endtime="20220706 03:45:10.150"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:10.151" endtime="20220706 03:45:10.151"/>
</return>
<msg timestamp="20220706 03:45:10.152" level="INFO">${CARD_ID} = 62c505464987111191f95ad0</msg>
<status status="PASS" starttime="20220706 03:45:10.151" endtime="20220706 03:45:10.152"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:10.153" level="INFO">${url} = cards/62c505464987111191f95ad0</msg>
<status status="PASS" starttime="20220706 03:45:10.153" endtime="20220706 03:45:10.153"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:10.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.153" endtime="20220706 03:45:10.250"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:10.250" endtime="20220706 03:45:10.250"/>
</return>
<msg timestamp="20220706 03:45:10.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.152" endtime="20220706 03:45:10.250"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:10.250" endtime="20220706 03:45:10.251"/>
</return>
<msg timestamp="20220706 03:45:10.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.152" endtime="20220706 03:45:10.251"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:10.251" endtime="20220706 03:45:10.251"/>
</return>
<msg timestamp="20220706 03:45:10.252" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220706 03:45:10.251" endtime="20220706 03:45:10.252"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:10.252" endtime="20220706 03:45:10.252"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:10.254" level="INFO">${url} = cards/62c505464987111191f95ad0</msg>
<status status="PASS" starttime="20220706 03:45:10.254" endtime="20220706 03:45:10.254"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:10.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.255" endtime="20220706 03:45:10.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:10.456" endtime="20220706 03:45:10.456"/>
</return>
<msg timestamp="20220706 03:45:10.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.253" endtime="20220706 03:45:10.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:10.456" endtime="20220706 03:45:10.456"/>
</return>
<status status="PASS" starttime="20220706 03:45:10.253" endtime="20220706 03:45:10.456"/>
</kw>
<status status="PASS" starttime="20220706 03:45:10.253" endtime="20220706 03:45:10.456"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 03:45:09.944" endtime="20220706 03:45:10.456"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:10.459" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:10.459" endtime="20220706 03:45:10.459"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:10.459" endtime="20220706 03:45:10.460"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:10.461" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 03:45:10.460" endtime="20220706 03:45:10.461"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:10.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.461" endtime="20220706 03:45:10.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:10.686" endtime="20220706 03:45:10.686"/>
</return>
<msg timestamp="20220706 03:45:10.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.458" endtime="20220706 03:45:10.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:10.686" endtime="20220706 03:45:10.687"/>
</return>
<msg timestamp="20220706 03:45:10.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.458" endtime="20220706 03:45:10.687"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:10.687" endtime="20220706 03:45:10.687"/>
</return>
<msg timestamp="20220706 03:45:10.688" level="INFO">${CARD_ID} = 62c50546862d8a49f2754199</msg>
<status status="PASS" starttime="20220706 03:45:10.687" endtime="20220706 03:45:10.688"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:10.690" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:10.690" endtime="20220706 03:45:10.690"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:10.690" endtime="20220706 03:45:10.691"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:10.691" level="INFO">${url} = cards/62c50546862d8a49f2754199</msg>
<status status="PASS" starttime="20220706 03:45:10.691" endtime="20220706 03:45:10.691"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:10.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.691" endtime="20220706 03:45:10.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:10.851" endtime="20220706 03:45:10.851"/>
</return>
<msg timestamp="20220706 03:45:10.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.689" endtime="20220706 03:45:10.852"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:10.852" endtime="20220706 03:45:10.852"/>
</return>
<msg timestamp="20220706 03:45:10.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.688" endtime="20220706 03:45:10.852"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:10.852" endtime="20220706 03:45:10.852"/>
</return>
<status status="PASS" starttime="20220706 03:45:10.688" endtime="20220706 03:45:10.852"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:10.854" level="INFO">${url} = cards/62c50546862d8a49f2754199</msg>
<status status="PASS" starttime="20220706 03:45:10.853" endtime="20220706 03:45:10.854"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:10.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.854" endtime="20220706 03:45:10.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:10.939" endtime="20220706 03:45:10.939"/>
</return>
<msg timestamp="20220706 03:45:10.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.853" endtime="20220706 03:45:10.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:10.939" endtime="20220706 03:45:10.939"/>
</return>
<msg timestamp="20220706 03:45:10.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.852" endtime="20220706 03:45:10.940"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:10.940" endtime="20220706 03:45:10.940"/>
</return>
<msg timestamp="20220706 03:45:10.941" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220706 03:45:10.940" endtime="20220706 03:45:10.941"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 03:45:10.941" endtime="20220706 03:45:10.941"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:10.943" level="INFO">${url} = cards/62c50546862d8a49f2754199</msg>
<status status="PASS" starttime="20220706 03:45:10.943" endtime="20220706 03:45:10.943"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:11.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.943" endtime="20220706 03:45:11.104"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:11.104" endtime="20220706 03:45:11.104"/>
</return>
<msg timestamp="20220706 03:45:11.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:10.942" endtime="20220706 03:45:11.105"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:11.105" endtime="20220706 03:45:11.105"/>
</return>
<status status="PASS" starttime="20220706 03:45:10.942" endtime="20220706 03:45:11.105"/>
</kw>
<status status="PASS" starttime="20220706 03:45:10.941" endtime="20220706 03:45:11.105"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 03:45:10.457" endtime="20220706 03:45:11.105"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:11.108" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:11.108" endtime="20220706 03:45:11.108"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:11.108" endtime="20220706 03:45:11.108"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:11.109" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 03:45:11.108" endtime="20220706 03:45:11.109"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:11.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.110" endtime="20220706 03:45:11.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:11.284" endtime="20220706 03:45:11.284"/>
</return>
<msg timestamp="20220706 03:45:11.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.107" endtime="20220706 03:45:11.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:11.284" endtime="20220706 03:45:11.284"/>
</return>
<msg timestamp="20220706 03:45:11.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.107" endtime="20220706 03:45:11.284"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:11.285" endtime="20220706 03:45:11.285"/>
</return>
<msg timestamp="20220706 03:45:11.285" level="INFO">${CARD_ID} = 62c50547f9148b14b0fbb4e1</msg>
<status status="PASS" starttime="20220706 03:45:11.284" endtime="20220706 03:45:11.285"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:11.287" level="INFO">${url} = cards/62c50547f9148b14b0fbb4e1</msg>
<status status="PASS" starttime="20220706 03:45:11.286" endtime="20220706 03:45:11.287"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:11.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.287" endtime="20220706 03:45:11.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:11.469" endtime="20220706 03:45:11.469"/>
</return>
<msg timestamp="20220706 03:45:11.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.286" endtime="20220706 03:45:11.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:11.470" endtime="20220706 03:45:11.470"/>
</return>
<msg timestamp="20220706 03:45:11.470" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.285" endtime="20220706 03:45:11.470"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:11.471" endtime="20220706 03:45:11.473"/>
</kw>
<status status="PASS" starttime="20220706 03:45:11.470" endtime="20220706 03:45:11.473"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:11.475" level="INFO">${url} = cards/62c50547f9148b14b0fbb4e1</msg>
<status status="PASS" starttime="20220706 03:45:11.474" endtime="20220706 03:45:11.475"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:11.545" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 03:45:11.475" endtime="20220706 03:45:11.545"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:11.545" endtime="20220706 03:45:11.545"/>
</return>
<msg timestamp="20220706 03:45:11.545" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 03:45:11.474" endtime="20220706 03:45:11.545"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:11.545" endtime="20220706 03:45:11.545"/>
</return>
<status status="PASS" starttime="20220706 03:45:11.473" endtime="20220706 03:45:11.545"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 03:45:11.106" endtime="20220706 03:45:11.546"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:11.549" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:11.549" endtime="20220706 03:45:11.549"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:11.549" endtime="20220706 03:45:11.550"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:11.551" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 03:45:11.550" endtime="20220706 03:45:11.551"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:11.736" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.551" endtime="20220706 03:45:11.736"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:11.736" endtime="20220706 03:45:11.736"/>
</return>
<msg timestamp="20220706 03:45:11.736" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.548" endtime="20220706 03:45:11.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:11.737" endtime="20220706 03:45:11.737"/>
</return>
<msg timestamp="20220706 03:45:11.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.548" endtime="20220706 03:45:11.737"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:11.737" endtime="20220706 03:45:11.737"/>
</return>
<msg timestamp="20220706 03:45:11.738" level="INFO">${CARD_ID} = 62c50547a652762494517d9d</msg>
<status status="PASS" starttime="20220706 03:45:11.737" endtime="20220706 03:45:11.738"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:11.740" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:11.740" endtime="20220706 03:45:11.740"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:11.740" endtime="20220706 03:45:11.741"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:11.741" level="INFO">${url} = cards/62c50547a652762494517d9d</msg>
<status status="PASS" starttime="20220706 03:45:11.741" endtime="20220706 03:45:11.741"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:11.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.741" endtime="20220706 03:45:11.944"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:11.944" endtime="20220706 03:45:11.944"/>
</return>
<msg timestamp="20220706 03:45:11.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.739" endtime="20220706 03:45:11.944"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:11.944" endtime="20220706 03:45:11.944"/>
</return>
<msg timestamp="20220706 03:45:11.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.738" endtime="20220706 03:45:11.944"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:11.945" endtime="20220706 03:45:11.951"/>
</kw>
<status status="PASS" starttime="20220706 03:45:11.945" endtime="20220706 03:45:11.951"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:11.952" level="INFO">${url} = cards/62c50547a652762494517d9d</msg>
<status status="PASS" starttime="20220706 03:45:11.952" endtime="20220706 03:45:11.952"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:12.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.952" endtime="20220706 03:45:12.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:12.040" endtime="20220706 03:45:12.040"/>
</return>
<msg timestamp="20220706 03:45:12.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.951" endtime="20220706 03:45:12.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:12.040" endtime="20220706 03:45:12.040"/>
</return>
<msg timestamp="20220706 03:45:12.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:11.951" endtime="20220706 03:45:12.040"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:12.041" endtime="20220706 03:45:12.041"/>
</return>
<msg timestamp="20220706 03:45:12.042" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220706 03:45:12.041" endtime="20220706 03:45:12.042"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:12.042" endtime="20220706 03:45:12.042"/>
</return>
<msg timestamp="20220706 03:45:12.043" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220706 03:45:12.042" endtime="20220706 03:45:12.043"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:12.043" endtime="20220706 03:45:12.043"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:12.043" endtime="20220706 03:45:12.044"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:12.045" level="INFO">${url} = cards/62c50547a652762494517d9d</msg>
<status status="PASS" starttime="20220706 03:45:12.045" endtime="20220706 03:45:12.045"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:12.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:12.045" endtime="20220706 03:45:12.235"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:12.235" endtime="20220706 03:45:12.235"/>
</return>
<msg timestamp="20220706 03:45:12.235" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:12.044" endtime="20220706 03:45:12.235"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:12.235" endtime="20220706 03:45:12.235"/>
</return>
<status status="PASS" starttime="20220706 03:45:12.044" endtime="20220706 03:45:12.235"/>
</kw>
<status status="PASS" starttime="20220706 03:45:12.044" endtime="20220706 03:45:12.235"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 03:45:11.546" endtime="20220706 03:45:12.235"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:12.238" level="INFO">${url} = boards/62c505455d995a44b9f58e58</msg>
<status status="PASS" starttime="20220706 03:45:12.238" endtime="20220706 03:45:12.238"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:12.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:12.238" endtime="20220706 03:45:12.588"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:12.588" endtime="20220706 03:45:12.589"/>
</return>
<msg timestamp="20220706 03:45:12.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:12.237" endtime="20220706 03:45:12.589"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:12.589" endtime="20220706 03:45:12.589"/>
</return>
<status status="PASS" starttime="20220706 03:45:12.237" endtime="20220706 03:45:12.589"/>
</kw>
<status status="PASS" starttime="20220706 03:45:12.236" endtime="20220706 03:45:12.589"/>
</kw>
<status status="PASS" starttime="20220706 03:45:12.236" endtime="20220706 03:45:12.589"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 03:45:12.589" endtime="20220706 03:45:12.590"/>
</kw>
<status status="PASS" starttime="20220706 03:45:12.236" endtime="20220706 03:45:12.591"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220706 03:45:09.541" endtime="20220706 03:45:12.591"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 03:45:12.603" endtime="20220706 03:45:12.603"/>
</kw>
<status status="PASS" starttime="20220706 03:45:12.603" endtime="20220706 03:45:12.604"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:12.605" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:12.605" endtime="20220706 03:45:12.605"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:12.605" endtime="20220706 03:45:12.605"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:12.606" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 03:45:12.605" endtime="20220706 03:45:12.606"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:12.915" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:12.606" endtime="20220706 03:45:12.916"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:12.916" endtime="20220706 03:45:12.916"/>
</return>
<msg timestamp="20220706 03:45:12.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:12.604" endtime="20220706 03:45:12.916"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:12.916" endtime="20220706 03:45:12.916"/>
</return>
<msg timestamp="20220706 03:45:12.916" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:12.604" endtime="20220706 03:45:12.916"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 03:45:12.917" level="INFO">${TEST_SUITE_BOARD_ID} = 62c505487958143154a5061b</msg>
<status status="PASS" starttime="20220706 03:45:12.916" endtime="20220706 03:45:12.917"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:12.919" level="INFO">${url} = boards/62c505487958143154a5061b/lists/</msg>
<status status="PASS" starttime="20220706 03:45:12.918" endtime="20220706 03:45:12.919"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:13.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:12.919" endtime="20220706 03:45:13.004"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.004" endtime="20220706 03:45:13.004"/>
</return>
<msg timestamp="20220706 03:45:13.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:12.918" endtime="20220706 03:45:13.004"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.004" endtime="20220706 03:45:13.004"/>
</return>
<msg timestamp="20220706 03:45:13.004" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:12.917" endtime="20220706 03:45:13.004"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 03:45:13.005" level="INFO">${TEST_SUITE_LIST_ID} = 62c505487958143154a50622</msg>
<status status="PASS" starttime="20220706 03:45:13.005" endtime="20220706 03:45:13.005"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:13.007" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:13.007" endtime="20220706 03:45:13.007"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:13.007" endtime="20220706 03:45:13.007"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:13.009" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 03:45:13.008" endtime="20220706 03:45:13.009"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:13.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.009" endtime="20220706 03:45:13.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.206" endtime="20220706 03:45:13.206"/>
</return>
<msg timestamp="20220706 03:45:13.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.006" endtime="20220706 03:45:13.207"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.207" endtime="20220706 03:45:13.207"/>
</return>
<msg timestamp="20220706 03:45:13.207" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.006" endtime="20220706 03:45:13.207"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 03:45:13.208" level="INFO">${TEST_SUITE_CARD_ID} = 62c505497f1d305f8021098f</msg>
<status status="PASS" starttime="20220706 03:45:13.207" endtime="20220706 03:45:13.209"/>
</kw>
<status status="PASS" starttime="20220706 03:45:12.604" endtime="20220706 03:45:13.209"/>
</kw>
<status status="PASS" starttime="20220706 03:45:12.603" endtime="20220706 03:45:13.209"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:13.211" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:13.211" endtime="20220706 03:45:13.211"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:13.211" endtime="20220706 03:45:13.212"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:13.213" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 03:45:13.212" endtime="20220706 03:45:13.213"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:13.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.213" endtime="20220706 03:45:13.366"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.366" endtime="20220706 03:45:13.366"/>
</return>
<msg timestamp="20220706 03:45:13.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.210" endtime="20220706 03:45:13.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.367" endtime="20220706 03:45:13.367"/>
</return>
<msg timestamp="20220706 03:45:13.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.209" endtime="20220706 03:45:13.367"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:13.368" endtime="20220706 03:45:13.368"/>
</return>
<msg timestamp="20220706 03:45:13.369" level="INFO">${checklist_id} = 62c505499ad28d6adea6c168</msg>
<status status="PASS" starttime="20220706 03:45:13.367" endtime="20220706 03:45:13.369"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:13.370" level="INFO">${url} = checklists/62c505499ad28d6adea6c168</msg>
<status status="PASS" starttime="20220706 03:45:13.370" endtime="20220706 03:45:13.370"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:13.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.371" endtime="20220706 03:45:13.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.455" endtime="20220706 03:45:13.455"/>
</return>
<msg timestamp="20220706 03:45:13.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.369" endtime="20220706 03:45:13.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.455" endtime="20220706 03:45:13.455"/>
</return>
<msg timestamp="20220706 03:45:13.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.369" endtime="20220706 03:45:13.456"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:13.456" endtime="20220706 03:45:13.456"/>
</return>
<msg timestamp="20220706 03:45:13.457" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220706 03:45:13.456" endtime="20220706 03:45:13.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:13.457" endtime="20220706 03:45:13.457"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:13.459" level="INFO">${url} = checklists/62c505499ad28d6adea6c168</msg>
<status status="PASS" starttime="20220706 03:45:13.459" endtime="20220706 03:45:13.459"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:13.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.459" endtime="20220706 03:45:13.589"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.589" endtime="20220706 03:45:13.590"/>
</return>
<msg timestamp="20220706 03:45:13.590" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.458" endtime="20220706 03:45:13.590"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.590" endtime="20220706 03:45:13.590"/>
</return>
<status status="PASS" starttime="20220706 03:45:13.458" endtime="20220706 03:45:13.590"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 03:45:13.209" endtime="20220706 03:45:13.590"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:13.593" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:13.593" endtime="20220706 03:45:13.593"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:13.593" endtime="20220706 03:45:13.593"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:13.594" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 03:45:13.594" endtime="20220706 03:45:13.595"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:13.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.595" endtime="20220706 03:45:13.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.732" endtime="20220706 03:45:13.732"/>
</return>
<msg timestamp="20220706 03:45:13.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.592" endtime="20220706 03:45:13.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.732" endtime="20220706 03:45:13.732"/>
</return>
<msg timestamp="20220706 03:45:13.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.592" endtime="20220706 03:45:13.732"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:13.733" endtime="20220706 03:45:13.733"/>
</return>
<msg timestamp="20220706 03:45:13.734" level="INFO">${checklist_id} = 62c50549c05eb08d195f515d</msg>
<status status="PASS" starttime="20220706 03:45:13.733" endtime="20220706 03:45:13.734"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:13.736" level="INFO">${url} = checklists/62c50549c05eb08d195f515d</msg>
<status status="PASS" starttime="20220706 03:45:13.735" endtime="20220706 03:45:13.736"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:13.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.736" endtime="20220706 03:45:13.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.868" endtime="20220706 03:45:13.868"/>
</return>
<msg timestamp="20220706 03:45:13.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.735" endtime="20220706 03:45:13.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.868" endtime="20220706 03:45:13.868"/>
</return>
<msg timestamp="20220706 03:45:13.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.734" endtime="20220706 03:45:13.869"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:13.869" endtime="20220706 03:45:13.871"/>
</kw>
<status status="PASS" starttime="20220706 03:45:13.869" endtime="20220706 03:45:13.871"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:13.872" level="INFO">${url} = checklists/62c50549c05eb08d195f515d</msg>
<status status="PASS" starttime="20220706 03:45:13.872" endtime="20220706 03:45:13.872"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:13.940" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 03:45:13.872" endtime="20220706 03:45:13.940"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.940" endtime="20220706 03:45:13.940"/>
</return>
<msg timestamp="20220706 03:45:13.940" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 03:45:13.871" endtime="20220706 03:45:13.940"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:13.940" endtime="20220706 03:45:13.940"/>
</return>
<status status="PASS" starttime="20220706 03:45:13.871" endtime="20220706 03:45:13.940"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 03:45:13.591" endtime="20220706 03:45:13.941"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:13.945" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:13.943" endtime="20220706 03:45:13.945"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:13.945" endtime="20220706 03:45:13.946"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:13.946" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 03:45:13.946" endtime="20220706 03:45:13.946"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:14.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.947" endtime="20220706 03:45:14.091"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:14.091" endtime="20220706 03:45:14.091"/>
</return>
<msg timestamp="20220706 03:45:14.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.942" endtime="20220706 03:45:14.091"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:14.091" endtime="20220706 03:45:14.091"/>
</return>
<msg timestamp="20220706 03:45:14.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:13.941" endtime="20220706 03:45:14.091"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:14.092" endtime="20220706 03:45:14.092"/>
</return>
<msg timestamp="20220706 03:45:14.093" level="INFO">${checklist_id} = 62c5054a591b47271f600551</msg>
<status status="PASS" starttime="20220706 03:45:14.091" endtime="20220706 03:45:14.093"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:14.094" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:14.094" endtime="20220706 03:45:14.094"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:14.094" endtime="20220706 03:45:14.095"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:14.095" level="INFO">${url} = checklists/62c5054a591b47271f600551</msg>
<status status="PASS" starttime="20220706 03:45:14.095" endtime="20220706 03:45:14.095"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:14.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:14.095" endtime="20220706 03:45:14.222"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:14.222" endtime="20220706 03:45:14.222"/>
</return>
<msg timestamp="20220706 03:45:14.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:14.093" endtime="20220706 03:45:14.222"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:14.222" endtime="20220706 03:45:14.222"/>
</return>
<msg timestamp="20220706 03:45:14.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:14.093" endtime="20220706 03:45:14.222"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:14.224" level="INFO">${url} = checklists/62c5054a591b47271f600551</msg>
<status status="PASS" starttime="20220706 03:45:14.223" endtime="20220706 03:45:14.224"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:14.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:14.224" endtime="20220706 03:45:14.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:14.308" endtime="20220706 03:45:14.308"/>
</return>
<msg timestamp="20220706 03:45:14.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:14.223" endtime="20220706 03:45:14.309"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:14.309" endtime="20220706 03:45:14.309"/>
</return>
<msg timestamp="20220706 03:45:14.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:14.222" endtime="20220706 03:45:14.309"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:14.309" endtime="20220706 03:45:14.309"/>
</return>
<msg timestamp="20220706 03:45:14.310" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220706 03:45:14.309" endtime="20220706 03:45:14.310"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:14.310" endtime="20220706 03:45:14.311"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:14.322" level="INFO">${url} = checklists/62c5054a591b47271f600551</msg>
<status status="PASS" starttime="20220706 03:45:14.322" endtime="20220706 03:45:14.323"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:14.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:14.323" endtime="20220706 03:45:14.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:14.453" endtime="20220706 03:45:14.453"/>
</return>
<msg timestamp="20220706 03:45:14.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:14.321" endtime="20220706 03:45:14.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:14.454" endtime="20220706 03:45:14.454"/>
</return>
<status status="PASS" starttime="20220706 03:45:14.311" endtime="20220706 03:45:14.454"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 03:45:13.941" endtime="20220706 03:45:14.454"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:14.457" level="INFO">${url} = boards/62c505487958143154a5061b</msg>
<status status="PASS" starttime="20220706 03:45:14.457" endtime="20220706 03:45:14.457"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:14.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:14.457" endtime="20220706 03:45:14.885"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:14.885" endtime="20220706 03:45:14.885"/>
</return>
<msg timestamp="20220706 03:45:14.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:14.456" endtime="20220706 03:45:14.885"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:14.885" endtime="20220706 03:45:14.885"/>
</return>
<status status="PASS" starttime="20220706 03:45:14.456" endtime="20220706 03:45:14.885"/>
</kw>
<status status="PASS" starttime="20220706 03:45:14.455" endtime="20220706 03:45:14.886"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 03:45:14.886" endtime="20220706 03:45:14.887"/>
</kw>
<status status="PASS" starttime="20220706 03:45:14.455" endtime="20220706 03:45:14.887"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220706 03:45:12.592" endtime="20220706 03:45:14.887"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 03:45:14.898" endtime="20220706 03:45:14.898"/>
</kw>
<status status="PASS" starttime="20220706 03:45:14.898" endtime="20220706 03:45:14.899"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:14.900" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:14.900" endtime="20220706 03:45:14.900"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:14.900" endtime="20220706 03:45:14.900"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:14.901" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 03:45:14.901" endtime="20220706 03:45:14.901"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:15.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:14.901" endtime="20220706 03:45:15.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:15.179" endtime="20220706 03:45:15.179"/>
</return>
<msg timestamp="20220706 03:45:15.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:14.899" endtime="20220706 03:45:15.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:15.179" endtime="20220706 03:45:15.179"/>
</return>
<msg timestamp="20220706 03:45:15.180" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:14.899" endtime="20220706 03:45:15.180"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 03:45:15.181" level="INFO">${TEST_SUITE_BOARD_ID} = 62c5054b675e447e661e255f</msg>
<status status="PASS" starttime="20220706 03:45:15.180" endtime="20220706 03:45:15.181"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:15.260" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.181" endtime="20220706 03:45:15.260"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 03:45:15.261" level="INFO">${TEST_SUITE_LIST_ID} = 62c5054b675e447e661e2566</msg>
<status status="PASS" starttime="20220706 03:45:15.260" endtime="20220706 03:45:15.261"/>
</kw>
<status status="PASS" starttime="20220706 03:45:14.899" endtime="20220706 03:45:15.261"/>
</kw>
<status status="PASS" starttime="20220706 03:45:14.898" endtime="20220706 03:45:15.261"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:15.263" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:15.263" endtime="20220706 03:45:15.263"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:15.263" endtime="20220706 03:45:15.263"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:15.264" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 03:45:15.264" endtime="20220706 03:45:15.264"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:15.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.264" endtime="20220706 03:45:15.404"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:15.404" endtime="20220706 03:45:15.404"/>
</return>
<msg timestamp="20220706 03:45:15.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.262" endtime="20220706 03:45:15.405"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:15.405" endtime="20220706 03:45:15.405"/>
</return>
<msg timestamp="20220706 03:45:15.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.262" endtime="20220706 03:45:15.405"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:15.406" endtime="20220706 03:45:15.408"/>
</kw>
<status status="PASS" starttime="20220706 03:45:15.405" endtime="20220706 03:45:15.408"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:15.408" endtime="20220706 03:45:15.408"/>
</return>
<msg timestamp="20220706 03:45:15.409" level="INFO">${LABEL_ID} = 62c5054b7b4b7044ebd8c583</msg>
<status status="PASS" starttime="20220706 03:45:15.408" endtime="20220706 03:45:15.409"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:15.411" level="INFO">${url} = labels/62c5054b7b4b7044ebd8c583</msg>
<status status="PASS" starttime="20220706 03:45:15.410" endtime="20220706 03:45:15.411"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:15.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.411" endtime="20220706 03:45:15.487"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:15.487" endtime="20220706 03:45:15.487"/>
</return>
<msg timestamp="20220706 03:45:15.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.410" endtime="20220706 03:45:15.487"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:15.487" endtime="20220706 03:45:15.487"/>
</return>
<msg timestamp="20220706 03:45:15.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.409" endtime="20220706 03:45:15.487"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:15.488" endtime="20220706 03:45:15.488"/>
</return>
<msg timestamp="20220706 03:45:15.488" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220706 03:45:15.487" endtime="20220706 03:45:15.488"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:15.489" endtime="20220706 03:45:15.489"/>
</return>
<msg timestamp="20220706 03:45:15.489" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220706 03:45:15.488" endtime="20220706 03:45:15.489"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:15.490" endtime="20220706 03:45:15.490"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:15.490" endtime="20220706 03:45:15.490"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:15.492" level="INFO">${url} = labels/62c5054b7b4b7044ebd8c583</msg>
<status status="PASS" starttime="20220706 03:45:15.492" endtime="20220706 03:45:15.492"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:15.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.493" endtime="20220706 03:45:15.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:15.638" endtime="20220706 03:45:15.638"/>
</return>
<msg timestamp="20220706 03:45:15.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.491" endtime="20220706 03:45:15.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:15.638" endtime="20220706 03:45:15.638"/>
</return>
<status status="PASS" starttime="20220706 03:45:15.491" endtime="20220706 03:45:15.638"/>
</kw>
<status status="PASS" starttime="20220706 03:45:15.491" endtime="20220706 03:45:15.638"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 03:45:15.261" endtime="20220706 03:45:15.638"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:15.642" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:15.641" endtime="20220706 03:45:15.642"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:15.642" endtime="20220706 03:45:15.642"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:15.643" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 03:45:15.642" endtime="20220706 03:45:15.643"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:15.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.643" endtime="20220706 03:45:15.760"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:15.760" endtime="20220706 03:45:15.760"/>
</return>
<msg timestamp="20220706 03:45:15.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.641" endtime="20220706 03:45:15.761"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:15.761" endtime="20220706 03:45:15.761"/>
</return>
<msg timestamp="20220706 03:45:15.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.640" endtime="20220706 03:45:15.761"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:15.761" endtime="20220706 03:45:15.763"/>
</kw>
<status status="PASS" starttime="20220706 03:45:15.761" endtime="20220706 03:45:15.763"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:15.764" endtime="20220706 03:45:15.764"/>
</return>
<msg timestamp="20220706 03:45:15.764" level="INFO">${LABEL_ID} = 62c5054b7e23427d7e4c597f</msg>
<status status="PASS" starttime="20220706 03:45:15.763" endtime="20220706 03:45:15.764"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:15.765" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:15.765" endtime="20220706 03:45:15.765"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:15.766" endtime="20220706 03:45:15.766"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:15.766" level="INFO">${url} = labels/62c5054b7e23427d7e4c597f</msg>
<status status="PASS" starttime="20220706 03:45:15.766" endtime="20220706 03:45:15.766"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:15.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.766" endtime="20220706 03:45:15.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:15.884" endtime="20220706 03:45:15.884"/>
</return>
<msg timestamp="20220706 03:45:15.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.765" endtime="20220706 03:45:15.885"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:15.885" endtime="20220706 03:45:15.885"/>
</return>
<msg timestamp="20220706 03:45:15.885" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.764" endtime="20220706 03:45:15.885"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:15.885" endtime="20220706 03:45:15.886"/>
</return>
<msg timestamp="20220706 03:45:15.886" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220706 03:45:15.885" endtime="20220706 03:45:15.886"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:15.887" endtime="20220706 03:45:15.887"/>
</return>
<msg timestamp="20220706 03:45:15.888" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220706 03:45:15.886" endtime="20220706 03:45:15.888"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:15.888" endtime="20220706 03:45:15.888"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:15.888" endtime="20220706 03:45:15.888"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:15.890" level="INFO">${url} = labels/62c5054b7e23427d7e4c597f</msg>
<status status="PASS" starttime="20220706 03:45:15.890" endtime="20220706 03:45:15.890"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:16.051" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.890" endtime="20220706 03:45:16.051"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:16.051" endtime="20220706 03:45:16.051"/>
</return>
<msg timestamp="20220706 03:45:16.051" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:15.889" endtime="20220706 03:45:16.051"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:16.051" endtime="20220706 03:45:16.051"/>
</return>
<status status="PASS" starttime="20220706 03:45:15.889" endtime="20220706 03:45:16.052"/>
</kw>
<status status="PASS" starttime="20220706 03:45:15.888" endtime="20220706 03:45:16.052"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 03:45:15.639" endtime="20220706 03:45:16.052"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:16.055" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:16.054" endtime="20220706 03:45:16.055"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:16.055" endtime="20220706 03:45:16.055"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:16.056" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 03:45:16.055" endtime="20220706 03:45:16.056"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:16.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:16.056" endtime="20220706 03:45:16.203"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:16.203" endtime="20220706 03:45:16.203"/>
</return>
<msg timestamp="20220706 03:45:16.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:16.054" endtime="20220706 03:45:16.203"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:16.203" endtime="20220706 03:45:16.203"/>
</return>
<msg timestamp="20220706 03:45:16.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:16.053" endtime="20220706 03:45:16.203"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 03:45:16.204" endtime="20220706 03:45:16.204"/>
</return>
<msg timestamp="20220706 03:45:16.205" level="INFO">${LABEL_ID} = 62c5054c479d24473fa48796</msg>
<status status="PASS" starttime="20220706 03:45:16.203" endtime="20220706 03:45:16.205"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:16.207" level="INFO">${url} = labels/62c5054c479d24473fa48796</msg>
<status status="PASS" starttime="20220706 03:45:16.206" endtime="20220706 03:45:16.207"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:16.352" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:16.207" endtime="20220706 03:45:16.352"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:16.353" endtime="20220706 03:45:16.353"/>
</return>
<msg timestamp="20220706 03:45:16.353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:16.206" endtime="20220706 03:45:16.353"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:16.353" endtime="20220706 03:45:16.353"/>
</return>
<status status="PASS" starttime="20220706 03:45:16.205" endtime="20220706 03:45:16.353"/>
</kw>
<status status="PASS" starttime="20220706 03:45:16.205" endtime="20220706 03:45:16.353"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:16.354" level="INFO">${url} = labels/62c5054c479d24473fa48796</msg>
<status status="PASS" starttime="20220706 03:45:16.354" endtime="20220706 03:45:16.354"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:16.418" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 03:45:16.354" endtime="20220706 03:45:16.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:16.418" endtime="20220706 03:45:16.418"/>
</return>
<msg timestamp="20220706 03:45:16.418" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 03:45:16.354" endtime="20220706 03:45:16.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:16.418" endtime="20220706 03:45:16.418"/>
</return>
<status status="PASS" starttime="20220706 03:45:16.353" endtime="20220706 03:45:16.419"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 03:45:16.052" endtime="20220706 03:45:16.419"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:16.421" level="INFO">${url} = boards/62c5054b675e447e661e255f</msg>
<status status="PASS" starttime="20220706 03:45:16.421" endtime="20220706 03:45:16.421"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:16.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:16.421" endtime="20220706 03:45:16.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:16.753" endtime="20220706 03:45:16.753"/>
</return>
<msg timestamp="20220706 03:45:16.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:16.420" endtime="20220706 03:45:16.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:16.753" endtime="20220706 03:45:16.753"/>
</return>
<status status="PASS" starttime="20220706 03:45:16.420" endtime="20220706 03:45:16.753"/>
</kw>
<status status="PASS" starttime="20220706 03:45:16.420" endtime="20220706 03:45:16.753"/>
</kw>
<status status="PASS" starttime="20220706 03:45:16.420" endtime="20220706 03:45:16.753"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 03:45:16.753" endtime="20220706 03:45:16.755"/>
</kw>
<status status="PASS" starttime="20220706 03:45:16.419" endtime="20220706 03:45:16.755"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220706 03:45:14.888" endtime="20220706 03:45:16.755"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 03:45:16.768" endtime="20220706 03:45:16.769"/>
</kw>
<status status="PASS" starttime="20220706 03:45:16.768" endtime="20220706 03:45:16.769"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:16.770" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:16.770" endtime="20220706 03:45:16.770"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:16.770" endtime="20220706 03:45:16.770"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:16.771" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 03:45:16.771" endtime="20220706 03:45:16.771"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:17.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:16.771" endtime="20220706 03:45:17.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.067" endtime="20220706 03:45:17.067"/>
</return>
<msg timestamp="20220706 03:45:17.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:16.769" endtime="20220706 03:45:17.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.067" endtime="20220706 03:45:17.067"/>
</return>
<msg timestamp="20220706 03:45:17.068" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:16.769" endtime="20220706 03:45:17.068"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 03:45:17.069" level="INFO">${TEST_SUITE_BOARD_ID} = 62c5054c8542b226ac51fb87</msg>
<status status="PASS" starttime="20220706 03:45:17.068" endtime="20220706 03:45:17.069"/>
</kw>
<status status="PASS" starttime="20220706 03:45:17.068" endtime="20220706 03:45:17.069"/>
</kw>
<status status="PASS" starttime="20220706 03:45:16.769" endtime="20220706 03:45:17.069"/>
</kw>
<status status="PASS" starttime="20220706 03:45:16.768" endtime="20220706 03:45:17.069"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:17.072" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:17.072" endtime="20220706 03:45:17.072"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:17.072" endtime="20220706 03:45:17.072"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:17.073" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 03:45:17.072" endtime="20220706 03:45:17.073"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:17.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.073" endtime="20220706 03:45:17.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.206" endtime="20220706 03:45:17.206"/>
</return>
<msg timestamp="20220706 03:45:17.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.071" endtime="20220706 03:45:17.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.206" endtime="20220706 03:45:17.206"/>
</return>
<msg timestamp="20220706 03:45:17.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.070" endtime="20220706 03:45:17.207"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:17.207" endtime="20220706 03:45:17.209"/>
</kw>
<status status="PASS" starttime="20220706 03:45:17.207" endtime="20220706 03:45:17.209"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 03:45:17.069" endtime="20220706 03:45:17.209"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:17.212" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:17.212" endtime="20220706 03:45:17.212"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:17.212" endtime="20220706 03:45:17.212"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:17.213" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 03:45:17.212" endtime="20220706 03:45:17.213"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:17.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.213" endtime="20220706 03:45:17.341"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.341" endtime="20220706 03:45:17.342"/>
</return>
<msg timestamp="20220706 03:45:17.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.211" endtime="20220706 03:45:17.342"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.342" endtime="20220706 03:45:17.342"/>
</return>
<msg timestamp="20220706 03:45:17.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.210" endtime="20220706 03:45:17.342"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:17.343" endtime="20220706 03:45:17.344"/>
</kw>
<status status="PASS" starttime="20220706 03:45:17.342" endtime="20220706 03:45:17.344"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:17.346" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:17.346" endtime="20220706 03:45:17.346"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:17.346" endtime="20220706 03:45:17.346"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:17.347" level="INFO">${url} = lists/62c5054dbc49f15c40f6c7b3</msg>
<status status="PASS" starttime="20220706 03:45:17.347" endtime="20220706 03:45:17.347"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:17.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.347" endtime="20220706 03:45:17.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.453" endtime="20220706 03:45:17.453"/>
</return>
<msg timestamp="20220706 03:45:17.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.345" endtime="20220706 03:45:17.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.454" endtime="20220706 03:45:17.454"/>
</return>
<status status="PASS" starttime="20220706 03:45:17.345" endtime="20220706 03:45:17.454"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:17.456" level="INFO">${url} = lists/62c5054dbc49f15c40f6c7b3</msg>
<status status="PASS" starttime="20220706 03:45:17.456" endtime="20220706 03:45:17.456"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:17.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.456" endtime="20220706 03:45:17.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.541" endtime="20220706 03:45:17.541"/>
</return>
<msg timestamp="20220706 03:45:17.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.455" endtime="20220706 03:45:17.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.541" endtime="20220706 03:45:17.541"/>
</return>
<msg timestamp="20220706 03:45:17.542" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.454" endtime="20220706 03:45:17.542"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 03:45:17.542" endtime="20220706 03:45:17.543"/>
</kw>
<status status="PASS" starttime="20220706 03:45:17.542" endtime="20220706 03:45:17.544"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 03:45:17.544" endtime="20220706 03:45:17.545"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 03:45:17.209" endtime="20220706 03:45:17.545"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:17.549" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:17.549" endtime="20220706 03:45:17.549"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:17.549" endtime="20220706 03:45:17.549"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:17.550" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 03:45:17.550" endtime="20220706 03:45:17.550"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:17.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.550" endtime="20220706 03:45:17.677"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.677" endtime="20220706 03:45:17.677"/>
</return>
<msg timestamp="20220706 03:45:17.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.548" endtime="20220706 03:45:17.678"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.678" endtime="20220706 03:45:17.678"/>
</return>
<msg timestamp="20220706 03:45:17.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.546" endtime="20220706 03:45:17.678"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 03:45:17.680" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 03:45:17.680" endtime="20220706 03:45:17.680"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 03:45:17.680" endtime="20220706 03:45:17.681"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:17.681" level="INFO">${url} = lists/62c5054d27263566ae3ad790/closed</msg>
<status status="PASS" starttime="20220706 03:45:17.681" endtime="20220706 03:45:17.681"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 03:45:17.822" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.681" endtime="20220706 03:45:17.822"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.822" endtime="20220706 03:45:17.822"/>
</return>
<msg timestamp="20220706 03:45:17.822" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.679" endtime="20220706 03:45:17.822"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.823" endtime="20220706 03:45:17.823"/>
</return>
<status status="PASS" starttime="20220706 03:45:17.678" endtime="20220706 03:45:17.823"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:17.825" level="INFO">${url} = lists/62c5054d27263566ae3ad790</msg>
<status status="PASS" starttime="20220706 03:45:17.824" endtime="20220706 03:45:17.825"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 03:45:17.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.825" endtime="20220706 03:45:17.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.908" endtime="20220706 03:45:17.908"/>
</return>
<msg timestamp="20220706 03:45:17.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.824" endtime="20220706 03:45:17.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:17.908" endtime="20220706 03:45:17.908"/>
</return>
<msg timestamp="20220706 03:45:17.908" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.823" endtime="20220706 03:45:17.908"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 03:45:17.908" endtime="20220706 03:45:17.909"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 03:45:17.545" endtime="20220706 03:45:17.909"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 03:45:17.912" level="INFO">${url} = boards/62c5054c8542b226ac51fb87</msg>
<status status="PASS" starttime="20220706 03:45:17.912" endtime="20220706 03:45:17.912"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 03:45:18.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.912" endtime="20220706 03:45:18.279"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:18.279" endtime="20220706 03:45:18.279"/>
</return>
<msg timestamp="20220706 03:45:18.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 03:45:17.911" endtime="20220706 03:45:18.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 03:45:18.280" endtime="20220706 03:45:18.280"/>
</return>
<status status="PASS" starttime="20220706 03:45:17.911" endtime="20220706 03:45:18.280"/>
</kw>
<status status="PASS" starttime="20220706 03:45:17.911" endtime="20220706 03:45:18.280"/>
</kw>
<status status="PASS" starttime="20220706 03:45:17.910" endtime="20220706 03:45:18.280"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 03:45:18.280" endtime="20220706 03:45:18.281"/>
</kw>
<status status="PASS" starttime="20220706 03:45:17.910" endtime="20220706 03:45:18.281"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220706 03:45:16.756" endtime="20220706 03:45:18.281"/>
</suite>
<status status="PASS" starttime="20220706 03:45:05.642" endtime="20220706 03:45:18.283"/>
</suite>
<status status="PASS" starttime="20220706 03:45:05.622" endtime="20220706 03:45:18.286"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
